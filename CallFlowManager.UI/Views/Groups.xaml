<UserControl x:Class="CallFlowManager.UI.Views.Groups"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:converters="clr-namespace:CallFlowManager.UI.Converters"
             xmlns:myCtrls="clr-namespace:CallFlowManager.UI.Views"
             xmlns:rules="clr-namespace:CallFlowManager.UI.Common.ValidationRules"
             mc:Ignorable="d"
             d:DesignHeight="900" d:DesignWidth="900">

    <UserControl.Resources>
        <converters:NoDataConverter x:Key="NoDataConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:NullVisibilityConverter x:Key="NullToVisibilityConverter"/>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <DockPanel>
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="33*"/>
                    <ColumnDefinition Width="33*"/>
                    <ColumnDefinition Width="33*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <ComboBox IsEditable="False"
                  Grid.Row="0" 
                  Grid.Column="0" 
                  Width="Auto" 
                  Height="26" 
                  Margin="10,0,10,0"
                  ItemsSource="{Binding Groups}" 
                  SelectedItem="{Binding SelectedGroup}" 
                  DisplayMemberPath="Name"/>

                <WrapPanel Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,0,-1,0">
                    <Button Focusable="False" IsEnabled="{Binding IsEnabled}" Command="{Binding LoadCommand}" Width="53">Refresh</Button>
                    <Button Focusable="False" IsEnabled="{Binding IsEnabled}" Command="{Binding UpdateCommand}" Width="53">Save</Button>
                    <Button Focusable="False" IsEnabled="False" Command="{Binding DeleteCommand}" Width="53">Delete</Button>
                    <Button Focusable="False" IsEnabled="{Binding IsEnabled}" Command="{Binding ClearCommand}" Width="40">Clear</Button>
                    <controls:ProgressRing IsActive="{Binding IsLoading}" Visibility="Visible" Foreground="{DynamicResource AccentColorBrush}"/>
                    <TextBlock TextWrapping="Wrap" Text="{Binding StatusBar}" Width="315" Margin="0,17,0,0"/>
                </WrapPanel>

                <myCtrls:LogWindow Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3"></myCtrls:LogWindow>

                <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Vertical" Margin="10,10,10,0">
                    <Label Content="Display Name"/>
                    <TextBox>
                        <TextBox.Text>
                            <Binding Path="CurrentGroup.Name" UpdateSourceTrigger="PropertyChanged"  ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <rules:RequiredValidationRule IsRequired="True" ValidationStep="RawProposedValue" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Content="Description"/>
                    <TextBox TextWrapping ="Wrap" Text="{Binding Path=CurrentGroup.Description, UpdateSourceTrigger=PropertyChanged}" Height="100" />

                    <WrapPanel Orientation="Horizontal">
                        <controls:ToggleSwitch 
                        IsChecked="{Binding Path=CurrentGroup.IsDistributionGroup}"
                        HorizontalAlignment="Left"
                        Margin="5,0"/>
                        <Label IsEnabled="{Binding CurrentGroup.IsDistributionGroup}" Name="TestText1" Content="Route calls based on distribution group" VerticalAlignment="Center"/>

                        <!--<controls:ToggleSwitch Name="Toggle1">
                        <controls:ToggleSwitch.Style>
                            -->
                        <!-- TRIGGER EXAMPLE: http://stackoverflow.com/questions/2520483/how-do-i-bind-to-another-controls-property-from-a-trigger -->
                        <!--
                            <Style TargetType="controls:ToggleSwitch">
                                <Setter Property="FontSize" Value="22"/>
                                <Setter Property="FontFamily" Value="Segoe UI"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value >
                                        <ScaleTransform ScaleX="0.7" ScaleY="0.7" CenterY="5" />
                                    </Setter.Value>
                                </Setter>
                                
                                -->
                        <!-- Here is the 'normal' default content -->
                        <!--
                                <Setter Property="IsChecked" Value="{Binding Path=CurrentGroup.IsDistributionGroup}"/>
                                <Style.Triggers>
                                    -->
                        <!-- Here is how we bind to another control's property -->
                        <!--
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=Toggle2}" Value="True">
                                        -->
                        <!-- Here is the 'override' content -->
                        <!--
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=Toggle2}" Value="False">
                                         -->
                        <!--Here is the 'override' content-->
                        <!-- 
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:ToggleSwitch.Style>
                    </controls:ToggleSwitch>-->
                    </WrapPanel>

                    <TextBox IsEnabled="{Binding CurrentGroup.IsDistributionGroup}" Text="{Binding Path=CurrentGroup.DistributionGroup, UpdateSourceTrigger=PropertyChanged}"/>

                    <WrapPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <controls:ToggleSwitch 
                        IsChecked="{Binding Path=CurrentGroup.IsGroupAgents}"
                        HorizontalAlignment="Left"
                        Margin="5,0"/>
                        <Label IsEnabled="{Binding CurrentGroup.IsGroupAgents}" Content="Route calls to the following agents" VerticalAlignment="Center"/>
                    </WrapPanel>
                </StackPanel>
                <StackPanel Grid.Column="1" Grid.Row="2"  Margin="0,10,0,0">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                        <Label Content="Pool"/>
                        <ComboBox ItemsSource="{Binding Pools}"  SelectedItem="{Binding CurrentGroup.OwnerPool}"/>
                        <Label Content="Routing Method"/>
                        <ComboBox ItemsSource="{Binding RoutingMethods, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Value" DisplayMemberPath="Key" SelectedValue="{Binding CurrentGroup.RoutingMethod, UpdateSourceTrigger=PropertyChanged}" Width="280"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Slider x:Name="AllertSlider"
                            Value="{Binding CurrentGroup.Timeout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="10"
                            Maximum="600"
                            LargeChange="5"
                            SmallChange="1"
                            TickFrequency="1"
                            IsSnapToTickEnabled="True"
                            Width="225"
                            Margin="5, 12, 0, 0"/>
                        <TextBox
                           Text="{Binding CurrentGroup.Timeout,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                           Width="40"
                           
                           Margin="10, 10, 0, 0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Alert agents for"/>
                        <Label Content="{Binding Path=CurrentGroup.Timeout}"/>
                        <Label Content="seconds"/>
                    </StackPanel>
                    <WrapPanel Orientation="Horizontal" Margin="0,10,10,0">
                        <controls:ToggleSwitch
                            IsChecked="{Binding Path=CurrentGroup.IsGroupAgentSignIn, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Left"
                            Margin="5,0"/>
                        <Label Content="Require agents to sign-in to receive calls" VerticalAlignment="Center"/>
                    </WrapPanel>

                </StackPanel>

                <ComboBox Grid.Row="3" Grid.Column="0" 
                  IsEnabled="{Binding CurrentGroup.IsGroupAgents, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding UserAgents, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValuePath="Key"
                      DisplayMemberPath="Key" 
                      SelectedValue="{Binding SelectedUser, UpdateSourceTrigger=PropertyChanged}"
                  Width="Auto" 
                  Height="26" 
                  Margin="10,0" 
                  VerticalAlignment="Top"/>

                <WrapPanel IsEnabled="{Binding CurrentGroup.IsGroupAgents}" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment ="Top" Orientation="Horizontal" Height="30" Margin="0,0,-1,0">
                    <Button Focusable="False" Margin="0" Width="100" Command="{Binding GAgentCallGroupsAddCommand}">Add</Button>
                    <Button Focusable="False" Margin="10,0,0,0" Width="100" Command="{Binding GAgentCallGroupsRemoveCommand}">Remove</Button>
                    <Button Focusable="False" Margin="10,0,0,0" Width="50" Command="{Binding GAgentCallGroupsUpCommand}">Up</Button>
                    <Button Focusable="False" Margin="10,0,0,0" Width="50" Command="{Binding GAgentCallGroupsDnCommand}">Dn</Button>
                </WrapPanel>

                <DataGrid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" 
                      VerticalAlignment="Stretch" ItemsSource="{Binding Path=CurrentGroup.Agents, UpdateSourceTrigger=PropertyChanged}" 
                      SelectedItem="{Binding SelectedAgent}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Margin="10,20,10,0" AutoGenerateColumns="False" ColumnWidth="200*" BorderThickness="1" BorderBrush="Gray">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name"/>
                        <DataGridTextColumn Binding="{Binding SipAddress}" Header="SIP Address"/>
                        <DataGridTextColumn Binding="{Binding MemberOff}" Header="Member Of"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                <TextBlock Text="{Binding CurrentGroup.Owner}" VerticalAlignment="Bottom" Margin="0,0,10,0"/>
                <TextBlock Text="{Binding CurrentGroup.Identity}" VerticalAlignment="Bottom"/>
            </StackPanel>
        </DockPanel>
    </ScrollViewer>
</UserControl>