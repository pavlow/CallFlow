using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xrm.Sdk;
using Crm2011.Linq;
using Crm2011.Linq.Collections;

namespace CRMUtility
{
	public class CrmDataContext : XrmDataContext
    {
        public CrmDataContext(IOrganizationService sdk) : base(sdk)
        {
        }

        public CrmEntityCollection<Account> Accounts
        {
            get { return new CrmEntityCollection<Account>(this); }
        }

        public CrmEntityCollection<ActivityMimeAttachment> ActivityMimeAttachments
        {
            get { return new CrmEntityCollection<ActivityMimeAttachment>(this); }
        }

        public CrmEntityCollection<ActivityPointer> ActivityPointers
        {
            get { return new CrmEntityCollection<ActivityPointer>(this); }
        }

        public CrmEntityCollection<AdxAccountaccess> AdxAccountaccess
        {
            get { return new CrmEntityCollection<AdxAccountaccess>(this); }
        }

        public CrmEntityCollection<AdxCaseaccess> AdxCaseaccess
        {
            get { return new CrmEntityCollection<AdxCaseaccess>(this); }
        }

        public CrmEntityCollection<AdxContactaccess> AdxContactaccess
        {
            get { return new CrmEntityCollection<AdxContactaccess>(this); }
        }

        public CrmEntityCollection<AdxContentsnippet> AdxContentsnippets
        {
            get { return new CrmEntityCollection<AdxContentsnippet>(this); }
        }

        public CrmEntityCollection<AdxPagetemplate> AdxPagetemplates
        {
            get { return new CrmEntityCollection<AdxPagetemplate>(this); }
        }

        public CrmEntityCollection<AdxSitemarker> AdxSitemarkers
        {
            get { return new CrmEntityCollection<AdxSitemarker>(this); }
        }

        public CrmEntityCollection<AdxSitesetting> AdxSitesettings
        {
            get { return new CrmEntityCollection<AdxSitesetting>(this); }
        }

        public CrmEntityCollection<AdxWebfile> AdxWebfiles
        {
            get { return new CrmEntityCollection<AdxWebfile>(this); }
        }

        public CrmEntityCollection<AdxWeblink> AdxWeblinks
        {
            get { return new CrmEntityCollection<AdxWeblink>(this); }
        }

        public CrmEntityCollection<AdxWeblinkset> AdxWeblinksets
        {
            get { return new CrmEntityCollection<AdxWeblinkset>(this); }
        }

        public CrmEntityCollection<AdxWebnotificationurl> AdxWebnotificationurls
        {
            get { return new CrmEntityCollection<AdxWebnotificationurl>(this); }
        }

        public CrmEntityCollection<AdxWebpage> AdxWebpages
        {
            get { return new CrmEntityCollection<AdxWebpage>(this); }
        }

        public CrmEntityCollection<AdxWebrole> AdxWebroles
        {
            get { return new CrmEntityCollection<AdxWebrole>(this); }
        }

        public CrmEntityCollection<AdxWebroleContact> AdxWebroleContacts
        {
            get { return new CrmEntityCollection<AdxWebroleContact>(this); }
        }

        public CrmEntityCollection<AdxWebsite> AdxWebsites
        {
            get { return new CrmEntityCollection<AdxWebsite>(this); }
        }

        public CrmEntityCollection<AdxWebsiteList> AdxWebsiteLists
        {
            get { return new CrmEntityCollection<AdxWebsiteList>(this); }
        }

        public CrmEntityCollection<AdxWebsiteSponsor> AdxWebsiteSponsors
        {
            get { return new CrmEntityCollection<AdxWebsiteSponsor>(this); }
        }

        public CrmEntityCollection<Annotation> Annotations
        {
            get { return new CrmEntityCollection<Annotation>(this); }
        }

        public CrmEntityCollection<Appointment> Appointments
        {
            get { return new CrmEntityCollection<Appointment>(this); }
        }

        public CrmEntityCollection<Attachment> Attachments
        {
            get { return new CrmEntityCollection<Attachment>(this); }
        }

        public CrmEntityCollection<AvnAvnTranslationpatternAvnTranslationr> AvnAvnTranslationpatternAvnTranslationrs
        {
            get { return new CrmEntityCollection<AvnAvnTranslationpatternAvnTranslationr>(this); }
        }

        public CrmEntityCollection<AvnTranslationpattern> AvnTranslationpatterns
        {
            get { return new CrmEntityCollection<AvnTranslationpattern>(this); }
        }

        public CrmEntityCollection<AvnTranslationresult> AvnTranslationresults
        {
            get { return new CrmEntityCollection<AvnTranslationresult>(this); }
        }

        public CrmEntityCollection<AvnTranslationrule> AvnTranslationrules
        {
            get { return new CrmEntityCollection<AvnTranslationrule>(this); }
        }

        public CrmEntityCollection<BusinessUnit> BusinessUnits
        {
            get { return new CrmEntityCollection<BusinessUnit>(this); }
        }

        public CrmEntityCollection<Campaign> Campaigns
        {
            get { return new CrmEntityCollection<Campaign>(this); }
        }

        public CrmEntityCollection<CampaignActivity> CampaignActivities
        {
            get { return new CrmEntityCollection<CampaignActivity>(this); }
        }

        public CrmEntityCollection<CampaignResponse> CampaignResponses
        {
            get { return new CrmEntityCollection<CampaignResponse>(this); }
        }

        public CrmEntityCollection<Competitor> Competitors
        {
            get { return new CrmEntityCollection<Competitor>(this); }
        }

        public CrmEntityCollection<CompetitorAddress> CompetitorAddress
        {
            get { return new CrmEntityCollection<CompetitorAddress>(this); }
        }

        public CrmEntityCollection<Connection> Connections
        {
            get { return new CrmEntityCollection<Connection>(this); }
        }

        public CrmEntityCollection<ConnectionRole> ConnectionRoles
        {
            get { return new CrmEntityCollection<ConnectionRole>(this); }
        }

        public CrmEntityCollection<Contact> Contacts
        {
            get { return new CrmEntityCollection<Contact>(this); }
        }

        public CrmEntityCollection<Contract> Contracts
        {
            get { return new CrmEntityCollection<Contract>(this); }
        }

        public CrmEntityCollection<ContractDetail> ContractDetails
        {
            get { return new CrmEntityCollection<ContractDetail>(this); }
        }

        public CrmEntityCollection<CustomerAddress> CustomerAddress
        {
            get { return new CrmEntityCollection<CustomerAddress>(this); }
        }

        public CrmEntityCollection<CustomerOpportunityRole> CustomerOpportunityRoles
        {
            get { return new CrmEntityCollection<CustomerOpportunityRole>(this); }
        }

        public CrmEntityCollection<Discount> Discounts
        {
            get { return new CrmEntityCollection<Discount>(this); }
        }

        public CrmEntityCollection<DiscountType> DiscountTypes
        {
            get { return new CrmEntityCollection<DiscountType>(this); }
        }

        public CrmEntityCollection<Email> Emails
        {
            get { return new CrmEntityCollection<Email>(this); }
        }

        public CrmEntityCollection<Equipment> Equipments
        {
            get { return new CrmEntityCollection<Equipment>(this); }
        }

        public CrmEntityCollection<Fax> Faxs
        {
            get { return new CrmEntityCollection<Fax>(this); }
        }

        public CrmEntityCollection<Incident> Incidents
        {
            get { return new CrmEntityCollection<Incident>(this); }
        }

        public CrmEntityCollection<IncidentResolution> IncidentResolutions
        {
            get { return new CrmEntityCollection<IncidentResolution>(this); }
        }

        public CrmEntityCollection<Invoice> Invoices
        {
            get { return new CrmEntityCollection<Invoice>(this); }
        }

        public CrmEntityCollection<InvoiceDetail> InvoiceDetails
        {
            get { return new CrmEntityCollection<InvoiceDetail>(this); }
        }

        public CrmEntityCollection<KbArticle> KbArticles
        {
            get { return new CrmEntityCollection<KbArticle>(this); }
        }

        public CrmEntityCollection<Lead> Leads
        {
            get { return new CrmEntityCollection<Lead>(this); }
        }

        public CrmEntityCollection<LeadAddress> LeadAddress
        {
            get { return new CrmEntityCollection<LeadAddress>(this); }
        }

        public CrmEntityCollection<Letter> Letters
        {
            get { return new CrmEntityCollection<Letter>(this); }
        }

        public CrmEntityCollection<List> Lists
        {
            get { return new CrmEntityCollection<List>(this); }
        }

        public CrmEntityCollection<MagCreditnote> MagCreditnotes
        {
            get { return new CrmEntityCollection<MagCreditnote>(this); }
        }

        public CrmEntityCollection<MagMaintenance> MagMaintenances
        {
            get { return new CrmEntityCollection<MagMaintenance>(this); }
        }

        public CrmEntityCollection<MagPayment> MagPayments
        {
            get { return new CrmEntityCollection<MagPayment>(this); }
        }

        public CrmEntityCollection<MagTaxrule> MagTaxrules
        {
            get { return new CrmEntityCollection<MagTaxrule>(this); }
        }

        public CrmEntityCollection<MagXeroaccountcode> MagXeroaccountcodes
        {
            get { return new CrmEntityCollection<MagXeroaccountcode>(this); }
        }

        public CrmEntityCollection<MagXeroconnector> MagXeroconnectors
        {
            get { return new CrmEntityCollection<MagXeroconnector>(this); }
        }

        public CrmEntityCollection<MSAEventgroupallocation> MSAEventgroupallocations
        {
            get { return new CrmEntityCollection<MSAEventgroupallocation>(this); }
        }

        public CrmEntityCollection<MSAEventpackage> MSAEventpackages
        {
            get { return new CrmEntityCollection<MSAEventpackage>(this); }
        }

        public CrmEntityCollection<MSAEventpackageactivity> MSAEventpackageactivities
        {
            get { return new CrmEntityCollection<MSAEventpackageactivity>(this); }
        }

        public CrmEntityCollection<MSAEventroom> MSAEventrooms
        {
            get { return new CrmEntityCollection<MSAEventroom>(this); }
        }

        public CrmEntityCollection<MSAEventsession> MSAEventsessions
        {
            get { return new CrmEntityCollection<MSAEventsession>(this); }
        }

        public CrmEntityCollection<MsaEventsessionSpeakersInternal> MsaEventsessionSpeakersInternals
        {
            get { return new CrmEntityCollection<MsaEventsessionSpeakersInternal>(this); }
        }

        public CrmEntityCollection<MSAEventsessiontime> MSAEventsessiontimes
        {
            get { return new CrmEntityCollection<MSAEventsessiontime>(this); }
        }

        public CrmEntityCollection<MsaEventsessiontimesSpeakersInternal> MsaEventsessiontimesSpeakersInternals
        {
            get { return new CrmEntityCollection<MsaEventsessiontimesSpeakersInternal>(this); }
        }

        public CrmEntityCollection<MSAEventsponsor> MSAEventsponsors
        {
            get { return new CrmEntityCollection<MSAEventsponsor>(this); }
        }

        public CrmEntityCollection<MSAEventteammemberexternal> MSAEventteammemberexternals
        {
            get { return new CrmEntityCollection<MSAEventteammemberexternal>(this); }
        }

        public CrmEntityCollection<MSAEventteammemberinternal> MSAEventteammemberinternals
        {
            get { return new CrmEntityCollection<MSAEventteammemberinternal>(this); }
        }

        public CrmEntityCollection<MSAEventvenue> MSAEventvenues
        {
            get { return new CrmEntityCollection<MSAEventvenue>(this); }
        }

        public CrmEntityCollection<MSAProductregistration> MSAProductregistrations
        {
            get { return new CrmEntityCollection<MSAProductregistration>(this); }
        }

        public CrmEntityCollection<MsaWebliterature> MsaWebliteratures
        {
            get { return new CrmEntityCollection<MsaWebliterature>(this); }
        }

        public CrmEntityCollection<NewAssetregister> NewAssetregisters
        {
            get { return new CrmEntityCollection<NewAssetregister>(this); }
        }

        public CrmEntityCollection<NewAutonumber> NewAutonumbers
        {
            get { return new CrmEntityCollection<NewAutonumber>(this); }
        }

        public CrmEntityCollection<NewBillingoverride> NewBillingoverrides
        {
            get { return new CrmEntityCollection<NewBillingoverride>(this); }
        }

        public CrmEntityCollection<NewBillingrecord> NewBillingrecords
        {
            get { return new CrmEntityCollection<NewBillingrecord>(this); }
        }

        public CrmEntityCollection<NewBillingrecordtype> NewBillingrecordtypes
        {
            get { return new CrmEntityCollection<NewBillingrecordtype>(this); }
        }

        public CrmEntityCollection<NewCallingarea> NewCallingareas
        {
            get { return new CrmEntityCollection<NewCallingarea>(this); }
        }

        public CrmEntityCollection<NewCallingregion> NewCallingregions
        {
            get { return new CrmEntityCollection<NewCallingregion>(this); }
        }

        public CrmEntityCollection<NewCallingregionproductmap> NewCallingregionproductmaps
        {
            get { return new CrmEntityCollection<NewCallingregionproductmap>(this); }
        }

        public CrmEntityCollection<NewCallrecord> NewCallrecords
        {
            get { return new CrmEntityCollection<NewCallrecord>(this); }
        }

        public CrmEntityCollection<NewCaseactivity> NewCaseactivities
        {
            get { return new CrmEntityCollection<NewCaseactivity>(this); }
        }

        public CrmEntityCollection<NewCasetype> NewCasetypes
        {
            get { return new CrmEntityCollection<NewCasetype>(this); }
        }

        public CrmEntityCollection<NewCloudhostingpacksettings> NewCloudhostingpacksettings
        {
            get { return new CrmEntityCollection<NewCloudhostingpacksettings>(this); }
        }

        public CrmEntityCollection<NewCloudpackmodules> NewCloudpackmodules
        {
            get { return new CrmEntityCollection<NewCloudpackmodules>(this); }
        }

        public CrmEntityCollection<NewContractlinetypes> NewContractlinetypes
        {
            get { return new CrmEntityCollection<NewContractlinetypes>(this); }
        }

        public CrmEntityCollection<NewCpsmproduct> NewCpsmproducts
        {
            get { return new CrmEntityCollection<NewCpsmproduct>(this); }
        }

        public CrmEntityCollection<NewCpsmrecords> NewCpsmrecords
        {
            get { return new CrmEntityCollection<NewCpsmrecords>(this); }
        }

        public CrmEntityCollection<NewDevicetype> NewDevicetypes
        {
            get { return new CrmEntityCollection<NewDevicetype>(this); }
        }

        public CrmEntityCollection<NewDomain> NewDomains
        {
            get { return new CrmEntityCollection<NewDomain>(this); }
        }

        public CrmEntityCollection<NewFromcallingregion> NewFromcallingregions
        {
            get { return new CrmEntityCollection<NewFromcallingregion>(this); }
        }

        public CrmEntityCollection<NewHostedservice> NewHostedservices
        {
            get { return new CrmEntityCollection<NewHostedservice>(this); }
        }

        public CrmEntityCollection<NewIncident> NewIncidents
        {
            get { return new CrmEntityCollection<NewIncident>(this); }
        }

        public CrmEntityCollection<NewIpaddress> NewIpaddress
        {
            get { return new CrmEntityCollection<NewIpaddress>(this); }
        }

        public CrmEntityCollection<NewNewBillingrecordSalesorderdetailNn> NewNewBillingrecordSalesorderdetailNns
        {
            get { return new CrmEntityCollection<NewNewBillingrecordSalesorderdetailNn>(this); }
        }

        public CrmEntityCollection<NewOrderitems> NewOrderitems
        {
            get { return new CrmEntityCollection<NewOrderitems>(this); }
        }

        public CrmEntityCollection<NewOrderquote> NewOrderquotes
        {
            get { return new CrmEntityCollection<NewOrderquote>(this); }
        }

        public CrmEntityCollection<NewPhonegateway> NewPhonegatewaies
        {
            get { return new CrmEntityCollection<NewPhonegateway>(this); }
        }

        public CrmEntityCollection<NewPhonenormalizationrule> NewPhonenormalizationrules
        {
            get { return new CrmEntityCollection<NewPhonenormalizationrule>(this); }
        }

        public CrmEntityCollection<NewPhonenumber> NewPhonenumbers
        {
            get { return new CrmEntityCollection<NewPhonenumber>(this); }
        }

        public CrmEntityCollection<NewPhonenumberblock> NewPhonenumberblocks
        {
            get { return new CrmEntityCollection<NewPhonenumberblock>(this); }
        }

        public CrmEntityCollection<NewPhonenumbertype> NewPhonenumbertypes
        {
            get { return new CrmEntityCollection<NewPhonenumbertype>(this); }
        }

        public CrmEntityCollection<NewPhoneoption> NewPhoneoptions
        {
            get { return new CrmEntityCollection<NewPhoneoption>(this); }
        }

        public CrmEntityCollection<NewPhoneoptiontype> NewPhoneoptiontypes
        {
            get { return new CrmEntityCollection<NewPhoneoptiontype>(this); }
        }

        public CrmEntityCollection<NewPhonetrunk> NewPhonetrunks
        {
            get { return new CrmEntityCollection<NewPhonetrunk>(this); }
        }

        public CrmEntityCollection<NewPriority> NewPriorities
        {
            get { return new CrmEntityCollection<NewPriority>(this); }
        }

        public CrmEntityCollection<NewProvisioningactivity> NewProvisioningactivities
        {
            get { return new CrmEntityCollection<NewProvisioningactivity>(this); }
        }

        public CrmEntityCollection<NewPurchaseorder> NewPurchaseorders
        {
            get { return new CrmEntityCollection<NewPurchaseorder>(this); }
        }

        public CrmEntityCollection<NewRelNewPhonenumberNewPhonenumber> NewRelNewPhonenumberNewPhonenumbers
        {
            get { return new CrmEntityCollection<NewRelNewPhonenumberNewPhonenumber>(this); }
        }

        public CrmEntityCollection<NewRelNewPhoneoptionNewPhonenumber> NewRelNewPhoneoptionNewPhonenumbers
        {
            get { return new CrmEntityCollection<NewRelNewPhoneoptionNewPhonenumber>(this); }
        }

        public CrmEntityCollection<NewRelNewPhoneoptionNewPhoneoption> NewRelNewPhoneoptionNewPhoneoptions
        {
            get { return new CrmEntityCollection<NewRelNewPhoneoptionNewPhoneoption>(this); }
        }

        public CrmEntityCollection<NewRelnnNewCallingregionNewCallingarea> NewRelnnNewCallingregionNewCallingareas
        {
            get { return new CrmEntityCollection<NewRelnnNewCallingregionNewCallingarea>(this); }
        }

        public CrmEntityCollection<NewRelnnPhonetrunkPhonegateway> NewRelnnPhonetrunkPhonegatewaies
        {
            get { return new CrmEntityCollection<NewRelnnPhonetrunkPhonegateway>(this); }
        }

        public CrmEntityCollection<NewResellers> NewResellers
        {
            get { return new CrmEntityCollection<NewResellers>(this); }
        }

        public CrmEntityCollection<NewRma> NewRmas
        {
            get { return new CrmEntityCollection<NewRma>(this); }
        }

        public CrmEntityCollection<NewSitecontact> NewSitecontacts
        {
            get { return new CrmEntityCollection<NewSitecontact>(this); }
        }

        public CrmEntityCollection<NewSitecontactposition> NewSitecontactpositions
        {
            get { return new CrmEntityCollection<NewSitecontactposition>(this); }
        }

        public CrmEntityCollection<NewSitecontactrole> NewSitecontactroles
        {
            get { return new CrmEntityCollection<NewSitecontactrole>(this); }
        }

        public CrmEntityCollection<NewSitelocation> NewSitelocations
        {
            get { return new CrmEntityCollection<NewSitelocation>(this); }
        }

        public CrmEntityCollection<NewSoftwareoption> NewSoftwareoptions
        {
            get { return new CrmEntityCollection<NewSoftwareoption>(this); }
        }

        public CrmEntityCollection<NewSoftwareoptiontype> NewSoftwareoptiontypes
        {
            get { return new CrmEntityCollection<NewSoftwareoptiontype>(this); }
        }

        public CrmEntityCollection<NewSupportprocess> NewSupportprocess
        {
            get { return new CrmEntityCollection<NewSupportprocess>(this); }
        }

        public CrmEntityCollection<NewTocallingregion> NewTocallingregions
        {
            get { return new CrmEntityCollection<NewTocallingregion>(this); }
        }

        public CrmEntityCollection<NewVirtualserver> NewVirtualservers
        {
            get { return new CrmEntityCollection<NewVirtualserver>(this); }
        }

        public CrmEntityCollection<NewWanconnection> NewWanconnections
        {
            get { return new CrmEntityCollection<NewWanconnection>(this); }
        }

        public CrmEntityCollection<NewWanconnectiontype> NewWanconnectiontypes
        {
            get { return new CrmEntityCollection<NewWanconnectiontype>(this); }
        }

        public CrmEntityCollection<NewWebsite> NewWebsites
        {
            get { return new CrmEntityCollection<NewWebsite>(this); }
        }

        public CrmEntityCollection<Opportunity> Opportunities
        {
            get { return new CrmEntityCollection<Opportunity>(this); }
        }

        public CrmEntityCollection<OpportunityClose> OpportunityCloses
        {
            get { return new CrmEntityCollection<OpportunityClose>(this); }
        }

        public CrmEntityCollection<OpportunityProduct> OpportunityProducts
        {
            get { return new CrmEntityCollection<OpportunityProduct>(this); }
        }

        public CrmEntityCollection<OrderClose> OrderCloses
        {
            get { return new CrmEntityCollection<OrderClose>(this); }
        }

        public CrmEntityCollection<Organization> Organizations
        {
            get { return new CrmEntityCollection<Organization>(this); }
        }

        public CrmEntityCollection<PhoneCall> PhoneCalls
        {
            get { return new CrmEntityCollection<PhoneCall>(this); }
        }

        public CrmEntityCollection<PoMailchimpactivity> PoMailchimpactivities
        {
            get { return new CrmEntityCollection<PoMailchimpactivity>(this); }
        }

        public CrmEntityCollection<PoMailchimpcampaign> PoMailchimpcampaigns
        {
            get { return new CrmEntityCollection<PoMailchimpcampaign>(this); }
        }

        public CrmEntityCollection<PoMailchimplistsync> PoMailchimplistsyncs
        {
            get { return new CrmEntityCollection<PoMailchimplistsync>(this); }
        }

        public CrmEntityCollection<PoMailchimpsyncerror> PoMailchimpsyncerrors
        {
            get { return new CrmEntityCollection<PoMailchimpsyncerror>(this); }
        }

        public CrmEntityCollection<PoMergetags> PoMergetags
        {
            get { return new CrmEntityCollection<PoMergetags>(this); }
        }

        public CrmEntityCollection<PoPoMailchimpcampaignList> PoPoMailchimpcampaignLists
        {
            get { return new CrmEntityCollection<PoPoMailchimpcampaignList>(this); }
        }

        public CrmEntityCollection<PoPowerchimpconfiguration> PoPowerchimpconfigurations
        {
            get { return new CrmEntityCollection<PoPowerchimpconfiguration>(this); }
        }

        public CrmEntityCollection<PoPowerchimplogger> PoPowerchimploggers
        {
            get { return new CrmEntityCollection<PoPowerchimplogger>(this); }
        }

        public CrmEntityCollection<PoPowersurveyconfiguration> PoPowersurveyconfigurations
        {
            get { return new CrmEntityCollection<PoPowersurveyconfiguration>(this); }
        }

        public CrmEntityCollection<PoPowersurveyLog> PoPowersurveyLogs
        {
            get { return new CrmEntityCollection<PoPowersurveyLog>(this); }
        }

        public CrmEntityCollection<PoPowersurveymapped> PoPowersurveymappeds
        {
            get { return new CrmEntityCollection<PoPowersurveymapped>(this); }
        }

        public CrmEntityCollection<PoSatisfactionanswer> PoSatisfactionanswers
        {
            get { return new CrmEntityCollection<PoSatisfactionanswer>(this); }
        }

        public CrmEntityCollection<PoSatisfactionsurvey> PoSatisfactionsurveies
        {
            get { return new CrmEntityCollection<PoSatisfactionsurvey>(this); }
        }

        public CrmEntityCollection<PoSurveyactivity> PoSurveyactivities
        {
            get { return new CrmEntityCollection<PoSurveyactivity>(this); }
        }

        public CrmEntityCollection<PoSurveyquestion> PoSurveyquestions
        {
            get { return new CrmEntityCollection<PoSurveyquestion>(this); }
        }

        public CrmEntityCollection<PoSurveyQuestion> PoSurveyQuestions
        {
            get { return new CrmEntityCollection<PoSurveyQuestion>(this); }
        }

        public CrmEntityCollection<PowfDuplicatecheck> PowfDuplicatechecks
        {
            get { return new CrmEntityCollection<PowfDuplicatecheck>(this); }
        }

        public CrmEntityCollection<PowfDuplicatecheckfield> PowfDuplicatecheckfields
        {
            get { return new CrmEntityCollection<PowfDuplicatecheckfield>(this); }
        }

        public CrmEntityCollection<PowfFormfield> PowfFormfields
        {
            get { return new CrmEntityCollection<PowfFormfield>(this); }
        }

        public CrmEntityCollection<PowfPowerwebformconfiguration> PowfPowerwebformconfigurations
        {
            get { return new CrmEntityCollection<PowfPowerwebformconfiguration>(this); }
        }

        public CrmEntityCollection<PowfPowerwebformLog> PowfPowerwebformLogs
        {
            get { return new CrmEntityCollection<PowfPowerwebformLog>(this); }
        }

        public CrmEntityCollection<PowfWebform> PowfWebforms
        {
            get { return new CrmEntityCollection<PowfWebform>(this); }
        }

        public CrmEntityCollection<PowfWebformactivity> PowfWebformactivities
        {
            get { return new CrmEntityCollection<PowfWebformactivity>(this); }
        }

        public CrmEntityCollection<PowfWebformactivitydetail> PowfWebformactivitydetails
        {
            get { return new CrmEntityCollection<PowfWebformactivitydetail>(this); }
        }

        public CrmEntityCollection<PriceLevel> PriceLevels
        {
            get { return new CrmEntityCollection<PriceLevel>(this); }
        }

        public CrmEntityCollection<Product> Products
        {
            get { return new CrmEntityCollection<Product>(this); }
        }

        public CrmEntityCollection<ProductPriceLevel> ProductPriceLevels
        {
            get { return new CrmEntityCollection<ProductPriceLevel>(this); }
        }

        public CrmEntityCollection<Quote> Quotes
        {
            get { return new CrmEntityCollection<Quote>(this); }
        }

        public CrmEntityCollection<QuoteClose> QuoteCloses
        {
            get { return new CrmEntityCollection<QuoteClose>(this); }
        }

        public CrmEntityCollection<QuoteDetail> QuoteDetails
        {
            get { return new CrmEntityCollection<QuoteDetail>(this); }
        }

        public CrmEntityCollection<RecurringAppointmentMaster> RecurringAppointmentMasters
        {
            get { return new CrmEntityCollection<RecurringAppointmentMaster>(this); }
        }

        public CrmEntityCollection<Resource> Resources
        {
            get { return new CrmEntityCollection<Resource>(this); }
        }

        public CrmEntityCollection<ResourceGroup> ResourceGroups
        {
            get { return new CrmEntityCollection<ResourceGroup>(this); }
        }

        public CrmEntityCollection<ResourceGroupExpansion> ResourceGroupExpansions
        {
            get { return new CrmEntityCollection<ResourceGroupExpansion>(this); }
        }

        public CrmEntityCollection<SalesLiterature> SalesLiteratures
        {
            get { return new CrmEntityCollection<SalesLiterature>(this); }
        }

        public CrmEntityCollection<SalesOrder> SalesOrders
        {
            get { return new CrmEntityCollection<SalesOrder>(this); }
        }

        public CrmEntityCollection<SalesOrderDetail> SalesOrderDetails
        {
            get { return new CrmEntityCollection<SalesOrderDetail>(this); }
        }

        public CrmEntityCollection<SavedQueryVisualization> SavedQueryVisualizations
        {
            get { return new CrmEntityCollection<SavedQueryVisualization>(this); }
        }

        public CrmEntityCollection<Service> Services
        {
            get { return new CrmEntityCollection<Service>(this); }
        }

        public CrmEntityCollection<ServiceAppointment> ServiceAppointments
        {
            get { return new CrmEntityCollection<ServiceAppointment>(this); }
        }

        public CrmEntityCollection<SharePointDocumentLocation> SharePointDocumentLocations
        {
            get { return new CrmEntityCollection<SharePointDocumentLocation>(this); }
        }

        public CrmEntityCollection<Site> Sites
        {
            get { return new CrmEntityCollection<Site>(this); }
        }

        public CrmEntityCollection<Subject> Subjects
        {
            get { return new CrmEntityCollection<Subject>(this); }
        }

        public CrmEntityCollection<SystemUser> SystemUsers
        {
            get { return new CrmEntityCollection<SystemUser>(this); }
        }

        public CrmEntityCollection<Task> Tasks
        {
            get { return new CrmEntityCollection<Task>(this); }
        }

        public CrmEntityCollection<Team> Teams
        {
            get { return new CrmEntityCollection<Team>(this); }
        }

        public CrmEntityCollection<Template> Templates
        {
            get { return new CrmEntityCollection<Template>(this); }
        }

        public CrmEntityCollection<Territory> Territories
        {
            get { return new CrmEntityCollection<Territory>(this); }
        }

        public CrmEntityCollection<TransactionCurrency> TransactionCurrencies
        {
            get { return new CrmEntityCollection<TransactionCurrency>(this); }
        }

        public CrmEntityCollection<UoM> UoMs
        {
            get { return new CrmEntityCollection<UoM>(this); }
        }

        public CrmEntityCollection<UoMSchedule> UoMSchedules
        {
            get { return new CrmEntityCollection<UoMSchedule>(this); }
        }

		
    }

	[CrmEntity(LogicalName = "account", PrimaryKey = "accountid")]
	public partial class Account : CrmEntity
	{
		public class Enums
		{
			public enum AccountCategoryCode 
			{
				[CrmPicklist(DisplayName = "Preferred Customer", Value = 1)]PreferredCustomer = 1,
				[CrmPicklist(DisplayName = "Standard", Value = 2)]Standard = 2,
			}		
			public enum AccountClassificationCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum AccountRatingCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address1AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Bill To", Value = 1)]BillTo = 1,
				[CrmPicklist(DisplayName = "Ship To", Value = 2)]ShipTo = 2,
				[CrmPicklist(DisplayName = "Primary", Value = 3)]Primary = 3,
				[CrmPicklist(DisplayName = "Other", Value = 4)]Other = 4,
			}		
			public enum Address1FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
			public enum Address1ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Airborne", Value = 1)]Airborne = 1,
				[CrmPicklist(DisplayName = "DHL", Value = 2)]DHL = 2,
				[CrmPicklist(DisplayName = "FedEx", Value = 3)]FedEx = 3,
				[CrmPicklist(DisplayName = "UPS", Value = 4)]UPS = 4,
				[CrmPicklist(DisplayName = "Postal Mail", Value = 5)]PostalMail = 5,
				[CrmPicklist(DisplayName = "Full Load", Value = 6)]FullLoad = 6,
				[CrmPicklist(DisplayName = "Will Call", Value = 7)]WillCall = 7,
			}		
			public enum Address2AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum BusinessTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum CustomerSizeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum CustomerTypeCode 
			{
				[CrmPicklist(DisplayName = "Competitor", Value = 1)]Competitor = 1,
				[CrmPicklist(DisplayName = "Consultant", Value = 2)]Consultant = 2,
				[CrmPicklist(DisplayName = "Customer", Value = 3)]Customer = 3,
				[CrmPicklist(DisplayName = "Resellers Customer", Value = 100000000)]ResellersCustomer = 100000000,
				[CrmPicklist(DisplayName = "Reseller & Customer", Value = 100000001)]ResellerCustomer = 100000001,
				[CrmPicklist(DisplayName = "Investor", Value = 4)]Investor = 4,
				[CrmPicklist(DisplayName = "Partner", Value = 5)]Partner = 5,
				[CrmPicklist(DisplayName = "Influencer", Value = 6)]Influencer = 6,
				[CrmPicklist(DisplayName = "Press", Value = 7)]Press = 7,
				[CrmPicklist(DisplayName = "Prospective Customer", Value = 8)]ProspectiveCustomer = 8,
				[CrmPicklist(DisplayName = "Prospective Reseller", Value = 100000002)]ProspectiveReseller = 100000002,
				[CrmPicklist(DisplayName = "Reseller", Value = 9)]Reseller = 9,
				[CrmPicklist(DisplayName = "Supplier", Value = 10)]Supplier = 10,
				[CrmPicklist(DisplayName = "Vendor", Value = 11)]Vendor = 11,
				[CrmPicklist(DisplayName = "Other", Value = 12)]Other = 12,
				[CrmPicklist(DisplayName = "Internal Demo Company", Value = 100000003)]InternalDemoCompany = 100000003,
				[CrmPicklist(DisplayName = "Reseller Demo Company", Value = 100000004)]ResellerDemoCompany = 100000004,
			}		
			public enum IndustryCode 
			{
				[CrmPicklist(DisplayName = "Accounting", Value = 1)]Accounting = 1,
				[CrmPicklist(DisplayName = "Advertising", Value = 100000000)]Advertising = 100000000,
				[CrmPicklist(DisplayName = "Agriculture and Non-petrol Natural Resource Extraction", Value = 2)]AgricultureAndNonpetrolNaturalResourceExtraction = 2,
				[CrmPicklist(DisplayName = "Animal Health", Value = 100000001)]AnimalHealth = 100000001,
				[CrmPicklist(DisplayName = "Architects", Value = 100000002)]Architects = 100000002,
				[CrmPicklist(DisplayName = "Broadcasting Printing and Publishing", Value = 3)]BroadcastingPrintingAndPublishing = 3,
				[CrmPicklist(DisplayName = "Brokers", Value = 4)]Brokers = 4,
				[CrmPicklist(DisplayName = "Building Services", Value = 100000003)]BuildingServices = 100000003,
				[CrmPicklist(DisplayName = "Building Supply Retail", Value = 5)]BuildingSupplyRetail = 5,
				[CrmPicklist(DisplayName = "Business Services", Value = 6)]BusinessServices = 6,
				[CrmPicklist(DisplayName = "Consulting", Value = 7)]Consulting = 7,
				[CrmPicklist(DisplayName = "Consumer Services", Value = 8)]ConsumerServices = 8,
				[CrmPicklist(DisplayName = "Design, Direction and Creative Management", Value = 9)]DesignDirectionAndCreativeManagement = 9,
				[CrmPicklist(DisplayName = "Distributors, Dispatchers and Processors", Value = 10)]DistributorsDispatchersAndProcessors = 10,
				[CrmPicklist(DisplayName = "Doctor's Offices and Clinics", Value = 11)]DoctorsOfficesAndClinics = 11,
				[CrmPicklist(DisplayName = "Durable Manufacturing", Value = 12)]DurableManufacturing = 12,
				[CrmPicklist(DisplayName = "Eating and Drinking Places", Value = 13)]EatingAndDrinkingPlaces = 13,
				[CrmPicklist(DisplayName = "Education", Value = 100000004)]Education = 100000004,
				[CrmPicklist(DisplayName = "Entertainment Retail", Value = 14)]EntertainmentRetail = 14,
				[CrmPicklist(DisplayName = "Equipment Rental and Leasing", Value = 15)]EquipmentRentalAndLeasing = 15,
				[CrmPicklist(DisplayName = "Financial", Value = 16)]Financial = 16,
				[CrmPicklist(DisplayName = "Food and Tobacco Processing", Value = 17)]FoodAndTobaccoProcessing = 17,
				[CrmPicklist(DisplayName = "Freight", Value = 100000005)]Freight = 100000005,
				[CrmPicklist(DisplayName = "Immigration Services", Value = 100000006)]ImmigrationServices = 100000006,
				[CrmPicklist(DisplayName = "Inbound Capital Intensive Processing", Value = 18)]InboundCapitalIntensiveProcessing = 18,
				[CrmPicklist(DisplayName = "Inbound Repair and Services", Value = 19)]InboundRepairAndServices = 19,
				[CrmPicklist(DisplayName = "Information Technology", Value = 100000007)]InformationTechnology = 100000007,
				[CrmPicklist(DisplayName = "Insurance", Value = 20)]Insurance = 20,
				[CrmPicklist(DisplayName = "Item", Value = 100000011)]Item = 100000011,
				[CrmPicklist(DisplayName = "Legal Services", Value = 21)]LegalServices = 21,
				[CrmPicklist(DisplayName = "Marketing", Value = 100000008)]Marketing = 100000008,
				[CrmPicklist(DisplayName = "Medical Services", Value = 100000009)]MedicalServices = 100000009,
				[CrmPicklist(DisplayName = "Non-Durable Merchandise Retail", Value = 22)]NonDurableMerchandiseRetail = 22,
				[CrmPicklist(DisplayName = "Outbound Consumer Service", Value = 23)]OutboundConsumerService = 23,
				[CrmPicklist(DisplayName = "Petrochemical Extraction and Distribution", Value = 24)]PetrochemicalExtractionAndDistribution = 24,
				[CrmPicklist(DisplayName = "Plumbers", Value = 100000012)]Plumbers = 100000012,
				[CrmPicklist(DisplayName = "Property Investment", Value = 100000010)]PropertyInvestment = 100000010,
				[CrmPicklist(DisplayName = "Real Estate Agents", Value = 100000013)]RealEstateAgents = 100000013,
				[CrmPicklist(DisplayName = "Rest Homes", Value = 100000014)]RestHomes = 100000014,
				[CrmPicklist(DisplayName = "Retail", Value = 100000015)]Retail = 100000015,
				[CrmPicklist(DisplayName = "Sports", Value = 100000016)]Sports = 100000016,
				[CrmPicklist(DisplayName = "Travel", Value = 100000018)]Travel = 100000018,
				[CrmPicklist(DisplayName = "Service Retail", Value = 25)]ServiceRetail = 25,
				[CrmPicklist(DisplayName = "SIG Affiliations", Value = 26)]SIGAffiliations = 26,
				[CrmPicklist(DisplayName = "Social Services", Value = 27)]SocialServices = 27,
				[CrmPicklist(DisplayName = "Special Outbound Trade Contractors", Value = 28)]SpecialOutboundTradeContractors = 28,
				[CrmPicklist(DisplayName = "Specialty Realty", Value = 29)]SpecialtyRealty = 29,
				[CrmPicklist(DisplayName = "Transportation", Value = 30)]Transportation = 30,
				[CrmPicklist(DisplayName = "Utility Creation and Distribution", Value = 31)]UtilityCreationAndDistribution = 31,
				[CrmPicklist(DisplayName = "Vehicle Retail", Value = 32)]VehicleRetail = 32,
				[CrmPicklist(DisplayName = "Wholesale", Value = 33)]Wholesale = 33,
				[CrmPicklist(DisplayName = "Automotive", Value = 100000017)]Automotive = 100000017,
				[CrmPicklist(DisplayName = "Electronics", Value = 100000019)]Electronics = 100000019,
				[CrmPicklist(DisplayName = "Internet Services (ISP)", Value = 100000020)]InternetServicesISP = 100000020,
				[CrmPicklist(DisplayName = "Investment Services", Value = 100000021)]InvestmentServices = 100000021,
				[CrmPicklist(DisplayName = "Printing & Publishing", Value = 100000022)]PrintingPublishing = 100000022,
				[CrmPicklist(DisplayName = "Project Management", Value = 100000023)]ProjectManagement = 100000023,
				[CrmPicklist(DisplayName = "Property Management", Value = 100000024)]PropertyManagement = 100000024,
				[CrmPicklist(DisplayName = "Recruitment", Value = 100000025)]Recruitment = 100000025,
				[CrmPicklist(DisplayName = "Cleaning", Value = 100000026)]Cleaning = 100000026,
				[CrmPicklist(DisplayName = "Construction", Value = 100000027)]Construction = 100000027,
				[CrmPicklist(DisplayName = "Real Estate", Value = 100000028)]RealEstate = 100000028,
			}		
			public enum MagIceCreamFlavours 
			{
				[CrmPicklist(DisplayName = "Chocolate Ice Cream", Value = 809730000)]ChocolateIceCream = 809730000,
				[CrmPicklist(DisplayName = "Vanilla", Value = 809730001)]Vanilla = 809730001,
				[CrmPicklist(DisplayName = "Item", Value = 809730002)]Item = 809730002,
			}		
			public enum NewCallCycle 
			{
				[CrmPicklist(DisplayName = "Monthly", Value = 100000000)]Monthly = 100000000,
				[CrmPicklist(DisplayName = "Bi-Monthly", Value = 100000001)]BiMonthly = 100000001,
				[CrmPicklist(DisplayName = "Quarterly", Value = 100000002)]Quarterly = 100000002,
				[CrmPicklist(DisplayName = "6-Monthly", Value = 100000003)]_6Monthly = 100000003,
			}		
			public enum NewInvoiceMethod 
			{
				[CrmPicklist(DisplayName = "Email", Value = 100000000)]Email = 100000000,
				[CrmPicklist(DisplayName = "Post", Value = 100000001)]Post = 100000001,
				[CrmPicklist(DisplayName = "Courier", Value = 100000002)]Courier = 100000002,
			}		
			public enum OwnershipCode 
			{
				[CrmPicklist(DisplayName = "Public", Value = 1)]__Public = 1,
				[CrmPicklist(DisplayName = "Private", Value = 2)]__Private = 2,
				[CrmPicklist(DisplayName = "Subsidiary", Value = 3)]Subsidiary = 3,
				[CrmPicklist(DisplayName = "Other", Value = 4)]Other = 4,
			}		
			public enum PaymentTermsCode 
			{
				[CrmPicklist(DisplayName = "Net 30", Value = 1)]Net30 = 1,
				[CrmPicklist(DisplayName = "2% 10, Net 30", Value = 2)]_210Net30 = 2,
				[CrmPicklist(DisplayName = "Net 45", Value = 3)]Net45 = 3,
				[CrmPicklist(DisplayName = "Net 60", Value = 4)]Net60 = 4,
			}		
			public enum PreferredAppointmentDayCode 
			{
				[CrmPicklist(DisplayName = "Sunday")]Sunday = 0,
				[CrmPicklist(DisplayName = "Monday", Value = 1)]Monday = 1,
				[CrmPicklist(DisplayName = "Tuesday", Value = 2)]Tuesday = 2,
				[CrmPicklist(DisplayName = "Wednesday", Value = 3)]Wednesday = 3,
				[CrmPicklist(DisplayName = "Thursday", Value = 4)]Thursday = 4,
				[CrmPicklist(DisplayName = "Friday", Value = 5)]Friday = 5,
				[CrmPicklist(DisplayName = "Saturday", Value = 6)]Saturday = 6,
			}		
			public enum PreferredAppointmentTimeCode 
			{
				[CrmPicklist(DisplayName = "Morning", Value = 1)]Morning = 1,
				[CrmPicklist(DisplayName = "Afternoon", Value = 2)]Afternoon = 2,
				[CrmPicklist(DisplayName = "Evening", Value = 3)]Evening = 3,
			}		
			public enum PreferredContactMethodCode 
			{
				[CrmPicklist(DisplayName = "Any", Value = 1)]Any = 1,
				[CrmPicklist(DisplayName = "E-mail", Value = 2)]Email = 2,
				[CrmPicklist(DisplayName = "Phone", Value = 3)]Phone = 3,
				[CrmPicklist(DisplayName = "Fax", Value = 4)]Fax = 4,
				[CrmPicklist(DisplayName = "Mail", Value = 5)]Mail = 5,
			}		
			public enum ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
			public enum TerritoryCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "account";
			
			public const string AccountCategoryCode = "accountcategorycode";
			public const string AccountCategoryCodeName = "accountcategorycodename";
			public const string AccountClassificationCode = "accountclassificationcode";
			public const string AccountClassificationCodeName = "accountclassificationcodename";
			public const string AccountId = "accountid";
			public const string AccountNumber = "accountnumber";
			public const string AccountRatingCode = "accountratingcode";
			public const string AccountRatingCodeName = "accountratingcodename";
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1FreightTermsCode = "address1_freighttermscode";
			public const string Address1FreightTermsCodeName = "address1_freighttermscodename";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1PrimaryContactName = "address1_primarycontactname";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2FreightTermsCode = "address2_freighttermscode";
			public const string Address2FreightTermsCodeName = "address2_freighttermscodename";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2PrimaryContactName = "address2_primarycontactname";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string AdxCreatedByIPAddress = "adx_createdbyipaddress";
			public const string AdxCreatedByUsername = "adx_createdbyusername";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string Aging30 = "aging30";
			public const string Aging60 = "aging60";
			public const string Aging90 = "aging90";
			public const string BusinessTypeCode = "businesstypecode";
			public const string BusinessTypeCodeName = "businesstypecodename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CreditLimit = "creditlimit";
			public const string CreditOnHold = "creditonhold";
			public const string CreditOnHoldName = "creditonholdname";
			public const string CustomerSizeCode = "customersizecode";
			public const string CustomerSizeCodeName = "customersizecodename";
			public const string CustomerTypeCode = "customertypecode";
			public const string CustomerTypeCodeName = "customertypecodename";
			public const string DefaultPriceLevelId = "defaultpricelevelid";
			public const string DefaultPriceLevelIdName = "defaultpricelevelidname";
			public const string Description = "description";
			public const string DoNotBulkEMail = "donotbulkemail";
			public const string DoNotBulkEMailName = "donotbulkemailname";
			public const string DoNotBulkPostalMail = "donotbulkpostalmail";
			public const string DoNotBulkPostalMailName = "donotbulkpostalmailname";
			public const string DoNotEMail = "donotemail";
			public const string DoNotEMailName = "donotemailname";
			public const string DoNotFax = "donotfax";
			public const string DoNotFaxName = "donotfaxname";
			public const string DoNotPhone = "donotphone";
			public const string DoNotPhoneName = "donotphonename";
			public const string DoNotPostalMail = "donotpostalmail";
			public const string DoNotPostalMailName = "donotpostalmailname";
			public const string DoNotSendMarketingMaterialName = "donotsendmarketingmaterialname";
			public const string DoNotSendMM = "donotsendmm";
			public const string EMailAddress1 = "emailaddress1";
			public const string EMailAddress2 = "emailaddress2";
			public const string EMailAddress3 = "emailaddress3";
			public const string ExchangeRate = "exchangerate";
			public const string Fax = "fax";
			public const string FtpSiteURL = "ftpsiteurl";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IndustryCode = "industrycode";
			public const string IndustryCodeName = "industrycodename";
			public const string IsPrivate = "isprivate";
			public const string IsPrivateName = "isprivatename";
			public const string LastUsedInCampaign = "lastusedincampaign";
			public const string MagBankAccountNumber = "mag_bankaccountnumber";
			public const string MagIceCreamFlavours = "mag_icecreamflavours";
			public const string MagIcecreamflavoursName = "mag_icecreamflavoursname";
			public const string MagSynchedWithXero = "mag_synchedwithxero";
			public const string MagSynchedwithxeroName = "mag_synchedwithxeroname";
			public const string MagTaxIDNumber = "mag_taxidnumber";
			public const string MagXeroId = "mag_xeroid";
			public const string MarketCap = "marketcap";
			public const string MasterAccountIdName = "masteraccountidname";
			public const string MasterAccountIdYomiName = "masteraccountidyominame";
			public const string MasterId = "masterid";
			public const string MasterIdName = "masteridName";
			public const string Merged = "merged";
			public const string MergedName = "mergedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaManagingpartnerid = "msa_managingpartnerid";
			public const string MsaManagingpartneridName = "msa_managingpartneridname";
			public const string MsaManagingpartneridYomiName = "msa_managingpartneridyominame";
			public const string Name = "name";
			public const string NewAccountManagerId = "new_accountmanagerid";
			public const string NewAccountManagerIdName = "new_accountmanageridname";
			public const string NewAccountManagerIdYomiName = "new_accountmanageridyominame";
			public const string NewAccountsContactId = "new_accountscontactid";
			public const string NewAccountsContactIdName = "new_accountscontactidname";
			public const string NewAccountsContactIdYomiName = "new_accountscontactidyominame";
			public const string NewAccountsId = "new_accountsid";
			public const string NewAccountsIdName = "new_accountsidname";
			public const string NewAddress1Suburb = "new_address1suburb";
			public const string NewCallCycle = "new_callcycle";
			public const string NewCallcycleName = "new_callcyclename";
			public const string NewCPSMDeleted = "new_cpsmdeleted";
			public const string NewCPSMShortCode = "new_cpsmshortcode";
			public const string NewDonotinvoice = "new_donotinvoice";
			public const string NewDonotinvoiceName = "new_donotinvoicename";
			public const string NewInvoiceDirect = "new_invoicedirect";
			public const string NewInvoicedirectName = "new_invoicedirectname";
			public const string NewInvoiceMethod = "new_invoicemethod";
			public const string NewInvoicemethodName = "new_invoicemethodname";
			public const string NewLastContacted = "new_lastcontacted";
			public const string NewNextContactBooked = "new_nextcontactbooked";
			public const string NewNextContactDue = "new_nextcontactdue";
			public const string NewOldCPSMShortCode = "new_oldcpsmshortcode";
			public const string NewResellerId = "new_resellerid";
			public const string NewResellerIdName = "new_reselleridname";
			public const string NumberOfEmployees = "numberofemployees";
			public const string OriginatingLeadId = "originatingleadid";
			public const string OriginatingLeadIdName = "originatingleadidname";
			public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwnershipCode = "ownershipcode";
			public const string OwnershipCodeName = "ownershipcodename";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string ParentAccountId = "parentaccountid";
			public const string ParentAccountIdName = "parentaccountidname";
			public const string ParentAccountIdYomiName = "parentaccountidyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodeName = "paymenttermscodename";
			public const string PreferredAppointmentDayCode = "preferredappointmentdaycode";
			public const string PreferredAppointmentDayCodeName = "preferredappointmentdaycodename";
			public const string PreferredAppointmentTimeCode = "preferredappointmenttimecode";
			public const string PreferredAppointmentTimeCodeName = "preferredappointmenttimecodename";
			public const string PreferredContactMethodCode = "preferredcontactmethodcode";
			public const string PreferredContactMethodCodeName = "preferredcontactmethodcodename";
			public const string PreferredEquipmentId = "preferredequipmentid";
			public const string PreferredEquipmentIdName = "preferredequipmentidname";
			public const string PreferredServiceId = "preferredserviceid";
			public const string PreferredServiceIdName = "preferredserviceidname";
			public const string PreferredSystemUserId = "preferredsystemuserid";
			public const string PreferredSystemUserIdName = "preferredsystemuseridname";
			public const string PreferredSystemUserIdYomiName = "preferredsystemuseridyominame";
			public const string PrimaryContactId = "primarycontactid";
			public const string PrimaryContactIdName = "primarycontactidname";
			public const string PrimaryContactIdYomiName = "primarycontactidyominame";
			public const string Revenue = "revenue";
			public const string SharesOutstanding = "sharesoutstanding";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string SIC = "sic";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string StockExchange = "stockexchange";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TerritoryCode = "territorycode";
			public const string TerritoryCodeName = "territorycodename";
			public const string TerritoryId = "territoryid";
			public const string TerritoryIdName = "territoryidname";
			public const string TickerSymbol = "tickersymbol";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WebSiteURL = "websiteurl";
			public const string YomiName = "yominame";
		}

		public override Guid PrimaryKey
		{
			get { return AccountId; }
		}

		[CrmProperty(LogicalName = "accountcategorycode")]
        public virtual Enums.AccountCategoryCode? AccountCategoryCode
        {
            get { FillData(); return _accountCategoryCode; }
            set { SetPicklist("accountcategorycode", (int?)value); _accountCategoryCode = value; }
        }
        private Enums.AccountCategoryCode? _accountCategoryCode;

		[CrmProperty(LogicalName = "accountcategorycodename")]
        public virtual string AccountCategoryCodeName
        {
            get { FillData(); return _accountCategoryCodeName; }
            set {  _accountCategoryCodeName = value; }
        }
        private string _accountCategoryCodeName;

		[CrmProperty(LogicalName = "accountclassificationcode")]
        public virtual Enums.AccountClassificationCode? AccountClassificationCode
        {
            get { FillData(); return _accountClassificationCode; }
            set { SetPicklist("accountclassificationcode", (int?)value); _accountClassificationCode = value; }
        }
        private Enums.AccountClassificationCode? _accountClassificationCode;

		[CrmProperty(LogicalName = "accountclassificationcodename")]
        public virtual string AccountClassificationCodeName
        {
            get { FillData(); return _accountClassificationCodeName; }
            set {  _accountClassificationCodeName = value; }
        }
        private string _accountClassificationCodeName;

		[CrmProperty(LogicalName = "accountid")]
        public virtual Guid AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid _accountId;

		[CrmProperty(LogicalName = "accountnumber")]
        public virtual string AccountNumber
        {
            get { FillData(); return _accountNumber; }
            set { SetValue<string>("accountnumber", value); _accountNumber = value; }
        }
        private string _accountNumber;

		[CrmProperty(LogicalName = "accountratingcode")]
        public virtual Enums.AccountRatingCode? AccountRatingCode
        {
            get { FillData(); return _accountRatingCode; }
            set { SetPicklist("accountratingcode", (int?)value); _accountRatingCode = value; }
        }
        private Enums.AccountRatingCode? _accountRatingCode;

		[CrmProperty(LogicalName = "accountratingcodename")]
        public virtual string AccountRatingCodeName
        {
            get { FillData(); return _accountRatingCodeName; }
            set {  _accountRatingCodeName = value; }
        }
        private string _accountRatingCodeName;

		[CrmProperty(LogicalName = "address1_addressid")]
        public virtual Guid Address1AddressId
        {
            get { FillData(); return _address1AddressId; }
            set { SetValue<Guid?>("address1_addressid", value); _address1AddressId = value; }
        }
        private Guid _address1AddressId;

		[CrmProperty(LogicalName = "address1_addresstypecode")]
        public virtual Enums.Address1AddressTypeCode? Address1AddressTypeCode
        {
            get { FillData(); return _address1AddressTypeCode; }
            set { SetPicklist("address1_addresstypecode", (int?)value); _address1AddressTypeCode = value; }
        }
        private Enums.Address1AddressTypeCode? _address1AddressTypeCode;

		[CrmProperty(LogicalName = "address1_addresstypecodename")]
        public virtual string Address1AddressTypeCodeName
        {
            get { FillData(); return _address1AddressTypeCodeName; }
            set {  _address1AddressTypeCodeName = value; }
        }
        private string _address1AddressTypeCodeName;

		[CrmProperty(LogicalName = "address1_city")]
        public virtual string Address1City
        {
            get { FillData(); return _address1City; }
            set { SetValue<string>("address1_city", value); _address1City = value; }
        }
        private string _address1City;

		[CrmProperty(LogicalName = "address1_country")]
        public virtual string Address1Country
        {
            get { FillData(); return _address1Country; }
            set { SetValue<string>("address1_country", value); _address1Country = value; }
        }
        private string _address1Country;

		[CrmProperty(LogicalName = "address1_county")]
        public virtual string Address1County
        {
            get { FillData(); return _address1County; }
            set { SetValue<string>("address1_county", value); _address1County = value; }
        }
        private string _address1County;

		[CrmProperty(LogicalName = "address1_fax")]
        public virtual string Address1Fax
        {
            get { FillData(); return _address1Fax; }
            set { SetValue<string>("address1_fax", value); _address1Fax = value; }
        }
        private string _address1Fax;

		[CrmProperty(LogicalName = "address1_freighttermscode")]
        public virtual Enums.Address1FreightTermsCode? Address1FreightTermsCode
        {
            get { FillData(); return _address1FreightTermsCode; }
            set { SetPicklist("address1_freighttermscode", (int?)value); _address1FreightTermsCode = value; }
        }
        private Enums.Address1FreightTermsCode? _address1FreightTermsCode;

		[CrmProperty(LogicalName = "address1_freighttermscodename")]
        public virtual string Address1FreightTermsCodeName
        {
            get { FillData(); return _address1FreightTermsCodeName; }
            set {  _address1FreightTermsCodeName = value; }
        }
        private string _address1FreightTermsCodeName;

		[CrmProperty(LogicalName = "address1_latitude")]
        public virtual double? Address1Latitude
        {
            get { FillData(); return _address1Latitude; }
            set { SetValue<double?>("address1_latitude", value); _address1Latitude = value; }
        }
        private double? _address1Latitude;

		[CrmProperty(LogicalName = "address1_line1")]
        public virtual string Address1Line1
        {
            get { FillData(); return _address1Line1; }
            set { SetValue<string>("address1_line1", value); _address1Line1 = value; }
        }
        private string _address1Line1;

		[CrmProperty(LogicalName = "address1_line2")]
        public virtual string Address1Line2
        {
            get { FillData(); return _address1Line2; }
            set { SetValue<string>("address1_line2", value); _address1Line2 = value; }
        }
        private string _address1Line2;

		[CrmProperty(LogicalName = "address1_line3")]
        public virtual string Address1Line3
        {
            get { FillData(); return _address1Line3; }
            set { SetValue<string>("address1_line3", value); _address1Line3 = value; }
        }
        private string _address1Line3;

		[CrmProperty(LogicalName = "address1_longitude")]
        public virtual double? Address1Longitude
        {
            get { FillData(); return _address1Longitude; }
            set { SetValue<double?>("address1_longitude", value); _address1Longitude = value; }
        }
        private double? _address1Longitude;

		[CrmProperty(LogicalName = "address1_name")]
        public virtual string Address1Name
        {
            get { FillData(); return _address1Name; }
            set { SetValue<string>("address1_name", value); _address1Name = value; }
        }
        private string _address1Name;

		[CrmProperty(LogicalName = "address1_postalcode")]
        public virtual string Address1PostalCode
        {
            get { FillData(); return _address1PostalCode; }
            set { SetValue<string>("address1_postalcode", value); _address1PostalCode = value; }
        }
        private string _address1PostalCode;

		[CrmProperty(LogicalName = "address1_postofficebox")]
        public virtual string Address1PostOfficeBox
        {
            get { FillData(); return _address1PostOfficeBox; }
            set { SetValue<string>("address1_postofficebox", value); _address1PostOfficeBox = value; }
        }
        private string _address1PostOfficeBox;

		[CrmProperty(LogicalName = "address1_primarycontactname")]
        public virtual string Address1PrimaryContactName
        {
            get { FillData(); return _address1PrimaryContactName; }
            set { SetValue<string>("address1_primarycontactname", value); _address1PrimaryContactName = value; }
        }
        private string _address1PrimaryContactName;

		[CrmProperty(LogicalName = "address1_shippingmethodcode")]
        public virtual Enums.Address1ShippingMethodCode? Address1ShippingMethodCode
        {
            get { FillData(); return _address1ShippingMethodCode; }
            set { SetPicklist("address1_shippingmethodcode", (int?)value); _address1ShippingMethodCode = value; }
        }
        private Enums.Address1ShippingMethodCode? _address1ShippingMethodCode;

		[CrmProperty(LogicalName = "address1_shippingmethodcodename")]
        public virtual string Address1ShippingMethodCodeName
        {
            get { FillData(); return _address1ShippingMethodCodeName; }
            set {  _address1ShippingMethodCodeName = value; }
        }
        private string _address1ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address1_stateorprovince")]
        public virtual string Address1StateOrProvince
        {
            get { FillData(); return _address1StateOrProvince; }
            set { SetValue<string>("address1_stateorprovince", value); _address1StateOrProvince = value; }
        }
        private string _address1StateOrProvince;

		[CrmProperty(LogicalName = "address1_telephone1")]
        public virtual string Address1Telephone1
        {
            get { FillData(); return _address1Telephone1; }
            set { SetValue<string>("address1_telephone1", value); _address1Telephone1 = value; }
        }
        private string _address1Telephone1;

		[CrmProperty(LogicalName = "address1_telephone2")]
        public virtual string Address1Telephone2
        {
            get { FillData(); return _address1Telephone2; }
            set { SetValue<string>("address1_telephone2", value); _address1Telephone2 = value; }
        }
        private string _address1Telephone2;

		[CrmProperty(LogicalName = "address1_telephone3")]
        public virtual string Address1Telephone3
        {
            get { FillData(); return _address1Telephone3; }
            set { SetValue<string>("address1_telephone3", value); _address1Telephone3 = value; }
        }
        private string _address1Telephone3;

		[CrmProperty(LogicalName = "address1_upszone")]
        public virtual string Address1UPSZone
        {
            get { FillData(); return _address1UPSZone; }
            set { SetValue<string>("address1_upszone", value); _address1UPSZone = value; }
        }
        private string _address1UPSZone;

		[CrmProperty(LogicalName = "address1_utcoffset")]
        public virtual int? Address1UTCOffset
        {
            get { FillData(); return _address1UTCOffset; }
            set { SetValue<int?>("address1_utcoffset", value); _address1UTCOffset = value; }
        }
        private int? _address1UTCOffset;

		[CrmProperty(LogicalName = "address2_addressid")]
        public virtual Guid Address2AddressId
        {
            get { FillData(); return _address2AddressId; }
            set { SetValue<Guid?>("address2_addressid", value); _address2AddressId = value; }
        }
        private Guid _address2AddressId;

		[CrmProperty(LogicalName = "address2_addresstypecode")]
        public virtual Enums.Address2AddressTypeCode? Address2AddressTypeCode
        {
            get { FillData(); return _address2AddressTypeCode; }
            set { SetPicklist("address2_addresstypecode", (int?)value); _address2AddressTypeCode = value; }
        }
        private Enums.Address2AddressTypeCode? _address2AddressTypeCode;

		[CrmProperty(LogicalName = "address2_addresstypecodename")]
        public virtual string Address2AddressTypeCodeName
        {
            get { FillData(); return _address2AddressTypeCodeName; }
            set {  _address2AddressTypeCodeName = value; }
        }
        private string _address2AddressTypeCodeName;

		[CrmProperty(LogicalName = "address2_city")]
        public virtual string Address2City
        {
            get { FillData(); return _address2City; }
            set { SetValue<string>("address2_city", value); _address2City = value; }
        }
        private string _address2City;

		[CrmProperty(LogicalName = "address2_country")]
        public virtual string Address2Country
        {
            get { FillData(); return _address2Country; }
            set { SetValue<string>("address2_country", value); _address2Country = value; }
        }
        private string _address2Country;

		[CrmProperty(LogicalName = "address2_county")]
        public virtual string Address2County
        {
            get { FillData(); return _address2County; }
            set { SetValue<string>("address2_county", value); _address2County = value; }
        }
        private string _address2County;

		[CrmProperty(LogicalName = "address2_fax")]
        public virtual string Address2Fax
        {
            get { FillData(); return _address2Fax; }
            set { SetValue<string>("address2_fax", value); _address2Fax = value; }
        }
        private string _address2Fax;

		[CrmProperty(LogicalName = "address2_freighttermscode")]
        public virtual Enums.Address2FreightTermsCode? Address2FreightTermsCode
        {
            get { FillData(); return _address2FreightTermsCode; }
            set { SetPicklist("address2_freighttermscode", (int?)value); _address2FreightTermsCode = value; }
        }
        private Enums.Address2FreightTermsCode? _address2FreightTermsCode;

		[CrmProperty(LogicalName = "address2_freighttermscodename")]
        public virtual string Address2FreightTermsCodeName
        {
            get { FillData(); return _address2FreightTermsCodeName; }
            set {  _address2FreightTermsCodeName = value; }
        }
        private string _address2FreightTermsCodeName;

		[CrmProperty(LogicalName = "address2_latitude")]
        public virtual double? Address2Latitude
        {
            get { FillData(); return _address2Latitude; }
            set { SetValue<double?>("address2_latitude", value); _address2Latitude = value; }
        }
        private double? _address2Latitude;

		[CrmProperty(LogicalName = "address2_line1")]
        public virtual string Address2Line1
        {
            get { FillData(); return _address2Line1; }
            set { SetValue<string>("address2_line1", value); _address2Line1 = value; }
        }
        private string _address2Line1;

		[CrmProperty(LogicalName = "address2_line2")]
        public virtual string Address2Line2
        {
            get { FillData(); return _address2Line2; }
            set { SetValue<string>("address2_line2", value); _address2Line2 = value; }
        }
        private string _address2Line2;

		[CrmProperty(LogicalName = "address2_line3")]
        public virtual string Address2Line3
        {
            get { FillData(); return _address2Line3; }
            set { SetValue<string>("address2_line3", value); _address2Line3 = value; }
        }
        private string _address2Line3;

		[CrmProperty(LogicalName = "address2_longitude")]
        public virtual double? Address2Longitude
        {
            get { FillData(); return _address2Longitude; }
            set { SetValue<double?>("address2_longitude", value); _address2Longitude = value; }
        }
        private double? _address2Longitude;

		[CrmProperty(LogicalName = "address2_name")]
        public virtual string Address2Name
        {
            get { FillData(); return _address2Name; }
            set { SetValue<string>("address2_name", value); _address2Name = value; }
        }
        private string _address2Name;

		[CrmProperty(LogicalName = "address2_postalcode")]
        public virtual string Address2PostalCode
        {
            get { FillData(); return _address2PostalCode; }
            set { SetValue<string>("address2_postalcode", value); _address2PostalCode = value; }
        }
        private string _address2PostalCode;

		[CrmProperty(LogicalName = "address2_postofficebox")]
        public virtual string Address2PostOfficeBox
        {
            get { FillData(); return _address2PostOfficeBox; }
            set { SetValue<string>("address2_postofficebox", value); _address2PostOfficeBox = value; }
        }
        private string _address2PostOfficeBox;

		[CrmProperty(LogicalName = "address2_primarycontactname")]
        public virtual string Address2PrimaryContactName
        {
            get { FillData(); return _address2PrimaryContactName; }
            set { SetValue<string>("address2_primarycontactname", value); _address2PrimaryContactName = value; }
        }
        private string _address2PrimaryContactName;

		[CrmProperty(LogicalName = "address2_shippingmethodcode")]
        public virtual Enums.Address2ShippingMethodCode? Address2ShippingMethodCode
        {
            get { FillData(); return _address2ShippingMethodCode; }
            set { SetPicklist("address2_shippingmethodcode", (int?)value); _address2ShippingMethodCode = value; }
        }
        private Enums.Address2ShippingMethodCode? _address2ShippingMethodCode;

		[CrmProperty(LogicalName = "address2_shippingmethodcodename")]
        public virtual string Address2ShippingMethodCodeName
        {
            get { FillData(); return _address2ShippingMethodCodeName; }
            set {  _address2ShippingMethodCodeName = value; }
        }
        private string _address2ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address2_stateorprovince")]
        public virtual string Address2StateOrProvince
        {
            get { FillData(); return _address2StateOrProvince; }
            set { SetValue<string>("address2_stateorprovince", value); _address2StateOrProvince = value; }
        }
        private string _address2StateOrProvince;

		[CrmProperty(LogicalName = "address2_telephone1")]
        public virtual string Address2Telephone1
        {
            get { FillData(); return _address2Telephone1; }
            set { SetValue<string>("address2_telephone1", value); _address2Telephone1 = value; }
        }
        private string _address2Telephone1;

		[CrmProperty(LogicalName = "address2_telephone2")]
        public virtual string Address2Telephone2
        {
            get { FillData(); return _address2Telephone2; }
            set { SetValue<string>("address2_telephone2", value); _address2Telephone2 = value; }
        }
        private string _address2Telephone2;

		[CrmProperty(LogicalName = "address2_telephone3")]
        public virtual string Address2Telephone3
        {
            get { FillData(); return _address2Telephone3; }
            set { SetValue<string>("address2_telephone3", value); _address2Telephone3 = value; }
        }
        private string _address2Telephone3;

		[CrmProperty(LogicalName = "address2_upszone")]
        public virtual string Address2UPSZone
        {
            get { FillData(); return _address2UPSZone; }
            set { SetValue<string>("address2_upszone", value); _address2UPSZone = value; }
        }
        private string _address2UPSZone;

		[CrmProperty(LogicalName = "address2_utcoffset")]
        public virtual int? Address2UTCOffset
        {
            get { FillData(); return _address2UTCOffset; }
            set { SetValue<int?>("address2_utcoffset", value); _address2UTCOffset = value; }
        }
        private int? _address2UTCOffset;

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedByIPAddress
        {
            get { FillData(); return _adxCreatedByIPAddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedByIPAddress = value; }
        }
        private string _adxCreatedByIPAddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedByUsername
        {
            get { FillData(); return _adxCreatedByUsername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedByUsername = value; }
        }
        private string _adxCreatedByUsername;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "aging30")]
        public virtual decimal? Aging30
        {
            get { FillData(); return _aging30; }
            set {  _aging30 = value; }
        }
        private decimal? _aging30;

		[CrmProperty(LogicalName = "aging60")]
        public virtual decimal? Aging60
        {
            get { FillData(); return _aging60; }
            set {  _aging60 = value; }
        }
        private decimal? _aging60;

		[CrmProperty(LogicalName = "aging90")]
        public virtual decimal? Aging90
        {
            get { FillData(); return _aging90; }
            set {  _aging90 = value; }
        }
        private decimal? _aging90;

		[CrmProperty(LogicalName = "businesstypecode")]
        public virtual Enums.BusinessTypeCode? BusinessTypeCode
        {
            get { FillData(); return _businessTypeCode; }
            set { SetPicklist("businesstypecode", (int?)value); _businessTypeCode = value; }
        }
        private Enums.BusinessTypeCode? _businessTypeCode;

		[CrmProperty(LogicalName = "businesstypecodename")]
        public virtual string BusinessTypeCodeName
        {
            get { FillData(); return _businessTypeCodeName; }
            set {  _businessTypeCodeName = value; }
        }
        private string _businessTypeCodeName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "creditlimit")]
        public virtual decimal? CreditLimit
        {
            get { FillData(); return _creditLimit; }
            set { SetMoney("creditlimit", value); _creditLimit = value; }
        }
        private decimal? _creditLimit;

		[CrmProperty(LogicalName = "creditonhold")]
        public virtual bool? CreditOnHold
        {
            get { FillData(); return _creditOnHold; }
            set { SetValue<bool?>("creditonhold", value); _creditOnHold = value; }
        }
        private bool? _creditOnHold;

		[CrmProperty(LogicalName = "creditonholdname")]
        public virtual string CreditOnHoldName
        {
            get { FillData(); return _creditOnHoldName; }
            set {  _creditOnHoldName = value; }
        }
        private string _creditOnHoldName;

		[CrmProperty(LogicalName = "customersizecode")]
        public virtual Enums.CustomerSizeCode? CustomerSizeCode
        {
            get { FillData(); return _customerSizeCode; }
            set { SetPicklist("customersizecode", (int?)value); _customerSizeCode = value; }
        }
        private Enums.CustomerSizeCode? _customerSizeCode;

		[CrmProperty(LogicalName = "customersizecodename")]
        public virtual string CustomerSizeCodeName
        {
            get { FillData(); return _customerSizeCodeName; }
            set {  _customerSizeCodeName = value; }
        }
        private string _customerSizeCodeName;

		[CrmProperty(LogicalName = "customertypecode")]
        public virtual Enums.CustomerTypeCode? CustomerTypeCode
        {
            get { FillData(); return _customerTypeCode; }
            set { SetPicklist("customertypecode", (int?)value); _customerTypeCode = value; }
        }
        private Enums.CustomerTypeCode? _customerTypeCode;

		[CrmProperty(LogicalName = "customertypecodename")]
        public virtual string CustomerTypeCodeName
        {
            get { FillData(); return _customerTypeCodeName; }
            set {  _customerTypeCodeName = value; }
        }
        private string _customerTypeCodeName;

		[CrmProperty(LogicalName = "defaultpricelevelid", IsLookup = true)]
        public virtual Guid? DefaultPriceLevelId
        {
            get { FillData(); return _defaultPriceLevelId; }
            set { SetLookup("defaultpricelevelid", "pricelevel", value); _defaultPriceLevelId = value; }
        }
        private Guid? _defaultPriceLevelId;

		[CrmProperty(LogicalName = "defaultpricelevelidname")]
        public virtual string DefaultPriceLevelIdName
        {
            get { FillData(); return _defaultPriceLevelIdName; }
            set {  _defaultPriceLevelIdName = value; }
        }
        private string _defaultPriceLevelIdName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "donotbulkemail")]
        public virtual bool? DoNotBulkEMail
        {
            get { FillData(); return _doNotBulkEMail; }
            set { SetValue<bool?>("donotbulkemail", value); _doNotBulkEMail = value; }
        }
        private bool? _doNotBulkEMail;

		[CrmProperty(LogicalName = "donotbulkemailname")]
        public virtual string DoNotBulkEMailName
        {
            get { FillData(); return _doNotBulkEMailName; }
            set {  _doNotBulkEMailName = value; }
        }
        private string _doNotBulkEMailName;

		[CrmProperty(LogicalName = "donotbulkpostalmail")]
        public virtual bool? DoNotBulkPostalMail
        {
            get { FillData(); return _doNotBulkPostalMail; }
            set { SetValue<bool?>("donotbulkpostalmail", value); _doNotBulkPostalMail = value; }
        }
        private bool? _doNotBulkPostalMail;

		[CrmProperty(LogicalName = "donotbulkpostalmailname")]
        public virtual string DoNotBulkPostalMailName
        {
            get { FillData(); return _doNotBulkPostalMailName; }
            set {  _doNotBulkPostalMailName = value; }
        }
        private string _doNotBulkPostalMailName;

		[CrmProperty(LogicalName = "donotemail")]
        public virtual bool? DoNotEMail
        {
            get { FillData(); return _doNotEMail; }
            set { SetValue<bool?>("donotemail", value); _doNotEMail = value; }
        }
        private bool? _doNotEMail;

		[CrmProperty(LogicalName = "donotemailname")]
        public virtual string DoNotEMailName
        {
            get { FillData(); return _doNotEMailName; }
            set {  _doNotEMailName = value; }
        }
        private string _doNotEMailName;

		[CrmProperty(LogicalName = "donotfax")]
        public virtual bool? DoNotFax
        {
            get { FillData(); return _doNotFax; }
            set { SetValue<bool?>("donotfax", value); _doNotFax = value; }
        }
        private bool? _doNotFax;

		[CrmProperty(LogicalName = "donotfaxname")]
        public virtual string DoNotFaxName
        {
            get { FillData(); return _doNotFaxName; }
            set {  _doNotFaxName = value; }
        }
        private string _doNotFaxName;

		[CrmProperty(LogicalName = "donotphone")]
        public virtual bool? DoNotPhone
        {
            get { FillData(); return _doNotPhone; }
            set { SetValue<bool?>("donotphone", value); _doNotPhone = value; }
        }
        private bool? _doNotPhone;

		[CrmProperty(LogicalName = "donotphonename")]
        public virtual string DoNotPhoneName
        {
            get { FillData(); return _doNotPhoneName; }
            set {  _doNotPhoneName = value; }
        }
        private string _doNotPhoneName;

		[CrmProperty(LogicalName = "donotpostalmail")]
        public virtual bool? DoNotPostalMail
        {
            get { FillData(); return _doNotPostalMail; }
            set { SetValue<bool?>("donotpostalmail", value); _doNotPostalMail = value; }
        }
        private bool? _doNotPostalMail;

		[CrmProperty(LogicalName = "donotpostalmailname")]
        public virtual string DoNotPostalMailName
        {
            get { FillData(); return _doNotPostalMailName; }
            set {  _doNotPostalMailName = value; }
        }
        private string _doNotPostalMailName;

		[CrmProperty(LogicalName = "donotsendmarketingmaterialname")]
        public virtual string DoNotSendMarketingMaterialName
        {
            get { FillData(); return _doNotSendMarketingMaterialName; }
            set {  _doNotSendMarketingMaterialName = value; }
        }
        private string _doNotSendMarketingMaterialName;

		[CrmProperty(LogicalName = "donotsendmm")]
        public virtual bool? DoNotSendMM
        {
            get { FillData(); return _doNotSendMM; }
            set { SetValue<bool?>("donotsendmm", value); _doNotSendMM = value; }
        }
        private bool? _doNotSendMM;

		[CrmProperty(LogicalName = "emailaddress1")]
        public virtual string EMailAddress1
        {
            get { FillData(); return _eMailAddress1; }
            set { SetValue<string>("emailaddress1", value); _eMailAddress1 = value; }
        }
        private string _eMailAddress1;

		[CrmProperty(LogicalName = "emailaddress2")]
        public virtual string EMailAddress2
        {
            get { FillData(); return _eMailAddress2; }
            set { SetValue<string>("emailaddress2", value); _eMailAddress2 = value; }
        }
        private string _eMailAddress2;

		[CrmProperty(LogicalName = "emailaddress3")]
        public virtual string EMailAddress3
        {
            get { FillData(); return _eMailAddress3; }
            set { SetValue<string>("emailaddress3", value); _eMailAddress3 = value; }
        }
        private string _eMailAddress3;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "fax")]
        public virtual string Fax
        {
            get { FillData(); return _fax; }
            set { SetValue<string>("fax", value); _fax = value; }
        }
        private string _fax;

		[CrmProperty(LogicalName = "ftpsiteurl")]
        public virtual string FtpSiteURL
        {
            get { FillData(); return _ftpSiteURL; }
            set { SetValue<string>("ftpsiteurl", value); _ftpSiteURL = value; }
        }
        private string _ftpSiteURL;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "industrycode")]
        public virtual Enums.IndustryCode? IndustryCode
        {
            get { FillData(); return _industryCode; }
            set { SetPicklist("industrycode", (int?)value); _industryCode = value; }
        }
        private Enums.IndustryCode? _industryCode;

		[CrmProperty(LogicalName = "industrycodename")]
        public virtual string IndustryCodeName
        {
            get { FillData(); return _industryCodeName; }
            set {  _industryCodeName = value; }
        }
        private string _industryCodeName;

		[CrmProperty(LogicalName = "isprivate")]
        public virtual bool? IsPrivate
        {
            get { FillData(); return _isPrivate; }
            set {  _isPrivate = value; }
        }
        private bool? _isPrivate;

		[CrmProperty(LogicalName = "isprivatename")]
        public virtual string IsPrivateName
        {
            get { FillData(); return _isPrivateName; }
            set {  _isPrivateName = value; }
        }
        private string _isPrivateName;

		[CrmProperty(LogicalName = "lastusedincampaign")]
        public virtual DateTime? LastUsedInCampaign
        {
            get { FillData(); return _lastUsedInCampaign; }
            set { SetValue<DateTime?>("lastusedincampaign", value); _lastUsedInCampaign = value; }
        }
        private DateTime? _lastUsedInCampaign;

		[CrmProperty(LogicalName = "mag_bankaccountnumber")]
        public virtual string MagBankAccountNumber
        {
            get { FillData(); return _magBankAccountNumber; }
            set { SetValue<string>("mag_bankaccountnumber", value); _magBankAccountNumber = value; }
        }
        private string _magBankAccountNumber;

		[CrmProperty(LogicalName = "mag_icecreamflavours")]
        public virtual Enums.MagIceCreamFlavours? MagIceCreamFlavours
        {
            get { FillData(); return _magIceCreamFlavours; }
            set { SetPicklist("mag_icecreamflavours", (int?)value); _magIceCreamFlavours = value; }
        }
        private Enums.MagIceCreamFlavours? _magIceCreamFlavours;

		[CrmProperty(LogicalName = "mag_icecreamflavoursname")]
        public virtual string MagIcecreamflavoursName
        {
            get { FillData(); return _magIcecreamflavoursName; }
            set {  _magIcecreamflavoursName = value; }
        }
        private string _magIcecreamflavoursName;

		[CrmProperty(LogicalName = "mag_synchedwithxero")]
        public virtual bool? MagSynchedWithXero
        {
            get { FillData(); return _magSynchedWithXero; }
            set { SetValue<bool?>("mag_synchedwithxero", value); _magSynchedWithXero = value; }
        }
        private bool? _magSynchedWithXero;

		[CrmProperty(LogicalName = "mag_synchedwithxeroname")]
        public virtual string MagSynchedwithxeroName
        {
            get { FillData(); return _magSynchedwithxeroName; }
            set {  _magSynchedwithxeroName = value; }
        }
        private string _magSynchedwithxeroName;

		[CrmProperty(LogicalName = "mag_taxidnumber")]
        public virtual string MagTaxIDNumber
        {
            get { FillData(); return _magTaxIDNumber; }
            set { SetValue<string>("mag_taxidnumber", value); _magTaxIDNumber = value; }
        }
        private string _magTaxIDNumber;

		[CrmProperty(LogicalName = "mag_xeroid")]
        public virtual string MagXeroId
        {
            get { FillData(); return _magXeroId; }
            set { SetValue<string>("mag_xeroid", value); _magXeroId = value; }
        }
        private string _magXeroId;

		[CrmProperty(LogicalName = "marketcap")]
        public virtual decimal? MarketCap
        {
            get { FillData(); return _marketCap; }
            set { SetMoney("marketcap", value); _marketCap = value; }
        }
        private decimal? _marketCap;

		[CrmProperty(LogicalName = "masteraccountidname")]
        public virtual string MasterAccountIdName
        {
            get { FillData(); return _masterAccountIdName; }
            set {  _masterAccountIdName = value; }
        }
        private string _masterAccountIdName;

		[CrmProperty(LogicalName = "masteraccountidyominame")]
        public virtual string MasterAccountIdYomiName
        {
            get { FillData(); return _masterAccountIdYomiName; }
            set {  _masterAccountIdYomiName = value; }
        }
        private string _masterAccountIdYomiName;

		[CrmProperty(LogicalName = "masterid", IsLookup = true)]
        public virtual Guid? MasterId
        {
            get { FillData(); return _masterId; }
            set {  _masterId = value; }
        }
        private Guid? _masterId;

		[CrmProperty(LogicalName = "masteridName", IsEntityReferenceHelper = true)]
        public virtual string MasterIdName
        {
            get { FillData(); return _masterIdName; }
            set {  _masterIdName = value; }
        }
        private string _masterIdName;

		[CrmProperty(LogicalName = "merged")]
        public virtual bool? Merged
        {
            get { FillData(); return _merged; }
            set {  _merged = value; }
        }
        private bool? _merged;

		[CrmProperty(LogicalName = "mergedname")]
        public virtual string MergedName
        {
            get { FillData(); return _mergedName; }
            set {  _mergedName = value; }
        }
        private string _mergedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_managingpartnerid", IsLookup = true)]
        public virtual Guid? MsaManagingpartnerid
        {
            get { FillData(); return _msaManagingpartnerid; }
            set { SetLookup("msa_managingpartnerid", "account", value); _msaManagingpartnerid = value; }
        }
        private Guid? _msaManagingpartnerid;

		[CrmProperty(LogicalName = "msa_managingpartneridname")]
        public virtual string MsaManagingpartneridName
        {
            get { FillData(); return _msaManagingpartneridName; }
            set {  _msaManagingpartneridName = value; }
        }
        private string _msaManagingpartneridName;

		[CrmProperty(LogicalName = "msa_managingpartneridyominame")]
        public virtual string MsaManagingpartneridYomiName
        {
            get { FillData(); return _msaManagingpartneridYomiName; }
            set {  _msaManagingpartneridYomiName = value; }
        }
        private string _msaManagingpartneridYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "new_accountmanagerid", IsLookup = true)]
        public virtual Guid? NewAccountManagerId
        {
            get { FillData(); return _newAccountManagerId; }
            set { SetLookup("new_accountmanagerid", "contact", value); _newAccountManagerId = value; }
        }
        private Guid? _newAccountManagerId;

		[CrmProperty(LogicalName = "new_accountmanageridname")]
        public virtual string NewAccountManagerIdName
        {
            get { FillData(); return _newAccountManagerIdName; }
            set {  _newAccountManagerIdName = value; }
        }
        private string _newAccountManagerIdName;

		[CrmProperty(LogicalName = "new_accountmanageridyominame")]
        public virtual string NewAccountManagerIdYomiName
        {
            get { FillData(); return _newAccountManagerIdYomiName; }
            set {  _newAccountManagerIdYomiName = value; }
        }
        private string _newAccountManagerIdYomiName;

		[CrmProperty(LogicalName = "new_accountscontactid", IsLookup = true)]
        public virtual Guid? NewAccountsContactId
        {
            get { FillData(); return _newAccountsContactId; }
            set { SetLookup("new_accountscontactid", "contact", value); _newAccountsContactId = value; }
        }
        private Guid? _newAccountsContactId;

		[CrmProperty(LogicalName = "new_accountscontactidname")]
        public virtual string NewAccountsContactIdName
        {
            get { FillData(); return _newAccountsContactIdName; }
            set {  _newAccountsContactIdName = value; }
        }
        private string _newAccountsContactIdName;

		[CrmProperty(LogicalName = "new_accountscontactidyominame")]
        public virtual string NewAccountsContactIdYomiName
        {
            get { FillData(); return _newAccountsContactIdYomiName; }
            set {  _newAccountsContactIdYomiName = value; }
        }
        private string _newAccountsContactIdYomiName;

		[CrmProperty(LogicalName = "new_accountsid", IsLookup = true)]
        public virtual Guid? NewAccountsId
        {
            get { FillData(); return _newAccountsId; }
            set { SetLookup("new_accountsid", "new_hostedservice", value); _newAccountsId = value; }
        }
        private Guid? _newAccountsId;

		[CrmProperty(LogicalName = "new_accountsidname")]
        public virtual string NewAccountsIdName
        {
            get { FillData(); return _newAccountsIdName; }
            set {  _newAccountsIdName = value; }
        }
        private string _newAccountsIdName;

		[CrmProperty(LogicalName = "new_address1suburb")]
        public virtual string NewAddress1Suburb
        {
            get { FillData(); return _newAddress1Suburb; }
            set { SetValue<string>("new_address1suburb", value); _newAddress1Suburb = value; }
        }
        private string _newAddress1Suburb;

		[CrmProperty(LogicalName = "new_callcycle")]
        public virtual Enums.NewCallCycle? NewCallCycle
        {
            get { FillData(); return _newCallCycle; }
            set { SetPicklist("new_callcycle", (int?)value); _newCallCycle = value; }
        }
        private Enums.NewCallCycle? _newCallCycle;

		[CrmProperty(LogicalName = "new_callcyclename")]
        public virtual string NewCallcycleName
        {
            get { FillData(); return _newCallcycleName; }
            set {  _newCallcycleName = value; }
        }
        private string _newCallcycleName;

		[CrmProperty(LogicalName = "new_cpsmdeleted")]
        public virtual DateTime? NewCPSMDeleted
        {
            get { FillData(); return _newCPSMDeleted; }
            set { SetValue<DateTime?>("new_cpsmdeleted", value); _newCPSMDeleted = value; }
        }
        private DateTime? _newCPSMDeleted;

		[CrmProperty(LogicalName = "new_cpsmshortcode")]
        public virtual string NewCPSMShortCode
        {
            get { FillData(); return _newCPSMShortCode; }
            set { SetValue<string>("new_cpsmshortcode", value); _newCPSMShortCode = value; }
        }
        private string _newCPSMShortCode;

		[CrmProperty(LogicalName = "new_donotinvoice")]
        public virtual bool? NewDonotinvoice
        {
            get { FillData(); return _newDonotinvoice; }
            set { SetValue<bool?>("new_donotinvoice", value); _newDonotinvoice = value; }
        }
        private bool? _newDonotinvoice;

		[CrmProperty(LogicalName = "new_donotinvoicename")]
        public virtual string NewDonotinvoiceName
        {
            get { FillData(); return _newDonotinvoiceName; }
            set {  _newDonotinvoiceName = value; }
        }
        private string _newDonotinvoiceName;

		[CrmProperty(LogicalName = "new_invoicedirect")]
        public virtual bool? NewInvoiceDirect
        {
            get { FillData(); return _newInvoiceDirect; }
            set { SetValue<bool?>("new_invoicedirect", value); _newInvoiceDirect = value; }
        }
        private bool? _newInvoiceDirect;

		[CrmProperty(LogicalName = "new_invoicedirectname")]
        public virtual string NewInvoicedirectName
        {
            get { FillData(); return _newInvoicedirectName; }
            set {  _newInvoicedirectName = value; }
        }
        private string _newInvoicedirectName;

		[CrmProperty(LogicalName = "new_invoicemethod")]
        public virtual Enums.NewInvoiceMethod? NewInvoiceMethod
        {
            get { FillData(); return _newInvoiceMethod; }
            set { SetPicklist("new_invoicemethod", (int?)value); _newInvoiceMethod = value; }
        }
        private Enums.NewInvoiceMethod? _newInvoiceMethod;

		[CrmProperty(LogicalName = "new_invoicemethodname")]
        public virtual string NewInvoicemethodName
        {
            get { FillData(); return _newInvoicemethodName; }
            set {  _newInvoicemethodName = value; }
        }
        private string _newInvoicemethodName;

		[CrmProperty(LogicalName = "new_lastcontacted")]
        public virtual DateTime? NewLastContacted
        {
            get { FillData(); return _newLastContacted; }
            set { SetValue<DateTime?>("new_lastcontacted", value); _newLastContacted = value; }
        }
        private DateTime? _newLastContacted;

		[CrmProperty(LogicalName = "new_nextcontactbooked")]
        public virtual DateTime? NewNextContactBooked
        {
            get { FillData(); return _newNextContactBooked; }
            set { SetValue<DateTime?>("new_nextcontactbooked", value); _newNextContactBooked = value; }
        }
        private DateTime? _newNextContactBooked;

		[CrmProperty(LogicalName = "new_nextcontactdue")]
        public virtual DateTime? NewNextContactDue
        {
            get { FillData(); return _newNextContactDue; }
            set { SetValue<DateTime?>("new_nextcontactdue", value); _newNextContactDue = value; }
        }
        private DateTime? _newNextContactDue;

		[CrmProperty(LogicalName = "new_oldcpsmshortcode")]
        public virtual string NewOldCPSMShortCode
        {
            get { FillData(); return _newOldCPSMShortCode; }
            set { SetValue<string>("new_oldcpsmshortcode", value); _newOldCPSMShortCode = value; }
        }
        private string _newOldCPSMShortCode;

		[CrmProperty(LogicalName = "new_resellerid", IsLookup = true)]
        public virtual Guid? NewResellerId
        {
            get { FillData(); return _newResellerId; }
            set { SetLookup("new_resellerid", "new_resellers", value); _newResellerId = value; }
        }
        private Guid? _newResellerId;

		[CrmProperty(LogicalName = "new_reselleridname")]
        public virtual string NewResellerIdName
        {
            get { FillData(); return _newResellerIdName; }
            set {  _newResellerIdName = value; }
        }
        private string _newResellerIdName;

		[CrmProperty(LogicalName = "numberofemployees")]
        public virtual int? NumberOfEmployees
        {
            get { FillData(); return _numberOfEmployees; }
            set { SetValue<int?>("numberofemployees", value); _numberOfEmployees = value; }
        }
        private int? _numberOfEmployees;

		[CrmProperty(LogicalName = "originatingleadid", IsLookup = true)]
        public virtual Guid? OriginatingLeadId
        {
            get { FillData(); return _originatingLeadId; }
            set {  _originatingLeadId = value; }
        }
        private Guid? _originatingLeadId;

		[CrmProperty(LogicalName = "originatingleadidname")]
        public virtual string OriginatingLeadIdName
        {
            get { FillData(); return _originatingLeadIdName; }
            set {  _originatingLeadIdName = value; }
        }
        private string _originatingLeadIdName;

		[CrmProperty(LogicalName = "originatingleadidyominame")]
        public virtual string OriginatingLeadIdYomiName
        {
            get { FillData(); return _originatingLeadIdYomiName; }
            set {  _originatingLeadIdYomiName = value; }
        }
        private string _originatingLeadIdYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "ownershipcode")]
        public virtual Enums.OwnershipCode? OwnershipCode
        {
            get { FillData(); return _ownershipCode; }
            set { SetPicklist("ownershipcode", (int?)value); _ownershipCode = value; }
        }
        private Enums.OwnershipCode? _ownershipCode;

		[CrmProperty(LogicalName = "ownershipcodename")]
        public virtual string OwnershipCodeName
        {
            get { FillData(); return _ownershipCodeName; }
            set {  _ownershipCodeName = value; }
        }
        private string _ownershipCodeName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "parentaccountid", IsLookup = true)]
        public virtual Guid? ParentAccountId
        {
            get { FillData(); return _parentAccountId; }
            set { SetLookup("parentaccountid", "account", value); _parentAccountId = value; }
        }
        private Guid? _parentAccountId;

		[CrmProperty(LogicalName = "parentaccountidname")]
        public virtual string ParentAccountIdName
        {
            get { FillData(); return _parentAccountIdName; }
            set {  _parentAccountIdName = value; }
        }
        private string _parentAccountIdName;

		[CrmProperty(LogicalName = "parentaccountidyominame")]
        public virtual string ParentAccountIdYomiName
        {
            get { FillData(); return _parentAccountIdYomiName; }
            set {  _parentAccountIdYomiName = value; }
        }
        private string _parentAccountIdYomiName;

		[CrmProperty(LogicalName = "participatesinworkflow")]
        public virtual bool? ParticipatesInWorkflow
        {
            get { FillData(); return _participatesInWorkflow; }
            set { SetValue<bool?>("participatesinworkflow", value); _participatesInWorkflow = value; }
        }
        private bool? _participatesInWorkflow;

		[CrmProperty(LogicalName = "participatesinworkflowname")]
        public virtual string ParticipatesInWorkflowName
        {
            get { FillData(); return _participatesInWorkflowName; }
            set {  _participatesInWorkflowName = value; }
        }
        private string _participatesInWorkflowName;

		[CrmProperty(LogicalName = "paymenttermscode")]
        public virtual Enums.PaymentTermsCode? PaymentTermsCode
        {
            get { FillData(); return _paymentTermsCode; }
            set { SetPicklist("paymenttermscode", (int?)value); _paymentTermsCode = value; }
        }
        private Enums.PaymentTermsCode? _paymentTermsCode;

		[CrmProperty(LogicalName = "paymenttermscodename")]
        public virtual string PaymentTermsCodeName
        {
            get { FillData(); return _paymentTermsCodeName; }
            set {  _paymentTermsCodeName = value; }
        }
        private string _paymentTermsCodeName;

		[CrmProperty(LogicalName = "preferredappointmentdaycode")]
        public virtual Enums.PreferredAppointmentDayCode? PreferredAppointmentDayCode
        {
            get { FillData(); return _preferredAppointmentDayCode; }
            set { SetPicklist("preferredappointmentdaycode", (int?)value); _preferredAppointmentDayCode = value; }
        }
        private Enums.PreferredAppointmentDayCode? _preferredAppointmentDayCode;

		[CrmProperty(LogicalName = "preferredappointmentdaycodename")]
        public virtual string PreferredAppointmentDayCodeName
        {
            get { FillData(); return _preferredAppointmentDayCodeName; }
            set {  _preferredAppointmentDayCodeName = value; }
        }
        private string _preferredAppointmentDayCodeName;

		[CrmProperty(LogicalName = "preferredappointmenttimecode")]
        public virtual Enums.PreferredAppointmentTimeCode? PreferredAppointmentTimeCode
        {
            get { FillData(); return _preferredAppointmentTimeCode; }
            set { SetPicklist("preferredappointmenttimecode", (int?)value); _preferredAppointmentTimeCode = value; }
        }
        private Enums.PreferredAppointmentTimeCode? _preferredAppointmentTimeCode;

		[CrmProperty(LogicalName = "preferredappointmenttimecodename")]
        public virtual string PreferredAppointmentTimeCodeName
        {
            get { FillData(); return _preferredAppointmentTimeCodeName; }
            set {  _preferredAppointmentTimeCodeName = value; }
        }
        private string _preferredAppointmentTimeCodeName;

		[CrmProperty(LogicalName = "preferredcontactmethodcode")]
        public virtual Enums.PreferredContactMethodCode? PreferredContactMethodCode
        {
            get { FillData(); return _preferredContactMethodCode; }
            set { SetPicklist("preferredcontactmethodcode", (int?)value); _preferredContactMethodCode = value; }
        }
        private Enums.PreferredContactMethodCode? _preferredContactMethodCode;

		[CrmProperty(LogicalName = "preferredcontactmethodcodename")]
        public virtual string PreferredContactMethodCodeName
        {
            get { FillData(); return _preferredContactMethodCodeName; }
            set {  _preferredContactMethodCodeName = value; }
        }
        private string _preferredContactMethodCodeName;

		[CrmProperty(LogicalName = "preferredequipmentid", IsLookup = true)]
        public virtual Guid? PreferredEquipmentId
        {
            get { FillData(); return _preferredEquipmentId; }
            set { SetLookup("preferredequipmentid", "equipment", value); _preferredEquipmentId = value; }
        }
        private Guid? _preferredEquipmentId;

		[CrmProperty(LogicalName = "preferredequipmentidname")]
        public virtual string PreferredEquipmentIdName
        {
            get { FillData(); return _preferredEquipmentIdName; }
            set {  _preferredEquipmentIdName = value; }
        }
        private string _preferredEquipmentIdName;

		[CrmProperty(LogicalName = "preferredserviceid", IsLookup = true)]
        public virtual Guid? PreferredServiceId
        {
            get { FillData(); return _preferredServiceId; }
            set { SetLookup("preferredserviceid", "service", value); _preferredServiceId = value; }
        }
        private Guid? _preferredServiceId;

		[CrmProperty(LogicalName = "preferredserviceidname")]
        public virtual string PreferredServiceIdName
        {
            get { FillData(); return _preferredServiceIdName; }
            set {  _preferredServiceIdName = value; }
        }
        private string _preferredServiceIdName;

		[CrmProperty(LogicalName = "preferredsystemuserid", IsLookup = true)]
        public virtual Guid? PreferredSystemUserId
        {
            get { FillData(); return _preferredSystemUserId; }
            set { SetLookup("preferredsystemuserid", "systemuser", value); _preferredSystemUserId = value; }
        }
        private Guid? _preferredSystemUserId;

		[CrmProperty(LogicalName = "preferredsystemuseridname")]
        public virtual string PreferredSystemUserIdName
        {
            get { FillData(); return _preferredSystemUserIdName; }
            set {  _preferredSystemUserIdName = value; }
        }
        private string _preferredSystemUserIdName;

		[CrmProperty(LogicalName = "preferredsystemuseridyominame")]
        public virtual string PreferredSystemUserIdYomiName
        {
            get { FillData(); return _preferredSystemUserIdYomiName; }
            set {  _preferredSystemUserIdYomiName = value; }
        }
        private string _preferredSystemUserIdYomiName;

		[CrmProperty(LogicalName = "primarycontactid", IsLookup = true)]
        public virtual Guid? PrimaryContactId
        {
            get { FillData(); return _primaryContactId; }
            set { SetLookup("primarycontactid", "contact", value); _primaryContactId = value; }
        }
        private Guid? _primaryContactId;

		[CrmProperty(LogicalName = "primarycontactidname")]
        public virtual string PrimaryContactIdName
        {
            get { FillData(); return _primaryContactIdName; }
            set {  _primaryContactIdName = value; }
        }
        private string _primaryContactIdName;

		[CrmProperty(LogicalName = "primarycontactidyominame")]
        public virtual string PrimaryContactIdYomiName
        {
            get { FillData(); return _primaryContactIdYomiName; }
            set {  _primaryContactIdYomiName = value; }
        }
        private string _primaryContactIdYomiName;

		[CrmProperty(LogicalName = "revenue")]
        public virtual decimal? Revenue
        {
            get { FillData(); return _revenue; }
            set { SetMoney("revenue", value); _revenue = value; }
        }
        private decimal? _revenue;

		[CrmProperty(LogicalName = "sharesoutstanding")]
        public virtual int? SharesOutstanding
        {
            get { FillData(); return _sharesOutstanding; }
            set { SetValue<int?>("sharesoutstanding", value); _sharesOutstanding = value; }
        }
        private int? _sharesOutstanding;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "sic")]
        public virtual string SIC
        {
            get { FillData(); return _sIC; }
            set { SetValue<string>("sic", value); _sIC = value; }
        }
        private string _sIC;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "stockexchange")]
        public virtual string StockExchange
        {
            get { FillData(); return _stockExchange; }
            set { SetValue<string>("stockexchange", value); _stockExchange = value; }
        }
        private string _stockExchange;

		[CrmProperty(LogicalName = "telephone1")]
        public virtual string Telephone1
        {
            get { FillData(); return _telephone1; }
            set { SetValue<string>("telephone1", value); _telephone1 = value; }
        }
        private string _telephone1;

		[CrmProperty(LogicalName = "telephone2")]
        public virtual string Telephone2
        {
            get { FillData(); return _telephone2; }
            set { SetValue<string>("telephone2", value); _telephone2 = value; }
        }
        private string _telephone2;

		[CrmProperty(LogicalName = "telephone3")]
        public virtual string Telephone3
        {
            get { FillData(); return _telephone3; }
            set { SetValue<string>("telephone3", value); _telephone3 = value; }
        }
        private string _telephone3;

		[CrmProperty(LogicalName = "territorycode")]
        public virtual Enums.TerritoryCode? TerritoryCode
        {
            get { FillData(); return _territoryCode; }
            set { SetPicklist("territorycode", (int?)value); _territoryCode = value; }
        }
        private Enums.TerritoryCode? _territoryCode;

		[CrmProperty(LogicalName = "territorycodename")]
        public virtual string TerritoryCodeName
        {
            get { FillData(); return _territoryCodeName; }
            set {  _territoryCodeName = value; }
        }
        private string _territoryCodeName;

		[CrmProperty(LogicalName = "territoryid", IsLookup = true)]
        public virtual Guid? TerritoryId
        {
            get { FillData(); return _territoryId; }
            set { SetLookup("territoryid", "territory", value); _territoryId = value; }
        }
        private Guid? _territoryId;

		[CrmProperty(LogicalName = "territoryidname")]
        public virtual string TerritoryIdName
        {
            get { FillData(); return _territoryIdName; }
            set {  _territoryIdName = value; }
        }
        private string _territoryIdName;

		[CrmProperty(LogicalName = "tickersymbol")]
        public virtual string TickerSymbol
        {
            get { FillData(); return _tickerSymbol; }
            set { SetValue<string>("tickersymbol", value); _tickerSymbol = value; }
        }
        private string _tickerSymbol;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "websiteurl")]
        public virtual string WebSiteURL
        {
            get { FillData(); return _webSiteURL; }
            set { SetValue<string>("websiteurl", value); _webSiteURL = value; }
        }
        private string _webSiteURL;

		[CrmProperty(LogicalName = "yominame")]
        public virtual string YomiName
        {
            get { FillData(); return _yomiName; }
            set { SetValue<string>("yominame", value); _yomiName = value; }
        }
        private string _yomiName;

	}
	[CrmEntity(LogicalName = "activitymimeattachment", PrimaryKey = "activitymimeattachmentid")]
	public partial class ActivityMimeAttachment : CrmEntity
	{
		public class Enums
		{
			public enum ComponentState 
			{
				[CrmPicklist(DisplayName = "Published")]Published = 0,
				[CrmPicklist(DisplayName = "Unpublished", Value = 1)]Unpublished = 1,
				[CrmPicklist(DisplayName = "Deleted", Value = 2)]Deleted = 2,
				[CrmPicklist(DisplayName = "Deleted Unpublished", Value = 3)]DeletedUnpublished = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "activitymimeattachment";
			
			public const string ActivityId = "activityid";
			public const string ActivityIdName = "activityidName";
			public const string ActivityMimeAttachmentId = "activitymimeattachmentid";
			public const string ActivityMimeAttachmentIdUnique = "activitymimeattachmentidunique";
			public const string AttachmentId = "attachmentid";
			public const string AttachmentIdName = "attachmentidName";
			public const string AttachmentNumber = "attachmentnumber";
			public const string Body = "body";
			public const string ComponentState = "componentstate";
			public const string FileName = "filename";
			public const string FileSize = "filesize";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string MimeType = "mimetype";
			public const string ObjectId = "objectid";
			public const string ObjectIdName = "objectidName";
			public const string ObjectIdType = "objectidType";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string SolutionId = "solutionid";
			public const string Subject = "subject";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityMimeAttachmentId; }
		}

		[CrmProperty(LogicalName = "activityid", IsLookup = true)]
        public virtual Guid? ActivityId
        {
            get { FillData(); return _activityId; }
            set { SetLookup("activityid", "activitypointer", value); _activityId = value; }
        }
        private Guid? _activityId;

		[CrmProperty(LogicalName = "activityidName", IsEntityReferenceHelper = true)]
        public virtual string ActivityIdName
        {
            get { FillData(); return _activityIdName; }
            set {  _activityIdName = value; }
        }
        private string _activityIdName;

		[CrmProperty(LogicalName = "activitymimeattachmentid")]
        public virtual Guid ActivityMimeAttachmentId
        {
            get { FillData(); return _activityMimeAttachmentId; }
            set {  _activityMimeAttachmentId = value; }
        }
        private Guid _activityMimeAttachmentId;

		[CrmProperty(LogicalName = "activitymimeattachmentidunique")]
        public virtual Guid? ActivityMimeAttachmentIdUnique
        {
            get { FillData(); return _activityMimeAttachmentIdUnique; }
            set {  _activityMimeAttachmentIdUnique = value; }
        }
        private Guid? _activityMimeAttachmentIdUnique;

		[CrmProperty(LogicalName = "attachmentid", IsLookup = true)]
        public virtual Guid? AttachmentId
        {
            get { FillData(); return _attachmentId; }
            set { SetLookup("attachmentid", "attachment", value); _attachmentId = value; }
        }
        private Guid? _attachmentId;

		[CrmProperty(LogicalName = "attachmentidName", IsEntityReferenceHelper = true)]
        public virtual string AttachmentIdName
        {
            get { FillData(); return _attachmentIdName; }
            set {  _attachmentIdName = value; }
        }
        private string _attachmentIdName;

		[CrmProperty(LogicalName = "attachmentnumber")]
        public virtual int? AttachmentNumber
        {
            get { FillData(); return _attachmentNumber; }
            set { SetValue<int?>("attachmentnumber", value); _attachmentNumber = value; }
        }
        private int? _attachmentNumber;

		[CrmProperty(LogicalName = "body")]
        public virtual string Body
        {
            get { FillData(); return _body; }
            set { SetValue<string>("body", value); _body = value; }
        }
        private string _body;

		[CrmProperty(LogicalName = "componentstate")]
        public virtual Enums.ComponentState? ComponentState
        {
            get { FillData(); return _componentState; }
            set {  _componentState = value; }
        }
        private Enums.ComponentState? _componentState;

		[CrmProperty(LogicalName = "filename")]
        public virtual string FileName
        {
            get { FillData(); return _fileName; }
            set { SetValue<string>("filename", value); _fileName = value; }
        }
        private string _fileName;

		[CrmProperty(LogicalName = "filesize")]
        public virtual int? FileSize
        {
            get { FillData(); return _fileSize; }
            set {  _fileSize = value; }
        }
        private int? _fileSize;

		[CrmProperty(LogicalName = "ismanaged")]
        public virtual bool? IsManaged
        {
            get { FillData(); return _isManaged; }
            set {  _isManaged = value; }
        }
        private bool? _isManaged;

		[CrmProperty(LogicalName = "ismanagedname")]
        public virtual string IsManagedName
        {
            get { FillData(); return _isManagedName; }
            set {  _isManagedName = value; }
        }
        private string _isManagedName;

		[CrmProperty(LogicalName = "mimetype")]
        public virtual string MimeType
        {
            get { FillData(); return _mimeType; }
            set { SetValue<string>("mimetype", value); _mimeType = value; }
        }
        private string _mimeType;

		[CrmProperty(LogicalName = "objectid", IsLookup = true)]
        public virtual Guid? ObjectId
        {
            get { FillData(); return _objectId; }
            set { SetLookup("objectid", ObjectIdType, value); _objectId = value; }
        }
        private Guid? _objectId;

		[CrmProperty(LogicalName = "objectidName", IsEntityReferenceHelper = true)]
        public virtual string ObjectIdName
        {
            get { FillData(); return _objectIdName; }
            set {  _objectIdName = value; }
        }
        private string _objectIdName;

		[CrmProperty(LogicalName = "objectidType", IsEntityReferenceHelper = true)]
        public virtual string ObjectIdType
        {
            get { FillData(); return _objectIdType; }
            set {  _objectIdType = value; }
        }
        private string _objectIdType;

		[CrmProperty(LogicalName = "overwritetime")]
        public virtual DateTime? OverwriteTime
        {
            get { FillData(); return _overwriteTime; }
            set {  _overwriteTime = value; }
        }
        private DateTime? _overwriteTime;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "solutionid")]
        public virtual Guid? SolutionId
        {
            get { FillData(); return _solutionId; }
            set {  _solutionId = value; }
        }
        private Guid? _solutionId;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "supportingsolutionid")]
        public virtual Guid? SupportingSolutionId
        {
            get { FillData(); return _supportingSolutionId; }
            set {  _supportingSolutionId = value; }
        }
        private Guid? _supportingSolutionId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "activitypointer", PrimaryKey = "activityid")]
	public partial class ActivityPointer : CrmEntity
	{
		public class Enums
		{
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Scheduled", Value = 4)]Scheduled = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "activitypointer";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Allparties = "allparties";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LeftVoiceMail = "leftvoicemail";
			public const string LeftVoiceMailName = "leftvoicemailname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "allparties")]
        public virtual object Allparties
        {
            get { FillData(); return _allparties; }
            set {  _allparties = value; }
        }
        private object _allparties;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "ismapiprivate")]
        public virtual bool? IsMapiPrivate
        {
            get { FillData(); return _isMapiPrivate; }
            set { SetValue<bool?>("ismapiprivate", value); _isMapiPrivate = value; }
        }
        private bool? _isMapiPrivate;

		[CrmProperty(LogicalName = "ismapiprivatename")]
        public virtual string IsMapiPrivateName
        {
            get { FillData(); return _isMapiPrivateName; }
            set {  _isMapiPrivateName = value; }
        }
        private string _isMapiPrivateName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "leftvoicemail")]
        public virtual bool? LeftVoiceMail
        {
            get { FillData(); return _leftVoiceMail; }
            set { SetValue<bool?>("leftvoicemail", value); _leftVoiceMail = value; }
        }
        private bool? _leftVoiceMail;

		[CrmProperty(LogicalName = "leftvoicemailname")]
        public virtual string LeftVoiceMailName
        {
            get { FillData(); return _leftVoiceMailName; }
            set {  _leftVoiceMailName = value; }
        }
        private string _leftVoiceMailName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set { SetValue<string>("regardingobjectidname", value); _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set { SetValue<string>("regardingobjectidyominame", value); _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesid")]
        public virtual Guid? SeriesId
        {
            get { FillData(); return _seriesId; }
            set {  _seriesId = value; }
        }
        private Guid? _seriesId;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidname")]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_accountaccess", PrimaryKey = "adx_accountaccessid")]
	public partial class AdxAccountaccess : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_accountaccess";
			
			public const string AdxAccountaccessId = "adx_accountaccessid";
			public const string AdxAccountid = "adx_accountid";
			public const string AdxAccountidName = "adx_accountidname";
			public const string AdxAccountidYomiName = "adx_accountidyominame";
			public const string AdxContactid = "adx_contactid";
			public const string AdxContactidName = "adx_contactidname";
			public const string AdxContactidYomiName = "adx_contactidyominame";
			public const string AdxManagePermissions = "adx_managepermissions";
			public const string AdxManagepermissionsName = "adx_managepermissionsname";
			public const string AdxName = "adx_name";
			public const string AdxRead = "adx_read";
			public const string AdxReadName = "adx_readname";
			public const string AdxWrite = "adx_write";
			public const string AdxWriteName = "adx_writename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSACreateChannel = "msa_createchannel";
			public const string MsaCreatechannelName = "msa_createchannelname";
			public const string MSACreateManagedAccount = "msa_createmanagedaccount";
			public const string MsaCreatemanagedaccountName = "msa_createmanagedaccountname";
			public const string MSACreateOpportunity = "msa_createopportunity";
			public const string MsaCreateopportunityName = "msa_createopportunityname";
			public const string MSADeleteChannel = "msa_deletechannel";
			public const string MsaDeletechannelName = "msa_deletechannelname";
			public const string MSADeleteManagedAccount = "msa_deletemanagedaccount";
			public const string MsaDeletemanagedaccountName = "msa_deletemanagedaccountname";
			public const string MSADeleteOpportunity = "msa_deleteopportunity";
			public const string MsaDeleteopportunityName = "msa_deleteopportunityname";
			public const string MSAReadChannel = "msa_readchannel";
			public const string MsaReadchannelName = "msa_readchannelname";
			public const string MSAReadManagedAccount = "msa_readmanagedaccount";
			public const string MsaReadmanagedaccountName = "msa_readmanagedaccountname";
			public const string MSAReadOpportunity = "msa_readopportunity";
			public const string MsaReadopportunityName = "msa_readopportunityname";
			public const string MSAWriteChannel = "msa_writechannel";
			public const string MsaWritechannelName = "msa_writechannelname";
			public const string MSAWriteManagedAccount = "msa_writemanagedaccount";
			public const string MsaWritemanagedaccountName = "msa_writemanagedaccountname";
			public const string MSAWriteOpportunity = "msa_writeopportunity";
			public const string MsaWriteopportunityName = "msa_writeopportunityname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxAccountaccessId; }
		}

		[CrmProperty(LogicalName = "adx_accountaccessid")]
        public virtual Guid AdxAccountaccessId
        {
            get { FillData(); return _adxAccountaccessId; }
            set {  _adxAccountaccessId = value; }
        }
        private Guid _adxAccountaccessId;

		[CrmProperty(LogicalName = "adx_accountid", IsLookup = true)]
        public virtual Guid? AdxAccountid
        {
            get { FillData(); return _adxAccountid; }
            set { SetLookup("adx_accountid", "account", value); _adxAccountid = value; }
        }
        private Guid? _adxAccountid;

		[CrmProperty(LogicalName = "adx_accountidname")]
        public virtual string AdxAccountidName
        {
            get { FillData(); return _adxAccountidName; }
            set {  _adxAccountidName = value; }
        }
        private string _adxAccountidName;

		[CrmProperty(LogicalName = "adx_accountidyominame")]
        public virtual string AdxAccountidYomiName
        {
            get { FillData(); return _adxAccountidYomiName; }
            set {  _adxAccountidYomiName = value; }
        }
        private string _adxAccountidYomiName;

		[CrmProperty(LogicalName = "adx_contactid", IsLookup = true)]
        public virtual Guid? AdxContactid
        {
            get { FillData(); return _adxContactid; }
            set { SetLookup("adx_contactid", "contact", value); _adxContactid = value; }
        }
        private Guid? _adxContactid;

		[CrmProperty(LogicalName = "adx_contactidname")]
        public virtual string AdxContactidName
        {
            get { FillData(); return _adxContactidName; }
            set {  _adxContactidName = value; }
        }
        private string _adxContactidName;

		[CrmProperty(LogicalName = "adx_contactidyominame")]
        public virtual string AdxContactidYomiName
        {
            get { FillData(); return _adxContactidYomiName; }
            set {  _adxContactidYomiName = value; }
        }
        private string _adxContactidYomiName;

		[CrmProperty(LogicalName = "adx_managepermissions")]
        public virtual bool? AdxManagePermissions
        {
            get { FillData(); return _adxManagePermissions; }
            set { SetValue<bool?>("adx_managepermissions", value); _adxManagePermissions = value; }
        }
        private bool? _adxManagePermissions;

		[CrmProperty(LogicalName = "adx_managepermissionsname")]
        public virtual string AdxManagepermissionsName
        {
            get { FillData(); return _adxManagepermissionsName; }
            set {  _adxManagepermissionsName = value; }
        }
        private string _adxManagepermissionsName;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_read")]
        public virtual bool? AdxRead
        {
            get { FillData(); return _adxRead; }
            set { SetValue<bool?>("adx_read", value); _adxRead = value; }
        }
        private bool? _adxRead;

		[CrmProperty(LogicalName = "adx_readname")]
        public virtual string AdxReadName
        {
            get { FillData(); return _adxReadName; }
            set {  _adxReadName = value; }
        }
        private string _adxReadName;

		[CrmProperty(LogicalName = "adx_write")]
        public virtual bool? AdxWrite
        {
            get { FillData(); return _adxWrite; }
            set { SetValue<bool?>("adx_write", value); _adxWrite = value; }
        }
        private bool? _adxWrite;

		[CrmProperty(LogicalName = "adx_writename")]
        public virtual string AdxWriteName
        {
            get { FillData(); return _adxWriteName; }
            set {  _adxWriteName = value; }
        }
        private string _adxWriteName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_createchannel")]
        public virtual bool? MSACreateChannel
        {
            get { FillData(); return _mSACreateChannel; }
            set { SetValue<bool?>("msa_createchannel", value); _mSACreateChannel = value; }
        }
        private bool? _mSACreateChannel;

		[CrmProperty(LogicalName = "msa_createchannelname")]
        public virtual string MsaCreatechannelName
        {
            get { FillData(); return _msaCreatechannelName; }
            set {  _msaCreatechannelName = value; }
        }
        private string _msaCreatechannelName;

		[CrmProperty(LogicalName = "msa_createmanagedaccount")]
        public virtual bool? MSACreateManagedAccount
        {
            get { FillData(); return _mSACreateManagedAccount; }
            set { SetValue<bool?>("msa_createmanagedaccount", value); _mSACreateManagedAccount = value; }
        }
        private bool? _mSACreateManagedAccount;

		[CrmProperty(LogicalName = "msa_createmanagedaccountname")]
        public virtual string MsaCreatemanagedaccountName
        {
            get { FillData(); return _msaCreatemanagedaccountName; }
            set {  _msaCreatemanagedaccountName = value; }
        }
        private string _msaCreatemanagedaccountName;

		[CrmProperty(LogicalName = "msa_createopportunity")]
        public virtual bool? MSACreateOpportunity
        {
            get { FillData(); return _mSACreateOpportunity; }
            set { SetValue<bool?>("msa_createopportunity", value); _mSACreateOpportunity = value; }
        }
        private bool? _mSACreateOpportunity;

		[CrmProperty(LogicalName = "msa_createopportunityname")]
        public virtual string MsaCreateopportunityName
        {
            get { FillData(); return _msaCreateopportunityName; }
            set {  _msaCreateopportunityName = value; }
        }
        private string _msaCreateopportunityName;

		[CrmProperty(LogicalName = "msa_deletechannel")]
        public virtual bool? MSADeleteChannel
        {
            get { FillData(); return _mSADeleteChannel; }
            set { SetValue<bool?>("msa_deletechannel", value); _mSADeleteChannel = value; }
        }
        private bool? _mSADeleteChannel;

		[CrmProperty(LogicalName = "msa_deletechannelname")]
        public virtual string MsaDeletechannelName
        {
            get { FillData(); return _msaDeletechannelName; }
            set {  _msaDeletechannelName = value; }
        }
        private string _msaDeletechannelName;

		[CrmProperty(LogicalName = "msa_deletemanagedaccount")]
        public virtual bool? MSADeleteManagedAccount
        {
            get { FillData(); return _mSADeleteManagedAccount; }
            set { SetValue<bool?>("msa_deletemanagedaccount", value); _mSADeleteManagedAccount = value; }
        }
        private bool? _mSADeleteManagedAccount;

		[CrmProperty(LogicalName = "msa_deletemanagedaccountname")]
        public virtual string MsaDeletemanagedaccountName
        {
            get { FillData(); return _msaDeletemanagedaccountName; }
            set {  _msaDeletemanagedaccountName = value; }
        }
        private string _msaDeletemanagedaccountName;

		[CrmProperty(LogicalName = "msa_deleteopportunity")]
        public virtual bool? MSADeleteOpportunity
        {
            get { FillData(); return _mSADeleteOpportunity; }
            set { SetValue<bool?>("msa_deleteopportunity", value); _mSADeleteOpportunity = value; }
        }
        private bool? _mSADeleteOpportunity;

		[CrmProperty(LogicalName = "msa_deleteopportunityname")]
        public virtual string MsaDeleteopportunityName
        {
            get { FillData(); return _msaDeleteopportunityName; }
            set {  _msaDeleteopportunityName = value; }
        }
        private string _msaDeleteopportunityName;

		[CrmProperty(LogicalName = "msa_readchannel")]
        public virtual bool? MSAReadChannel
        {
            get { FillData(); return _mSAReadChannel; }
            set { SetValue<bool?>("msa_readchannel", value); _mSAReadChannel = value; }
        }
        private bool? _mSAReadChannel;

		[CrmProperty(LogicalName = "msa_readchannelname")]
        public virtual string MsaReadchannelName
        {
            get { FillData(); return _msaReadchannelName; }
            set {  _msaReadchannelName = value; }
        }
        private string _msaReadchannelName;

		[CrmProperty(LogicalName = "msa_readmanagedaccount")]
        public virtual bool? MSAReadManagedAccount
        {
            get { FillData(); return _mSAReadManagedAccount; }
            set { SetValue<bool?>("msa_readmanagedaccount", value); _mSAReadManagedAccount = value; }
        }
        private bool? _mSAReadManagedAccount;

		[CrmProperty(LogicalName = "msa_readmanagedaccountname")]
        public virtual string MsaReadmanagedaccountName
        {
            get { FillData(); return _msaReadmanagedaccountName; }
            set {  _msaReadmanagedaccountName = value; }
        }
        private string _msaReadmanagedaccountName;

		[CrmProperty(LogicalName = "msa_readopportunity")]
        public virtual bool? MSAReadOpportunity
        {
            get { FillData(); return _mSAReadOpportunity; }
            set { SetValue<bool?>("msa_readopportunity", value); _mSAReadOpportunity = value; }
        }
        private bool? _mSAReadOpportunity;

		[CrmProperty(LogicalName = "msa_readopportunityname")]
        public virtual string MsaReadopportunityName
        {
            get { FillData(); return _msaReadopportunityName; }
            set {  _msaReadopportunityName = value; }
        }
        private string _msaReadopportunityName;

		[CrmProperty(LogicalName = "msa_writechannel")]
        public virtual bool? MSAWriteChannel
        {
            get { FillData(); return _mSAWriteChannel; }
            set { SetValue<bool?>("msa_writechannel", value); _mSAWriteChannel = value; }
        }
        private bool? _mSAWriteChannel;

		[CrmProperty(LogicalName = "msa_writechannelname")]
        public virtual string MsaWritechannelName
        {
            get { FillData(); return _msaWritechannelName; }
            set {  _msaWritechannelName = value; }
        }
        private string _msaWritechannelName;

		[CrmProperty(LogicalName = "msa_writemanagedaccount")]
        public virtual bool? MSAWriteManagedAccount
        {
            get { FillData(); return _mSAWriteManagedAccount; }
            set { SetValue<bool?>("msa_writemanagedaccount", value); _mSAWriteManagedAccount = value; }
        }
        private bool? _mSAWriteManagedAccount;

		[CrmProperty(LogicalName = "msa_writemanagedaccountname")]
        public virtual string MsaWritemanagedaccountName
        {
            get { FillData(); return _msaWritemanagedaccountName; }
            set {  _msaWritemanagedaccountName = value; }
        }
        private string _msaWritemanagedaccountName;

		[CrmProperty(LogicalName = "msa_writeopportunity")]
        public virtual bool? MSAWriteOpportunity
        {
            get { FillData(); return _mSAWriteOpportunity; }
            set { SetValue<bool?>("msa_writeopportunity", value); _mSAWriteOpportunity = value; }
        }
        private bool? _mSAWriteOpportunity;

		[CrmProperty(LogicalName = "msa_writeopportunityname")]
        public virtual string MsaWriteopportunityName
        {
            get { FillData(); return _msaWriteopportunityName; }
            set {  _msaWriteopportunityName = value; }
        }
        private string _msaWriteopportunityName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_caseaccess", PrimaryKey = "adx_caseaccessid")]
	public partial class AdxCaseaccess : CrmEntity
	{
		public class Enums
		{
			public enum AdxScope 
			{
				[CrmPicklist(DisplayName = "Self", Value = 1)]Self = 1,
				[CrmPicklist(DisplayName = "Account", Value = 2)]Account = 2,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_caseaccess";
			
			public const string AdxAccountid = "adx_accountid";
			public const string AdxAccountidName = "adx_accountidname";
			public const string AdxAccountidYomiName = "adx_accountidyominame";
			public const string AdxCaseaccessId = "adx_caseaccessid";
			public const string AdxContactid = "adx_contactid";
			public const string AdxContactidName = "adx_contactidname";
			public const string AdxContactidYomiName = "adx_contactidyominame";
			public const string AdxCreate = "adx_create";
			public const string AdxCreateName = "adx_createname";
			public const string AdxDelete = "adx_delete";
			public const string AdxDeleteName = "adx_deletename";
			public const string AdxName = "adx_name";
			public const string AdxRead = "adx_read";
			public const string AdxReadName = "adx_readname";
			public const string AdxScope = "adx_scope";
			public const string AdxScopeName = "adx_scopename";
			public const string AdxWrite = "adx_write";
			public const string AdxWriteName = "adx_writename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxCaseaccessId; }
		}

		[CrmProperty(LogicalName = "adx_accountid", IsLookup = true)]
        public virtual Guid? AdxAccountid
        {
            get { FillData(); return _adxAccountid; }
            set { SetLookup("adx_accountid", "account", value); _adxAccountid = value; }
        }
        private Guid? _adxAccountid;

		[CrmProperty(LogicalName = "adx_accountidname")]
        public virtual string AdxAccountidName
        {
            get { FillData(); return _adxAccountidName; }
            set {  _adxAccountidName = value; }
        }
        private string _adxAccountidName;

		[CrmProperty(LogicalName = "adx_accountidyominame")]
        public virtual string AdxAccountidYomiName
        {
            get { FillData(); return _adxAccountidYomiName; }
            set {  _adxAccountidYomiName = value; }
        }
        private string _adxAccountidYomiName;

		[CrmProperty(LogicalName = "adx_caseaccessid")]
        public virtual Guid AdxCaseaccessId
        {
            get { FillData(); return _adxCaseaccessId; }
            set {  _adxCaseaccessId = value; }
        }
        private Guid _adxCaseaccessId;

		[CrmProperty(LogicalName = "adx_contactid", IsLookup = true)]
        public virtual Guid? AdxContactid
        {
            get { FillData(); return _adxContactid; }
            set { SetLookup("adx_contactid", "contact", value); _adxContactid = value; }
        }
        private Guid? _adxContactid;

		[CrmProperty(LogicalName = "adx_contactidname")]
        public virtual string AdxContactidName
        {
            get { FillData(); return _adxContactidName; }
            set {  _adxContactidName = value; }
        }
        private string _adxContactidName;

		[CrmProperty(LogicalName = "adx_contactidyominame")]
        public virtual string AdxContactidYomiName
        {
            get { FillData(); return _adxContactidYomiName; }
            set {  _adxContactidYomiName = value; }
        }
        private string _adxContactidYomiName;

		[CrmProperty(LogicalName = "adx_create")]
        public virtual bool? AdxCreate
        {
            get { FillData(); return _adxCreate; }
            set { SetValue<bool?>("adx_create", value); _adxCreate = value; }
        }
        private bool? _adxCreate;

		[CrmProperty(LogicalName = "adx_createname")]
        public virtual string AdxCreateName
        {
            get { FillData(); return _adxCreateName; }
            set {  _adxCreateName = value; }
        }
        private string _adxCreateName;

		[CrmProperty(LogicalName = "adx_delete")]
        public virtual bool? AdxDelete
        {
            get { FillData(); return _adxDelete; }
            set { SetValue<bool?>("adx_delete", value); _adxDelete = value; }
        }
        private bool? _adxDelete;

		[CrmProperty(LogicalName = "adx_deletename")]
        public virtual string AdxDeleteName
        {
            get { FillData(); return _adxDeleteName; }
            set {  _adxDeleteName = value; }
        }
        private string _adxDeleteName;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_read")]
        public virtual bool? AdxRead
        {
            get { FillData(); return _adxRead; }
            set { SetValue<bool?>("adx_read", value); _adxRead = value; }
        }
        private bool? _adxRead;

		[CrmProperty(LogicalName = "adx_readname")]
        public virtual string AdxReadName
        {
            get { FillData(); return _adxReadName; }
            set {  _adxReadName = value; }
        }
        private string _adxReadName;

		[CrmProperty(LogicalName = "adx_scope")]
        public virtual Enums.AdxScope? AdxScope
        {
            get { FillData(); return _adxScope; }
            set { SetPicklist("adx_scope", (int?)value); _adxScope = value; }
        }
        private Enums.AdxScope? _adxScope;

		[CrmProperty(LogicalName = "adx_scopename")]
        public virtual string AdxScopeName
        {
            get { FillData(); return _adxScopeName; }
            set {  _adxScopeName = value; }
        }
        private string _adxScopeName;

		[CrmProperty(LogicalName = "adx_write")]
        public virtual bool? AdxWrite
        {
            get { FillData(); return _adxWrite; }
            set { SetValue<bool?>("adx_write", value); _adxWrite = value; }
        }
        private bool? _adxWrite;

		[CrmProperty(LogicalName = "adx_writename")]
        public virtual string AdxWriteName
        {
            get { FillData(); return _adxWriteName; }
            set {  _adxWriteName = value; }
        }
        private string _adxWriteName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_contactaccess", PrimaryKey = "adx_contactaccessid")]
	public partial class AdxContactaccess : CrmEntity
	{
		public class Enums
		{
			public enum AdxScope 
			{
				[CrmPicklist(DisplayName = "Self", Value = 1)]Self = 1,
				[CrmPicklist(DisplayName = "Account", Value = 2)]Account = 2,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_contactaccess";
			
			public const string AdxAccountid = "adx_accountid";
			public const string AdxAccountidName = "adx_accountidname";
			public const string AdxAccountidYomiName = "adx_accountidyominame";
			public const string AdxContactaccessId = "adx_contactaccessid";
			public const string AdxContactid = "adx_contactid";
			public const string AdxContactidName = "adx_contactidname";
			public const string AdxContactidYomiName = "adx_contactidyominame";
			public const string AdxCreate = "adx_create";
			public const string AdxCreateName = "adx_createname";
			public const string AdxDelete = "adx_delete";
			public const string AdxDeleteName = "adx_deletename";
			public const string AdxName = "adx_name";
			public const string AdxRead = "adx_read";
			public const string AdxReadName = "adx_readname";
			public const string AdxScope = "adx_scope";
			public const string AdxScopeName = "adx_scopename";
			public const string AdxWrite = "adx_write";
			public const string AdxWriteName = "adx_writename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxContactaccessId; }
		}

		[CrmProperty(LogicalName = "adx_accountid", IsLookup = true)]
        public virtual Guid? AdxAccountid
        {
            get { FillData(); return _adxAccountid; }
            set { SetLookup("adx_accountid", "account", value); _adxAccountid = value; }
        }
        private Guid? _adxAccountid;

		[CrmProperty(LogicalName = "adx_accountidname")]
        public virtual string AdxAccountidName
        {
            get { FillData(); return _adxAccountidName; }
            set {  _adxAccountidName = value; }
        }
        private string _adxAccountidName;

		[CrmProperty(LogicalName = "adx_accountidyominame")]
        public virtual string AdxAccountidYomiName
        {
            get { FillData(); return _adxAccountidYomiName; }
            set {  _adxAccountidYomiName = value; }
        }
        private string _adxAccountidYomiName;

		[CrmProperty(LogicalName = "adx_contactaccessid")]
        public virtual Guid AdxContactaccessId
        {
            get { FillData(); return _adxContactaccessId; }
            set {  _adxContactaccessId = value; }
        }
        private Guid _adxContactaccessId;

		[CrmProperty(LogicalName = "adx_contactid", IsLookup = true)]
        public virtual Guid? AdxContactid
        {
            get { FillData(); return _adxContactid; }
            set { SetLookup("adx_contactid", "contact", value); _adxContactid = value; }
        }
        private Guid? _adxContactid;

		[CrmProperty(LogicalName = "adx_contactidname")]
        public virtual string AdxContactidName
        {
            get { FillData(); return _adxContactidName; }
            set {  _adxContactidName = value; }
        }
        private string _adxContactidName;

		[CrmProperty(LogicalName = "adx_contactidyominame")]
        public virtual string AdxContactidYomiName
        {
            get { FillData(); return _adxContactidYomiName; }
            set {  _adxContactidYomiName = value; }
        }
        private string _adxContactidYomiName;

		[CrmProperty(LogicalName = "adx_create")]
        public virtual bool? AdxCreate
        {
            get { FillData(); return _adxCreate; }
            set { SetValue<bool?>("adx_create", value); _adxCreate = value; }
        }
        private bool? _adxCreate;

		[CrmProperty(LogicalName = "adx_createname")]
        public virtual string AdxCreateName
        {
            get { FillData(); return _adxCreateName; }
            set {  _adxCreateName = value; }
        }
        private string _adxCreateName;

		[CrmProperty(LogicalName = "adx_delete")]
        public virtual bool? AdxDelete
        {
            get { FillData(); return _adxDelete; }
            set { SetValue<bool?>("adx_delete", value); _adxDelete = value; }
        }
        private bool? _adxDelete;

		[CrmProperty(LogicalName = "adx_deletename")]
        public virtual string AdxDeleteName
        {
            get { FillData(); return _adxDeleteName; }
            set {  _adxDeleteName = value; }
        }
        private string _adxDeleteName;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_read")]
        public virtual bool? AdxRead
        {
            get { FillData(); return _adxRead; }
            set { SetValue<bool?>("adx_read", value); _adxRead = value; }
        }
        private bool? _adxRead;

		[CrmProperty(LogicalName = "adx_readname")]
        public virtual string AdxReadName
        {
            get { FillData(); return _adxReadName; }
            set {  _adxReadName = value; }
        }
        private string _adxReadName;

		[CrmProperty(LogicalName = "adx_scope")]
        public virtual Enums.AdxScope? AdxScope
        {
            get { FillData(); return _adxScope; }
            set { SetPicklist("adx_scope", (int?)value); _adxScope = value; }
        }
        private Enums.AdxScope? _adxScope;

		[CrmProperty(LogicalName = "adx_scopename")]
        public virtual string AdxScopeName
        {
            get { FillData(); return _adxScopeName; }
            set {  _adxScopeName = value; }
        }
        private string _adxScopeName;

		[CrmProperty(LogicalName = "adx_write")]
        public virtual bool? AdxWrite
        {
            get { FillData(); return _adxWrite; }
            set { SetValue<bool?>("adx_write", value); _adxWrite = value; }
        }
        private bool? _adxWrite;

		[CrmProperty(LogicalName = "adx_writename")]
        public virtual string AdxWriteName
        {
            get { FillData(); return _adxWriteName; }
            set {  _adxWriteName = value; }
        }
        private string _adxWriteName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_contentsnippet", PrimaryKey = "adx_contentsnippetid")]
	public partial class AdxContentsnippet : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_contentsnippet";
			
			public const string AdxContentsnippetId = "adx_contentsnippetid";
			public const string AdxCreatedByIPAddress = "adx_createdbyipaddress";
			public const string AdxCreatedByUsername = "adx_createdbyusername";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string AdxName = "adx_name";
			public const string AdxValue = "adx_value";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxContentsnippetId; }
		}

		[CrmProperty(LogicalName = "adx_contentsnippetid")]
        public virtual Guid AdxContentsnippetId
        {
            get { FillData(); return _adxContentsnippetId; }
            set {  _adxContentsnippetId = value; }
        }
        private Guid _adxContentsnippetId;

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedByIPAddress
        {
            get { FillData(); return _adxCreatedByIPAddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedByIPAddress = value; }
        }
        private string _adxCreatedByIPAddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedByUsername
        {
            get { FillData(); return _adxCreatedByUsername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedByUsername = value; }
        }
        private string _adxCreatedByUsername;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_value")]
        public virtual string AdxValue
        {
            get { FillData(); return _adxValue; }
            set { SetValue<string>("adx_value", value); _adxValue = value; }
        }
        private string _adxValue;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_pagetemplate", PrimaryKey = "adx_pagetemplateid")]
	public partial class AdxPagetemplate : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_pagetemplate";
			
			public const string AdxIsDefault = "adx_isdefault";
			public const string AdxIsdefaultName = "adx_isdefaultname";
			public const string AdxName = "adx_name";
			public const string AdxPagetemplateId = "adx_pagetemplateid";
			public const string AdxRewriteUrl = "adx_rewriteurl";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxPagetemplateId; }
		}

		[CrmProperty(LogicalName = "adx_isdefault")]
        public virtual bool? AdxIsDefault
        {
            get { FillData(); return _adxIsDefault; }
            set { SetValue<bool?>("adx_isdefault", value); _adxIsDefault = value; }
        }
        private bool? _adxIsDefault;

		[CrmProperty(LogicalName = "adx_isdefaultname")]
        public virtual string AdxIsdefaultName
        {
            get { FillData(); return _adxIsdefaultName; }
            set {  _adxIsdefaultName = value; }
        }
        private string _adxIsdefaultName;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_pagetemplateid")]
        public virtual Guid AdxPagetemplateId
        {
            get { FillData(); return _adxPagetemplateId; }
            set {  _adxPagetemplateId = value; }
        }
        private Guid _adxPagetemplateId;

		[CrmProperty(LogicalName = "adx_rewriteurl")]
        public virtual string AdxRewriteUrl
        {
            get { FillData(); return _adxRewriteUrl; }
            set { SetValue<string>("adx_rewriteurl", value); _adxRewriteUrl = value; }
        }
        private string _adxRewriteUrl;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_sitemarker", PrimaryKey = "adx_sitemarkerid")]
	public partial class AdxSitemarker : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_sitemarker";
			
			public const string AdxName = "adx_name";
			public const string AdxPageid = "adx_pageid";
			public const string AdxPageidName = "adx_pageidname";
			public const string AdxSitemarkerId = "adx_sitemarkerid";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxSitemarkerId; }
		}

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_pageid", IsLookup = true)]
        public virtual Guid? AdxPageid
        {
            get { FillData(); return _adxPageid; }
            set { SetLookup("adx_pageid", "adx_webpage", value); _adxPageid = value; }
        }
        private Guid? _adxPageid;

		[CrmProperty(LogicalName = "adx_pageidname")]
        public virtual string AdxPageidName
        {
            get { FillData(); return _adxPageidName; }
            set {  _adxPageidName = value; }
        }
        private string _adxPageidName;

		[CrmProperty(LogicalName = "adx_sitemarkerid")]
        public virtual Guid AdxSitemarkerId
        {
            get { FillData(); return _adxSitemarkerId; }
            set {  _adxSitemarkerId = value; }
        }
        private Guid _adxSitemarkerId;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_sitesetting", PrimaryKey = "adx_sitesettingid")]
	public partial class AdxSitesetting : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_sitesetting";
			
			public const string AdxDescription = "adx_description";
			public const string AdxName = "adx_name";
			public const string AdxSitesettingId = "adx_sitesettingid";
			public const string AdxValue = "adx_value";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxSitesettingId; }
		}

		[CrmProperty(LogicalName = "adx_description")]
        public virtual string AdxDescription
        {
            get { FillData(); return _adxDescription; }
            set { SetValue<string>("adx_description", value); _adxDescription = value; }
        }
        private string _adxDescription;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_sitesettingid")]
        public virtual Guid AdxSitesettingId
        {
            get { FillData(); return _adxSitesettingId; }
            set {  _adxSitesettingId = value; }
        }
        private Guid _adxSitesettingId;

		[CrmProperty(LogicalName = "adx_value")]
        public virtual string AdxValue
        {
            get { FillData(); return _adxValue; }
            set { SetValue<string>("adx_value", value); _adxValue = value; }
        }
        private string _adxValue;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_webfile", PrimaryKey = "adx_webfileid")]
	public partial class AdxWebfile : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_webfile";
			
			public const string AdxCreatedbyipaddress = "adx_createdbyipaddress";
			public const string AdxCreatedbyusername = "adx_createdbyusername";
			public const string AdxDisplayDate = "adx_displaydate";
			public const string AdxDisplayOrder = "adx_displayorder";
			public const string AdxHiddenFromSitemap = "adx_hiddenfromsitemap";
			public const string AdxHiddenfromsitemapName = "adx_hiddenfromsitemapname";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string AdxName = "adx_name";
			public const string AdxParentpageid = "adx_parentpageid";
			public const string AdxParentpageidName = "adx_parentpageidname";
			public const string AdxPartialUrl = "adx_partialurl";
			public const string AdxSubjectid = "adx_subjectid";
			public const string AdxSubjectidName = "adx_subjectidname";
			public const string AdxSummary = "adx_summary";
			public const string AdxWebfileId = "adx_webfileid";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebfileId; }
		}

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedbyipaddress
        {
            get { FillData(); return _adxCreatedbyipaddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedbyipaddress = value; }
        }
        private string _adxCreatedbyipaddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedbyusername
        {
            get { FillData(); return _adxCreatedbyusername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedbyusername = value; }
        }
        private string _adxCreatedbyusername;

		[CrmProperty(LogicalName = "adx_displaydate")]
        public virtual DateTime? AdxDisplayDate
        {
            get { FillData(); return _adxDisplayDate; }
            set { SetValue<DateTime?>("adx_displaydate", value); _adxDisplayDate = value; }
        }
        private DateTime? _adxDisplayDate;

		[CrmProperty(LogicalName = "adx_displayorder")]
        public virtual int? AdxDisplayOrder
        {
            get { FillData(); return _adxDisplayOrder; }
            set { SetValue<int?>("adx_displayorder", value); _adxDisplayOrder = value; }
        }
        private int? _adxDisplayOrder;

		[CrmProperty(LogicalName = "adx_hiddenfromsitemap")]
        public virtual bool? AdxHiddenFromSitemap
        {
            get { FillData(); return _adxHiddenFromSitemap; }
            set { SetValue<bool?>("adx_hiddenfromsitemap", value); _adxHiddenFromSitemap = value; }
        }
        private bool? _adxHiddenFromSitemap;

		[CrmProperty(LogicalName = "adx_hiddenfromsitemapname")]
        public virtual string AdxHiddenfromsitemapName
        {
            get { FillData(); return _adxHiddenfromsitemapName; }
            set {  _adxHiddenfromsitemapName = value; }
        }
        private string _adxHiddenfromsitemapName;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_parentpageid", IsLookup = true)]
        public virtual Guid? AdxParentpageid
        {
            get { FillData(); return _adxParentpageid; }
            set { SetLookup("adx_parentpageid", "adx_webpage", value); _adxParentpageid = value; }
        }
        private Guid? _adxParentpageid;

		[CrmProperty(LogicalName = "adx_parentpageidname")]
        public virtual string AdxParentpageidName
        {
            get { FillData(); return _adxParentpageidName; }
            set {  _adxParentpageidName = value; }
        }
        private string _adxParentpageidName;

		[CrmProperty(LogicalName = "adx_partialurl")]
        public virtual string AdxPartialUrl
        {
            get { FillData(); return _adxPartialUrl; }
            set { SetValue<string>("adx_partialurl", value); _adxPartialUrl = value; }
        }
        private string _adxPartialUrl;

		[CrmProperty(LogicalName = "adx_subjectid", IsLookup = true)]
        public virtual Guid? AdxSubjectid
        {
            get { FillData(); return _adxSubjectid; }
            set { SetLookup("adx_subjectid", "subject", value); _adxSubjectid = value; }
        }
        private Guid? _adxSubjectid;

		[CrmProperty(LogicalName = "adx_subjectidname")]
        public virtual string AdxSubjectidName
        {
            get { FillData(); return _adxSubjectidName; }
            set {  _adxSubjectidName = value; }
        }
        private string _adxSubjectidName;

		[CrmProperty(LogicalName = "adx_summary")]
        public virtual string AdxSummary
        {
            get { FillData(); return _adxSummary; }
            set { SetValue<string>("adx_summary", value); _adxSummary = value; }
        }
        private string _adxSummary;

		[CrmProperty(LogicalName = "adx_webfileid")]
        public virtual Guid AdxWebfileId
        {
            get { FillData(); return _adxWebfileId; }
            set {  _adxWebfileId = value; }
        }
        private Guid _adxWebfileId;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_weblink", PrimaryKey = "adx_weblinkid")]
	public partial class AdxWeblink : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_weblink";
			
			public const string AdxCreatedbyipaddress = "adx_createdbyipaddress";
			public const string AdxCreatedbyusername = "adx_createdbyusername";
			public const string AdxDescription = "adx_description";
			public const string AdxDisplayOrder = "adx_displayorder";
			public const string AdxExternalUrl = "adx_externalurl";
			public const string AdxImageAltText = "adx_imagealttext";
			public const string AdxImageHeight = "adx_imageheight";
			public const string AdxImageUrl = "adx_imageurl";
			public const string AdxImageWidth = "adx_imagewidth";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string AdxName = "adx_name";
			public const string AdxOpenInNewWindow = "adx_openinnewwindow";
			public const string AdxOpeninnewwindowName = "adx_openinnewwindowname";
			public const string AdxPageid = "adx_pageid";
			public const string AdxPageidName = "adx_pageidname";
			public const string AdxRobotsFollowLink = "adx_robotsfollowlink";
			public const string AdxRobotsfollowlinkName = "adx_robotsfollowlinkname";
			public const string AdxWeblinkId = "adx_weblinkid";
			public const string AdxWeblinksetid = "adx_weblinksetid";
			public const string AdxWeblinksetidName = "adx_weblinksetidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWeblinkId; }
		}

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedbyipaddress
        {
            get { FillData(); return _adxCreatedbyipaddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedbyipaddress = value; }
        }
        private string _adxCreatedbyipaddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedbyusername
        {
            get { FillData(); return _adxCreatedbyusername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedbyusername = value; }
        }
        private string _adxCreatedbyusername;

		[CrmProperty(LogicalName = "adx_description")]
        public virtual string AdxDescription
        {
            get { FillData(); return _adxDescription; }
            set { SetValue<string>("adx_description", value); _adxDescription = value; }
        }
        private string _adxDescription;

		[CrmProperty(LogicalName = "adx_displayorder")]
        public virtual int? AdxDisplayOrder
        {
            get { FillData(); return _adxDisplayOrder; }
            set { SetValue<int?>("adx_displayorder", value); _adxDisplayOrder = value; }
        }
        private int? _adxDisplayOrder;

		[CrmProperty(LogicalName = "adx_externalurl")]
        public virtual string AdxExternalUrl
        {
            get { FillData(); return _adxExternalUrl; }
            set { SetValue<string>("adx_externalurl", value); _adxExternalUrl = value; }
        }
        private string _adxExternalUrl;

		[CrmProperty(LogicalName = "adx_imagealttext")]
        public virtual string AdxImageAltText
        {
            get { FillData(); return _adxImageAltText; }
            set { SetValue<string>("adx_imagealttext", value); _adxImageAltText = value; }
        }
        private string _adxImageAltText;

		[CrmProperty(LogicalName = "adx_imageheight")]
        public virtual int? AdxImageHeight
        {
            get { FillData(); return _adxImageHeight; }
            set { SetValue<int?>("adx_imageheight", value); _adxImageHeight = value; }
        }
        private int? _adxImageHeight;

		[CrmProperty(LogicalName = "adx_imageurl")]
        public virtual string AdxImageUrl
        {
            get { FillData(); return _adxImageUrl; }
            set { SetValue<string>("adx_imageurl", value); _adxImageUrl = value; }
        }
        private string _adxImageUrl;

		[CrmProperty(LogicalName = "adx_imagewidth")]
        public virtual int? AdxImageWidth
        {
            get { FillData(); return _adxImageWidth; }
            set { SetValue<int?>("adx_imagewidth", value); _adxImageWidth = value; }
        }
        private int? _adxImageWidth;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_openinnewwindow")]
        public virtual bool? AdxOpenInNewWindow
        {
            get { FillData(); return _adxOpenInNewWindow; }
            set { SetValue<bool?>("adx_openinnewwindow", value); _adxOpenInNewWindow = value; }
        }
        private bool? _adxOpenInNewWindow;

		[CrmProperty(LogicalName = "adx_openinnewwindowname")]
        public virtual string AdxOpeninnewwindowName
        {
            get { FillData(); return _adxOpeninnewwindowName; }
            set {  _adxOpeninnewwindowName = value; }
        }
        private string _adxOpeninnewwindowName;

		[CrmProperty(LogicalName = "adx_pageid", IsLookup = true)]
        public virtual Guid? AdxPageid
        {
            get { FillData(); return _adxPageid; }
            set { SetLookup("adx_pageid", "adx_webpage", value); _adxPageid = value; }
        }
        private Guid? _adxPageid;

		[CrmProperty(LogicalName = "adx_pageidname")]
        public virtual string AdxPageidName
        {
            get { FillData(); return _adxPageidName; }
            set {  _adxPageidName = value; }
        }
        private string _adxPageidName;

		[CrmProperty(LogicalName = "adx_robotsfollowlink")]
        public virtual bool? AdxRobotsFollowLink
        {
            get { FillData(); return _adxRobotsFollowLink; }
            set { SetValue<bool?>("adx_robotsfollowlink", value); _adxRobotsFollowLink = value; }
        }
        private bool? _adxRobotsFollowLink;

		[CrmProperty(LogicalName = "adx_robotsfollowlinkname")]
        public virtual string AdxRobotsfollowlinkName
        {
            get { FillData(); return _adxRobotsfollowlinkName; }
            set {  _adxRobotsfollowlinkName = value; }
        }
        private string _adxRobotsfollowlinkName;

		[CrmProperty(LogicalName = "adx_weblinkid")]
        public virtual Guid AdxWeblinkId
        {
            get { FillData(); return _adxWeblinkId; }
            set {  _adxWeblinkId = value; }
        }
        private Guid _adxWeblinkId;

		[CrmProperty(LogicalName = "adx_weblinksetid", IsLookup = true)]
        public virtual Guid? AdxWeblinksetid
        {
            get { FillData(); return _adxWeblinksetid; }
            set { SetLookup("adx_weblinksetid", "adx_weblinkset", value); _adxWeblinksetid = value; }
        }
        private Guid? _adxWeblinksetid;

		[CrmProperty(LogicalName = "adx_weblinksetidname")]
        public virtual string AdxWeblinksetidName
        {
            get { FillData(); return _adxWeblinksetidName; }
            set {  _adxWeblinksetidName = value; }
        }
        private string _adxWeblinksetidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_weblinkset", PrimaryKey = "adx_weblinksetid")]
	public partial class AdxWeblinkset : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_weblinkset";
			
			public const string AdxCopy = "adx_copy";
			public const string AdxName = "adx_name";
			public const string AdxTitle = "adx_title";
			public const string AdxWeblinksetId = "adx_weblinksetid";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWeblinksetId; }
		}

		[CrmProperty(LogicalName = "adx_copy")]
        public virtual string AdxCopy
        {
            get { FillData(); return _adxCopy; }
            set { SetValue<string>("adx_copy", value); _adxCopy = value; }
        }
        private string _adxCopy;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_title")]
        public virtual string AdxTitle
        {
            get { FillData(); return _adxTitle; }
            set { SetValue<string>("adx_title", value); _adxTitle = value; }
        }
        private string _adxTitle;

		[CrmProperty(LogicalName = "adx_weblinksetid")]
        public virtual Guid AdxWeblinksetId
        {
            get { FillData(); return _adxWeblinksetId; }
            set {  _adxWeblinksetId = value; }
        }
        private Guid _adxWeblinksetId;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_webnotificationurl", PrimaryKey = "adx_webnotificationurlid")]
	public partial class AdxWebnotificationurl : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_webnotificationurl";
			
			public const string AdxName = "adx_name";
			public const string AdxURL = "adx_url";
			public const string AdxWebnotificationurlId = "adx_webnotificationurlid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebnotificationurlId; }
		}

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_url")]
        public virtual string AdxURL
        {
            get { FillData(); return _adxURL; }
            set { SetValue<string>("adx_url", value); _adxURL = value; }
        }
        private string _adxURL;

		[CrmProperty(LogicalName = "adx_webnotificationurlid")]
        public virtual Guid AdxWebnotificationurlId
        {
            get { FillData(); return _adxWebnotificationurlId; }
            set {  _adxWebnotificationurlId = value; }
        }
        private Guid _adxWebnotificationurlId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_webpage", PrimaryKey = "adx_webpageid")]
	public partial class AdxWebpage : CrmEntity
	{
		public class Enums
		{
			public enum AdxCategory 
			{
				[CrmPicklist(DisplayName = "News", Value = 1)]News = 1,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_webpage";
			
			public const string AdxAuthorid = "adx_authorid";
			public const string AdxAuthoridName = "adx_authoridname";
			public const string AdxAuthoridYomiName = "adx_authoridyominame";
			public const string AdxCategory = "adx_category";
			public const string AdxCategoryName = "adx_categoryname";
			public const string AdxCopy = "adx_copy";
			public const string AdxCreatedbyipaddress = "adx_createdbyipaddress";
			public const string AdxCreatedbyusername = "adx_createdbyusername";
			public const string AdxDisplayDate = "adx_displaydate";
			public const string AdxDisplayOrder = "adx_displayorder";
			public const string AdxHiddenFromSitemap = "adx_hiddenfromsitemap";
			public const string AdxHiddenfromsitemapName = "adx_hiddenfromsitemapname";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string AdxName = "adx_name";
			public const string AdxPagetemplateid = "adx_pagetemplateid";
			public const string AdxPagetemplateidName = "adx_pagetemplateidname";
			public const string AdxParentpageid = "adx_parentpageid";
			public const string AdxParentpageidName = "adx_parentpageidname";
			public const string AdxPartialUrl = "adx_partialurl";
			public const string AdxSubjectid = "adx_subjectid";
			public const string AdxSubjectidName = "adx_subjectidname";
			public const string AdxSummary = "adx_summary";
			public const string AdxTitle = "adx_title";
			public const string AdxWebpageId = "adx_webpageid";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebpageId; }
		}

		[CrmProperty(LogicalName = "adx_authorid", IsLookup = true)]
        public virtual Guid? AdxAuthorid
        {
            get { FillData(); return _adxAuthorid; }
            set { SetLookup("adx_authorid", "contact", value); _adxAuthorid = value; }
        }
        private Guid? _adxAuthorid;

		[CrmProperty(LogicalName = "adx_authoridname")]
        public virtual string AdxAuthoridName
        {
            get { FillData(); return _adxAuthoridName; }
            set {  _adxAuthoridName = value; }
        }
        private string _adxAuthoridName;

		[CrmProperty(LogicalName = "adx_authoridyominame")]
        public virtual string AdxAuthoridYomiName
        {
            get { FillData(); return _adxAuthoridYomiName; }
            set {  _adxAuthoridYomiName = value; }
        }
        private string _adxAuthoridYomiName;

		[CrmProperty(LogicalName = "adx_category")]
        public virtual Enums.AdxCategory? AdxCategory
        {
            get { FillData(); return _adxCategory; }
            set { SetPicklist("adx_category", (int?)value); _adxCategory = value; }
        }
        private Enums.AdxCategory? _adxCategory;

		[CrmProperty(LogicalName = "adx_categoryname")]
        public virtual string AdxCategoryName
        {
            get { FillData(); return _adxCategoryName; }
            set {  _adxCategoryName = value; }
        }
        private string _adxCategoryName;

		[CrmProperty(LogicalName = "adx_copy")]
        public virtual string AdxCopy
        {
            get { FillData(); return _adxCopy; }
            set { SetValue<string>("adx_copy", value); _adxCopy = value; }
        }
        private string _adxCopy;

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedbyipaddress
        {
            get { FillData(); return _adxCreatedbyipaddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedbyipaddress = value; }
        }
        private string _adxCreatedbyipaddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedbyusername
        {
            get { FillData(); return _adxCreatedbyusername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedbyusername = value; }
        }
        private string _adxCreatedbyusername;

		[CrmProperty(LogicalName = "adx_displaydate")]
        public virtual DateTime? AdxDisplayDate
        {
            get { FillData(); return _adxDisplayDate; }
            set { SetValue<DateTime?>("adx_displaydate", value); _adxDisplayDate = value; }
        }
        private DateTime? _adxDisplayDate;

		[CrmProperty(LogicalName = "adx_displayorder")]
        public virtual int? AdxDisplayOrder
        {
            get { FillData(); return _adxDisplayOrder; }
            set { SetValue<int?>("adx_displayorder", value); _adxDisplayOrder = value; }
        }
        private int? _adxDisplayOrder;

		[CrmProperty(LogicalName = "adx_hiddenfromsitemap")]
        public virtual bool? AdxHiddenFromSitemap
        {
            get { FillData(); return _adxHiddenFromSitemap; }
            set { SetValue<bool?>("adx_hiddenfromsitemap", value); _adxHiddenFromSitemap = value; }
        }
        private bool? _adxHiddenFromSitemap;

		[CrmProperty(LogicalName = "adx_hiddenfromsitemapname")]
        public virtual string AdxHiddenfromsitemapName
        {
            get { FillData(); return _adxHiddenfromsitemapName; }
            set {  _adxHiddenfromsitemapName = value; }
        }
        private string _adxHiddenfromsitemapName;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_pagetemplateid", IsLookup = true)]
        public virtual Guid? AdxPagetemplateid
        {
            get { FillData(); return _adxPagetemplateid; }
            set { SetLookup("adx_pagetemplateid", "adx_pagetemplate", value); _adxPagetemplateid = value; }
        }
        private Guid? _adxPagetemplateid;

		[CrmProperty(LogicalName = "adx_pagetemplateidname")]
        public virtual string AdxPagetemplateidName
        {
            get { FillData(); return _adxPagetemplateidName; }
            set {  _adxPagetemplateidName = value; }
        }
        private string _adxPagetemplateidName;

		[CrmProperty(LogicalName = "adx_parentpageid", IsLookup = true)]
        public virtual Guid? AdxParentpageid
        {
            get { FillData(); return _adxParentpageid; }
            set { SetLookup("adx_parentpageid", "adx_webpage", value); _adxParentpageid = value; }
        }
        private Guid? _adxParentpageid;

		[CrmProperty(LogicalName = "adx_parentpageidname")]
        public virtual string AdxParentpageidName
        {
            get { FillData(); return _adxParentpageidName; }
            set {  _adxParentpageidName = value; }
        }
        private string _adxParentpageidName;

		[CrmProperty(LogicalName = "adx_partialurl")]
        public virtual string AdxPartialUrl
        {
            get { FillData(); return _adxPartialUrl; }
            set { SetValue<string>("adx_partialurl", value); _adxPartialUrl = value; }
        }
        private string _adxPartialUrl;

		[CrmProperty(LogicalName = "adx_subjectid", IsLookup = true)]
        public virtual Guid? AdxSubjectid
        {
            get { FillData(); return _adxSubjectid; }
            set { SetLookup("adx_subjectid", "subject", value); _adxSubjectid = value; }
        }
        private Guid? _adxSubjectid;

		[CrmProperty(LogicalName = "adx_subjectidname")]
        public virtual string AdxSubjectidName
        {
            get { FillData(); return _adxSubjectidName; }
            set {  _adxSubjectidName = value; }
        }
        private string _adxSubjectidName;

		[CrmProperty(LogicalName = "adx_summary")]
        public virtual string AdxSummary
        {
            get { FillData(); return _adxSummary; }
            set { SetValue<string>("adx_summary", value); _adxSummary = value; }
        }
        private string _adxSummary;

		[CrmProperty(LogicalName = "adx_title")]
        public virtual string AdxTitle
        {
            get { FillData(); return _adxTitle; }
            set { SetValue<string>("adx_title", value); _adxTitle = value; }
        }
        private string _adxTitle;

		[CrmProperty(LogicalName = "adx_webpageid")]
        public virtual Guid AdxWebpageId
        {
            get { FillData(); return _adxWebpageId; }
            set {  _adxWebpageId = value; }
        }
        private Guid _adxWebpageId;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_webrole", PrimaryKey = "adx_webroleid")]
	public partial class AdxWebrole : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_webrole";
			
			public const string AdxAuthenticatedusersrole = "adx_authenticatedusersrole";
			public const string AdxAuthenticatedusersroleName = "adx_authenticatedusersrolename";
			public const string AdxDescription = "adx_description";
			public const string AdxName = "adx_name";
			public const string AdxWebroleId = "adx_webroleid";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteidName = "adx_websiteidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebroleId; }
		}

		[CrmProperty(LogicalName = "adx_authenticatedusersrole")]
        public virtual bool? AdxAuthenticatedusersrole
        {
            get { FillData(); return _adxAuthenticatedusersrole; }
            set { SetValue<bool?>("adx_authenticatedusersrole", value); _adxAuthenticatedusersrole = value; }
        }
        private bool? _adxAuthenticatedusersrole;

		[CrmProperty(LogicalName = "adx_authenticatedusersrolename")]
        public virtual string AdxAuthenticatedusersroleName
        {
            get { FillData(); return _adxAuthenticatedusersroleName; }
            set {  _adxAuthenticatedusersroleName = value; }
        }
        private string _adxAuthenticatedusersroleName;

		[CrmProperty(LogicalName = "adx_description")]
        public virtual string AdxDescription
        {
            get { FillData(); return _adxDescription; }
            set { SetValue<string>("adx_description", value); _adxDescription = value; }
        }
        private string _adxDescription;

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_webroleid")]
        public virtual Guid AdxWebroleId
        {
            get { FillData(); return _adxWebroleId; }
            set {  _adxWebroleId = value; }
        }
        private Guid _adxWebroleId;

		[CrmProperty(LogicalName = "adx_websiteid", IsLookup = true)]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set { SetLookup("adx_websiteid", "adx_website", value); _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_websiteidname")]
        public virtual string AdxWebsiteidName
        {
            get { FillData(); return _adxWebsiteidName; }
            set {  _adxWebsiteidName = value; }
        }
        private string _adxWebsiteidName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_webrole_contact", PrimaryKey = "adx_webrole_contactid")]
	public partial class AdxWebroleContact : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "adx_webrole_contact";
			
			public const string AdxWebroleContactId = "adx_webrole_contactid";
			public const string AdxWebroleid = "adx_webroleid";
			public const string Contactid = "contactid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebroleContactId; }
		}

		[CrmProperty(LogicalName = "adx_webrole_contactid")]
        public virtual Guid AdxWebroleContactId
        {
            get { FillData(); return _adxWebroleContactId; }
            set {  _adxWebroleContactId = value; }
        }
        private Guid _adxWebroleContactId;

		[CrmProperty(LogicalName = "adx_webroleid")]
        public virtual Guid? AdxWebroleid
        {
            get { FillData(); return _adxWebroleid; }
            set {  _adxWebroleid = value; }
        }
        private Guid? _adxWebroleid;

		[CrmProperty(LogicalName = "contactid")]
        public virtual Guid? Contactid
        {
            get { FillData(); return _contactid; }
            set {  _contactid = value; }
        }
        private Guid? _contactid;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_website", PrimaryKey = "adx_websiteid")]
	public partial class AdxWebsite : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "adx_website";
			
			public const string AdxName = "adx_name";
			public const string AdxWebsiteId = "adx_websiteid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebsiteId; }
		}

		[CrmProperty(LogicalName = "adx_name")]
        public virtual string AdxName
        {
            get { FillData(); return _adxName; }
            set { SetValue<string>("adx_name", value); _adxName = value; }
        }
        private string _adxName;

		[CrmProperty(LogicalName = "adx_websiteid")]
        public virtual Guid AdxWebsiteId
        {
            get { FillData(); return _adxWebsiteId; }
            set {  _adxWebsiteId = value; }
        }
        private Guid _adxWebsiteId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_website_list", PrimaryKey = "adx_website_listid")]
	public partial class AdxWebsiteList : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "adx_website_list";
			
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteListId = "adx_website_listid";
			public const string Listid = "listid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebsiteListId; }
		}

		[CrmProperty(LogicalName = "adx_websiteid")]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set {  _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_website_listid")]
        public virtual Guid AdxWebsiteListId
        {
            get { FillData(); return _adxWebsiteListId; }
            set {  _adxWebsiteListId = value; }
        }
        private Guid _adxWebsiteListId;

		[CrmProperty(LogicalName = "listid")]
        public virtual Guid? Listid
        {
            get { FillData(); return _listid; }
            set {  _listid = value; }
        }
        private Guid? _listid;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "adx_website_sponsor", PrimaryKey = "adx_website_sponsorid")]
	public partial class AdxWebsiteSponsor : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "adx_website_sponsor";
			
			public const string Accountid = "accountid";
			public const string AdxWebsiteid = "adx_websiteid";
			public const string AdxWebsiteSponsorId = "adx_website_sponsorid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AdxWebsiteSponsorId; }
		}

		[CrmProperty(LogicalName = "accountid")]
        public virtual Guid? Accountid
        {
            get { FillData(); return _accountid; }
            set {  _accountid = value; }
        }
        private Guid? _accountid;

		[CrmProperty(LogicalName = "adx_websiteid")]
        public virtual Guid? AdxWebsiteid
        {
            get { FillData(); return _adxWebsiteid; }
            set {  _adxWebsiteid = value; }
        }
        private Guid? _adxWebsiteid;

		[CrmProperty(LogicalName = "adx_website_sponsorid")]
        public virtual Guid AdxWebsiteSponsorId
        {
            get { FillData(); return _adxWebsiteSponsorId; }
            set {  _adxWebsiteSponsorId = value; }
        }
        private Guid _adxWebsiteSponsorId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "annotation", PrimaryKey = "annotationid")]
	public partial class Annotation : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "annotation";
			
			public const string AnnotationId = "annotationid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DocumentBody = "documentbody";
			public const string FileName = "filename";
			public const string FileSize = "filesize";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsDocument = "isdocument";
			public const string IsDocumentName = "isdocumentname";
			public const string IsPrivate = "isprivate";
			public const string IsPrivateName = "isprivatename";
			public const string LangId = "langid";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NoteText = "notetext";
			public const string ObjectId = "objectid";
			public const string ObjectIdName = "objectidName";
			public const string ObjectIdType = "objectidType";
			public const string ObjectTypeCodeName = "objecttypecodename";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string StepId = "stepid";
			public const string Subject = "subject";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AnnotationId; }
		}

		[CrmProperty(LogicalName = "annotationid")]
        public virtual Guid AnnotationId
        {
            get { FillData(); return _annotationId; }
            set {  _annotationId = value; }
        }
        private Guid _annotationId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "documentbody")]
        public virtual string DocumentBody
        {
            get { FillData(); return _documentBody; }
            set { SetValue<string>("documentbody", value); _documentBody = value; }
        }
        private string _documentBody;

		[CrmProperty(LogicalName = "filename")]
        public virtual string FileName
        {
            get { FillData(); return _fileName; }
            set { SetValue<string>("filename", value); _fileName = value; }
        }
        private string _fileName;

		[CrmProperty(LogicalName = "filesize")]
        public virtual int? FileSize
        {
            get { FillData(); return _fileSize; }
            set {  _fileSize = value; }
        }
        private int? _fileSize;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isdocument")]
        public virtual bool? IsDocument
        {
            get { FillData(); return _isDocument; }
            set { SetValue<bool?>("isdocument", value); _isDocument = value; }
        }
        private bool? _isDocument;

		[CrmProperty(LogicalName = "isdocumentname")]
        public virtual string IsDocumentName
        {
            get { FillData(); return _isDocumentName; }
            set {  _isDocumentName = value; }
        }
        private string _isDocumentName;

		[CrmProperty(LogicalName = "isprivate")]
        public virtual bool? IsPrivate
        {
            get { FillData(); return _isPrivate; }
            set {  _isPrivate = value; }
        }
        private bool? _isPrivate;

		[CrmProperty(LogicalName = "isprivatename")]
        public virtual string IsPrivateName
        {
            get { FillData(); return _isPrivateName; }
            set {  _isPrivateName = value; }
        }
        private string _isPrivateName;

		[CrmProperty(LogicalName = "langid")]
        public virtual string LangId
        {
            get { FillData(); return _langId; }
            set { SetValue<string>("langid", value); _langId = value; }
        }
        private string _langId;

		[CrmProperty(LogicalName = "mimetype")]
        public virtual string MimeType
        {
            get { FillData(); return _mimeType; }
            set { SetValue<string>("mimetype", value); _mimeType = value; }
        }
        private string _mimeType;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "notetext")]
        public virtual string NoteText
        {
            get { FillData(); return _noteText; }
            set { SetValue<string>("notetext", value); _noteText = value; }
        }
        private string _noteText;

		[CrmProperty(LogicalName = "objectid", IsLookup = true)]
        public virtual Guid? ObjectId
        {
            get { FillData(); return _objectId; }
            set { SetLookup("objectid", ObjectIdType, value); _objectId = value; }
        }
        private Guid? _objectId;

		[CrmProperty(LogicalName = "objectidName", IsEntityReferenceHelper = true)]
        public virtual string ObjectIdName
        {
            get { FillData(); return _objectIdName; }
            set {  _objectIdName = value; }
        }
        private string _objectIdName;

		[CrmProperty(LogicalName = "objectidType", IsEntityReferenceHelper = true)]
        public virtual string ObjectIdType
        {
            get { FillData(); return _objectIdType; }
            set {  _objectIdType = value; }
        }
        private string _objectIdType;

		[CrmProperty(LogicalName = "objecttypecodename")]
        public virtual string ObjectTypeCodeName
        {
            get { FillData(); return _objectTypeCodeName; }
            set {  _objectTypeCodeName = value; }
        }
        private string _objectTypeCodeName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "stepid")]
        public virtual string StepId
        {
            get { FillData(); return _stepId; }
            set { SetValue<string>("stepid", value); _stepId = value; }
        }
        private string _stepId;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "appointment", PrimaryKey = "activityid")]
	public partial class Appointment : CrmEntity
	{
		public class Enums
		{
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Free", Value = 1)]Free = 1,
				[CrmPicklist(DisplayName = "Tentative", Value = 2)]Tentative = 2,
				[CrmPicklist(DisplayName = "Completed", Value = 3)]Completed = 3,
				[CrmPicklist(DisplayName = "Canceled", Value = 4)]Canceled = 4,
				[CrmPicklist(DisplayName = "Busy", Value = 5)]Busy = 5,
				[CrmPicklist(DisplayName = "Out of Office", Value = 6)]OutOfOffice = 6,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "appointment";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string GlobalObjectId = "globalobjectid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsAllDayEvent = "isalldayevent";
			public const string IsAllDayEventName = "isalldayeventname";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedFieldsMask = "modifiedfieldsmask";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillableTime = "new_billabletime";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OriginalStartDate = "originalstartdate";
			public const string OutlookOwnerApptId = "outlookownerapptid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string Requiredattendees = "requiredattendees";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "globalobjectid")]
        public virtual string GlobalObjectId
        {
            get { FillData(); return _globalObjectId; }
            set { SetValue<string>("globalobjectid", value); _globalObjectId = value; }
        }
        private string _globalObjectId;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "isalldayevent")]
        public virtual bool? IsAllDayEvent
        {
            get { FillData(); return _isAllDayEvent; }
            set { SetValue<bool?>("isalldayevent", value); _isAllDayEvent = value; }
        }
        private bool? _isAllDayEvent;

		[CrmProperty(LogicalName = "isalldayeventname")]
        public virtual string IsAllDayEventName
        {
            get { FillData(); return _isAllDayEventName; }
            set {  _isAllDayEventName = value; }
        }
        private string _isAllDayEventName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "ismapiprivate")]
        public virtual bool? IsMapiPrivate
        {
            get { FillData(); return _isMapiPrivate; }
            set { SetValue<bool?>("ismapiprivate", value); _isMapiPrivate = value; }
        }
        private bool? _isMapiPrivate;

		[CrmProperty(LogicalName = "ismapiprivatename")]
        public virtual string IsMapiPrivateName
        {
            get { FillData(); return _isMapiPrivateName; }
            set {  _isMapiPrivateName = value; }
        }
        private string _isMapiPrivateName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "location")]
        public virtual string Location
        {
            get { FillData(); return _location; }
            set { SetValue<string>("location", value); _location = value; }
        }
        private string _location;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedfieldsmask")]
        public virtual string ModifiedFieldsMask
        {
            get { FillData(); return _modifiedFieldsMask; }
            set {  _modifiedFieldsMask = value; }
        }
        private string _modifiedFieldsMask;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billabletime")]
        public virtual int? NewBillableTime
        {
            get { FillData(); return _newBillableTime; }
            set { SetValue<int?>("new_billabletime", value); _newBillableTime = value; }
        }
        private int? _newBillableTime;

		[CrmProperty(LogicalName = "optionalattendees")]
        public virtual object OptionalAttendees
        {
            get { FillData(); return _optionalAttendees; }
            set {  _optionalAttendees = value; }
        }
        private object _optionalAttendees;

		[CrmProperty(LogicalName = "organizer")]
        public virtual object Organizer
        {
            get { FillData(); return _organizer; }
            set {  _organizer = value; }
        }
        private object _organizer;

		[CrmProperty(LogicalName = "originalstartdate")]
        public virtual DateTime? OriginalStartDate
        {
            get { FillData(); return _originalStartDate; }
            set {  _originalStartDate = value; }
        }
        private DateTime? _originalStartDate;

		[CrmProperty(LogicalName = "outlookownerapptid")]
        public virtual int? OutlookOwnerApptId
        {
            get { FillData(); return _outlookOwnerApptId; }
            set { SetValue<int?>("outlookownerapptid", value); _outlookOwnerApptId = value; }
        }
        private int? _outlookOwnerApptId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "requiredattendees")]
        public virtual object Requiredattendees
        {
            get { FillData(); return _requiredattendees; }
            set {  _requiredattendees = value; }
        }
        private object _requiredattendees;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesid")]
        public virtual Guid? SeriesId
        {
            get { FillData(); return _seriesId; }
            set {  _seriesId = value; }
        }
        private Guid? _seriesId;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "attachment", PrimaryKey = "attachmentid")]
	public partial class Attachment : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "attachment";
			
			public const string AttachmentId = "attachmentid";
			public const string Body = "body";
			public const string FileName = "filename";
			public const string FileSize = "filesize";
			public const string MimeType = "mimetype";
			public const string Subject = "subject";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AttachmentId; }
		}

		[CrmProperty(LogicalName = "attachmentid")]
        public virtual Guid AttachmentId
        {
            get { FillData(); return _attachmentId; }
            set {  _attachmentId = value; }
        }
        private Guid _attachmentId;

		[CrmProperty(LogicalName = "body")]
        public virtual string Body
        {
            get { FillData(); return _body; }
            set { SetValue<string>("body", value); _body = value; }
        }
        private string _body;

		[CrmProperty(LogicalName = "filename")]
        public virtual string FileName
        {
            get { FillData(); return _fileName; }
            set { SetValue<string>("filename", value); _fileName = value; }
        }
        private string _fileName;

		[CrmProperty(LogicalName = "filesize")]
        public virtual int? FileSize
        {
            get { FillData(); return _fileSize; }
            set {  _fileSize = value; }
        }
        private int? _fileSize;

		[CrmProperty(LogicalName = "mimetype")]
        public virtual string MimeType
        {
            get { FillData(); return _mimeType; }
            set { SetValue<string>("mimetype", value); _mimeType = value; }
        }
        private string _mimeType;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "avn_avn_translationpattern_avn_translationr", PrimaryKey = "avn_avn_translationpattern_avn_translationrid")]
	public partial class AvnAvnTranslationpatternAvnTranslationr : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "avn_avn_translationpattern_avn_translationr";
			
			public const string AvnAvnTranslationpatternAvnTranslationrId = "avn_avn_translationpattern_avn_translationrid";
			public const string AvnTranslationpatternid = "avn_translationpatternid";
			public const string AvnTranslationruleid = "avn_translationruleid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AvnAvnTranslationpatternAvnTranslationrId; }
		}

		[CrmProperty(LogicalName = "avn_avn_translationpattern_avn_translationrid")]
        public virtual Guid AvnAvnTranslationpatternAvnTranslationrId
        {
            get { FillData(); return _avnAvnTranslationpatternAvnTranslationrId; }
            set {  _avnAvnTranslationpatternAvnTranslationrId = value; }
        }
        private Guid _avnAvnTranslationpatternAvnTranslationrId;

		[CrmProperty(LogicalName = "avn_translationpatternid")]
        public virtual Guid? AvnTranslationpatternid
        {
            get { FillData(); return _avnTranslationpatternid; }
            set {  _avnTranslationpatternid = value; }
        }
        private Guid? _avnTranslationpatternid;

		[CrmProperty(LogicalName = "avn_translationruleid")]
        public virtual Guid? AvnTranslationruleid
        {
            get { FillData(); return _avnTranslationruleid; }
            set {  _avnTranslationruleid = value; }
        }
        private Guid? _avnTranslationruleid;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "avn_translationpattern", PrimaryKey = "avn_translationpatternid")]
	public partial class AvnTranslationpattern : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "avn_translationpattern";
			
			public const string AvnName = "avn_name";
			public const string AvnOrder = "avn_order";
			public const string AvnPatterntoMatch = "avn_patterntomatch";
			public const string AvnTranslatedResult = "avn_translatedresult";
			public const string AvnTranslationpatternId = "avn_translationpatternid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AvnTranslationpatternId; }
		}

		[CrmProperty(LogicalName = "avn_name")]
        public virtual string AvnName
        {
            get { FillData(); return _avnName; }
            set { SetValue<string>("avn_name", value); _avnName = value; }
        }
        private string _avnName;

		[CrmProperty(LogicalName = "avn_order")]
        public virtual int? AvnOrder
        {
            get { FillData(); return _avnOrder; }
            set { SetValue<int?>("avn_order", value); _avnOrder = value; }
        }
        private int? _avnOrder;

		[CrmProperty(LogicalName = "avn_patterntomatch")]
        public virtual string AvnPatterntoMatch
        {
            get { FillData(); return _avnPatterntoMatch; }
            set { SetValue<string>("avn_patterntomatch", value); _avnPatterntoMatch = value; }
        }
        private string _avnPatterntoMatch;

		[CrmProperty(LogicalName = "avn_translatedresult")]
        public virtual string AvnTranslatedResult
        {
            get { FillData(); return _avnTranslatedResult; }
            set { SetValue<string>("avn_translatedresult", value); _avnTranslatedResult = value; }
        }
        private string _avnTranslatedResult;

		[CrmProperty(LogicalName = "avn_translationpatternid")]
        public virtual Guid AvnTranslationpatternId
        {
            get { FillData(); return _avnTranslationpatternId; }
            set {  _avnTranslationpatternId = value; }
        }
        private Guid _avnTranslationpatternId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "avn_translationresult", PrimaryKey = "avn_translationresultid")]
	public partial class AvnTranslationresult : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "avn_translationresult";
			
			public const string AvnEntity = "avn_entity";
			public const string AvnEntityField = "avn_entityfield";
			public const string AvnEntityLabel = "avn_entitylabel";
			public const string AvnName = "avn_name";
			public const string AvnPatternUsedId = "avn_patternusedid";
			public const string AvnPatternUsedIdName = "avn_patternusedidname";
			public const string AvnPostData = "avn_postdata";
			public const string AvnPreData = "avn_predata";
			public const string AvnTranslationresultId = "avn_translationresultid";
			public const string AvnTranslationResultsId = "avn_translationresultsid";
			public const string AvnTranslationResultsIdName = "avn_translationresultsidname";
			public const string AvnTranslationRuleUsedId = "avn_translationruleusedid";
			public const string AvnTranslationRuleUsedIdName = "avn_translationruleusedidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AvnTranslationresultId; }
		}

		[CrmProperty(LogicalName = "avn_entity")]
        public virtual string AvnEntity
        {
            get { FillData(); return _avnEntity; }
            set { SetValue<string>("avn_entity", value); _avnEntity = value; }
        }
        private string _avnEntity;

		[CrmProperty(LogicalName = "avn_entityfield")]
        public virtual string AvnEntityField
        {
            get { FillData(); return _avnEntityField; }
            set { SetValue<string>("avn_entityfield", value); _avnEntityField = value; }
        }
        private string _avnEntityField;

		[CrmProperty(LogicalName = "avn_entitylabel")]
        public virtual string AvnEntityLabel
        {
            get { FillData(); return _avnEntityLabel; }
            set { SetValue<string>("avn_entitylabel", value); _avnEntityLabel = value; }
        }
        private string _avnEntityLabel;

		[CrmProperty(LogicalName = "avn_name")]
        public virtual string AvnName
        {
            get { FillData(); return _avnName; }
            set { SetValue<string>("avn_name", value); _avnName = value; }
        }
        private string _avnName;

		[CrmProperty(LogicalName = "avn_patternusedid", IsLookup = true)]
        public virtual Guid? AvnPatternUsedId
        {
            get { FillData(); return _avnPatternUsedId; }
            set { SetLookup("avn_patternusedid", "avn_translationpattern", value); _avnPatternUsedId = value; }
        }
        private Guid? _avnPatternUsedId;

		[CrmProperty(LogicalName = "avn_patternusedidname")]
        public virtual string AvnPatternUsedIdName
        {
            get { FillData(); return _avnPatternUsedIdName; }
            set {  _avnPatternUsedIdName = value; }
        }
        private string _avnPatternUsedIdName;

		[CrmProperty(LogicalName = "avn_postdata")]
        public virtual string AvnPostData
        {
            get { FillData(); return _avnPostData; }
            set { SetValue<string>("avn_postdata", value); _avnPostData = value; }
        }
        private string _avnPostData;

		[CrmProperty(LogicalName = "avn_predata")]
        public virtual string AvnPreData
        {
            get { FillData(); return _avnPreData; }
            set { SetValue<string>("avn_predata", value); _avnPreData = value; }
        }
        private string _avnPreData;

		[CrmProperty(LogicalName = "avn_translationresultid")]
        public virtual Guid AvnTranslationresultId
        {
            get { FillData(); return _avnTranslationresultId; }
            set {  _avnTranslationresultId = value; }
        }
        private Guid _avnTranslationresultId;

		[CrmProperty(LogicalName = "avn_translationresultsid", IsLookup = true)]
        public virtual Guid? AvnTranslationResultsId
        {
            get { FillData(); return _avnTranslationResultsId; }
            set { SetLookup("avn_translationresultsid", "avn_translationrule", value); _avnTranslationResultsId = value; }
        }
        private Guid? _avnTranslationResultsId;

		[CrmProperty(LogicalName = "avn_translationresultsidname")]
        public virtual string AvnTranslationResultsIdName
        {
            get { FillData(); return _avnTranslationResultsIdName; }
            set {  _avnTranslationResultsIdName = value; }
        }
        private string _avnTranslationResultsIdName;

		[CrmProperty(LogicalName = "avn_translationruleusedid", IsLookup = true)]
        public virtual Guid? AvnTranslationRuleUsedId
        {
            get { FillData(); return _avnTranslationRuleUsedId; }
            set { SetLookup("avn_translationruleusedid", "avn_translationrule", value); _avnTranslationRuleUsedId = value; }
        }
        private Guid? _avnTranslationRuleUsedId;

		[CrmProperty(LogicalName = "avn_translationruleusedidname")]
        public virtual string AvnTranslationRuleUsedIdName
        {
            get { FillData(); return _avnTranslationRuleUsedIdName; }
            set {  _avnTranslationRuleUsedIdName = value; }
        }
        private string _avnTranslationRuleUsedIdName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "avn_translationrule", PrimaryKey = "avn_translationruleid")]
	public partial class AvnTranslationrule : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "avn_translationrule";
			
			public const string AvnEntity = "avn_entity";
			public const string AvnEntityField = "avn_entityfield";
			public const string AvnEntityLabel = "avn_entitylabel";
			public const string AvnEntityPrimaryKey = "avn_entityprimarykey";
			public const string AvnName = "avn_name";
			public const string AvnOrder = "avn_order";
			public const string AvnTranslationruleId = "avn_translationruleid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return AvnTranslationruleId; }
		}

		[CrmProperty(LogicalName = "avn_entity")]
        public virtual string AvnEntity
        {
            get { FillData(); return _avnEntity; }
            set { SetValue<string>("avn_entity", value); _avnEntity = value; }
        }
        private string _avnEntity;

		[CrmProperty(LogicalName = "avn_entityfield")]
        public virtual string AvnEntityField
        {
            get { FillData(); return _avnEntityField; }
            set { SetValue<string>("avn_entityfield", value); _avnEntityField = value; }
        }
        private string _avnEntityField;

		[CrmProperty(LogicalName = "avn_entitylabel")]
        public virtual string AvnEntityLabel
        {
            get { FillData(); return _avnEntityLabel; }
            set { SetValue<string>("avn_entitylabel", value); _avnEntityLabel = value; }
        }
        private string _avnEntityLabel;

		[CrmProperty(LogicalName = "avn_entityprimarykey")]
        public virtual string AvnEntityPrimaryKey
        {
            get { FillData(); return _avnEntityPrimaryKey; }
            set { SetValue<string>("avn_entityprimarykey", value); _avnEntityPrimaryKey = value; }
        }
        private string _avnEntityPrimaryKey;

		[CrmProperty(LogicalName = "avn_name")]
        public virtual string AvnName
        {
            get { FillData(); return _avnName; }
            set { SetValue<string>("avn_name", value); _avnName = value; }
        }
        private string _avnName;

		[CrmProperty(LogicalName = "avn_order")]
        public virtual int? AvnOrder
        {
            get { FillData(); return _avnOrder; }
            set { SetValue<int?>("avn_order", value); _avnOrder = value; }
        }
        private int? _avnOrder;

		[CrmProperty(LogicalName = "avn_translationruleid")]
        public virtual Guid AvnTranslationruleId
        {
            get { FillData(); return _avnTranslationruleId; }
            set {  _avnTranslationruleId = value; }
        }
        private Guid _avnTranslationruleId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "businessunit", PrimaryKey = "businessunitid")]
	public partial class BusinessUnit : CrmEntity
	{
		public class Enums
		{
			public enum Address1AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address1ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "businessunit";
			
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string BusinessUnitId = "businessunitid";
			public const string CalendarId = "calendarid";
			public const string CalendarIdName = "calendaridName";
			public const string CostCenter = "costcenter";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CreditLimit = "creditlimit";
			public const string Description = "description";
			public const string DisabledReason = "disabledreason";
			public const string DivisionName = "divisionname";
			public const string EMailAddress = "emailaddress";
			public const string ExchangeRate = "exchangerate";
			public const string FileAsName = "fileasname";
			public const string FtpSiteUrl = "ftpsiteurl";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InheritanceMask = "inheritancemask";
			public const string IsDisabled = "isdisabled";
			public const string IsDisabledName = "isdisabledname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string ParentBusinessUnitId = "parentbusinessunitid";
			public const string ParentBusinessUnitIdName = "parentbusinessunitidname";
			public const string Picture = "picture";
			public const string StockExchange = "stockexchange";
			public const string TickerSymbol = "tickersymbol";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UserGroupId = "usergroupid";
			public const string UTCOffset = "utcoffset";
			public const string VersionNumber = "versionnumber";
			public const string WebSiteUrl = "websiteurl";
			public const string WorkflowSuspended = "workflowsuspended";
			public const string WorkflowSuspendedName = "workflowsuspendedname";
		}

		public override Guid PrimaryKey
		{
			get { return BusinessUnitId; }
		}

		[CrmProperty(LogicalName = "address1_addressid")]
        public virtual Guid Address1AddressId
        {
            get { FillData(); return _address1AddressId; }
            set { SetValue<Guid?>("address1_addressid", value); _address1AddressId = value; }
        }
        private Guid _address1AddressId;

		[CrmProperty(LogicalName = "address1_addresstypecode")]
        public virtual Enums.Address1AddressTypeCode? Address1AddressTypeCode
        {
            get { FillData(); return _address1AddressTypeCode; }
            set { SetPicklist("address1_addresstypecode", (int?)value); _address1AddressTypeCode = value; }
        }
        private Enums.Address1AddressTypeCode? _address1AddressTypeCode;

		[CrmProperty(LogicalName = "address1_addresstypecodename")]
        public virtual string Address1AddressTypeCodeName
        {
            get { FillData(); return _address1AddressTypeCodeName; }
            set {  _address1AddressTypeCodeName = value; }
        }
        private string _address1AddressTypeCodeName;

		[CrmProperty(LogicalName = "address1_city")]
        public virtual string Address1City
        {
            get { FillData(); return _address1City; }
            set { SetValue<string>("address1_city", value); _address1City = value; }
        }
        private string _address1City;

		[CrmProperty(LogicalName = "address1_country")]
        public virtual string Address1Country
        {
            get { FillData(); return _address1Country; }
            set { SetValue<string>("address1_country", value); _address1Country = value; }
        }
        private string _address1Country;

		[CrmProperty(LogicalName = "address1_county")]
        public virtual string Address1County
        {
            get { FillData(); return _address1County; }
            set { SetValue<string>("address1_county", value); _address1County = value; }
        }
        private string _address1County;

		[CrmProperty(LogicalName = "address1_fax")]
        public virtual string Address1Fax
        {
            get { FillData(); return _address1Fax; }
            set { SetValue<string>("address1_fax", value); _address1Fax = value; }
        }
        private string _address1Fax;

		[CrmProperty(LogicalName = "address1_latitude")]
        public virtual double? Address1Latitude
        {
            get { FillData(); return _address1Latitude; }
            set { SetValue<double?>("address1_latitude", value); _address1Latitude = value; }
        }
        private double? _address1Latitude;

		[CrmProperty(LogicalName = "address1_line1")]
        public virtual string Address1Line1
        {
            get { FillData(); return _address1Line1; }
            set { SetValue<string>("address1_line1", value); _address1Line1 = value; }
        }
        private string _address1Line1;

		[CrmProperty(LogicalName = "address1_line2")]
        public virtual string Address1Line2
        {
            get { FillData(); return _address1Line2; }
            set { SetValue<string>("address1_line2", value); _address1Line2 = value; }
        }
        private string _address1Line2;

		[CrmProperty(LogicalName = "address1_line3")]
        public virtual string Address1Line3
        {
            get { FillData(); return _address1Line3; }
            set { SetValue<string>("address1_line3", value); _address1Line3 = value; }
        }
        private string _address1Line3;

		[CrmProperty(LogicalName = "address1_longitude")]
        public virtual double? Address1Longitude
        {
            get { FillData(); return _address1Longitude; }
            set { SetValue<double?>("address1_longitude", value); _address1Longitude = value; }
        }
        private double? _address1Longitude;

		[CrmProperty(LogicalName = "address1_name")]
        public virtual string Address1Name
        {
            get { FillData(); return _address1Name; }
            set { SetValue<string>("address1_name", value); _address1Name = value; }
        }
        private string _address1Name;

		[CrmProperty(LogicalName = "address1_postalcode")]
        public virtual string Address1PostalCode
        {
            get { FillData(); return _address1PostalCode; }
            set { SetValue<string>("address1_postalcode", value); _address1PostalCode = value; }
        }
        private string _address1PostalCode;

		[CrmProperty(LogicalName = "address1_postofficebox")]
        public virtual string Address1PostOfficeBox
        {
            get { FillData(); return _address1PostOfficeBox; }
            set { SetValue<string>("address1_postofficebox", value); _address1PostOfficeBox = value; }
        }
        private string _address1PostOfficeBox;

		[CrmProperty(LogicalName = "address1_shippingmethodcode")]
        public virtual Enums.Address1ShippingMethodCode? Address1ShippingMethodCode
        {
            get { FillData(); return _address1ShippingMethodCode; }
            set { SetPicklist("address1_shippingmethodcode", (int?)value); _address1ShippingMethodCode = value; }
        }
        private Enums.Address1ShippingMethodCode? _address1ShippingMethodCode;

		[CrmProperty(LogicalName = "address1_shippingmethodcodename")]
        public virtual string Address1ShippingMethodCodeName
        {
            get { FillData(); return _address1ShippingMethodCodeName; }
            set {  _address1ShippingMethodCodeName = value; }
        }
        private string _address1ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address1_stateorprovince")]
        public virtual string Address1StateOrProvince
        {
            get { FillData(); return _address1StateOrProvince; }
            set { SetValue<string>("address1_stateorprovince", value); _address1StateOrProvince = value; }
        }
        private string _address1StateOrProvince;

		[CrmProperty(LogicalName = "address1_telephone1")]
        public virtual string Address1Telephone1
        {
            get { FillData(); return _address1Telephone1; }
            set { SetValue<string>("address1_telephone1", value); _address1Telephone1 = value; }
        }
        private string _address1Telephone1;

		[CrmProperty(LogicalName = "address1_telephone2")]
        public virtual string Address1Telephone2
        {
            get { FillData(); return _address1Telephone2; }
            set { SetValue<string>("address1_telephone2", value); _address1Telephone2 = value; }
        }
        private string _address1Telephone2;

		[CrmProperty(LogicalName = "address1_telephone3")]
        public virtual string Address1Telephone3
        {
            get { FillData(); return _address1Telephone3; }
            set { SetValue<string>("address1_telephone3", value); _address1Telephone3 = value; }
        }
        private string _address1Telephone3;

		[CrmProperty(LogicalName = "address1_upszone")]
        public virtual string Address1UPSZone
        {
            get { FillData(); return _address1UPSZone; }
            set { SetValue<string>("address1_upszone", value); _address1UPSZone = value; }
        }
        private string _address1UPSZone;

		[CrmProperty(LogicalName = "address1_utcoffset")]
        public virtual int? Address1UTCOffset
        {
            get { FillData(); return _address1UTCOffset; }
            set { SetValue<int?>("address1_utcoffset", value); _address1UTCOffset = value; }
        }
        private int? _address1UTCOffset;

		[CrmProperty(LogicalName = "address2_addressid")]
        public virtual Guid Address2AddressId
        {
            get { FillData(); return _address2AddressId; }
            set { SetValue<Guid?>("address2_addressid", value); _address2AddressId = value; }
        }
        private Guid _address2AddressId;

		[CrmProperty(LogicalName = "address2_addresstypecode")]
        public virtual Enums.Address2AddressTypeCode? Address2AddressTypeCode
        {
            get { FillData(); return _address2AddressTypeCode; }
            set { SetPicklist("address2_addresstypecode", (int?)value); _address2AddressTypeCode = value; }
        }
        private Enums.Address2AddressTypeCode? _address2AddressTypeCode;

		[CrmProperty(LogicalName = "address2_addresstypecodename")]
        public virtual string Address2AddressTypeCodeName
        {
            get { FillData(); return _address2AddressTypeCodeName; }
            set {  _address2AddressTypeCodeName = value; }
        }
        private string _address2AddressTypeCodeName;

		[CrmProperty(LogicalName = "address2_city")]
        public virtual string Address2City
        {
            get { FillData(); return _address2City; }
            set { SetValue<string>("address2_city", value); _address2City = value; }
        }
        private string _address2City;

		[CrmProperty(LogicalName = "address2_country")]
        public virtual string Address2Country
        {
            get { FillData(); return _address2Country; }
            set { SetValue<string>("address2_country", value); _address2Country = value; }
        }
        private string _address2Country;

		[CrmProperty(LogicalName = "address2_county")]
        public virtual string Address2County
        {
            get { FillData(); return _address2County; }
            set { SetValue<string>("address2_county", value); _address2County = value; }
        }
        private string _address2County;

		[CrmProperty(LogicalName = "address2_fax")]
        public virtual string Address2Fax
        {
            get { FillData(); return _address2Fax; }
            set { SetValue<string>("address2_fax", value); _address2Fax = value; }
        }
        private string _address2Fax;

		[CrmProperty(LogicalName = "address2_latitude")]
        public virtual double? Address2Latitude
        {
            get { FillData(); return _address2Latitude; }
            set { SetValue<double?>("address2_latitude", value); _address2Latitude = value; }
        }
        private double? _address2Latitude;

		[CrmProperty(LogicalName = "address2_line1")]
        public virtual string Address2Line1
        {
            get { FillData(); return _address2Line1; }
            set { SetValue<string>("address2_line1", value); _address2Line1 = value; }
        }
        private string _address2Line1;

		[CrmProperty(LogicalName = "address2_line2")]
        public virtual string Address2Line2
        {
            get { FillData(); return _address2Line2; }
            set { SetValue<string>("address2_line2", value); _address2Line2 = value; }
        }
        private string _address2Line2;

		[CrmProperty(LogicalName = "address2_line3")]
        public virtual string Address2Line3
        {
            get { FillData(); return _address2Line3; }
            set { SetValue<string>("address2_line3", value); _address2Line3 = value; }
        }
        private string _address2Line3;

		[CrmProperty(LogicalName = "address2_longitude")]
        public virtual double? Address2Longitude
        {
            get { FillData(); return _address2Longitude; }
            set { SetValue<double?>("address2_longitude", value); _address2Longitude = value; }
        }
        private double? _address2Longitude;

		[CrmProperty(LogicalName = "address2_name")]
        public virtual string Address2Name
        {
            get { FillData(); return _address2Name; }
            set { SetValue<string>("address2_name", value); _address2Name = value; }
        }
        private string _address2Name;

		[CrmProperty(LogicalName = "address2_postalcode")]
        public virtual string Address2PostalCode
        {
            get { FillData(); return _address2PostalCode; }
            set { SetValue<string>("address2_postalcode", value); _address2PostalCode = value; }
        }
        private string _address2PostalCode;

		[CrmProperty(LogicalName = "address2_postofficebox")]
        public virtual string Address2PostOfficeBox
        {
            get { FillData(); return _address2PostOfficeBox; }
            set { SetValue<string>("address2_postofficebox", value); _address2PostOfficeBox = value; }
        }
        private string _address2PostOfficeBox;

		[CrmProperty(LogicalName = "address2_shippingmethodcode")]
        public virtual Enums.Address2ShippingMethodCode? Address2ShippingMethodCode
        {
            get { FillData(); return _address2ShippingMethodCode; }
            set { SetPicklist("address2_shippingmethodcode", (int?)value); _address2ShippingMethodCode = value; }
        }
        private Enums.Address2ShippingMethodCode? _address2ShippingMethodCode;

		[CrmProperty(LogicalName = "address2_shippingmethodcodename")]
        public virtual string Address2ShippingMethodCodeName
        {
            get { FillData(); return _address2ShippingMethodCodeName; }
            set {  _address2ShippingMethodCodeName = value; }
        }
        private string _address2ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address2_stateorprovince")]
        public virtual string Address2StateOrProvince
        {
            get { FillData(); return _address2StateOrProvince; }
            set { SetValue<string>("address2_stateorprovince", value); _address2StateOrProvince = value; }
        }
        private string _address2StateOrProvince;

		[CrmProperty(LogicalName = "address2_telephone1")]
        public virtual string Address2Telephone1
        {
            get { FillData(); return _address2Telephone1; }
            set { SetValue<string>("address2_telephone1", value); _address2Telephone1 = value; }
        }
        private string _address2Telephone1;

		[CrmProperty(LogicalName = "address2_telephone2")]
        public virtual string Address2Telephone2
        {
            get { FillData(); return _address2Telephone2; }
            set { SetValue<string>("address2_telephone2", value); _address2Telephone2 = value; }
        }
        private string _address2Telephone2;

		[CrmProperty(LogicalName = "address2_telephone3")]
        public virtual string Address2Telephone3
        {
            get { FillData(); return _address2Telephone3; }
            set { SetValue<string>("address2_telephone3", value); _address2Telephone3 = value; }
        }
        private string _address2Telephone3;

		[CrmProperty(LogicalName = "address2_upszone")]
        public virtual string Address2UPSZone
        {
            get { FillData(); return _address2UPSZone; }
            set { SetValue<string>("address2_upszone", value); _address2UPSZone = value; }
        }
        private string _address2UPSZone;

		[CrmProperty(LogicalName = "address2_utcoffset")]
        public virtual int? Address2UTCOffset
        {
            get { FillData(); return _address2UTCOffset; }
            set { SetValue<int?>("address2_utcoffset", value); _address2UTCOffset = value; }
        }
        private int? _address2UTCOffset;

		[CrmProperty(LogicalName = "businessunitid")]
        public virtual Guid BusinessUnitId
        {
            get { FillData(); return _businessUnitId; }
            set {  _businessUnitId = value; }
        }
        private Guid _businessUnitId;

		[CrmProperty(LogicalName = "calendarid", IsLookup = true)]
        public virtual Guid? CalendarId
        {
            get { FillData(); return _calendarId; }
            set { SetLookup("calendarid", "calendar", value); _calendarId = value; }
        }
        private Guid? _calendarId;

		[CrmProperty(LogicalName = "calendaridName", IsEntityReferenceHelper = true)]
        public virtual string CalendarIdName
        {
            get { FillData(); return _calendarIdName; }
            set {  _calendarIdName = value; }
        }
        private string _calendarIdName;

		[CrmProperty(LogicalName = "costcenter")]
        public virtual string CostCenter
        {
            get { FillData(); return _costCenter; }
            set { SetValue<string>("costcenter", value); _costCenter = value; }
        }
        private string _costCenter;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "creditlimit")]
        public virtual double? CreditLimit
        {
            get { FillData(); return _creditLimit; }
            set { SetValue<double?>("creditlimit", value); _creditLimit = value; }
        }
        private double? _creditLimit;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "disabledreason")]
        public virtual string DisabledReason
        {
            get { FillData(); return _disabledReason; }
            set {  _disabledReason = value; }
        }
        private string _disabledReason;

		[CrmProperty(LogicalName = "divisionname")]
        public virtual string DivisionName
        {
            get { FillData(); return _divisionName; }
            set { SetValue<string>("divisionname", value); _divisionName = value; }
        }
        private string _divisionName;

		[CrmProperty(LogicalName = "emailaddress")]
        public virtual string EMailAddress
        {
            get { FillData(); return _eMailAddress; }
            set { SetValue<string>("emailaddress", value); _eMailAddress = value; }
        }
        private string _eMailAddress;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "fileasname")]
        public virtual string FileAsName
        {
            get { FillData(); return _fileAsName; }
            set { SetValue<string>("fileasname", value); _fileAsName = value; }
        }
        private string _fileAsName;

		[CrmProperty(LogicalName = "ftpsiteurl")]
        public virtual string FtpSiteUrl
        {
            get { FillData(); return _ftpSiteUrl; }
            set { SetValue<string>("ftpsiteurl", value); _ftpSiteUrl = value; }
        }
        private string _ftpSiteUrl;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "inheritancemask")]
        public virtual int? InheritanceMask
        {
            get { FillData(); return _inheritanceMask; }
            set {  _inheritanceMask = value; }
        }
        private int? _inheritanceMask;

		[CrmProperty(LogicalName = "isdisabled")]
        public virtual bool? IsDisabled
        {
            get { FillData(); return _isDisabled; }
            set {  _isDisabled = value; }
        }
        private bool? _isDisabled;

		[CrmProperty(LogicalName = "isdisabledname")]
        public virtual string IsDisabledName
        {
            get { FillData(); return _isDisabledName; }
            set {  _isDisabledName = value; }
        }
        private string _isDisabledName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "parentbusinessunitid", IsLookup = true)]
        public virtual Guid? ParentBusinessUnitId
        {
            get { FillData(); return _parentBusinessUnitId; }
            set {  _parentBusinessUnitId = value; }
        }
        private Guid? _parentBusinessUnitId;

		[CrmProperty(LogicalName = "parentbusinessunitidname")]
        public virtual string ParentBusinessUnitIdName
        {
            get { FillData(); return _parentBusinessUnitIdName; }
            set {  _parentBusinessUnitIdName = value; }
        }
        private string _parentBusinessUnitIdName;

		[CrmProperty(LogicalName = "picture")]
        public virtual string Picture
        {
            get { FillData(); return _picture; }
            set { SetValue<string>("picture", value); _picture = value; }
        }
        private string _picture;

		[CrmProperty(LogicalName = "stockexchange")]
        public virtual string StockExchange
        {
            get { FillData(); return _stockExchange; }
            set { SetValue<string>("stockexchange", value); _stockExchange = value; }
        }
        private string _stockExchange;

		[CrmProperty(LogicalName = "tickersymbol")]
        public virtual string TickerSymbol
        {
            get { FillData(); return _tickerSymbol; }
            set { SetValue<string>("tickersymbol", value); _tickerSymbol = value; }
        }
        private string _tickerSymbol;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "usergroupid")]
        public virtual Guid? UserGroupId
        {
            get { FillData(); return _userGroupId; }
            set {  _userGroupId = value; }
        }
        private Guid? _userGroupId;

		[CrmProperty(LogicalName = "utcoffset")]
        public virtual int? UTCOffset
        {
            get { FillData(); return _uTCOffset; }
            set { SetValue<int?>("utcoffset", value); _uTCOffset = value; }
        }
        private int? _uTCOffset;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "websiteurl")]
        public virtual string WebSiteUrl
        {
            get { FillData(); return _webSiteUrl; }
            set { SetValue<string>("websiteurl", value); _webSiteUrl = value; }
        }
        private string _webSiteUrl;

		[CrmProperty(LogicalName = "workflowsuspended")]
        public virtual bool? WorkflowSuspended
        {
            get { FillData(); return _workflowSuspended; }
            set { SetValue<bool?>("workflowsuspended", value); _workflowSuspended = value; }
        }
        private bool? _workflowSuspended;

		[CrmProperty(LogicalName = "workflowsuspendedname")]
        public virtual string WorkflowSuspendedName
        {
            get { FillData(); return _workflowSuspendedName; }
            set {  _workflowSuspendedName = value; }
        }
        private string _workflowSuspendedName;

	}
	[CrmEntity(LogicalName = "campaign", PrimaryKey = "campaignid")]
	public partial class Campaign : CrmEntity
	{
		public class Enums
		{
			public enum MSAEventType 
			{
				[CrmPicklist(DisplayName = "Conference", Value = 3)]Conference = 3,
				[CrmPicklist(DisplayName = "Demonstration", Value = 5)]Demonstration = 5,
				[CrmPicklist(DisplayName = "Training", Value = 4)]Training = 4,
				[CrmPicklist(DisplayName = "Webcast", Value = 1)]Webcast = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Proposed")]Proposed = 0,
				[CrmPicklist(DisplayName = "Ready To Launch", Value = 1)]ReadyToLaunch = 1,
				[CrmPicklist(DisplayName = "Launched", Value = 2)]Launched = 2,
				[CrmPicklist(DisplayName = "Completed", Value = 3)]Completed = 3,
				[CrmPicklist(DisplayName = "Canceled", Value = 4)]Canceled = 4,
				[CrmPicklist(DisplayName = "Suspended", Value = 5)]Suspended = 5,
				[CrmPicklist(DisplayName = "Registration Open", Value = 200000)]RegistrationOpen = 200000,
				[CrmPicklist(DisplayName = "Inactive", Value = 6)]Inactive = 6,
				[CrmPicklist(DisplayName = "Waitlist Only", Value = 200001)]WaitlistOnly = 200001,
				[CrmPicklist(DisplayName = "Sold Out", Value = 200002)]SoldOut = 200002,
			}		
			public enum TypeCode 
			{
				[CrmPicklist(DisplayName = "Advertisement", Value = 1)]Advertisement = 1,
				[CrmPicklist(DisplayName = "Direct Marketing", Value = 2)]DirectMarketing = 2,
				[CrmPicklist(DisplayName = "Event", Value = 3)]__Event = 3,
				[CrmPicklist(DisplayName = "Co-branding", Value = 4)]Cobranding = 4,
				[CrmPicklist(DisplayName = "Other", Value = 5)]Other = 5,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "campaign";
			
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BudgetedCost = "budgetedcost";
			public const string CampaignId = "campaignid";
			public const string CodeName = "codename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExpectedResponse = "expectedresponse";
			public const string ExpectedRevenue = "expectedrevenue";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsTemplate = "istemplate";
			public const string IsTemplateName = "istemplatename";
			public const string Message = "message";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAAdditionalRegistrationInformation = "msa_additionalregistrationinformation";
			public const string MSACity = "msa_city";
			public const string MSACostofAdmission = "msa_costofadmission";
			public const string MSACountryRegion = "msa_countryregion";
			public const string MSAEndDateTime = "msa_enddatetime";
			public const string MSAEventBrochureURL = "msa_eventbrochureurl";
			public const string MSAEventCapacity = "msa_eventcapacity";
			public const string MSAEventContact = "msa_eventcontact";
			public const string MSAEventDetails = "msa_eventdetails";
			public const string MSAEventName = "msa_eventname";
			public const string MSAEventSponsors = "msa_eventsponsors";
			public const string MSAEventTimezone = "msa_eventtimezone";
			public const string MSAEventTopic = "msa_eventtopic";
			public const string MSAEventType = "msa_eventtype";
			public const string MsaEventtypeName = "msa_eventtypename";
			public const string MSAFeaturedEvent = "msa_featuredevent";
			public const string MsaFeaturedeventName = "msa_featuredeventname";
			public const string MSALocation = "msa_location";
			public const string MSAManageRegistrationCount = "msa_manageregistrationcount";
			public const string MsaManageregistrationcountName = "msa_manageregistrationcountname";
			public const string MSAMappingUrl = "msa_mappingurl";
			public const string MSAMaximumEventCapacity = "msa_maximumeventcapacity";
			public const string MsaPrimaryvenueid = "msa_primaryvenueid";
			public const string MsaPrimaryvenueidName = "msa_primaryvenueidname";
			public const string MSAPublishEventDetailsonWeb = "msa_publisheventdetailsonweb";
			public const string MsaPublisheventdetailsonwebName = "msa_publisheventdetailsonwebname";
			public const string MSARegistrationCount = "msa_registrationcount";
			public const string MSAStartDateTime = "msa_startdatetime";
			public const string MSAStateProvince = "msa_stateprovince";
			public const string MSAStreet1 = "msa_street1";
			public const string MSAStreet2 = "msa_street2";
			public const string MSAStreet3 = "msa_street3";
			public const string MSAWaitlistStartingPoint = "msa_waitliststartingpoint";
			public const string MSAWaitlistthisEvent = "msa_waitlistthisevent";
			public const string MsaWaitlistthiseventName = "msa_waitlistthiseventname";
			public const string MSAZipPostalCode = "msa_zippostalcode";
			public const string Name = "name";
			public const string Objective = "objective";
			public const string OtherCost = "othercost";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PriceListId = "pricelistid";
			public const string PriceListIdName = "pricelistidName";
			public const string PriceListName = "pricelistname";
			public const string PromotionCodeName = "promotioncodename";
			public const string ProposedEnd = "proposedend";
			public const string ProposedStart = "proposedstart";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalActualCost = "totalactualcost";
			public const string TotalCampaignActivityActualCost = "totalcampaignactivityactualcost";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TypeCode = "typecode";
			public const string TypeCodeName = "typecodename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return CampaignId; }
		}

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "budgetedcost")]
        public virtual decimal? BudgetedCost
        {
            get { FillData(); return _budgetedCost; }
            set { SetMoney("budgetedcost", value); _budgetedCost = value; }
        }
        private decimal? _budgetedCost;

		[CrmProperty(LogicalName = "campaignid")]
        public virtual Guid CampaignId
        {
            get { FillData(); return _campaignId; }
            set {  _campaignId = value; }
        }
        private Guid _campaignId;

		[CrmProperty(LogicalName = "codename")]
        public virtual string CodeName
        {
            get { FillData(); return _codeName; }
            set {  _codeName = value; }
        }
        private string _codeName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "expectedresponse")]
        public virtual int? ExpectedResponse
        {
            get { FillData(); return _expectedResponse; }
            set { SetValue<int?>("expectedresponse", value); _expectedResponse = value; }
        }
        private int? _expectedResponse;

		[CrmProperty(LogicalName = "expectedrevenue")]
        public virtual decimal? ExpectedRevenue
        {
            get { FillData(); return _expectedRevenue; }
            set { SetMoney("expectedrevenue", value); _expectedRevenue = value; }
        }
        private decimal? _expectedRevenue;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "istemplate")]
        public virtual bool? IsTemplate
        {
            get { FillData(); return _isTemplate; }
            set {  _isTemplate = value; }
        }
        private bool? _isTemplate;

		[CrmProperty(LogicalName = "istemplatename")]
        public virtual string IsTemplateName
        {
            get { FillData(); return _isTemplateName; }
            set {  _isTemplateName = value; }
        }
        private string _isTemplateName;

		[CrmProperty(LogicalName = "message")]
        public virtual string Message
        {
            get { FillData(); return _message; }
            set { SetValue<string>("message", value); _message = value; }
        }
        private string _message;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_additionalregistrationinformation")]
        public virtual string MSAAdditionalRegistrationInformation
        {
            get { FillData(); return _mSAAdditionalRegistrationInformation; }
            set { SetValue<string>("msa_additionalregistrationinformation", value); _mSAAdditionalRegistrationInformation = value; }
        }
        private string _mSAAdditionalRegistrationInformation;

		[CrmProperty(LogicalName = "msa_city")]
        public virtual string MSACity
        {
            get { FillData(); return _mSACity; }
            set { SetValue<string>("msa_city", value); _mSACity = value; }
        }
        private string _mSACity;

		[CrmProperty(LogicalName = "msa_costofadmission")]
        public virtual string MSACostofAdmission
        {
            get { FillData(); return _mSACostofAdmission; }
            set { SetValue<string>("msa_costofadmission", value); _mSACostofAdmission = value; }
        }
        private string _mSACostofAdmission;

		[CrmProperty(LogicalName = "msa_countryregion")]
        public virtual string MSACountryRegion
        {
            get { FillData(); return _mSACountryRegion; }
            set { SetValue<string>("msa_countryregion", value); _mSACountryRegion = value; }
        }
        private string _mSACountryRegion;

		[CrmProperty(LogicalName = "msa_enddatetime")]
        public virtual DateTime? MSAEndDateTime
        {
            get { FillData(); return _mSAEndDateTime; }
            set { SetValue<DateTime?>("msa_enddatetime", value); _mSAEndDateTime = value; }
        }
        private DateTime? _mSAEndDateTime;

		[CrmProperty(LogicalName = "msa_eventbrochureurl")]
        public virtual string MSAEventBrochureURL
        {
            get { FillData(); return _mSAEventBrochureURL; }
            set { SetValue<string>("msa_eventbrochureurl", value); _mSAEventBrochureURL = value; }
        }
        private string _mSAEventBrochureURL;

		[CrmProperty(LogicalName = "msa_eventcapacity")]
        public virtual int? MSAEventCapacity
        {
            get { FillData(); return _mSAEventCapacity; }
            set { SetValue<int?>("msa_eventcapacity", value); _mSAEventCapacity = value; }
        }
        private int? _mSAEventCapacity;

		[CrmProperty(LogicalName = "msa_eventcontact")]
        public virtual string MSAEventContact
        {
            get { FillData(); return _mSAEventContact; }
            set { SetValue<string>("msa_eventcontact", value); _mSAEventContact = value; }
        }
        private string _mSAEventContact;

		[CrmProperty(LogicalName = "msa_eventdetails")]
        public virtual string MSAEventDetails
        {
            get { FillData(); return _mSAEventDetails; }
            set { SetValue<string>("msa_eventdetails", value); _mSAEventDetails = value; }
        }
        private string _mSAEventDetails;

		[CrmProperty(LogicalName = "msa_eventname")]
        public virtual string MSAEventName
        {
            get { FillData(); return _mSAEventName; }
            set { SetValue<string>("msa_eventname", value); _mSAEventName = value; }
        }
        private string _mSAEventName;

		[CrmProperty(LogicalName = "msa_eventsponsors")]
        public virtual string MSAEventSponsors
        {
            get { FillData(); return _mSAEventSponsors; }
            set { SetValue<string>("msa_eventsponsors", value); _mSAEventSponsors = value; }
        }
        private string _mSAEventSponsors;

		[CrmProperty(LogicalName = "msa_eventtimezone")]
        public virtual int? MSAEventTimezone
        {
            get { FillData(); return _mSAEventTimezone; }
            set { SetValue<int?>("msa_eventtimezone", value); _mSAEventTimezone = value; }
        }
        private int? _mSAEventTimezone;

		[CrmProperty(LogicalName = "msa_eventtopic")]
        public virtual string MSAEventTopic
        {
            get { FillData(); return _mSAEventTopic; }
            set { SetValue<string>("msa_eventtopic", value); _mSAEventTopic = value; }
        }
        private string _mSAEventTopic;

		[CrmProperty(LogicalName = "msa_eventtype")]
        public virtual Enums.MSAEventType? MSAEventType
        {
            get { FillData(); return _mSAEventType; }
            set { SetPicklist("msa_eventtype", (int?)value); _mSAEventType = value; }
        }
        private Enums.MSAEventType? _mSAEventType;

		[CrmProperty(LogicalName = "msa_eventtypename")]
        public virtual string MsaEventtypeName
        {
            get { FillData(); return _msaEventtypeName; }
            set {  _msaEventtypeName = value; }
        }
        private string _msaEventtypeName;

		[CrmProperty(LogicalName = "msa_featuredevent")]
        public virtual bool? MSAFeaturedEvent
        {
            get { FillData(); return _mSAFeaturedEvent; }
            set { SetValue<bool?>("msa_featuredevent", value); _mSAFeaturedEvent = value; }
        }
        private bool? _mSAFeaturedEvent;

		[CrmProperty(LogicalName = "msa_featuredeventname")]
        public virtual string MsaFeaturedeventName
        {
            get { FillData(); return _msaFeaturedeventName; }
            set {  _msaFeaturedeventName = value; }
        }
        private string _msaFeaturedeventName;

		[CrmProperty(LogicalName = "msa_location")]
        public virtual string MSALocation
        {
            get { FillData(); return _mSALocation; }
            set { SetValue<string>("msa_location", value); _mSALocation = value; }
        }
        private string _mSALocation;

		[CrmProperty(LogicalName = "msa_manageregistrationcount")]
        public virtual bool? MSAManageRegistrationCount
        {
            get { FillData(); return _mSAManageRegistrationCount; }
            set { SetValue<bool?>("msa_manageregistrationcount", value); _mSAManageRegistrationCount = value; }
        }
        private bool? _mSAManageRegistrationCount;

		[CrmProperty(LogicalName = "msa_manageregistrationcountname")]
        public virtual string MsaManageregistrationcountName
        {
            get { FillData(); return _msaManageregistrationcountName; }
            set {  _msaManageregistrationcountName = value; }
        }
        private string _msaManageregistrationcountName;

		[CrmProperty(LogicalName = "msa_mappingurl")]
        public virtual string MSAMappingUrl
        {
            get { FillData(); return _mSAMappingUrl; }
            set { SetValue<string>("msa_mappingurl", value); _mSAMappingUrl = value; }
        }
        private string _mSAMappingUrl;

		[CrmProperty(LogicalName = "msa_maximumeventcapacity")]
        public virtual int? MSAMaximumEventCapacity
        {
            get { FillData(); return _mSAMaximumEventCapacity; }
            set { SetValue<int?>("msa_maximumeventcapacity", value); _mSAMaximumEventCapacity = value; }
        }
        private int? _mSAMaximumEventCapacity;

		[CrmProperty(LogicalName = "msa_primaryvenueid", IsLookup = true)]
        public virtual Guid? MsaPrimaryvenueid
        {
            get { FillData(); return _msaPrimaryvenueid; }
            set { SetLookup("msa_primaryvenueid", "msa_eventvenue", value); _msaPrimaryvenueid = value; }
        }
        private Guid? _msaPrimaryvenueid;

		[CrmProperty(LogicalName = "msa_primaryvenueidname")]
        public virtual string MsaPrimaryvenueidName
        {
            get { FillData(); return _msaPrimaryvenueidName; }
            set {  _msaPrimaryvenueidName = value; }
        }
        private string _msaPrimaryvenueidName;

		[CrmProperty(LogicalName = "msa_publisheventdetailsonweb")]
        public virtual bool? MSAPublishEventDetailsonWeb
        {
            get { FillData(); return _mSAPublishEventDetailsonWeb; }
            set { SetValue<bool?>("msa_publisheventdetailsonweb", value); _mSAPublishEventDetailsonWeb = value; }
        }
        private bool? _mSAPublishEventDetailsonWeb;

		[CrmProperty(LogicalName = "msa_publisheventdetailsonwebname")]
        public virtual string MsaPublisheventdetailsonwebName
        {
            get { FillData(); return _msaPublisheventdetailsonwebName; }
            set {  _msaPublisheventdetailsonwebName = value; }
        }
        private string _msaPublisheventdetailsonwebName;

		[CrmProperty(LogicalName = "msa_registrationcount")]
        public virtual int? MSARegistrationCount
        {
            get { FillData(); return _mSARegistrationCount; }
            set { SetValue<int?>("msa_registrationcount", value); _mSARegistrationCount = value; }
        }
        private int? _mSARegistrationCount;

		[CrmProperty(LogicalName = "msa_startdatetime")]
        public virtual DateTime? MSAStartDateTime
        {
            get { FillData(); return _mSAStartDateTime; }
            set { SetValue<DateTime?>("msa_startdatetime", value); _mSAStartDateTime = value; }
        }
        private DateTime? _mSAStartDateTime;

		[CrmProperty(LogicalName = "msa_stateprovince")]
        public virtual string MSAStateProvince
        {
            get { FillData(); return _mSAStateProvince; }
            set { SetValue<string>("msa_stateprovince", value); _mSAStateProvince = value; }
        }
        private string _mSAStateProvince;

		[CrmProperty(LogicalName = "msa_street1")]
        public virtual string MSAStreet1
        {
            get { FillData(); return _mSAStreet1; }
            set { SetValue<string>("msa_street1", value); _mSAStreet1 = value; }
        }
        private string _mSAStreet1;

		[CrmProperty(LogicalName = "msa_street2")]
        public virtual string MSAStreet2
        {
            get { FillData(); return _mSAStreet2; }
            set { SetValue<string>("msa_street2", value); _mSAStreet2 = value; }
        }
        private string _mSAStreet2;

		[CrmProperty(LogicalName = "msa_street3")]
        public virtual string MSAStreet3
        {
            get { FillData(); return _mSAStreet3; }
            set { SetValue<string>("msa_street3", value); _mSAStreet3 = value; }
        }
        private string _mSAStreet3;

		[CrmProperty(LogicalName = "msa_waitliststartingpoint")]
        public virtual int? MSAWaitlistStartingPoint
        {
            get { FillData(); return _mSAWaitlistStartingPoint; }
            set { SetValue<int?>("msa_waitliststartingpoint", value); _mSAWaitlistStartingPoint = value; }
        }
        private int? _mSAWaitlistStartingPoint;

		[CrmProperty(LogicalName = "msa_waitlistthisevent")]
        public virtual bool? MSAWaitlistthisEvent
        {
            get { FillData(); return _mSAWaitlistthisEvent; }
            set { SetValue<bool?>("msa_waitlistthisevent", value); _mSAWaitlistthisEvent = value; }
        }
        private bool? _mSAWaitlistthisEvent;

		[CrmProperty(LogicalName = "msa_waitlistthiseventname")]
        public virtual string MsaWaitlistthiseventName
        {
            get { FillData(); return _msaWaitlistthiseventName; }
            set {  _msaWaitlistthiseventName = value; }
        }
        private string _msaWaitlistthiseventName;

		[CrmProperty(LogicalName = "msa_zippostalcode")]
        public virtual string MSAZipPostalCode
        {
            get { FillData(); return _mSAZipPostalCode; }
            set { SetValue<string>("msa_zippostalcode", value); _mSAZipPostalCode = value; }
        }
        private string _mSAZipPostalCode;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "objective")]
        public virtual string Objective
        {
            get { FillData(); return _objective; }
            set { SetValue<string>("objective", value); _objective = value; }
        }
        private string _objective;

		[CrmProperty(LogicalName = "othercost")]
        public virtual decimal? OtherCost
        {
            get { FillData(); return _otherCost; }
            set { SetMoney("othercost", value); _otherCost = value; }
        }
        private decimal? _otherCost;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "pricelistid", IsLookup = true)]
        public virtual Guid? PriceListId
        {
            get { FillData(); return _priceListId; }
            set { SetLookup("pricelistid", "pricelevel", value); _priceListId = value; }
        }
        private Guid? _priceListId;

		[CrmProperty(LogicalName = "pricelistidName", IsEntityReferenceHelper = true)]
        public virtual string PriceListIdName
        {
            get { FillData(); return _priceListIdName; }
            set {  _priceListIdName = value; }
        }
        private string _priceListIdName;

		[CrmProperty(LogicalName = "pricelistname")]
        public virtual string PriceListName
        {
            get { FillData(); return _priceListName; }
            set {  _priceListName = value; }
        }
        private string _priceListName;

		[CrmProperty(LogicalName = "promotioncodename")]
        public virtual string PromotionCodeName
        {
            get { FillData(); return _promotionCodeName; }
            set { SetValue<string>("promotioncodename", value); _promotionCodeName = value; }
        }
        private string _promotionCodeName;

		[CrmProperty(LogicalName = "proposedend")]
        public virtual DateTime? ProposedEnd
        {
            get { FillData(); return _proposedEnd; }
            set { SetValue<DateTime?>("proposedend", value); _proposedEnd = value; }
        }
        private DateTime? _proposedEnd;

		[CrmProperty(LogicalName = "proposedstart")]
        public virtual DateTime? ProposedStart
        {
            get { FillData(); return _proposedStart; }
            set { SetValue<DateTime?>("proposedstart", value); _proposedStart = value; }
        }
        private DateTime? _proposedStart;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "totalactualcost")]
        public virtual decimal? TotalActualCost
        {
            get { FillData(); return _totalActualCost; }
            set {  _totalActualCost = value; }
        }
        private decimal? _totalActualCost;

		[CrmProperty(LogicalName = "totalcampaignactivityactualcost")]
        public virtual decimal? TotalCampaignActivityActualCost
        {
            get { FillData(); return _totalCampaignActivityActualCost; }
            set {  _totalCampaignActivityActualCost = value; }
        }
        private decimal? _totalCampaignActivityActualCost;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "typecode")]
        public virtual Enums.TypeCode? TypeCode
        {
            get { FillData(); return _typeCode; }
            set { SetPicklist("typecode", (int?)value); _typeCode = value; }
        }
        private Enums.TypeCode? _typeCode;

		[CrmProperty(LogicalName = "typecodename")]
        public virtual string TypeCodeName
        {
            get { FillData(); return _typeCodeName; }
            set {  _typeCodeName = value; }
        }
        private string _typeCodeName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "campaignactivity", PrimaryKey = "activityid")]
	public partial class CampaignActivity : CrmEntity
	{
		public class Enums
		{
			public enum ChannelTypeCode 
			{
				[CrmPicklist(DisplayName = "Phone", Value = 1)]Phone = 1,
				[CrmPicklist(DisplayName = "Appointment", Value = 2)]Appointment = 2,
				[CrmPicklist(DisplayName = "Letter", Value = 3)]Letter = 3,
				[CrmPicklist(DisplayName = "Letter via Mail Merge", Value = 4)]LetterViaMailMerge = 4,
				[CrmPicklist(DisplayName = "Fax", Value = 5)]Fax = 5,
				[CrmPicklist(DisplayName = "Fax via Mail Merge", Value = 6)]FaxViaMailMerge = 6,
				[CrmPicklist(DisplayName = "E-mail", Value = 7)]Email = 7,
				[CrmPicklist(DisplayName = "E-mail via Mail Merge", Value = 8)]EmailViaMailMerge = 8,
				[CrmPicklist(DisplayName = "Other", Value = 9)]Other = 9,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Closed", Value = 1)]Closed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Proposed", Value = 1)]Proposed = 1,
				[CrmPicklist(DisplayName = "In Progress")]InProgress = 0,
				[CrmPicklist(DisplayName = "Closed", Value = 2)]Closed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Pending", Value = 4)]Pending = 4,
				[CrmPicklist(DisplayName = "System Aborted", Value = 5)]SystemAborted = 5,
				[CrmPicklist(DisplayName = "Completed", Value = 6)]Completed = 6,
			}		
			public enum TypeCode 
			{
				[CrmPicklist(DisplayName = "Research", Value = 1)]Research = 1,
				[CrmPicklist(DisplayName = "Content Preparation", Value = 2)]ContentPreparation = 2,
				[CrmPicklist(DisplayName = "Target Marketing List Creation", Value = 3)]TargetMarketingListCreation = 3,
				[CrmPicklist(DisplayName = "Lead Qualification", Value = 4)]LeadQualification = 4,
				[CrmPicklist(DisplayName = "Content Distribution", Value = 5)]ContentDistribution = 5,
				[CrmPicklist(DisplayName = "Direct Initial Contact", Value = 6)]DirectInitialContact = 6,
				[CrmPicklist(DisplayName = "Direct Follow-Up Contact", Value = 7)]DirectFollowUpContact = 7,
				[CrmPicklist(DisplayName = "Reminder Distribution", Value = 8)]ReminderDistribution = 8,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "campaignactivity";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualCost = "actualcost";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BudgetedCost = "budgetedcost";
			public const string Category = "category";
			public const string ChannelTypeCode = "channeltypecode";
			public const string ChannelTypeCodeName = "channeltypecodename";
			public const string CheckForDoNotSendMMOnListMembersName = "checkfordonotsendmmonlistmembersname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DoNotSendOnOptOut = "donotsendonoptout";
			public const string ExchangeRate = "exchangerate";
			public const string ExcludeIfContactedInXDays = "excludeifcontactedinxdays";
			public const string From = "from";
			public const string IgnoreInactiveListMembers = "ignoreinactivelistmembers";
			public const string IgnoreInactiveListMembersName = "ignoreinactivelistmembersname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Partners = "partners";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string ServiceIdType = "serviceidType";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TypeCode = "typecode";
			public const string TypeCodeName = "typecodename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualcost")]
        public virtual decimal? ActualCost
        {
            get { FillData(); return _actualCost; }
            set { SetMoney("actualcost", value); _actualCost = value; }
        }
        private decimal? _actualCost;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "budgetedcost")]
        public virtual decimal? BudgetedCost
        {
            get { FillData(); return _budgetedCost; }
            set { SetMoney("budgetedcost", value); _budgetedCost = value; }
        }
        private decimal? _budgetedCost;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "channeltypecode")]
        public virtual Enums.ChannelTypeCode? ChannelTypeCode
        {
            get { FillData(); return _channelTypeCode; }
            set { SetPicklist("channeltypecode", (int?)value); _channelTypeCode = value; }
        }
        private Enums.ChannelTypeCode? _channelTypeCode;

		[CrmProperty(LogicalName = "channeltypecodename")]
        public virtual string ChannelTypeCodeName
        {
            get { FillData(); return _channelTypeCodeName; }
            set {  _channelTypeCodeName = value; }
        }
        private string _channelTypeCodeName;

		[CrmProperty(LogicalName = "checkfordonotsendmmonlistmembersname")]
        public virtual string CheckForDoNotSendMMOnListMembersName
        {
            get { FillData(); return _checkForDoNotSendMMOnListMembersName; }
            set {  _checkForDoNotSendMMOnListMembersName = value; }
        }
        private string _checkForDoNotSendMMOnListMembersName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "donotsendonoptout")]
        public virtual bool? DoNotSendOnOptOut
        {
            get { FillData(); return _doNotSendOnOptOut; }
            set { SetValue<bool?>("donotsendonoptout", value); _doNotSendOnOptOut = value; }
        }
        private bool? _doNotSendOnOptOut;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "excludeifcontactedinxdays")]
        public virtual int? ExcludeIfContactedInXDays
        {
            get { FillData(); return _excludeIfContactedInXDays; }
            set { SetValue<int?>("excludeifcontactedinxdays", value); _excludeIfContactedInXDays = value; }
        }
        private int? _excludeIfContactedInXDays;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "ignoreinactivelistmembers")]
        public virtual bool? IgnoreInactiveListMembers
        {
            get { FillData(); return _ignoreInactiveListMembers; }
            set { SetValue<bool?>("ignoreinactivelistmembers", value); _ignoreInactiveListMembers = value; }
        }
        private bool? _ignoreInactiveListMembers;

		[CrmProperty(LogicalName = "ignoreinactivelistmembersname")]
        public virtual string IgnoreInactiveListMembersName
        {
            get { FillData(); return _ignoreInactiveListMembersName; }
            set {  _ignoreInactiveListMembersName = value; }
        }
        private string _ignoreInactiveListMembersName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "partners")]
        public virtual object Partners
        {
            get { FillData(); return _partners; }
            set {  _partners = value; }
        }
        private object _partners;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set {  _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", ServiceIdType, value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "serviceidType", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdType
        {
            get { FillData(); return _serviceIdType; }
            set {  _serviceIdType = value; }
        }
        private string _serviceIdType;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "typecode")]
        public virtual Enums.TypeCode? TypeCode
        {
            get { FillData(); return _typeCode; }
            set { SetPicklist("typecode", (int?)value); _typeCode = value; }
        }
        private Enums.TypeCode? _typeCode;

		[CrmProperty(LogicalName = "typecodename")]
        public virtual string TypeCodeName
        {
            get { FillData(); return _typeCodeName; }
            set {  _typeCodeName = value; }
        }
        private string _typeCodeName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "campaignresponse", PrimaryKey = "activityid")]
	public partial class CampaignResponse : CrmEntity
	{
		public class Enums
		{
			public enum ChannelTypeCode 
			{
				[CrmPicklist(DisplayName = "Appointment", Value = 5)]Appointment = 5,
				[CrmPicklist(DisplayName = "E-mail", Value = 1)]Email = 1,
				[CrmPicklist(DisplayName = "Fax", Value = 3)]Fax = 3,
				[CrmPicklist(DisplayName = "Letter", Value = 4)]Letter = 4,
				[CrmPicklist(DisplayName = "Phone", Value = 2)]Phone = 2,
				[CrmPicklist(DisplayName = "Web", Value = 200000)]Web = 200000,
				[CrmPicklist(DisplayName = "Others", Value = 6)]Others = 6,
			}		
			public enum MSAPreferredMethodofCommunication 
			{
				[CrmPicklist(DisplayName = "Email", Value = 1)]Email = 1,
				[CrmPicklist(DisplayName = "Mail", Value = 3)]Mail = 3,
				[CrmPicklist(DisplayName = "Phone", Value = 2)]Phone = 2,
				[CrmPicklist(DisplayName = "Any", Value = 4)]Any = 4,
			}		
			public enum MSAPrefix 
			{
				[CrmPicklist(DisplayName = "Dr.", Value = 1)]Dr = 1,
				[CrmPicklist(DisplayName = "Miss", Value = 2)]Miss = 2,
				[CrmPicklist(DisplayName = "Mr.", Value = 3)]Mr = 3,
				[CrmPicklist(DisplayName = "Mrs.", Value = 4)]Mrs = 4,
				[CrmPicklist(DisplayName = "Ms.", Value = 5)]Ms = 5,
				[CrmPicklist(DisplayName = "Prof.", Value = 6)]Prof = 6,
			}		
			public enum MSAPrimaryRoleinOrganization 
			{
				[CrmPicklist(DisplayName = "Decision Maker", Value = 1)]DecisionMaker = 1,
				[CrmPicklist(DisplayName = "Evaluator/Recommender", Value = 2)]EvaluatorRecommender = 2,
				[CrmPicklist(DisplayName = "Influencer", Value = 3)]Influencer = 3,
				[CrmPicklist(DisplayName = "Other", Value = 4)]Other = 4,
			}		
			public enum MSASuffixTitle 
			{
				[CrmPicklist(DisplayName = "I", Value = 1)]I = 1,
				[CrmPicklist(DisplayName = "II", Value = 2)]II = 2,
				[CrmPicklist(DisplayName = "III", Value = 3)]III = 3,
				[CrmPicklist(DisplayName = "Jr.", Value = 4)]Jr = 4,
				[CrmPicklist(DisplayName = "Sr.", Value = 5)]Sr = 5,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum ResponseCode 
			{
				[CrmPicklist(DisplayName = "Do Not Send Marketing Materials", Value = 3)]DoNotSendMarketingMaterials = 3,
				[CrmPicklist(DisplayName = "Interested", Value = 1)]Interested = 1,
				[CrmPicklist(DisplayName = "Not Interested", Value = 2)]NotInterested = 2,
				[CrmPicklist(DisplayName = "Registered", Value = 200000)]Registered = 200000,
				[CrmPicklist(DisplayName = "Registration Cancelled", Value = 200001)]RegistrationCancelled = 200001,
				[CrmPicklist(DisplayName = "Error", Value = 4)]__Error = 4,
				[CrmPicklist(DisplayName = "Waitlist", Value = 200002)]Waitlist = 200002,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Closed", Value = 1)]Closed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Closed", Value = 2)]Closed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "campaignresponse";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string ChannelTypeCode = "channeltypecode";
			public const string ChannelTypeCodeName = "channeltypecodename";
			public const string CompanyName = "companyname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customer = "customer";
			public const string Description = "description";
			public const string EMailAddress = "emailaddress";
			public const string ExchangeRate = "exchangerate";
			public const string Fax = "fax";
			public const string FirstName = "firstname";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LastName = "lastname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAAttendedEvent = "msa_attendedevent";
			public const string MsaAttendedeventName = "msa_attendedeventname";
			public const string MSACity = "msa_city";
			public const string MSACountry = "msa_country";
			public const string MSACurrentCustomer = "msa_currentcustomer";
			public const string MsaCurrentcustomerName = "msa_currentcustomername";
			public const string MSAJobTitle = "msa_jobtitle";
			public const string MSAMiddleNameInitial = "msa_middlenameinitial";
			public const string MSAPostalCode = "msa_postalcode";
			public const string MSAPreferredMethodofCommunication = "msa_preferredmethodofcommunication";
			public const string MsaPreferredmethodofcommunicationName = "msa_preferredmethodofcommunicationname";
			public const string MSAPrefix = "msa_prefix";
			public const string MsaPrefixName = "msa_prefixname";
			public const string MSAPrimaryRoleinOrganization = "msa_primaryroleinorganization";
			public const string MsaPrimaryroleinorganizationName = "msa_primaryroleinorganizationname";
			public const string MSAState = "msa_state";
			public const string MSAStreetAddress1 = "msa_streetaddress1";
			public const string MSAStreetAddress2 = "msa_streetaddress2";
			public const string MSAStreetAddress3 = "msa_streetaddress3";
			public const string MSASuffixTitle = "msa_suffixtitle";
			public const string MsaSuffixtitleName = "msa_suffixtitlename";
			public const string OriginatingActivityId = "originatingactivityid";
			public const string OriginatingActivityIdName = "originatingactivityidName";
			public const string OriginatingActivityIdType = "originatingactivityidType";
			public const string OriginatingActivityName = "originatingactivityname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Partner = "partner";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string PromotionCodeName = "promotioncodename";
			public const string ReceivedOn = "receivedon";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ResponseCode = "responsecode";
			public const string ResponseCodeName = "responsecodename";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string ServiceIdType = "serviceidType";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string Telephone = "telephone";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string YomiCompanyName = "yomicompanyname";
			public const string YomiFirstName = "yomifirstname";
			public const string YomiLastName = "yomilastname";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "channeltypecode")]
        public virtual Enums.ChannelTypeCode? ChannelTypeCode
        {
            get { FillData(); return _channelTypeCode; }
            set { SetPicklist("channeltypecode", (int?)value); _channelTypeCode = value; }
        }
        private Enums.ChannelTypeCode? _channelTypeCode;

		[CrmProperty(LogicalName = "channeltypecodename")]
        public virtual string ChannelTypeCodeName
        {
            get { FillData(); return _channelTypeCodeName; }
            set {  _channelTypeCodeName = value; }
        }
        private string _channelTypeCodeName;

		[CrmProperty(LogicalName = "companyname")]
        public virtual string CompanyName
        {
            get { FillData(); return _companyName; }
            set { SetValue<string>("companyname", value); _companyName = value; }
        }
        private string _companyName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customer")]
        public virtual object Customer
        {
            get { FillData(); return _customer; }
            set {  _customer = value; }
        }
        private object _customer;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "emailaddress")]
        public virtual string EMailAddress
        {
            get { FillData(); return _eMailAddress; }
            set { SetValue<string>("emailaddress", value); _eMailAddress = value; }
        }
        private string _eMailAddress;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "fax")]
        public virtual string Fax
        {
            get { FillData(); return _fax; }
            set { SetValue<string>("fax", value); _fax = value; }
        }
        private string _fax;

		[CrmProperty(LogicalName = "firstname")]
        public virtual string FirstName
        {
            get { FillData(); return _firstName; }
            set { SetValue<string>("firstname", value); _firstName = value; }
        }
        private string _firstName;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "lastname")]
        public virtual string LastName
        {
            get { FillData(); return _lastName; }
            set { SetValue<string>("lastname", value); _lastName = value; }
        }
        private string _lastName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_attendedevent")]
        public virtual bool? MSAAttendedEvent
        {
            get { FillData(); return _mSAAttendedEvent; }
            set { SetValue<bool?>("msa_attendedevent", value); _mSAAttendedEvent = value; }
        }
        private bool? _mSAAttendedEvent;

		[CrmProperty(LogicalName = "msa_attendedeventname")]
        public virtual string MsaAttendedeventName
        {
            get { FillData(); return _msaAttendedeventName; }
            set {  _msaAttendedeventName = value; }
        }
        private string _msaAttendedeventName;

		[CrmProperty(LogicalName = "msa_city")]
        public virtual string MSACity
        {
            get { FillData(); return _mSACity; }
            set { SetValue<string>("msa_city", value); _mSACity = value; }
        }
        private string _mSACity;

		[CrmProperty(LogicalName = "msa_country")]
        public virtual string MSACountry
        {
            get { FillData(); return _mSACountry; }
            set { SetValue<string>("msa_country", value); _mSACountry = value; }
        }
        private string _mSACountry;

		[CrmProperty(LogicalName = "msa_currentcustomer")]
        public virtual bool? MSACurrentCustomer
        {
            get { FillData(); return _mSACurrentCustomer; }
            set { SetValue<bool?>("msa_currentcustomer", value); _mSACurrentCustomer = value; }
        }
        private bool? _mSACurrentCustomer;

		[CrmProperty(LogicalName = "msa_currentcustomername")]
        public virtual string MsaCurrentcustomerName
        {
            get { FillData(); return _msaCurrentcustomerName; }
            set {  _msaCurrentcustomerName = value; }
        }
        private string _msaCurrentcustomerName;

		[CrmProperty(LogicalName = "msa_jobtitle")]
        public virtual string MSAJobTitle
        {
            get { FillData(); return _mSAJobTitle; }
            set { SetValue<string>("msa_jobtitle", value); _mSAJobTitle = value; }
        }
        private string _mSAJobTitle;

		[CrmProperty(LogicalName = "msa_middlenameinitial")]
        public virtual string MSAMiddleNameInitial
        {
            get { FillData(); return _mSAMiddleNameInitial; }
            set { SetValue<string>("msa_middlenameinitial", value); _mSAMiddleNameInitial = value; }
        }
        private string _mSAMiddleNameInitial;

		[CrmProperty(LogicalName = "msa_postalcode")]
        public virtual string MSAPostalCode
        {
            get { FillData(); return _mSAPostalCode; }
            set { SetValue<string>("msa_postalcode", value); _mSAPostalCode = value; }
        }
        private string _mSAPostalCode;

		[CrmProperty(LogicalName = "msa_preferredmethodofcommunication")]
        public virtual Enums.MSAPreferredMethodofCommunication? MSAPreferredMethodofCommunication
        {
            get { FillData(); return _mSAPreferredMethodofCommunication; }
            set { SetPicklist("msa_preferredmethodofcommunication", (int?)value); _mSAPreferredMethodofCommunication = value; }
        }
        private Enums.MSAPreferredMethodofCommunication? _mSAPreferredMethodofCommunication;

		[CrmProperty(LogicalName = "msa_preferredmethodofcommunicationname")]
        public virtual string MsaPreferredmethodofcommunicationName
        {
            get { FillData(); return _msaPreferredmethodofcommunicationName; }
            set {  _msaPreferredmethodofcommunicationName = value; }
        }
        private string _msaPreferredmethodofcommunicationName;

		[CrmProperty(LogicalName = "msa_prefix")]
        public virtual Enums.MSAPrefix? MSAPrefix
        {
            get { FillData(); return _mSAPrefix; }
            set { SetPicklist("msa_prefix", (int?)value); _mSAPrefix = value; }
        }
        private Enums.MSAPrefix? _mSAPrefix;

		[CrmProperty(LogicalName = "msa_prefixname")]
        public virtual string MsaPrefixName
        {
            get { FillData(); return _msaPrefixName; }
            set {  _msaPrefixName = value; }
        }
        private string _msaPrefixName;

		[CrmProperty(LogicalName = "msa_primaryroleinorganization")]
        public virtual Enums.MSAPrimaryRoleinOrganization? MSAPrimaryRoleinOrganization
        {
            get { FillData(); return _mSAPrimaryRoleinOrganization; }
            set { SetPicklist("msa_primaryroleinorganization", (int?)value); _mSAPrimaryRoleinOrganization = value; }
        }
        private Enums.MSAPrimaryRoleinOrganization? _mSAPrimaryRoleinOrganization;

		[CrmProperty(LogicalName = "msa_primaryroleinorganizationname")]
        public virtual string MsaPrimaryroleinorganizationName
        {
            get { FillData(); return _msaPrimaryroleinorganizationName; }
            set {  _msaPrimaryroleinorganizationName = value; }
        }
        private string _msaPrimaryroleinorganizationName;

		[CrmProperty(LogicalName = "msa_state")]
        public virtual string MSAState
        {
            get { FillData(); return _mSAState; }
            set { SetValue<string>("msa_state", value); _mSAState = value; }
        }
        private string _mSAState;

		[CrmProperty(LogicalName = "msa_streetaddress1")]
        public virtual string MSAStreetAddress1
        {
            get { FillData(); return _mSAStreetAddress1; }
            set { SetValue<string>("msa_streetaddress1", value); _mSAStreetAddress1 = value; }
        }
        private string _mSAStreetAddress1;

		[CrmProperty(LogicalName = "msa_streetaddress2")]
        public virtual string MSAStreetAddress2
        {
            get { FillData(); return _mSAStreetAddress2; }
            set { SetValue<string>("msa_streetaddress2", value); _mSAStreetAddress2 = value; }
        }
        private string _mSAStreetAddress2;

		[CrmProperty(LogicalName = "msa_streetaddress3")]
        public virtual string MSAStreetAddress3
        {
            get { FillData(); return _mSAStreetAddress3; }
            set { SetValue<string>("msa_streetaddress3", value); _mSAStreetAddress3 = value; }
        }
        private string _mSAStreetAddress3;

		[CrmProperty(LogicalName = "msa_suffixtitle")]
        public virtual Enums.MSASuffixTitle? MSASuffixTitle
        {
            get { FillData(); return _mSASuffixTitle; }
            set { SetPicklist("msa_suffixtitle", (int?)value); _mSASuffixTitle = value; }
        }
        private Enums.MSASuffixTitle? _mSASuffixTitle;

		[CrmProperty(LogicalName = "msa_suffixtitlename")]
        public virtual string MsaSuffixtitleName
        {
            get { FillData(); return _msaSuffixtitleName; }
            set {  _msaSuffixtitleName = value; }
        }
        private string _msaSuffixtitleName;

		[CrmProperty(LogicalName = "originatingactivityid", IsLookup = true)]
        public virtual Guid? OriginatingActivityId
        {
            get { FillData(); return _originatingActivityId; }
            set { SetLookup("originatingactivityid", OriginatingActivityIdType, value); _originatingActivityId = value; }
        }
        private Guid? _originatingActivityId;

		[CrmProperty(LogicalName = "originatingactivityidName", IsEntityReferenceHelper = true)]
        public virtual string OriginatingActivityIdName
        {
            get { FillData(); return _originatingActivityIdName; }
            set {  _originatingActivityIdName = value; }
        }
        private string _originatingActivityIdName;

		[CrmProperty(LogicalName = "originatingactivityidType", IsEntityReferenceHelper = true)]
        public virtual string OriginatingActivityIdType
        {
            get { FillData(); return _originatingActivityIdType; }
            set {  _originatingActivityIdType = value; }
        }
        private string _originatingActivityIdType;

		[CrmProperty(LogicalName = "originatingactivityname")]
        public virtual string OriginatingActivityName
        {
            get { FillData(); return _originatingActivityName; }
            set {  _originatingActivityName = value; }
        }
        private string _originatingActivityName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "partner")]
        public virtual object Partner
        {
            get { FillData(); return _partner; }
            set {  _partner = value; }
        }
        private object _partner;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "promotioncodename")]
        public virtual string PromotionCodeName
        {
            get { FillData(); return _promotionCodeName; }
            set { SetValue<string>("promotioncodename", value); _promotionCodeName = value; }
        }
        private string _promotionCodeName;

		[CrmProperty(LogicalName = "receivedon")]
        public virtual DateTime? ReceivedOn
        {
            get { FillData(); return _receivedOn; }
            set { SetValue<DateTime?>("receivedon", value); _receivedOn = value; }
        }
        private DateTime? _receivedOn;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set {  _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "responsecode")]
        public virtual Enums.ResponseCode? ResponseCode
        {
            get { FillData(); return _responseCode; }
            set { SetPicklist("responsecode", (int?)value); _responseCode = value; }
        }
        private Enums.ResponseCode? _responseCode;

		[CrmProperty(LogicalName = "responsecodename")]
        public virtual string ResponseCodeName
        {
            get { FillData(); return _responseCodeName; }
            set {  _responseCodeName = value; }
        }
        private string _responseCodeName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", ServiceIdType, value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "serviceidType", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdType
        {
            get { FillData(); return _serviceIdType; }
            set {  _serviceIdType = value; }
        }
        private string _serviceIdType;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "telephone")]
        public virtual string Telephone
        {
            get { FillData(); return _telephone; }
            set { SetValue<string>("telephone", value); _telephone = value; }
        }
        private string _telephone;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "yomicompanyname")]
        public virtual string YomiCompanyName
        {
            get { FillData(); return _yomiCompanyName; }
            set { SetValue<string>("yomicompanyname", value); _yomiCompanyName = value; }
        }
        private string _yomiCompanyName;

		[CrmProperty(LogicalName = "yomifirstname")]
        public virtual string YomiFirstName
        {
            get { FillData(); return _yomiFirstName; }
            set { SetValue<string>("yomifirstname", value); _yomiFirstName = value; }
        }
        private string _yomiFirstName;

		[CrmProperty(LogicalName = "yomilastname")]
        public virtual string YomiLastName
        {
            get { FillData(); return _yomiLastName; }
            set { SetValue<string>("yomilastname", value); _yomiLastName = value; }
        }
        private string _yomiLastName;

	}
	[CrmEntity(LogicalName = "competitor", PrimaryKey = "competitorid")]
	public partial class Competitor : CrmEntity
	{
		public class Enums
		{
			public enum Address1AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address1ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "competitor";
			
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string CompetitorId = "competitorid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string KeyProduct = "keyproduct";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string Opportunities = "opportunities";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Overview = "overview";
			public const string ReferenceInfoUrl = "referenceinfourl";
			public const string ReportedRevenue = "reportedrevenue";
			public const string ReportingQuarter = "reportingquarter";
			public const string ReportingYear = "reportingyear";
			public const string StockExchange = "stockexchange";
			public const string Strengths = "strengths";
			public const string Threats = "threats";
			public const string TickerSymbol = "tickersymbol";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Weaknesses = "weaknesses";
			public const string WebSiteUrl = "websiteurl";
			public const string WinPercentage = "winpercentage";
			public const string YomiName = "yominame";
		}

		public override Guid PrimaryKey
		{
			get { return CompetitorId; }
		}

		[CrmProperty(LogicalName = "address1_addressid")]
        public virtual Guid Address1AddressId
        {
            get { FillData(); return _address1AddressId; }
            set { SetValue<Guid?>("address1_addressid", value); _address1AddressId = value; }
        }
        private Guid _address1AddressId;

		[CrmProperty(LogicalName = "address1_addresstypecode")]
        public virtual Enums.Address1AddressTypeCode? Address1AddressTypeCode
        {
            get { FillData(); return _address1AddressTypeCode; }
            set { SetPicklist("address1_addresstypecode", (int?)value); _address1AddressTypeCode = value; }
        }
        private Enums.Address1AddressTypeCode? _address1AddressTypeCode;

		[CrmProperty(LogicalName = "address1_addresstypecodename")]
        public virtual string Address1AddressTypeCodeName
        {
            get { FillData(); return _address1AddressTypeCodeName; }
            set {  _address1AddressTypeCodeName = value; }
        }
        private string _address1AddressTypeCodeName;

		[CrmProperty(LogicalName = "address1_city")]
        public virtual string Address1City
        {
            get { FillData(); return _address1City; }
            set { SetValue<string>("address1_city", value); _address1City = value; }
        }
        private string _address1City;

		[CrmProperty(LogicalName = "address1_country")]
        public virtual string Address1Country
        {
            get { FillData(); return _address1Country; }
            set { SetValue<string>("address1_country", value); _address1Country = value; }
        }
        private string _address1Country;

		[CrmProperty(LogicalName = "address1_county")]
        public virtual string Address1County
        {
            get { FillData(); return _address1County; }
            set { SetValue<string>("address1_county", value); _address1County = value; }
        }
        private string _address1County;

		[CrmProperty(LogicalName = "address1_fax")]
        public virtual string Address1Fax
        {
            get { FillData(); return _address1Fax; }
            set { SetValue<string>("address1_fax", value); _address1Fax = value; }
        }
        private string _address1Fax;

		[CrmProperty(LogicalName = "address1_latitude")]
        public virtual double? Address1Latitude
        {
            get { FillData(); return _address1Latitude; }
            set { SetValue<double?>("address1_latitude", value); _address1Latitude = value; }
        }
        private double? _address1Latitude;

		[CrmProperty(LogicalName = "address1_line1")]
        public virtual string Address1Line1
        {
            get { FillData(); return _address1Line1; }
            set { SetValue<string>("address1_line1", value); _address1Line1 = value; }
        }
        private string _address1Line1;

		[CrmProperty(LogicalName = "address1_line2")]
        public virtual string Address1Line2
        {
            get { FillData(); return _address1Line2; }
            set { SetValue<string>("address1_line2", value); _address1Line2 = value; }
        }
        private string _address1Line2;

		[CrmProperty(LogicalName = "address1_line3")]
        public virtual string Address1Line3
        {
            get { FillData(); return _address1Line3; }
            set { SetValue<string>("address1_line3", value); _address1Line3 = value; }
        }
        private string _address1Line3;

		[CrmProperty(LogicalName = "address1_longitude")]
        public virtual double? Address1Longitude
        {
            get { FillData(); return _address1Longitude; }
            set { SetValue<double?>("address1_longitude", value); _address1Longitude = value; }
        }
        private double? _address1Longitude;

		[CrmProperty(LogicalName = "address1_name")]
        public virtual string Address1Name
        {
            get { FillData(); return _address1Name; }
            set { SetValue<string>("address1_name", value); _address1Name = value; }
        }
        private string _address1Name;

		[CrmProperty(LogicalName = "address1_postalcode")]
        public virtual string Address1PostalCode
        {
            get { FillData(); return _address1PostalCode; }
            set { SetValue<string>("address1_postalcode", value); _address1PostalCode = value; }
        }
        private string _address1PostalCode;

		[CrmProperty(LogicalName = "address1_postofficebox")]
        public virtual string Address1PostOfficeBox
        {
            get { FillData(); return _address1PostOfficeBox; }
            set { SetValue<string>("address1_postofficebox", value); _address1PostOfficeBox = value; }
        }
        private string _address1PostOfficeBox;

		[CrmProperty(LogicalName = "address1_shippingmethodcode")]
        public virtual Enums.Address1ShippingMethodCode? Address1ShippingMethodCode
        {
            get { FillData(); return _address1ShippingMethodCode; }
            set { SetPicklist("address1_shippingmethodcode", (int?)value); _address1ShippingMethodCode = value; }
        }
        private Enums.Address1ShippingMethodCode? _address1ShippingMethodCode;

		[CrmProperty(LogicalName = "address1_shippingmethodcodename")]
        public virtual string Address1ShippingMethodCodeName
        {
            get { FillData(); return _address1ShippingMethodCodeName; }
            set {  _address1ShippingMethodCodeName = value; }
        }
        private string _address1ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address1_stateorprovince")]
        public virtual string Address1StateOrProvince
        {
            get { FillData(); return _address1StateOrProvince; }
            set { SetValue<string>("address1_stateorprovince", value); _address1StateOrProvince = value; }
        }
        private string _address1StateOrProvince;

		[CrmProperty(LogicalName = "address1_telephone1")]
        public virtual string Address1Telephone1
        {
            get { FillData(); return _address1Telephone1; }
            set { SetValue<string>("address1_telephone1", value); _address1Telephone1 = value; }
        }
        private string _address1Telephone1;

		[CrmProperty(LogicalName = "address1_telephone2")]
        public virtual string Address1Telephone2
        {
            get { FillData(); return _address1Telephone2; }
            set { SetValue<string>("address1_telephone2", value); _address1Telephone2 = value; }
        }
        private string _address1Telephone2;

		[CrmProperty(LogicalName = "address1_telephone3")]
        public virtual string Address1Telephone3
        {
            get { FillData(); return _address1Telephone3; }
            set { SetValue<string>("address1_telephone3", value); _address1Telephone3 = value; }
        }
        private string _address1Telephone3;

		[CrmProperty(LogicalName = "address1_upszone")]
        public virtual string Address1UPSZone
        {
            get { FillData(); return _address1UPSZone; }
            set { SetValue<string>("address1_upszone", value); _address1UPSZone = value; }
        }
        private string _address1UPSZone;

		[CrmProperty(LogicalName = "address1_utcoffset")]
        public virtual int? Address1UTCOffset
        {
            get { FillData(); return _address1UTCOffset; }
            set { SetValue<int?>("address1_utcoffset", value); _address1UTCOffset = value; }
        }
        private int? _address1UTCOffset;

		[CrmProperty(LogicalName = "address2_addressid")]
        public virtual Guid Address2AddressId
        {
            get { FillData(); return _address2AddressId; }
            set { SetValue<Guid?>("address2_addressid", value); _address2AddressId = value; }
        }
        private Guid _address2AddressId;

		[CrmProperty(LogicalName = "address2_addresstypecode")]
        public virtual Enums.Address2AddressTypeCode? Address2AddressTypeCode
        {
            get { FillData(); return _address2AddressTypeCode; }
            set { SetPicklist("address2_addresstypecode", (int?)value); _address2AddressTypeCode = value; }
        }
        private Enums.Address2AddressTypeCode? _address2AddressTypeCode;

		[CrmProperty(LogicalName = "address2_addresstypecodename")]
        public virtual string Address2AddressTypeCodeName
        {
            get { FillData(); return _address2AddressTypeCodeName; }
            set {  _address2AddressTypeCodeName = value; }
        }
        private string _address2AddressTypeCodeName;

		[CrmProperty(LogicalName = "address2_city")]
        public virtual string Address2City
        {
            get { FillData(); return _address2City; }
            set { SetValue<string>("address2_city", value); _address2City = value; }
        }
        private string _address2City;

		[CrmProperty(LogicalName = "address2_country")]
        public virtual string Address2Country
        {
            get { FillData(); return _address2Country; }
            set { SetValue<string>("address2_country", value); _address2Country = value; }
        }
        private string _address2Country;

		[CrmProperty(LogicalName = "address2_county")]
        public virtual string Address2County
        {
            get { FillData(); return _address2County; }
            set { SetValue<string>("address2_county", value); _address2County = value; }
        }
        private string _address2County;

		[CrmProperty(LogicalName = "address2_fax")]
        public virtual string Address2Fax
        {
            get { FillData(); return _address2Fax; }
            set { SetValue<string>("address2_fax", value); _address2Fax = value; }
        }
        private string _address2Fax;

		[CrmProperty(LogicalName = "address2_latitude")]
        public virtual double? Address2Latitude
        {
            get { FillData(); return _address2Latitude; }
            set { SetValue<double?>("address2_latitude", value); _address2Latitude = value; }
        }
        private double? _address2Latitude;

		[CrmProperty(LogicalName = "address2_line1")]
        public virtual string Address2Line1
        {
            get { FillData(); return _address2Line1; }
            set { SetValue<string>("address2_line1", value); _address2Line1 = value; }
        }
        private string _address2Line1;

		[CrmProperty(LogicalName = "address2_line2")]
        public virtual string Address2Line2
        {
            get { FillData(); return _address2Line2; }
            set { SetValue<string>("address2_line2", value); _address2Line2 = value; }
        }
        private string _address2Line2;

		[CrmProperty(LogicalName = "address2_line3")]
        public virtual string Address2Line3
        {
            get { FillData(); return _address2Line3; }
            set { SetValue<string>("address2_line3", value); _address2Line3 = value; }
        }
        private string _address2Line3;

		[CrmProperty(LogicalName = "address2_longitude")]
        public virtual double? Address2Longitude
        {
            get { FillData(); return _address2Longitude; }
            set { SetValue<double?>("address2_longitude", value); _address2Longitude = value; }
        }
        private double? _address2Longitude;

		[CrmProperty(LogicalName = "address2_name")]
        public virtual string Address2Name
        {
            get { FillData(); return _address2Name; }
            set { SetValue<string>("address2_name", value); _address2Name = value; }
        }
        private string _address2Name;

		[CrmProperty(LogicalName = "address2_postalcode")]
        public virtual string Address2PostalCode
        {
            get { FillData(); return _address2PostalCode; }
            set { SetValue<string>("address2_postalcode", value); _address2PostalCode = value; }
        }
        private string _address2PostalCode;

		[CrmProperty(LogicalName = "address2_postofficebox")]
        public virtual string Address2PostOfficeBox
        {
            get { FillData(); return _address2PostOfficeBox; }
            set { SetValue<string>("address2_postofficebox", value); _address2PostOfficeBox = value; }
        }
        private string _address2PostOfficeBox;

		[CrmProperty(LogicalName = "address2_shippingmethodcode")]
        public virtual Enums.Address2ShippingMethodCode? Address2ShippingMethodCode
        {
            get { FillData(); return _address2ShippingMethodCode; }
            set { SetPicklist("address2_shippingmethodcode", (int?)value); _address2ShippingMethodCode = value; }
        }
        private Enums.Address2ShippingMethodCode? _address2ShippingMethodCode;

		[CrmProperty(LogicalName = "address2_shippingmethodcodename")]
        public virtual string Address2ShippingMethodCodeName
        {
            get { FillData(); return _address2ShippingMethodCodeName; }
            set {  _address2ShippingMethodCodeName = value; }
        }
        private string _address2ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address2_stateorprovince")]
        public virtual string Address2StateOrProvince
        {
            get { FillData(); return _address2StateOrProvince; }
            set { SetValue<string>("address2_stateorprovince", value); _address2StateOrProvince = value; }
        }
        private string _address2StateOrProvince;

		[CrmProperty(LogicalName = "address2_telephone1")]
        public virtual string Address2Telephone1
        {
            get { FillData(); return _address2Telephone1; }
            set { SetValue<string>("address2_telephone1", value); _address2Telephone1 = value; }
        }
        private string _address2Telephone1;

		[CrmProperty(LogicalName = "address2_telephone2")]
        public virtual string Address2Telephone2
        {
            get { FillData(); return _address2Telephone2; }
            set { SetValue<string>("address2_telephone2", value); _address2Telephone2 = value; }
        }
        private string _address2Telephone2;

		[CrmProperty(LogicalName = "address2_telephone3")]
        public virtual string Address2Telephone3
        {
            get { FillData(); return _address2Telephone3; }
            set { SetValue<string>("address2_telephone3", value); _address2Telephone3 = value; }
        }
        private string _address2Telephone3;

		[CrmProperty(LogicalName = "address2_upszone")]
        public virtual string Address2UPSZone
        {
            get { FillData(); return _address2UPSZone; }
            set { SetValue<string>("address2_upszone", value); _address2UPSZone = value; }
        }
        private string _address2UPSZone;

		[CrmProperty(LogicalName = "address2_utcoffset")]
        public virtual int? Address2UTCOffset
        {
            get { FillData(); return _address2UTCOffset; }
            set { SetValue<int?>("address2_utcoffset", value); _address2UTCOffset = value; }
        }
        private int? _address2UTCOffset;

		[CrmProperty(LogicalName = "competitorid")]
        public virtual Guid CompetitorId
        {
            get { FillData(); return _competitorId; }
            set {  _competitorId = value; }
        }
        private Guid _competitorId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "keyproduct")]
        public virtual string KeyProduct
        {
            get { FillData(); return _keyProduct; }
            set { SetValue<string>("keyproduct", value); _keyProduct = value; }
        }
        private string _keyProduct;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "opportunities")]
        public virtual string Opportunities
        {
            get { FillData(); return _opportunities; }
            set { SetValue<string>("opportunities", value); _opportunities = value; }
        }
        private string _opportunities;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "overview")]
        public virtual string Overview
        {
            get { FillData(); return _overview; }
            set { SetValue<string>("overview", value); _overview = value; }
        }
        private string _overview;

		[CrmProperty(LogicalName = "referenceinfourl")]
        public virtual string ReferenceInfoUrl
        {
            get { FillData(); return _referenceInfoUrl; }
            set { SetValue<string>("referenceinfourl", value); _referenceInfoUrl = value; }
        }
        private string _referenceInfoUrl;

		[CrmProperty(LogicalName = "reportedrevenue")]
        public virtual decimal? ReportedRevenue
        {
            get { FillData(); return _reportedRevenue; }
            set { SetMoney("reportedrevenue", value); _reportedRevenue = value; }
        }
        private decimal? _reportedRevenue;

		[CrmProperty(LogicalName = "reportingquarter")]
        public virtual int? ReportingQuarter
        {
            get { FillData(); return _reportingQuarter; }
            set { SetValue<int?>("reportingquarter", value); _reportingQuarter = value; }
        }
        private int? _reportingQuarter;

		[CrmProperty(LogicalName = "reportingyear")]
        public virtual int? ReportingYear
        {
            get { FillData(); return _reportingYear; }
            set { SetValue<int?>("reportingyear", value); _reportingYear = value; }
        }
        private int? _reportingYear;

		[CrmProperty(LogicalName = "stockexchange")]
        public virtual string StockExchange
        {
            get { FillData(); return _stockExchange; }
            set { SetValue<string>("stockexchange", value); _stockExchange = value; }
        }
        private string _stockExchange;

		[CrmProperty(LogicalName = "strengths")]
        public virtual string Strengths
        {
            get { FillData(); return _strengths; }
            set { SetValue<string>("strengths", value); _strengths = value; }
        }
        private string _strengths;

		[CrmProperty(LogicalName = "threats")]
        public virtual string Threats
        {
            get { FillData(); return _threats; }
            set { SetValue<string>("threats", value); _threats = value; }
        }
        private string _threats;

		[CrmProperty(LogicalName = "tickersymbol")]
        public virtual string TickerSymbol
        {
            get { FillData(); return _tickerSymbol; }
            set { SetValue<string>("tickersymbol", value); _tickerSymbol = value; }
        }
        private string _tickerSymbol;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "weaknesses")]
        public virtual string Weaknesses
        {
            get { FillData(); return _weaknesses; }
            set { SetValue<string>("weaknesses", value); _weaknesses = value; }
        }
        private string _weaknesses;

		[CrmProperty(LogicalName = "websiteurl")]
        public virtual string WebSiteUrl
        {
            get { FillData(); return _webSiteUrl; }
            set { SetValue<string>("websiteurl", value); _webSiteUrl = value; }
        }
        private string _webSiteUrl;

		[CrmProperty(LogicalName = "winpercentage")]
        public virtual double? WinPercentage
        {
            get { FillData(); return _winPercentage; }
            set { SetValue<double?>("winpercentage", value); _winPercentage = value; }
        }
        private double? _winPercentage;

		[CrmProperty(LogicalName = "yominame")]
        public virtual string YomiName
        {
            get { FillData(); return _yomiName; }
            set { SetValue<string>("yominame", value); _yomiName = value; }
        }
        private string _yomiName;

	}
	[CrmEntity(LogicalName = "competitoraddress", PrimaryKey = "competitoraddressid")]
	public partial class CompetitorAddress : CrmEntity
	{
		public class Enums
		{
			public enum AddressTypeCode 
			{
			}		
			public enum ShippingMethodCode 
			{
			}		
		}

		public class Fields
		{
			public const string SchemaName = "competitoraddress";
			
			public const string AddressNumber = "addressnumber";
			public const string AddressTypeCode = "addresstypecode";
			public const string AddressTypeCodeName = "addresstypecodename";
			public const string City = "city";
			public const string CompetitorAddressId = "competitoraddressid";
			public const string Country = "country";
			public const string County = "county";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Fax = "fax";
			public const string Latitude = "latitude";
			public const string Line1 = "line1";
			public const string Line2 = "line2";
			public const string Line3 = "line3";
			public const string Longitude = "longitude";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string ParentId = "parentid";
			public const string ParentIdName = "parentidname";
			public const string ParentIdYomiName = "parentidyominame";
			public const string PostalCode = "postalcode";
			public const string PostOfficeBox = "postofficebox";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string StateOrProvince = "stateorprovince";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string UPSZone = "upszone";
			public const string UTCOffset = "utcoffset";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return CompetitorAddressId; }
		}

		[CrmProperty(LogicalName = "addressnumber")]
        public virtual int? AddressNumber
        {
            get { FillData(); return _addressNumber; }
            set { SetValue<int?>("addressnumber", value); _addressNumber = value; }
        }
        private int? _addressNumber;

		[CrmProperty(LogicalName = "addresstypecode")]
        public virtual Enums.AddressTypeCode? AddressTypeCode
        {
            get { FillData(); return _addressTypeCode; }
            set { SetPicklist("addresstypecode", (int?)value); _addressTypeCode = value; }
        }
        private Enums.AddressTypeCode? _addressTypeCode;

		[CrmProperty(LogicalName = "addresstypecodename")]
        public virtual string AddressTypeCodeName
        {
            get { FillData(); return _addressTypeCodeName; }
            set {  _addressTypeCodeName = value; }
        }
        private string _addressTypeCodeName;

		[CrmProperty(LogicalName = "city")]
        public virtual string City
        {
            get { FillData(); return _city; }
            set { SetValue<string>("city", value); _city = value; }
        }
        private string _city;

		[CrmProperty(LogicalName = "competitoraddressid")]
        public virtual Guid CompetitorAddressId
        {
            get { FillData(); return _competitorAddressId; }
            set {  _competitorAddressId = value; }
        }
        private Guid _competitorAddressId;

		[CrmProperty(LogicalName = "country")]
        public virtual string Country
        {
            get { FillData(); return _country; }
            set { SetValue<string>("country", value); _country = value; }
        }
        private string _country;

		[CrmProperty(LogicalName = "county")]
        public virtual string County
        {
            get { FillData(); return _county; }
            set { SetValue<string>("county", value); _county = value; }
        }
        private string _county;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "fax")]
        public virtual string Fax
        {
            get { FillData(); return _fax; }
            set { SetValue<string>("fax", value); _fax = value; }
        }
        private string _fax;

		[CrmProperty(LogicalName = "latitude")]
        public virtual double? Latitude
        {
            get { FillData(); return _latitude; }
            set { SetValue<double?>("latitude", value); _latitude = value; }
        }
        private double? _latitude;

		[CrmProperty(LogicalName = "line1")]
        public virtual string Line1
        {
            get { FillData(); return _line1; }
            set { SetValue<string>("line1", value); _line1 = value; }
        }
        private string _line1;

		[CrmProperty(LogicalName = "line2")]
        public virtual string Line2
        {
            get { FillData(); return _line2; }
            set { SetValue<string>("line2", value); _line2 = value; }
        }
        private string _line2;

		[CrmProperty(LogicalName = "line3")]
        public virtual string Line3
        {
            get { FillData(); return _line3; }
            set { SetValue<string>("line3", value); _line3 = value; }
        }
        private string _line3;

		[CrmProperty(LogicalName = "longitude")]
        public virtual double? Longitude
        {
            get { FillData(); return _longitude; }
            set { SetValue<double?>("longitude", value); _longitude = value; }
        }
        private double? _longitude;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "parentid", IsLookup = true)]
        public virtual Guid? ParentId
        {
            get { FillData(); return _parentId; }
            set { SetLookup("parentid", "competitor", value); _parentId = value; }
        }
        private Guid? _parentId;

		[CrmProperty(LogicalName = "parentidname")]
        public virtual string ParentIdName
        {
            get { FillData(); return _parentIdName; }
            set {  _parentIdName = value; }
        }
        private string _parentIdName;

		[CrmProperty(LogicalName = "parentidyominame")]
        public virtual string ParentIdYomiName
        {
            get { FillData(); return _parentIdYomiName; }
            set {  _parentIdYomiName = value; }
        }
        private string _parentIdYomiName;

		[CrmProperty(LogicalName = "postalcode")]
        public virtual string PostalCode
        {
            get { FillData(); return _postalCode; }
            set { SetValue<string>("postalcode", value); _postalCode = value; }
        }
        private string _postalCode;

		[CrmProperty(LogicalName = "postofficebox")]
        public virtual string PostOfficeBox
        {
            get { FillData(); return _postOfficeBox; }
            set { SetValue<string>("postofficebox", value); _postOfficeBox = value; }
        }
        private string _postOfficeBox;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "stateorprovince")]
        public virtual string StateOrProvince
        {
            get { FillData(); return _stateOrProvince; }
            set { SetValue<string>("stateorprovince", value); _stateOrProvince = value; }
        }
        private string _stateOrProvince;

		[CrmProperty(LogicalName = "telephone1")]
        public virtual string Telephone1
        {
            get { FillData(); return _telephone1; }
            set { SetValue<string>("telephone1", value); _telephone1 = value; }
        }
        private string _telephone1;

		[CrmProperty(LogicalName = "telephone2")]
        public virtual string Telephone2
        {
            get { FillData(); return _telephone2; }
            set { SetValue<string>("telephone2", value); _telephone2 = value; }
        }
        private string _telephone2;

		[CrmProperty(LogicalName = "telephone3")]
        public virtual string Telephone3
        {
            get { FillData(); return _telephone3; }
            set { SetValue<string>("telephone3", value); _telephone3 = value; }
        }
        private string _telephone3;

		[CrmProperty(LogicalName = "upszone")]
        public virtual string UPSZone
        {
            get { FillData(); return _uPSZone; }
            set { SetValue<string>("upszone", value); _uPSZone = value; }
        }
        private string _uPSZone;

		[CrmProperty(LogicalName = "utcoffset")]
        public virtual int? UTCOffset
        {
            get { FillData(); return _uTCOffset; }
            set { SetValue<int?>("utcoffset", value); _uTCOffset = value; }
        }
        private int? _uTCOffset;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "connection", PrimaryKey = "connectionid")]
	public partial class Connection : CrmEntity
	{
		public class Enums
		{
			public enum Record1ObjectTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value")]DefaultValue = 0,
			}		
			public enum Record2ObjectTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value")]DefaultValue = 0,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "connection";
			
			public const string ConnectionId = "connectionid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string EffectiveEnd = "effectiveend";
			public const string EffectiveStart = "effectivestart";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsMaster = "ismaster";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Record1Id = "record1id";
			public const string Record1IdName = "record1idname";
			public const string Record1IdType = "record1idType";
			public const string Record1ObjectTypeCode = "record1objecttypecode";
			public const string Record1ObjectTypeCodeName = "record1objecttypecodename";
			public const string Record1RoleId = "record1roleid";
			public const string Record1RoleIdName = "record1roleidname";
			public const string Record2Id = "record2id";
			public const string Record2IdName = "record2idname";
			public const string Record2IdType = "record2idType";
			public const string Record2ObjectTypeCode = "record2objecttypecode";
			public const string Record2ObjectTypeCodeName = "record2objecttypecodename";
			public const string Record2RoleId = "record2roleid";
			public const string Record2RoleIdName = "record2roleidname";
			public const string RelatedConnectionId = "relatedconnectionid";
			public const string RelatedConnectionIdName = "relatedconnectionidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ConnectionId; }
		}

		[CrmProperty(LogicalName = "connectionid")]
        public virtual Guid ConnectionId
        {
            get { FillData(); return _connectionId; }
            set {  _connectionId = value; }
        }
        private Guid _connectionId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "effectiveend")]
        public virtual DateTime? EffectiveEnd
        {
            get { FillData(); return _effectiveEnd; }
            set { SetValue<DateTime?>("effectiveend", value); _effectiveEnd = value; }
        }
        private DateTime? _effectiveEnd;

		[CrmProperty(LogicalName = "effectivestart")]
        public virtual DateTime? EffectiveStart
        {
            get { FillData(); return _effectiveStart; }
            set { SetValue<DateTime?>("effectivestart", value); _effectiveStart = value; }
        }
        private DateTime? _effectiveStart;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "ismaster")]
        public virtual bool? IsMaster
        {
            get { FillData(); return _isMaster; }
            set {  _isMaster = value; }
        }
        private bool? _isMaster;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set {  _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "record1id", IsLookup = true)]
        public virtual Guid? Record1Id
        {
            get { FillData(); return _record1Id; }
            set { SetLookup("record1id", Record1IdType, value); _record1Id = value; }
        }
        private Guid? _record1Id;

		[CrmProperty(LogicalName = "record1idname")]
        public virtual string Record1IdName
        {
            get { FillData(); return _record1IdName; }
            set {  _record1IdName = value; }
        }
        private string _record1IdName;

		[CrmProperty(LogicalName = "record1idType", IsEntityReferenceHelper = true)]
        public virtual string Record1IdType
        {
            get { FillData(); return _record1IdType; }
            set {  _record1IdType = value; }
        }
        private string _record1IdType;

		[CrmProperty(LogicalName = "record1objecttypecode")]
        public virtual Enums.Record1ObjectTypeCode? Record1ObjectTypeCode
        {
            get { FillData(); return _record1ObjectTypeCode; }
            set {  _record1ObjectTypeCode = value; }
        }
        private Enums.Record1ObjectTypeCode? _record1ObjectTypeCode;

		[CrmProperty(LogicalName = "record1objecttypecodename")]
        public virtual string Record1ObjectTypeCodeName
        {
            get { FillData(); return _record1ObjectTypeCodeName; }
            set {  _record1ObjectTypeCodeName = value; }
        }
        private string _record1ObjectTypeCodeName;

		[CrmProperty(LogicalName = "record1roleid", IsLookup = true)]
        public virtual Guid? Record1RoleId
        {
            get { FillData(); return _record1RoleId; }
            set { SetLookup("record1roleid", "connectionrole", value); _record1RoleId = value; }
        }
        private Guid? _record1RoleId;

		[CrmProperty(LogicalName = "record1roleidname")]
        public virtual string Record1RoleIdName
        {
            get { FillData(); return _record1RoleIdName; }
            set {  _record1RoleIdName = value; }
        }
        private string _record1RoleIdName;

		[CrmProperty(LogicalName = "record2id", IsLookup = true)]
        public virtual Guid? Record2Id
        {
            get { FillData(); return _record2Id; }
            set { SetLookup("record2id", Record2IdType, value); _record2Id = value; }
        }
        private Guid? _record2Id;

		[CrmProperty(LogicalName = "record2idname")]
        public virtual string Record2IdName
        {
            get { FillData(); return _record2IdName; }
            set {  _record2IdName = value; }
        }
        private string _record2IdName;

		[CrmProperty(LogicalName = "record2idType", IsEntityReferenceHelper = true)]
        public virtual string Record2IdType
        {
            get { FillData(); return _record2IdType; }
            set {  _record2IdType = value; }
        }
        private string _record2IdType;

		[CrmProperty(LogicalName = "record2objecttypecode")]
        public virtual Enums.Record2ObjectTypeCode? Record2ObjectTypeCode
        {
            get { FillData(); return _record2ObjectTypeCode; }
            set {  _record2ObjectTypeCode = value; }
        }
        private Enums.Record2ObjectTypeCode? _record2ObjectTypeCode;

		[CrmProperty(LogicalName = "record2objecttypecodename")]
        public virtual string Record2ObjectTypeCodeName
        {
            get { FillData(); return _record2ObjectTypeCodeName; }
            set {  _record2ObjectTypeCodeName = value; }
        }
        private string _record2ObjectTypeCodeName;

		[CrmProperty(LogicalName = "record2roleid", IsLookup = true)]
        public virtual Guid? Record2RoleId
        {
            get { FillData(); return _record2RoleId; }
            set { SetLookup("record2roleid", "connectionrole", value); _record2RoleId = value; }
        }
        private Guid? _record2RoleId;

		[CrmProperty(LogicalName = "record2roleidname")]
        public virtual string Record2RoleIdName
        {
            get { FillData(); return _record2RoleIdName; }
            set {  _record2RoleIdName = value; }
        }
        private string _record2RoleIdName;

		[CrmProperty(LogicalName = "relatedconnectionid", IsLookup = true)]
        public virtual Guid? RelatedConnectionId
        {
            get { FillData(); return _relatedConnectionId; }
            set {  _relatedConnectionId = value; }
        }
        private Guid? _relatedConnectionId;

		[CrmProperty(LogicalName = "relatedconnectionidName", IsEntityReferenceHelper = true)]
        public virtual string RelatedConnectionIdName
        {
            get { FillData(); return _relatedConnectionIdName; }
            set {  _relatedConnectionIdName = value; }
        }
        private string _relatedConnectionIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "connectionrole", PrimaryKey = "connectionroleid")]
	public partial class ConnectionRole : CrmEntity
	{
		public class Enums
		{
			public enum Category 
			{
				[CrmPicklist(DisplayName = "Stakeholder", Value = 1000)]Stakeholder = 1000,
				[CrmPicklist(DisplayName = "Pursuit Team", Value = 1001)]PursuitTeam = 1001,
				[CrmPicklist(DisplayName = "Service", Value = 1002)]Service = 1002,
				[CrmPicklist(DisplayName = "Business", Value = 1)]Business = 1,
				[CrmPicklist(DisplayName = "Family", Value = 2)]Family = 2,
				[CrmPicklist(DisplayName = "Other", Value = 5)]Other = 5,
				[CrmPicklist(DisplayName = "Sales", Value = 4)]Sales = 4,
				[CrmPicklist(DisplayName = "Service", Value = 100000000)]Service_2 = 100000000,
				[CrmPicklist(DisplayName = "Social", Value = 3)]Social = 3,
			}		
			public enum ComponentState 
			{
				[CrmPicklist(DisplayName = "Published")]Published = 0,
				[CrmPicklist(DisplayName = "Unpublished", Value = 1)]Unpublished = 1,
				[CrmPicklist(DisplayName = "Deleted", Value = 2)]Deleted = 2,
				[CrmPicklist(DisplayName = "Deleted Unpublished", Value = 3)]DeletedUnpublished = 3,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "connectionrole";
			
			public const string Category = "category";
			public const string CategoryName = "categoryname";
			public const string ComponentState = "componentstate";
			public const string ConnectionRoleId = "connectionroleid";
			public const string ConnectionRoleIdUnique = "connectionroleidunique";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverwriteTime = "overwritetime";
			public const string SolutionId = "solutionid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ConnectionRoleId; }
		}

		[CrmProperty(LogicalName = "category")]
        public virtual Enums.Category? Category
        {
            get { FillData(); return _category; }
            set { SetPicklist("category", (int?)value); _category = value; }
        }
        private Enums.Category? _category;

		[CrmProperty(LogicalName = "categoryname")]
        public virtual string CategoryName
        {
            get { FillData(); return _categoryName; }
            set {  _categoryName = value; }
        }
        private string _categoryName;

		[CrmProperty(LogicalName = "componentstate")]
        public virtual Enums.ComponentState? ComponentState
        {
            get { FillData(); return _componentState; }
            set {  _componentState = value; }
        }
        private Enums.ComponentState? _componentState;

		[CrmProperty(LogicalName = "connectionroleid")]
        public virtual Guid ConnectionRoleId
        {
            get { FillData(); return _connectionRoleId; }
            set {  _connectionRoleId = value; }
        }
        private Guid _connectionRoleId;

		[CrmProperty(LogicalName = "connectionroleidunique")]
        public virtual Guid? ConnectionRoleIdUnique
        {
            get { FillData(); return _connectionRoleIdUnique; }
            set {  _connectionRoleIdUnique = value; }
        }
        private Guid? _connectionRoleIdUnique;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "iscustomizable")]
        public virtual object IsCustomizable
        {
            get { FillData(); return _isCustomizable; }
            set {  _isCustomizable = value; }
        }
        private object _isCustomizable;

		[CrmProperty(LogicalName = "ismanaged")]
        public virtual bool? IsManaged
        {
            get { FillData(); return _isManaged; }
            set {  _isManaged = value; }
        }
        private bool? _isManaged;

		[CrmProperty(LogicalName = "ismanagedname")]
        public virtual string IsManagedName
        {
            get { FillData(); return _isManagedName; }
            set {  _isManagedName = value; }
        }
        private string _isManagedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overwritetime")]
        public virtual DateTime? OverwriteTime
        {
            get { FillData(); return _overwriteTime; }
            set {  _overwriteTime = value; }
        }
        private DateTime? _overwriteTime;

		[CrmProperty(LogicalName = "solutionid")]
        public virtual Guid? SolutionId
        {
            get { FillData(); return _solutionId; }
            set {  _solutionId = value; }
        }
        private Guid? _solutionId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "supportingsolutionid")]
        public virtual Guid? SupportingSolutionId
        {
            get { FillData(); return _supportingSolutionId; }
            set {  _supportingSolutionId = value; }
        }
        private Guid? _supportingSolutionId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "contact", PrimaryKey = "contactid")]
	public partial class Contact : CrmEntity
	{
		public class Enums
		{
			public enum AccountRoleCode 
			{
				[CrmPicklist(DisplayName = "Decision Maker", Value = 1)]DecisionMaker = 1,
				[CrmPicklist(DisplayName = "Employee", Value = 2)]Employee = 2,
				[CrmPicklist(DisplayName = "Influencer", Value = 3)]Influencer = 3,
			}		
			public enum Address1AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Bill To", Value = 1)]BillTo = 1,
				[CrmPicklist(DisplayName = "Ship To", Value = 2)]ShipTo = 2,
				[CrmPicklist(DisplayName = "Primary", Value = 3)]Primary = 3,
				[CrmPicklist(DisplayName = "Other", Value = 4)]Other = 4,
			}		
			public enum Address1FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
			public enum Address1ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Airborne", Value = 1)]Airborne = 1,
				[CrmPicklist(DisplayName = "DHL", Value = 2)]DHL = 2,
				[CrmPicklist(DisplayName = "FedEx", Value = 3)]FedEx = 3,
				[CrmPicklist(DisplayName = "UPS", Value = 4)]UPS = 4,
				[CrmPicklist(DisplayName = "Postal Mail", Value = 5)]PostalMail = 5,
				[CrmPicklist(DisplayName = "Full Load", Value = 6)]FullLoad = 6,
				[CrmPicklist(DisplayName = "Will Call", Value = 7)]WillCall = 7,
			}		
			public enum Address2AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum CustomerSizeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum CustomerTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum EducationCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum FamilyStatusCode 
			{
				[CrmPicklist(DisplayName = "Single", Value = 1)]__Single = 1,
				[CrmPicklist(DisplayName = "Married", Value = 2)]Married = 2,
				[CrmPicklist(DisplayName = "Divorced", Value = 3)]Divorced = 3,
				[CrmPicklist(DisplayName = "Widowed", Value = 4)]Widowed = 4,
			}		
			public enum GenderCode 
			{
				[CrmPicklist(DisplayName = "Male", Value = 1)]Male = 1,
				[CrmPicklist(DisplayName = "Female", Value = 2)]Female = 2,
			}		
			public enum HasChildrenCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum LeadSourceCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum MSAEServicesAccessLevel 
			{
				[CrmPicklist(DisplayName = "None", Value = 1)]None = 1,
				[CrmPicklist(DisplayName = "Web Portal Contact-Level Customer", Value = 2)]WebPortalContactLevelCustomer = 2,
				[CrmPicklist(DisplayName = "Web Portal Account-Level Customer", Value = 3)]WebPortalAccountLevelCustomer = 3,
			}		
			public enum PaymentTermsCode 
			{
				[CrmPicklist(DisplayName = "Net 30", Value = 1)]Net30 = 1,
				[CrmPicklist(DisplayName = "2% 10, Net 30", Value = 2)]_210Net30 = 2,
				[CrmPicklist(DisplayName = "Net 45", Value = 3)]Net45 = 3,
				[CrmPicklist(DisplayName = "Net 60", Value = 4)]Net60 = 4,
			}		
			public enum PreferredAppointmentDayCode 
			{
				[CrmPicklist(DisplayName = "Sunday")]Sunday = 0,
				[CrmPicklist(DisplayName = "Monday", Value = 1)]Monday = 1,
				[CrmPicklist(DisplayName = "Tuesday", Value = 2)]Tuesday = 2,
				[CrmPicklist(DisplayName = "Wednesday", Value = 3)]Wednesday = 3,
				[CrmPicklist(DisplayName = "Thursday", Value = 4)]Thursday = 4,
				[CrmPicklist(DisplayName = "Friday", Value = 5)]Friday = 5,
				[CrmPicklist(DisplayName = "Saturday", Value = 6)]Saturday = 6,
			}		
			public enum PreferredAppointmentTimeCode 
			{
				[CrmPicklist(DisplayName = "Morning", Value = 1)]Morning = 1,
				[CrmPicklist(DisplayName = "Afternoon", Value = 2)]Afternoon = 2,
				[CrmPicklist(DisplayName = "Evening", Value = 3)]Evening = 3,
			}		
			public enum PreferredContactMethodCode 
			{
				[CrmPicklist(DisplayName = "Any", Value = 1)]Any = 1,
				[CrmPicklist(DisplayName = "E-mail", Value = 2)]Email = 2,
				[CrmPicklist(DisplayName = "Phone", Value = 3)]Phone = 3,
				[CrmPicklist(DisplayName = "Fax", Value = 4)]Fax = 4,
				[CrmPicklist(DisplayName = "Mail", Value = 5)]Mail = 5,
			}		
			public enum ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
			public enum TerritoryCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "contact";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string AccountRoleCode = "accountrolecode";
			public const string AccountRoleCodeName = "accountrolecodename";
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1FreightTermsCode = "address1_freighttermscode";
			public const string Address1FreightTermsCodeName = "address1_freighttermscodename";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1PrimaryContactName = "address1_primarycontactname";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2FreightTermsCode = "address2_freighttermscode";
			public const string Address2FreightTermsCodeName = "address2_freighttermscodename";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2PrimaryContactName = "address2_primarycontactname";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string AdxChangepasswordatnextlogon = "adx_changepasswordatnextlogon";
			public const string AdxChangepasswordatnextlogonName = "adx_changepasswordatnextlogonname";
			public const string AdxCreatedByIPAddress = "adx_createdbyipaddress";
			public const string AdxCreatedByUsername = "adx_createdbyusername";
			public const string AdxFailedpasswordanswerattempts = "adx_failedpasswordanswerattempts";
			public const string AdxFailedpasswordanswerattemptwindowstart = "adx_failedpasswordanswerattemptwindowstart";
			public const string AdxFailedpasswordattempts = "adx_failedpasswordattempts";
			public const string AdxFailedpasswordattemptwindowstart = "adx_failedpasswordattemptwindowstart";
			public const string AdxIdentityprovidername = "adx_identityprovidername";
			public const string AdxInvitationCode = "adx_invitationcode";
			public const string AdxInvitationCodeExpiryDate = "adx_invitationcodeexpirydate";
			public const string AdxLastactivity = "adx_lastactivity";
			public const string AdxLastlockedout = "adx_lastlockedout";
			public const string AdxLastpasswordchange = "adx_lastpasswordchange";
			public const string AdxLastSuccessfulLogon = "adx_lastsuccessfullogon";
			public const string AdxLockedout = "adx_lockedout";
			public const string AdxLockedoutName = "adx_lockedoutname";
			public const string AdxLogonEnabled = "adx_logonenabled";
			public const string AdxLogonenabledName = "adx_logonenabledname";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string AdxOrganizationName = "adx_organizationname";
			public const string AdxPassword = "adx_password";
			public const string AdxPasswordanswer = "adx_passwordanswer";
			public const string AdxPasswordformat = "adx_passwordformat";
			public const string AdxPasswordquestion = "adx_passwordquestion";
			public const string AdxPasswordsalt = "adx_passwordsalt";
			public const string AdxResetpassword = "adx_resetpassword";
			public const string AdxSystemuserid = "adx_systemuserid";
			public const string AdxSystemuseridName = "adx_systemuseridname";
			public const string AdxSystemuseridYomiName = "adx_systemuseridyominame";
			public const string AdxTimeZone = "adx_timezone";
			public const string AdxUsername = "adx_username";
			public const string Aging30 = "aging30";
			public const string Aging60 = "aging60";
			public const string Aging90 = "aging90";
			public const string Anniversary = "anniversary";
			public const string AnnualIncome = "annualincome";
			public const string AssistantName = "assistantname";
			public const string AssistantPhone = "assistantphone";
			public const string BirthDate = "birthdate";
			public const string ChildrensNames = "childrensnames";
			public const string ContactId = "contactid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CreditLimit = "creditlimit";
			public const string CreditOnHold = "creditonhold";
			public const string CreditOnHoldName = "creditonholdname";
			public const string CustomerSizeCode = "customersizecode";
			public const string CustomerSizeCodeName = "customersizecodename";
			public const string CustomerTypeCode = "customertypecode";
			public const string CustomerTypeCodeName = "customertypecodename";
			public const string DefaultPriceLevelId = "defaultpricelevelid";
			public const string DefaultPriceLevelIdName = "defaultpricelevelidname";
			public const string Department = "department";
			public const string Description = "description";
			public const string DoNotBulkEMail = "donotbulkemail";
			public const string DoNotBulkEMailName = "donotbulkemailname";
			public const string DoNotBulkPostalMail = "donotbulkpostalmail";
			public const string DoNotBulkPostalMailName = "donotbulkpostalmailname";
			public const string DoNotEMail = "donotemail";
			public const string DoNotEMailName = "donotemailname";
			public const string DoNotFax = "donotfax";
			public const string DoNotFaxName = "donotfaxname";
			public const string DoNotPhone = "donotphone";
			public const string DoNotPhoneName = "donotphonename";
			public const string DoNotPostalMail = "donotpostalmail";
			public const string DoNotPostalMailName = "donotpostalmailname";
			public const string DoNotSendMarketingMaterialName = "donotsendmarketingmaterialname";
			public const string DoNotSendMM = "donotsendmm";
			public const string EducationCode = "educationcode";
			public const string EducationCodeName = "educationcodename";
			public const string EMailAddress1 = "emailaddress1";
			public const string EMailAddress2 = "emailaddress2";
			public const string EMailAddress3 = "emailaddress3";
			public const string EmployeeId = "employeeid";
			public const string ExchangeRate = "exchangerate";
			public const string ExternalUserIdentifier = "externaluseridentifier";
			public const string FamilyStatusCode = "familystatuscode";
			public const string FamilyStatusCodeName = "familystatuscodename";
			public const string Fax = "fax";
			public const string FirstName = "firstname";
			public const string FtpSiteUrl = "ftpsiteurl";
			public const string FullName = "fullname";
			public const string GenderCode = "gendercode";
			public const string GenderCodeName = "gendercodename";
			public const string GovernmentId = "governmentid";
			public const string HasChildrenCode = "haschildrencode";
			public const string HasChildrenCodeName = "haschildrencodename";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsAutoCreate = "isautocreate";
			public const string IsBackofficeCustomer = "isbackofficecustomer";
			public const string IsBackofficeCustomerName = "isbackofficecustomername";
			public const string IsPrivate = "isprivate";
			public const string IsPrivateName = "isprivatename";
			public const string JobTitle = "jobtitle";
			public const string LastName = "lastname";
			public const string LastUsedInCampaign = "lastusedincampaign";
			public const string LeadSourceCode = "leadsourcecode";
			public const string LeadSourceCodeName = "leadsourcecodename";
			public const string MagBankAccountNumber = "mag_bankaccountnumber";
			public const string MagSynchedWithXero = "mag_synchedwithxero";
			public const string MagSynchedwithxeroName = "mag_synchedwithxeroname";
			public const string MagTaxIDNumber = "mag_taxidnumber";
			public const string MagXeroId = "mag_xeroid";
			public const string ManagerName = "managername";
			public const string ManagerPhone = "managerphone";
			public const string MasterContactIdName = "mastercontactidname";
			public const string MasterContactIdYomiName = "mastercontactidyominame";
			public const string MasterId = "masterid";
			public const string MasterIdName = "masteridName";
			public const string Merged = "merged";
			public const string MergedName = "mergedname";
			public const string MiddleName = "middlename";
			public const string MobilePhone = "mobilephone";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAEServicesAccessLevel = "msa_eservicesaccesslevel";
			public const string MsaEservicesaccesslevelName = "msa_eservicesaccesslevelname";
			public const string MsaManagingpartnerid = "msa_managingpartnerid";
			public const string MsaManagingpartneridName = "msa_managingpartneridname";
			public const string MsaManagingpartneridYomiName = "msa_managingpartneridyominame";
			public const string MSAWebuser = "msa_webuser";
			public const string MsaWebuserName = "msa_webusername";
			public const string NewCompanyCaseAccess = "new_companycaseaccess";
			public const string NewCompanycaseaccessName = "new_companycaseaccessname";
			public const string NewContactsId = "new_contactsid";
			public const string NewContactsIdName = "new_contactsidname";
			public const string NewCostCentre = "new_costcentre";
			public const string NewCPSMDeleted = "new_cpsmdeleted";
			public const string NewDonotinvoice = "new_donotinvoice";
			public const string NewDonotinvoiceName = "new_donotinvoicename";
			public const string NewDR = "new_dr";
			public const string NewDrName = "new_drname";
			public const string NewEmail2SMS = "new_email2sms";
			public const string NewExtension = "new_extension";
			public const string NewOldsAMAccountName = "new_oldsamaccountname";
			public const string NewSAMAccountName = "new_samaccountname";
			public const string NewSIPURI = "new_sipuri";
			public const string NewSiteContact = "new_sitecontact";
			public const string NewSitecontactName = "new_sitecontactname";
			public const string NewUPN = "new_upn";
			public const string NickName = "nickname";
			public const string NumberOfChildren = "numberofchildren";
			public const string OriginatingLeadId = "originatingleadid";
			public const string OriginatingLeadIdName = "originatingleadidname";
			public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Pager = "pager";
			public const string ParentContactId = "parentcontactid";
			public const string ParentContactIdName = "parentcontactidname";
			public const string ParentContactIdYomiName = "parentcontactidyominame";
			public const string ParentCustomerId = "parentcustomerid";
			public const string ParentCustomerIdName = "parentcustomeridname";
			public const string ParentCustomerIdType = "parentcustomeridType";
			public const string ParentCustomerIdYomiName = "parentcustomeridyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodeName = "paymenttermscodename";
			public const string PreferredAppointmentDayCode = "preferredappointmentdaycode";
			public const string PreferredAppointmentDayCodeName = "preferredappointmentdaycodename";
			public const string PreferredAppointmentTimeCode = "preferredappointmenttimecode";
			public const string PreferredAppointmentTimeCodeName = "preferredappointmenttimecodename";
			public const string PreferredContactMethodCode = "preferredcontactmethodcode";
			public const string PreferredContactMethodCodeName = "preferredcontactmethodcodename";
			public const string PreferredEquipmentId = "preferredequipmentid";
			public const string PreferredEquipmentIdName = "preferredequipmentidname";
			public const string PreferredServiceId = "preferredserviceid";
			public const string PreferredServiceIdName = "preferredserviceidname";
			public const string PreferredSystemUserId = "preferredsystemuserid";
			public const string PreferredSystemUserIdName = "preferredsystemuseridname";
			public const string PreferredSystemUserIdYomiName = "preferredsystemuseridyominame";
			public const string Salutation = "salutation";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string SpousesName = "spousesname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SubscriptionId = "subscriptionid";
			public const string Suffix = "suffix";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TerritoryCode = "territorycode";
			public const string TerritoryCodeName = "territorycodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WebSiteUrl = "websiteurl";
			public const string YomiFirstName = "yomifirstname";
			public const string YomiFullName = "yomifullname";
			public const string YomiLastName = "yomilastname";
			public const string YomiMiddleName = "yomimiddlename";
		}

		public override Guid PrimaryKey
		{
			get { return ContactId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "accountrolecode")]
        public virtual Enums.AccountRoleCode? AccountRoleCode
        {
            get { FillData(); return _accountRoleCode; }
            set { SetPicklist("accountrolecode", (int?)value); _accountRoleCode = value; }
        }
        private Enums.AccountRoleCode? _accountRoleCode;

		[CrmProperty(LogicalName = "accountrolecodename")]
        public virtual string AccountRoleCodeName
        {
            get { FillData(); return _accountRoleCodeName; }
            set {  _accountRoleCodeName = value; }
        }
        private string _accountRoleCodeName;

		[CrmProperty(LogicalName = "address1_addressid")]
        public virtual Guid Address1AddressId
        {
            get { FillData(); return _address1AddressId; }
            set { SetValue<Guid?>("address1_addressid", value); _address1AddressId = value; }
        }
        private Guid _address1AddressId;

		[CrmProperty(LogicalName = "address1_addresstypecode")]
        public virtual Enums.Address1AddressTypeCode? Address1AddressTypeCode
        {
            get { FillData(); return _address1AddressTypeCode; }
            set { SetPicklist("address1_addresstypecode", (int?)value); _address1AddressTypeCode = value; }
        }
        private Enums.Address1AddressTypeCode? _address1AddressTypeCode;

		[CrmProperty(LogicalName = "address1_addresstypecodename")]
        public virtual string Address1AddressTypeCodeName
        {
            get { FillData(); return _address1AddressTypeCodeName; }
            set {  _address1AddressTypeCodeName = value; }
        }
        private string _address1AddressTypeCodeName;

		[CrmProperty(LogicalName = "address1_city")]
        public virtual string Address1City
        {
            get { FillData(); return _address1City; }
            set { SetValue<string>("address1_city", value); _address1City = value; }
        }
        private string _address1City;

		[CrmProperty(LogicalName = "address1_country")]
        public virtual string Address1Country
        {
            get { FillData(); return _address1Country; }
            set { SetValue<string>("address1_country", value); _address1Country = value; }
        }
        private string _address1Country;

		[CrmProperty(LogicalName = "address1_county")]
        public virtual string Address1County
        {
            get { FillData(); return _address1County; }
            set { SetValue<string>("address1_county", value); _address1County = value; }
        }
        private string _address1County;

		[CrmProperty(LogicalName = "address1_fax")]
        public virtual string Address1Fax
        {
            get { FillData(); return _address1Fax; }
            set { SetValue<string>("address1_fax", value); _address1Fax = value; }
        }
        private string _address1Fax;

		[CrmProperty(LogicalName = "address1_freighttermscode")]
        public virtual Enums.Address1FreightTermsCode? Address1FreightTermsCode
        {
            get { FillData(); return _address1FreightTermsCode; }
            set { SetPicklist("address1_freighttermscode", (int?)value); _address1FreightTermsCode = value; }
        }
        private Enums.Address1FreightTermsCode? _address1FreightTermsCode;

		[CrmProperty(LogicalName = "address1_freighttermscodename")]
        public virtual string Address1FreightTermsCodeName
        {
            get { FillData(); return _address1FreightTermsCodeName; }
            set {  _address1FreightTermsCodeName = value; }
        }
        private string _address1FreightTermsCodeName;

		[CrmProperty(LogicalName = "address1_latitude")]
        public virtual double? Address1Latitude
        {
            get { FillData(); return _address1Latitude; }
            set { SetValue<double?>("address1_latitude", value); _address1Latitude = value; }
        }
        private double? _address1Latitude;

		[CrmProperty(LogicalName = "address1_line1")]
        public virtual string Address1Line1
        {
            get { FillData(); return _address1Line1; }
            set { SetValue<string>("address1_line1", value); _address1Line1 = value; }
        }
        private string _address1Line1;

		[CrmProperty(LogicalName = "address1_line2")]
        public virtual string Address1Line2
        {
            get { FillData(); return _address1Line2; }
            set { SetValue<string>("address1_line2", value); _address1Line2 = value; }
        }
        private string _address1Line2;

		[CrmProperty(LogicalName = "address1_line3")]
        public virtual string Address1Line3
        {
            get { FillData(); return _address1Line3; }
            set { SetValue<string>("address1_line3", value); _address1Line3 = value; }
        }
        private string _address1Line3;

		[CrmProperty(LogicalName = "address1_longitude")]
        public virtual double? Address1Longitude
        {
            get { FillData(); return _address1Longitude; }
            set { SetValue<double?>("address1_longitude", value); _address1Longitude = value; }
        }
        private double? _address1Longitude;

		[CrmProperty(LogicalName = "address1_name")]
        public virtual string Address1Name
        {
            get { FillData(); return _address1Name; }
            set { SetValue<string>("address1_name", value); _address1Name = value; }
        }
        private string _address1Name;

		[CrmProperty(LogicalName = "address1_postalcode")]
        public virtual string Address1PostalCode
        {
            get { FillData(); return _address1PostalCode; }
            set { SetValue<string>("address1_postalcode", value); _address1PostalCode = value; }
        }
        private string _address1PostalCode;

		[CrmProperty(LogicalName = "address1_postofficebox")]
        public virtual string Address1PostOfficeBox
        {
            get { FillData(); return _address1PostOfficeBox; }
            set { SetValue<string>("address1_postofficebox", value); _address1PostOfficeBox = value; }
        }
        private string _address1PostOfficeBox;

		[CrmProperty(LogicalName = "address1_primarycontactname")]
        public virtual string Address1PrimaryContactName
        {
            get { FillData(); return _address1PrimaryContactName; }
            set { SetValue<string>("address1_primarycontactname", value); _address1PrimaryContactName = value; }
        }
        private string _address1PrimaryContactName;

		[CrmProperty(LogicalName = "address1_shippingmethodcode")]
        public virtual Enums.Address1ShippingMethodCode? Address1ShippingMethodCode
        {
            get { FillData(); return _address1ShippingMethodCode; }
            set { SetPicklist("address1_shippingmethodcode", (int?)value); _address1ShippingMethodCode = value; }
        }
        private Enums.Address1ShippingMethodCode? _address1ShippingMethodCode;

		[CrmProperty(LogicalName = "address1_shippingmethodcodename")]
        public virtual string Address1ShippingMethodCodeName
        {
            get { FillData(); return _address1ShippingMethodCodeName; }
            set {  _address1ShippingMethodCodeName = value; }
        }
        private string _address1ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address1_stateorprovince")]
        public virtual string Address1StateOrProvince
        {
            get { FillData(); return _address1StateOrProvince; }
            set { SetValue<string>("address1_stateorprovince", value); _address1StateOrProvince = value; }
        }
        private string _address1StateOrProvince;

		[CrmProperty(LogicalName = "address1_telephone1")]
        public virtual string Address1Telephone1
        {
            get { FillData(); return _address1Telephone1; }
            set { SetValue<string>("address1_telephone1", value); _address1Telephone1 = value; }
        }
        private string _address1Telephone1;

		[CrmProperty(LogicalName = "address1_telephone2")]
        public virtual string Address1Telephone2
        {
            get { FillData(); return _address1Telephone2; }
            set { SetValue<string>("address1_telephone2", value); _address1Telephone2 = value; }
        }
        private string _address1Telephone2;

		[CrmProperty(LogicalName = "address1_telephone3")]
        public virtual string Address1Telephone3
        {
            get { FillData(); return _address1Telephone3; }
            set { SetValue<string>("address1_telephone3", value); _address1Telephone3 = value; }
        }
        private string _address1Telephone3;

		[CrmProperty(LogicalName = "address1_upszone")]
        public virtual string Address1UPSZone
        {
            get { FillData(); return _address1UPSZone; }
            set { SetValue<string>("address1_upszone", value); _address1UPSZone = value; }
        }
        private string _address1UPSZone;

		[CrmProperty(LogicalName = "address1_utcoffset")]
        public virtual int? Address1UTCOffset
        {
            get { FillData(); return _address1UTCOffset; }
            set { SetValue<int?>("address1_utcoffset", value); _address1UTCOffset = value; }
        }
        private int? _address1UTCOffset;

		[CrmProperty(LogicalName = "address2_addressid")]
        public virtual Guid Address2AddressId
        {
            get { FillData(); return _address2AddressId; }
            set { SetValue<Guid?>("address2_addressid", value); _address2AddressId = value; }
        }
        private Guid _address2AddressId;

		[CrmProperty(LogicalName = "address2_addresstypecode")]
        public virtual Enums.Address2AddressTypeCode? Address2AddressTypeCode
        {
            get { FillData(); return _address2AddressTypeCode; }
            set { SetPicklist("address2_addresstypecode", (int?)value); _address2AddressTypeCode = value; }
        }
        private Enums.Address2AddressTypeCode? _address2AddressTypeCode;

		[CrmProperty(LogicalName = "address2_addresstypecodename")]
        public virtual string Address2AddressTypeCodeName
        {
            get { FillData(); return _address2AddressTypeCodeName; }
            set {  _address2AddressTypeCodeName = value; }
        }
        private string _address2AddressTypeCodeName;

		[CrmProperty(LogicalName = "address2_city")]
        public virtual string Address2City
        {
            get { FillData(); return _address2City; }
            set { SetValue<string>("address2_city", value); _address2City = value; }
        }
        private string _address2City;

		[CrmProperty(LogicalName = "address2_country")]
        public virtual string Address2Country
        {
            get { FillData(); return _address2Country; }
            set { SetValue<string>("address2_country", value); _address2Country = value; }
        }
        private string _address2Country;

		[CrmProperty(LogicalName = "address2_county")]
        public virtual string Address2County
        {
            get { FillData(); return _address2County; }
            set { SetValue<string>("address2_county", value); _address2County = value; }
        }
        private string _address2County;

		[CrmProperty(LogicalName = "address2_fax")]
        public virtual string Address2Fax
        {
            get { FillData(); return _address2Fax; }
            set { SetValue<string>("address2_fax", value); _address2Fax = value; }
        }
        private string _address2Fax;

		[CrmProperty(LogicalName = "address2_freighttermscode")]
        public virtual Enums.Address2FreightTermsCode? Address2FreightTermsCode
        {
            get { FillData(); return _address2FreightTermsCode; }
            set { SetPicklist("address2_freighttermscode", (int?)value); _address2FreightTermsCode = value; }
        }
        private Enums.Address2FreightTermsCode? _address2FreightTermsCode;

		[CrmProperty(LogicalName = "address2_freighttermscodename")]
        public virtual string Address2FreightTermsCodeName
        {
            get { FillData(); return _address2FreightTermsCodeName; }
            set {  _address2FreightTermsCodeName = value; }
        }
        private string _address2FreightTermsCodeName;

		[CrmProperty(LogicalName = "address2_latitude")]
        public virtual double? Address2Latitude
        {
            get { FillData(); return _address2Latitude; }
            set { SetValue<double?>("address2_latitude", value); _address2Latitude = value; }
        }
        private double? _address2Latitude;

		[CrmProperty(LogicalName = "address2_line1")]
        public virtual string Address2Line1
        {
            get { FillData(); return _address2Line1; }
            set { SetValue<string>("address2_line1", value); _address2Line1 = value; }
        }
        private string _address2Line1;

		[CrmProperty(LogicalName = "address2_line2")]
        public virtual string Address2Line2
        {
            get { FillData(); return _address2Line2; }
            set { SetValue<string>("address2_line2", value); _address2Line2 = value; }
        }
        private string _address2Line2;

		[CrmProperty(LogicalName = "address2_line3")]
        public virtual string Address2Line3
        {
            get { FillData(); return _address2Line3; }
            set { SetValue<string>("address2_line3", value); _address2Line3 = value; }
        }
        private string _address2Line3;

		[CrmProperty(LogicalName = "address2_longitude")]
        public virtual double? Address2Longitude
        {
            get { FillData(); return _address2Longitude; }
            set { SetValue<double?>("address2_longitude", value); _address2Longitude = value; }
        }
        private double? _address2Longitude;

		[CrmProperty(LogicalName = "address2_name")]
        public virtual string Address2Name
        {
            get { FillData(); return _address2Name; }
            set { SetValue<string>("address2_name", value); _address2Name = value; }
        }
        private string _address2Name;

		[CrmProperty(LogicalName = "address2_postalcode")]
        public virtual string Address2PostalCode
        {
            get { FillData(); return _address2PostalCode; }
            set { SetValue<string>("address2_postalcode", value); _address2PostalCode = value; }
        }
        private string _address2PostalCode;

		[CrmProperty(LogicalName = "address2_postofficebox")]
        public virtual string Address2PostOfficeBox
        {
            get { FillData(); return _address2PostOfficeBox; }
            set { SetValue<string>("address2_postofficebox", value); _address2PostOfficeBox = value; }
        }
        private string _address2PostOfficeBox;

		[CrmProperty(LogicalName = "address2_primarycontactname")]
        public virtual string Address2PrimaryContactName
        {
            get { FillData(); return _address2PrimaryContactName; }
            set { SetValue<string>("address2_primarycontactname", value); _address2PrimaryContactName = value; }
        }
        private string _address2PrimaryContactName;

		[CrmProperty(LogicalName = "address2_shippingmethodcode")]
        public virtual Enums.Address2ShippingMethodCode? Address2ShippingMethodCode
        {
            get { FillData(); return _address2ShippingMethodCode; }
            set { SetPicklist("address2_shippingmethodcode", (int?)value); _address2ShippingMethodCode = value; }
        }
        private Enums.Address2ShippingMethodCode? _address2ShippingMethodCode;

		[CrmProperty(LogicalName = "address2_shippingmethodcodename")]
        public virtual string Address2ShippingMethodCodeName
        {
            get { FillData(); return _address2ShippingMethodCodeName; }
            set {  _address2ShippingMethodCodeName = value; }
        }
        private string _address2ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address2_stateorprovince")]
        public virtual string Address2StateOrProvince
        {
            get { FillData(); return _address2StateOrProvince; }
            set { SetValue<string>("address2_stateorprovince", value); _address2StateOrProvince = value; }
        }
        private string _address2StateOrProvince;

		[CrmProperty(LogicalName = "address2_telephone1")]
        public virtual string Address2Telephone1
        {
            get { FillData(); return _address2Telephone1; }
            set { SetValue<string>("address2_telephone1", value); _address2Telephone1 = value; }
        }
        private string _address2Telephone1;

		[CrmProperty(LogicalName = "address2_telephone2")]
        public virtual string Address2Telephone2
        {
            get { FillData(); return _address2Telephone2; }
            set { SetValue<string>("address2_telephone2", value); _address2Telephone2 = value; }
        }
        private string _address2Telephone2;

		[CrmProperty(LogicalName = "address2_telephone3")]
        public virtual string Address2Telephone3
        {
            get { FillData(); return _address2Telephone3; }
            set { SetValue<string>("address2_telephone3", value); _address2Telephone3 = value; }
        }
        private string _address2Telephone3;

		[CrmProperty(LogicalName = "address2_upszone")]
        public virtual string Address2UPSZone
        {
            get { FillData(); return _address2UPSZone; }
            set { SetValue<string>("address2_upszone", value); _address2UPSZone = value; }
        }
        private string _address2UPSZone;

		[CrmProperty(LogicalName = "address2_utcoffset")]
        public virtual int? Address2UTCOffset
        {
            get { FillData(); return _address2UTCOffset; }
            set { SetValue<int?>("address2_utcoffset", value); _address2UTCOffset = value; }
        }
        private int? _address2UTCOffset;

		[CrmProperty(LogicalName = "adx_changepasswordatnextlogon")]
        public virtual bool? AdxChangepasswordatnextlogon
        {
            get { FillData(); return _adxChangepasswordatnextlogon; }
            set { SetValue<bool?>("adx_changepasswordatnextlogon", value); _adxChangepasswordatnextlogon = value; }
        }
        private bool? _adxChangepasswordatnextlogon;

		[CrmProperty(LogicalName = "adx_changepasswordatnextlogonname")]
        public virtual string AdxChangepasswordatnextlogonName
        {
            get { FillData(); return _adxChangepasswordatnextlogonName; }
            set {  _adxChangepasswordatnextlogonName = value; }
        }
        private string _adxChangepasswordatnextlogonName;

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedByIPAddress
        {
            get { FillData(); return _adxCreatedByIPAddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedByIPAddress = value; }
        }
        private string _adxCreatedByIPAddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedByUsername
        {
            get { FillData(); return _adxCreatedByUsername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedByUsername = value; }
        }
        private string _adxCreatedByUsername;

		[CrmProperty(LogicalName = "adx_failedpasswordanswerattempts")]
        public virtual int? AdxFailedpasswordanswerattempts
        {
            get { FillData(); return _adxFailedpasswordanswerattempts; }
            set { SetValue<int?>("adx_failedpasswordanswerattempts", value); _adxFailedpasswordanswerattempts = value; }
        }
        private int? _adxFailedpasswordanswerattempts;

		[CrmProperty(LogicalName = "adx_failedpasswordanswerattemptwindowstart")]
        public virtual DateTime? AdxFailedpasswordanswerattemptwindowstart
        {
            get { FillData(); return _adxFailedpasswordanswerattemptwindowstart; }
            set { SetValue<DateTime?>("adx_failedpasswordanswerattemptwindowstart", value); _adxFailedpasswordanswerattemptwindowstart = value; }
        }
        private DateTime? _adxFailedpasswordanswerattemptwindowstart;

		[CrmProperty(LogicalName = "adx_failedpasswordattempts")]
        public virtual int? AdxFailedpasswordattempts
        {
            get { FillData(); return _adxFailedpasswordattempts; }
            set { SetValue<int?>("adx_failedpasswordattempts", value); _adxFailedpasswordattempts = value; }
        }
        private int? _adxFailedpasswordattempts;

		[CrmProperty(LogicalName = "adx_failedpasswordattemptwindowstart")]
        public virtual DateTime? AdxFailedpasswordattemptwindowstart
        {
            get { FillData(); return _adxFailedpasswordattemptwindowstart; }
            set { SetValue<DateTime?>("adx_failedpasswordattemptwindowstart", value); _adxFailedpasswordattemptwindowstart = value; }
        }
        private DateTime? _adxFailedpasswordattemptwindowstart;

		[CrmProperty(LogicalName = "adx_identityprovidername")]
        public virtual string AdxIdentityprovidername
        {
            get { FillData(); return _adxIdentityprovidername; }
            set { SetValue<string>("adx_identityprovidername", value); _adxIdentityprovidername = value; }
        }
        private string _adxIdentityprovidername;

		[CrmProperty(LogicalName = "adx_invitationcode")]
        public virtual string AdxInvitationCode
        {
            get { FillData(); return _adxInvitationCode; }
            set { SetValue<string>("adx_invitationcode", value); _adxInvitationCode = value; }
        }
        private string _adxInvitationCode;

		[CrmProperty(LogicalName = "adx_invitationcodeexpirydate")]
        public virtual DateTime? AdxInvitationCodeExpiryDate
        {
            get { FillData(); return _adxInvitationCodeExpiryDate; }
            set { SetValue<DateTime?>("adx_invitationcodeexpirydate", value); _adxInvitationCodeExpiryDate = value; }
        }
        private DateTime? _adxInvitationCodeExpiryDate;

		[CrmProperty(LogicalName = "adx_lastactivity")]
        public virtual DateTime? AdxLastactivity
        {
            get { FillData(); return _adxLastactivity; }
            set { SetValue<DateTime?>("adx_lastactivity", value); _adxLastactivity = value; }
        }
        private DateTime? _adxLastactivity;

		[CrmProperty(LogicalName = "adx_lastlockedout")]
        public virtual DateTime? AdxLastlockedout
        {
            get { FillData(); return _adxLastlockedout; }
            set { SetValue<DateTime?>("adx_lastlockedout", value); _adxLastlockedout = value; }
        }
        private DateTime? _adxLastlockedout;

		[CrmProperty(LogicalName = "adx_lastpasswordchange")]
        public virtual DateTime? AdxLastpasswordchange
        {
            get { FillData(); return _adxLastpasswordchange; }
            set { SetValue<DateTime?>("adx_lastpasswordchange", value); _adxLastpasswordchange = value; }
        }
        private DateTime? _adxLastpasswordchange;

		[CrmProperty(LogicalName = "adx_lastsuccessfullogon")]
        public virtual DateTime? AdxLastSuccessfulLogon
        {
            get { FillData(); return _adxLastSuccessfulLogon; }
            set { SetValue<DateTime?>("adx_lastsuccessfullogon", value); _adxLastSuccessfulLogon = value; }
        }
        private DateTime? _adxLastSuccessfulLogon;

		[CrmProperty(LogicalName = "adx_lockedout")]
        public virtual bool? AdxLockedout
        {
            get { FillData(); return _adxLockedout; }
            set { SetValue<bool?>("adx_lockedout", value); _adxLockedout = value; }
        }
        private bool? _adxLockedout;

		[CrmProperty(LogicalName = "adx_lockedoutname")]
        public virtual string AdxLockedoutName
        {
            get { FillData(); return _adxLockedoutName; }
            set {  _adxLockedoutName = value; }
        }
        private string _adxLockedoutName;

		[CrmProperty(LogicalName = "adx_logonenabled")]
        public virtual bool? AdxLogonEnabled
        {
            get { FillData(); return _adxLogonEnabled; }
            set { SetValue<bool?>("adx_logonenabled", value); _adxLogonEnabled = value; }
        }
        private bool? _adxLogonEnabled;

		[CrmProperty(LogicalName = "adx_logonenabledname")]
        public virtual string AdxLogonenabledName
        {
            get { FillData(); return _adxLogonenabledName; }
            set {  _adxLogonenabledName = value; }
        }
        private string _adxLogonenabledName;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "adx_organizationname")]
        public virtual string AdxOrganizationName
        {
            get { FillData(); return _adxOrganizationName; }
            set { SetValue<string>("adx_organizationname", value); _adxOrganizationName = value; }
        }
        private string _adxOrganizationName;

		[CrmProperty(LogicalName = "adx_password")]
        public virtual string AdxPassword
        {
            get { FillData(); return _adxPassword; }
            set { SetValue<string>("adx_password", value); _adxPassword = value; }
        }
        private string _adxPassword;

		[CrmProperty(LogicalName = "adx_passwordanswer")]
        public virtual string AdxPasswordanswer
        {
            get { FillData(); return _adxPasswordanswer; }
            set { SetValue<string>("adx_passwordanswer", value); _adxPasswordanswer = value; }
        }
        private string _adxPasswordanswer;

		[CrmProperty(LogicalName = "adx_passwordformat")]
        public virtual string AdxPasswordformat
        {
            get { FillData(); return _adxPasswordformat; }
            set { SetValue<string>("adx_passwordformat", value); _adxPasswordformat = value; }
        }
        private string _adxPasswordformat;

		[CrmProperty(LogicalName = "adx_passwordquestion")]
        public virtual string AdxPasswordquestion
        {
            get { FillData(); return _adxPasswordquestion; }
            set { SetValue<string>("adx_passwordquestion", value); _adxPasswordquestion = value; }
        }
        private string _adxPasswordquestion;

		[CrmProperty(LogicalName = "adx_passwordsalt")]
        public virtual string AdxPasswordsalt
        {
            get { FillData(); return _adxPasswordsalt; }
            set { SetValue<string>("adx_passwordsalt", value); _adxPasswordsalt = value; }
        }
        private string _adxPasswordsalt;

		[CrmProperty(LogicalName = "adx_resetpassword")]
        public virtual string AdxResetpassword
        {
            get { FillData(); return _adxResetpassword; }
            set { SetValue<string>("adx_resetpassword", value); _adxResetpassword = value; }
        }
        private string _adxResetpassword;

		[CrmProperty(LogicalName = "adx_systemuserid", IsLookup = true)]
        public virtual Guid? AdxSystemuserid
        {
            get { FillData(); return _adxSystemuserid; }
            set { SetLookup("adx_systemuserid", "systemuser", value); _adxSystemuserid = value; }
        }
        private Guid? _adxSystemuserid;

		[CrmProperty(LogicalName = "adx_systemuseridname")]
        public virtual string AdxSystemuseridName
        {
            get { FillData(); return _adxSystemuseridName; }
            set {  _adxSystemuseridName = value; }
        }
        private string _adxSystemuseridName;

		[CrmProperty(LogicalName = "adx_systemuseridyominame")]
        public virtual string AdxSystemuseridYomiName
        {
            get { FillData(); return _adxSystemuseridYomiName; }
            set {  _adxSystemuseridYomiName = value; }
        }
        private string _adxSystemuseridYomiName;

		[CrmProperty(LogicalName = "adx_timezone")]
        public virtual int? AdxTimeZone
        {
            get { FillData(); return _adxTimeZone; }
            set { SetValue<int?>("adx_timezone", value); _adxTimeZone = value; }
        }
        private int? _adxTimeZone;

		[CrmProperty(LogicalName = "adx_username")]
        public virtual string AdxUsername
        {
            get { FillData(); return _adxUsername; }
            set { SetValue<string>("adx_username", value); _adxUsername = value; }
        }
        private string _adxUsername;

		[CrmProperty(LogicalName = "aging30")]
        public virtual decimal? Aging30
        {
            get { FillData(); return _aging30; }
            set {  _aging30 = value; }
        }
        private decimal? _aging30;

		[CrmProperty(LogicalName = "aging60")]
        public virtual decimal? Aging60
        {
            get { FillData(); return _aging60; }
            set {  _aging60 = value; }
        }
        private decimal? _aging60;

		[CrmProperty(LogicalName = "aging90")]
        public virtual decimal? Aging90
        {
            get { FillData(); return _aging90; }
            set {  _aging90 = value; }
        }
        private decimal? _aging90;

		[CrmProperty(LogicalName = "anniversary")]
        public virtual DateTime? Anniversary
        {
            get { FillData(); return _anniversary; }
            set { SetValue<DateTime?>("anniversary", value); _anniversary = value; }
        }
        private DateTime? _anniversary;

		[CrmProperty(LogicalName = "annualincome")]
        public virtual decimal? AnnualIncome
        {
            get { FillData(); return _annualIncome; }
            set { SetMoney("annualincome", value); _annualIncome = value; }
        }
        private decimal? _annualIncome;

		[CrmProperty(LogicalName = "assistantname")]
        public virtual string AssistantName
        {
            get { FillData(); return _assistantName; }
            set { SetValue<string>("assistantname", value); _assistantName = value; }
        }
        private string _assistantName;

		[CrmProperty(LogicalName = "assistantphone")]
        public virtual string AssistantPhone
        {
            get { FillData(); return _assistantPhone; }
            set { SetValue<string>("assistantphone", value); _assistantPhone = value; }
        }
        private string _assistantPhone;

		[CrmProperty(LogicalName = "birthdate")]
        public virtual DateTime? BirthDate
        {
            get { FillData(); return _birthDate; }
            set { SetValue<DateTime?>("birthdate", value); _birthDate = value; }
        }
        private DateTime? _birthDate;

		[CrmProperty(LogicalName = "childrensnames")]
        public virtual string ChildrensNames
        {
            get { FillData(); return _childrensNames; }
            set { SetValue<string>("childrensnames", value); _childrensNames = value; }
        }
        private string _childrensNames;

		[CrmProperty(LogicalName = "contactid")]
        public virtual Guid ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid _contactId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "creditlimit")]
        public virtual decimal? CreditLimit
        {
            get { FillData(); return _creditLimit; }
            set { SetMoney("creditlimit", value); _creditLimit = value; }
        }
        private decimal? _creditLimit;

		[CrmProperty(LogicalName = "creditonhold")]
        public virtual bool? CreditOnHold
        {
            get { FillData(); return _creditOnHold; }
            set { SetValue<bool?>("creditonhold", value); _creditOnHold = value; }
        }
        private bool? _creditOnHold;

		[CrmProperty(LogicalName = "creditonholdname")]
        public virtual string CreditOnHoldName
        {
            get { FillData(); return _creditOnHoldName; }
            set {  _creditOnHoldName = value; }
        }
        private string _creditOnHoldName;

		[CrmProperty(LogicalName = "customersizecode")]
        public virtual Enums.CustomerSizeCode? CustomerSizeCode
        {
            get { FillData(); return _customerSizeCode; }
            set { SetPicklist("customersizecode", (int?)value); _customerSizeCode = value; }
        }
        private Enums.CustomerSizeCode? _customerSizeCode;

		[CrmProperty(LogicalName = "customersizecodename")]
        public virtual string CustomerSizeCodeName
        {
            get { FillData(); return _customerSizeCodeName; }
            set {  _customerSizeCodeName = value; }
        }
        private string _customerSizeCodeName;

		[CrmProperty(LogicalName = "customertypecode")]
        public virtual Enums.CustomerTypeCode? CustomerTypeCode
        {
            get { FillData(); return _customerTypeCode; }
            set { SetPicklist("customertypecode", (int?)value); _customerTypeCode = value; }
        }
        private Enums.CustomerTypeCode? _customerTypeCode;

		[CrmProperty(LogicalName = "customertypecodename")]
        public virtual string CustomerTypeCodeName
        {
            get { FillData(); return _customerTypeCodeName; }
            set {  _customerTypeCodeName = value; }
        }
        private string _customerTypeCodeName;

		[CrmProperty(LogicalName = "defaultpricelevelid", IsLookup = true)]
        public virtual Guid? DefaultPriceLevelId
        {
            get { FillData(); return _defaultPriceLevelId; }
            set { SetLookup("defaultpricelevelid", "pricelevel", value); _defaultPriceLevelId = value; }
        }
        private Guid? _defaultPriceLevelId;

		[CrmProperty(LogicalName = "defaultpricelevelidname")]
        public virtual string DefaultPriceLevelIdName
        {
            get { FillData(); return _defaultPriceLevelIdName; }
            set {  _defaultPriceLevelIdName = value; }
        }
        private string _defaultPriceLevelIdName;

		[CrmProperty(LogicalName = "department")]
        public virtual string Department
        {
            get { FillData(); return _department; }
            set { SetValue<string>("department", value); _department = value; }
        }
        private string _department;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "donotbulkemail")]
        public virtual bool? DoNotBulkEMail
        {
            get { FillData(); return _doNotBulkEMail; }
            set { SetValue<bool?>("donotbulkemail", value); _doNotBulkEMail = value; }
        }
        private bool? _doNotBulkEMail;

		[CrmProperty(LogicalName = "donotbulkemailname")]
        public virtual string DoNotBulkEMailName
        {
            get { FillData(); return _doNotBulkEMailName; }
            set {  _doNotBulkEMailName = value; }
        }
        private string _doNotBulkEMailName;

		[CrmProperty(LogicalName = "donotbulkpostalmail")]
        public virtual bool? DoNotBulkPostalMail
        {
            get { FillData(); return _doNotBulkPostalMail; }
            set { SetValue<bool?>("donotbulkpostalmail", value); _doNotBulkPostalMail = value; }
        }
        private bool? _doNotBulkPostalMail;

		[CrmProperty(LogicalName = "donotbulkpostalmailname")]
        public virtual string DoNotBulkPostalMailName
        {
            get { FillData(); return _doNotBulkPostalMailName; }
            set {  _doNotBulkPostalMailName = value; }
        }
        private string _doNotBulkPostalMailName;

		[CrmProperty(LogicalName = "donotemail")]
        public virtual bool? DoNotEMail
        {
            get { FillData(); return _doNotEMail; }
            set { SetValue<bool?>("donotemail", value); _doNotEMail = value; }
        }
        private bool? _doNotEMail;

		[CrmProperty(LogicalName = "donotemailname")]
        public virtual string DoNotEMailName
        {
            get { FillData(); return _doNotEMailName; }
            set {  _doNotEMailName = value; }
        }
        private string _doNotEMailName;

		[CrmProperty(LogicalName = "donotfax")]
        public virtual bool? DoNotFax
        {
            get { FillData(); return _doNotFax; }
            set { SetValue<bool?>("donotfax", value); _doNotFax = value; }
        }
        private bool? _doNotFax;

		[CrmProperty(LogicalName = "donotfaxname")]
        public virtual string DoNotFaxName
        {
            get { FillData(); return _doNotFaxName; }
            set {  _doNotFaxName = value; }
        }
        private string _doNotFaxName;

		[CrmProperty(LogicalName = "donotphone")]
        public virtual bool? DoNotPhone
        {
            get { FillData(); return _doNotPhone; }
            set { SetValue<bool?>("donotphone", value); _doNotPhone = value; }
        }
        private bool? _doNotPhone;

		[CrmProperty(LogicalName = "donotphonename")]
        public virtual string DoNotPhoneName
        {
            get { FillData(); return _doNotPhoneName; }
            set {  _doNotPhoneName = value; }
        }
        private string _doNotPhoneName;

		[CrmProperty(LogicalName = "donotpostalmail")]
        public virtual bool? DoNotPostalMail
        {
            get { FillData(); return _doNotPostalMail; }
            set { SetValue<bool?>("donotpostalmail", value); _doNotPostalMail = value; }
        }
        private bool? _doNotPostalMail;

		[CrmProperty(LogicalName = "donotpostalmailname")]
        public virtual string DoNotPostalMailName
        {
            get { FillData(); return _doNotPostalMailName; }
            set {  _doNotPostalMailName = value; }
        }
        private string _doNotPostalMailName;

		[CrmProperty(LogicalName = "donotsendmarketingmaterialname")]
        public virtual string DoNotSendMarketingMaterialName
        {
            get { FillData(); return _doNotSendMarketingMaterialName; }
            set {  _doNotSendMarketingMaterialName = value; }
        }
        private string _doNotSendMarketingMaterialName;

		[CrmProperty(LogicalName = "donotsendmm")]
        public virtual bool? DoNotSendMM
        {
            get { FillData(); return _doNotSendMM; }
            set { SetValue<bool?>("donotsendmm", value); _doNotSendMM = value; }
        }
        private bool? _doNotSendMM;

		[CrmProperty(LogicalName = "educationcode")]
        public virtual Enums.EducationCode? EducationCode
        {
            get { FillData(); return _educationCode; }
            set { SetPicklist("educationcode", (int?)value); _educationCode = value; }
        }
        private Enums.EducationCode? _educationCode;

		[CrmProperty(LogicalName = "educationcodename")]
        public virtual string EducationCodeName
        {
            get { FillData(); return _educationCodeName; }
            set {  _educationCodeName = value; }
        }
        private string _educationCodeName;

		[CrmProperty(LogicalName = "emailaddress1")]
        public virtual string EMailAddress1
        {
            get { FillData(); return _eMailAddress1; }
            set { SetValue<string>("emailaddress1", value); _eMailAddress1 = value; }
        }
        private string _eMailAddress1;

		[CrmProperty(LogicalName = "emailaddress2")]
        public virtual string EMailAddress2
        {
            get { FillData(); return _eMailAddress2; }
            set { SetValue<string>("emailaddress2", value); _eMailAddress2 = value; }
        }
        private string _eMailAddress2;

		[CrmProperty(LogicalName = "emailaddress3")]
        public virtual string EMailAddress3
        {
            get { FillData(); return _eMailAddress3; }
            set { SetValue<string>("emailaddress3", value); _eMailAddress3 = value; }
        }
        private string _eMailAddress3;

		[CrmProperty(LogicalName = "employeeid")]
        public virtual string EmployeeId
        {
            get { FillData(); return _employeeId; }
            set { SetValue<string>("employeeid", value); _employeeId = value; }
        }
        private string _employeeId;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "externaluseridentifier")]
        public virtual string ExternalUserIdentifier
        {
            get { FillData(); return _externalUserIdentifier; }
            set { SetValue<string>("externaluseridentifier", value); _externalUserIdentifier = value; }
        }
        private string _externalUserIdentifier;

		[CrmProperty(LogicalName = "familystatuscode")]
        public virtual Enums.FamilyStatusCode? FamilyStatusCode
        {
            get { FillData(); return _familyStatusCode; }
            set { SetPicklist("familystatuscode", (int?)value); _familyStatusCode = value; }
        }
        private Enums.FamilyStatusCode? _familyStatusCode;

		[CrmProperty(LogicalName = "familystatuscodename")]
        public virtual string FamilyStatusCodeName
        {
            get { FillData(); return _familyStatusCodeName; }
            set {  _familyStatusCodeName = value; }
        }
        private string _familyStatusCodeName;

		[CrmProperty(LogicalName = "fax")]
        public virtual string Fax
        {
            get { FillData(); return _fax; }
            set { SetValue<string>("fax", value); _fax = value; }
        }
        private string _fax;

		[CrmProperty(LogicalName = "firstname")]
        public virtual string FirstName
        {
            get { FillData(); return _firstName; }
            set { SetValue<string>("firstname", value); _firstName = value; }
        }
        private string _firstName;

		[CrmProperty(LogicalName = "ftpsiteurl")]
        public virtual string FtpSiteUrl
        {
            get { FillData(); return _ftpSiteUrl; }
            set { SetValue<string>("ftpsiteurl", value); _ftpSiteUrl = value; }
        }
        private string _ftpSiteUrl;

		[CrmProperty(LogicalName = "fullname")]
        public virtual string FullName
        {
            get { FillData(); return _fullName; }
            set {  _fullName = value; }
        }
        private string _fullName;

		[CrmProperty(LogicalName = "gendercode")]
        public virtual Enums.GenderCode? GenderCode
        {
            get { FillData(); return _genderCode; }
            set { SetPicklist("gendercode", (int?)value); _genderCode = value; }
        }
        private Enums.GenderCode? _genderCode;

		[CrmProperty(LogicalName = "gendercodename")]
        public virtual string GenderCodeName
        {
            get { FillData(); return _genderCodeName; }
            set {  _genderCodeName = value; }
        }
        private string _genderCodeName;

		[CrmProperty(LogicalName = "governmentid")]
        public virtual string GovernmentId
        {
            get { FillData(); return _governmentId; }
            set { SetValue<string>("governmentid", value); _governmentId = value; }
        }
        private string _governmentId;

		[CrmProperty(LogicalName = "haschildrencode")]
        public virtual Enums.HasChildrenCode? HasChildrenCode
        {
            get { FillData(); return _hasChildrenCode; }
            set { SetPicklist("haschildrencode", (int?)value); _hasChildrenCode = value; }
        }
        private Enums.HasChildrenCode? _hasChildrenCode;

		[CrmProperty(LogicalName = "haschildrencodename")]
        public virtual string HasChildrenCodeName
        {
            get { FillData(); return _hasChildrenCodeName; }
            set {  _hasChildrenCodeName = value; }
        }
        private string _hasChildrenCodeName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isautocreate")]
        public virtual bool? IsAutoCreate
        {
            get { FillData(); return _isAutoCreate; }
            set {  _isAutoCreate = value; }
        }
        private bool? _isAutoCreate;

		[CrmProperty(LogicalName = "isbackofficecustomer")]
        public virtual bool? IsBackofficeCustomer
        {
            get { FillData(); return _isBackofficeCustomer; }
            set { SetValue<bool?>("isbackofficecustomer", value); _isBackofficeCustomer = value; }
        }
        private bool? _isBackofficeCustomer;

		[CrmProperty(LogicalName = "isbackofficecustomername")]
        public virtual string IsBackofficeCustomerName
        {
            get { FillData(); return _isBackofficeCustomerName; }
            set {  _isBackofficeCustomerName = value; }
        }
        private string _isBackofficeCustomerName;

		[CrmProperty(LogicalName = "isprivate")]
        public virtual bool? IsPrivate
        {
            get { FillData(); return _isPrivate; }
            set {  _isPrivate = value; }
        }
        private bool? _isPrivate;

		[CrmProperty(LogicalName = "isprivatename")]
        public virtual string IsPrivateName
        {
            get { FillData(); return _isPrivateName; }
            set {  _isPrivateName = value; }
        }
        private string _isPrivateName;

		[CrmProperty(LogicalName = "jobtitle")]
        public virtual string JobTitle
        {
            get { FillData(); return _jobTitle; }
            set { SetValue<string>("jobtitle", value); _jobTitle = value; }
        }
        private string _jobTitle;

		[CrmProperty(LogicalName = "lastname")]
        public virtual string LastName
        {
            get { FillData(); return _lastName; }
            set { SetValue<string>("lastname", value); _lastName = value; }
        }
        private string _lastName;

		[CrmProperty(LogicalName = "lastusedincampaign")]
        public virtual DateTime? LastUsedInCampaign
        {
            get { FillData(); return _lastUsedInCampaign; }
            set { SetValue<DateTime?>("lastusedincampaign", value); _lastUsedInCampaign = value; }
        }
        private DateTime? _lastUsedInCampaign;

		[CrmProperty(LogicalName = "leadsourcecode")]
        public virtual Enums.LeadSourceCode? LeadSourceCode
        {
            get { FillData(); return _leadSourceCode; }
            set { SetPicklist("leadsourcecode", (int?)value); _leadSourceCode = value; }
        }
        private Enums.LeadSourceCode? _leadSourceCode;

		[CrmProperty(LogicalName = "leadsourcecodename")]
        public virtual string LeadSourceCodeName
        {
            get { FillData(); return _leadSourceCodeName; }
            set {  _leadSourceCodeName = value; }
        }
        private string _leadSourceCodeName;

		[CrmProperty(LogicalName = "mag_bankaccountnumber")]
        public virtual string MagBankAccountNumber
        {
            get { FillData(); return _magBankAccountNumber; }
            set { SetValue<string>("mag_bankaccountnumber", value); _magBankAccountNumber = value; }
        }
        private string _magBankAccountNumber;

		[CrmProperty(LogicalName = "mag_synchedwithxero")]
        public virtual bool? MagSynchedWithXero
        {
            get { FillData(); return _magSynchedWithXero; }
            set { SetValue<bool?>("mag_synchedwithxero", value); _magSynchedWithXero = value; }
        }
        private bool? _magSynchedWithXero;

		[CrmProperty(LogicalName = "mag_synchedwithxeroname")]
        public virtual string MagSynchedwithxeroName
        {
            get { FillData(); return _magSynchedwithxeroName; }
            set {  _magSynchedwithxeroName = value; }
        }
        private string _magSynchedwithxeroName;

		[CrmProperty(LogicalName = "mag_taxidnumber")]
        public virtual string MagTaxIDNumber
        {
            get { FillData(); return _magTaxIDNumber; }
            set { SetValue<string>("mag_taxidnumber", value); _magTaxIDNumber = value; }
        }
        private string _magTaxIDNumber;

		[CrmProperty(LogicalName = "mag_xeroid")]
        public virtual string MagXeroId
        {
            get { FillData(); return _magXeroId; }
            set { SetValue<string>("mag_xeroid", value); _magXeroId = value; }
        }
        private string _magXeroId;

		[CrmProperty(LogicalName = "managername")]
        public virtual string ManagerName
        {
            get { FillData(); return _managerName; }
            set { SetValue<string>("managername", value); _managerName = value; }
        }
        private string _managerName;

		[CrmProperty(LogicalName = "managerphone")]
        public virtual string ManagerPhone
        {
            get { FillData(); return _managerPhone; }
            set { SetValue<string>("managerphone", value); _managerPhone = value; }
        }
        private string _managerPhone;

		[CrmProperty(LogicalName = "mastercontactidname")]
        public virtual string MasterContactIdName
        {
            get { FillData(); return _masterContactIdName; }
            set {  _masterContactIdName = value; }
        }
        private string _masterContactIdName;

		[CrmProperty(LogicalName = "mastercontactidyominame")]
        public virtual string MasterContactIdYomiName
        {
            get { FillData(); return _masterContactIdYomiName; }
            set {  _masterContactIdYomiName = value; }
        }
        private string _masterContactIdYomiName;

		[CrmProperty(LogicalName = "masterid", IsLookup = true)]
        public virtual Guid? MasterId
        {
            get { FillData(); return _masterId; }
            set {  _masterId = value; }
        }
        private Guid? _masterId;

		[CrmProperty(LogicalName = "masteridName", IsEntityReferenceHelper = true)]
        public virtual string MasterIdName
        {
            get { FillData(); return _masterIdName; }
            set {  _masterIdName = value; }
        }
        private string _masterIdName;

		[CrmProperty(LogicalName = "merged")]
        public virtual bool? Merged
        {
            get { FillData(); return _merged; }
            set {  _merged = value; }
        }
        private bool? _merged;

		[CrmProperty(LogicalName = "mergedname")]
        public virtual string MergedName
        {
            get { FillData(); return _mergedName; }
            set {  _mergedName = value; }
        }
        private string _mergedName;

		[CrmProperty(LogicalName = "middlename")]
        public virtual string MiddleName
        {
            get { FillData(); return _middleName; }
            set { SetValue<string>("middlename", value); _middleName = value; }
        }
        private string _middleName;

		[CrmProperty(LogicalName = "mobilephone")]
        public virtual string MobilePhone
        {
            get { FillData(); return _mobilePhone; }
            set { SetValue<string>("mobilephone", value); _mobilePhone = value; }
        }
        private string _mobilePhone;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_eservicesaccesslevel")]
        public virtual Enums.MSAEServicesAccessLevel? MSAEServicesAccessLevel
        {
            get { FillData(); return _mSAEServicesAccessLevel; }
            set { SetPicklist("msa_eservicesaccesslevel", (int?)value); _mSAEServicesAccessLevel = value; }
        }
        private Enums.MSAEServicesAccessLevel? _mSAEServicesAccessLevel;

		[CrmProperty(LogicalName = "msa_eservicesaccesslevelname")]
        public virtual string MsaEservicesaccesslevelName
        {
            get { FillData(); return _msaEservicesaccesslevelName; }
            set {  _msaEservicesaccesslevelName = value; }
        }
        private string _msaEservicesaccesslevelName;

		[CrmProperty(LogicalName = "msa_managingpartnerid", IsLookup = true)]
        public virtual Guid? MsaManagingpartnerid
        {
            get { FillData(); return _msaManagingpartnerid; }
            set { SetLookup("msa_managingpartnerid", "account", value); _msaManagingpartnerid = value; }
        }
        private Guid? _msaManagingpartnerid;

		[CrmProperty(LogicalName = "msa_managingpartneridname")]
        public virtual string MsaManagingpartneridName
        {
            get { FillData(); return _msaManagingpartneridName; }
            set {  _msaManagingpartneridName = value; }
        }
        private string _msaManagingpartneridName;

		[CrmProperty(LogicalName = "msa_managingpartneridyominame")]
        public virtual string MsaManagingpartneridYomiName
        {
            get { FillData(); return _msaManagingpartneridYomiName; }
            set {  _msaManagingpartneridYomiName = value; }
        }
        private string _msaManagingpartneridYomiName;

		[CrmProperty(LogicalName = "msa_webuser")]
        public virtual bool? MSAWebuser
        {
            get { FillData(); return _mSAWebuser; }
            set { SetValue<bool?>("msa_webuser", value); _mSAWebuser = value; }
        }
        private bool? _mSAWebuser;

		[CrmProperty(LogicalName = "msa_webusername")]
        public virtual string MsaWebuserName
        {
            get { FillData(); return _msaWebuserName; }
            set {  _msaWebuserName = value; }
        }
        private string _msaWebuserName;

		[CrmProperty(LogicalName = "new_companycaseaccess")]
        public virtual bool? NewCompanyCaseAccess
        {
            get { FillData(); return _newCompanyCaseAccess; }
            set { SetValue<bool?>("new_companycaseaccess", value); _newCompanyCaseAccess = value; }
        }
        private bool? _newCompanyCaseAccess;

		[CrmProperty(LogicalName = "new_companycaseaccessname")]
        public virtual string NewCompanycaseaccessName
        {
            get { FillData(); return _newCompanycaseaccessName; }
            set {  _newCompanycaseaccessName = value; }
        }
        private string _newCompanycaseaccessName;

		[CrmProperty(LogicalName = "new_contactsid", IsLookup = true)]
        public virtual Guid? NewContactsId
        {
            get { FillData(); return _newContactsId; }
            set { SetLookup("new_contactsid", "new_hostedservice", value); _newContactsId = value; }
        }
        private Guid? _newContactsId;

		[CrmProperty(LogicalName = "new_contactsidname")]
        public virtual string NewContactsIdName
        {
            get { FillData(); return _newContactsIdName; }
            set {  _newContactsIdName = value; }
        }
        private string _newContactsIdName;

		[CrmProperty(LogicalName = "new_costcentre")]
        public virtual string NewCostCentre
        {
            get { FillData(); return _newCostCentre; }
            set { SetValue<string>("new_costcentre", value); _newCostCentre = value; }
        }
        private string _newCostCentre;

		[CrmProperty(LogicalName = "new_cpsmdeleted")]
        public virtual DateTime? NewCPSMDeleted
        {
            get { FillData(); return _newCPSMDeleted; }
            set { SetValue<DateTime?>("new_cpsmdeleted", value); _newCPSMDeleted = value; }
        }
        private DateTime? _newCPSMDeleted;

		[CrmProperty(LogicalName = "new_donotinvoice")]
        public virtual bool? NewDonotinvoice
        {
            get { FillData(); return _newDonotinvoice; }
            set { SetValue<bool?>("new_donotinvoice", value); _newDonotinvoice = value; }
        }
        private bool? _newDonotinvoice;

		[CrmProperty(LogicalName = "new_donotinvoicename")]
        public virtual string NewDonotinvoiceName
        {
            get { FillData(); return _newDonotinvoiceName; }
            set {  _newDonotinvoiceName = value; }
        }
        private string _newDonotinvoiceName;

		[CrmProperty(LogicalName = "new_dr")]
        public virtual bool? NewDR
        {
            get { FillData(); return _newDR; }
            set { SetValue<bool?>("new_dr", value); _newDR = value; }
        }
        private bool? _newDR;

		[CrmProperty(LogicalName = "new_drname")]
        public virtual string NewDrName
        {
            get { FillData(); return _newDrName; }
            set {  _newDrName = value; }
        }
        private string _newDrName;

		[CrmProperty(LogicalName = "new_email2sms")]
        public virtual string NewEmail2SMS
        {
            get { FillData(); return _newEmail2SMS; }
            set { SetValue<string>("new_email2sms", value); _newEmail2SMS = value; }
        }
        private string _newEmail2SMS;

		[CrmProperty(LogicalName = "new_extension")]
        public virtual string NewExtension
        {
            get { FillData(); return _newExtension; }
            set { SetValue<string>("new_extension", value); _newExtension = value; }
        }
        private string _newExtension;

		[CrmProperty(LogicalName = "new_oldsamaccountname")]
        public virtual string NewOldsAMAccountName
        {
            get { FillData(); return _newOldsAMAccountName; }
            set { SetValue<string>("new_oldsamaccountname", value); _newOldsAMAccountName = value; }
        }
        private string _newOldsAMAccountName;

		[CrmProperty(LogicalName = "new_samaccountname")]
        public virtual string NewSAMAccountName
        {
            get { FillData(); return _newSAMAccountName; }
            set { SetValue<string>("new_samaccountname", value); _newSAMAccountName = value; }
        }
        private string _newSAMAccountName;

		[CrmProperty(LogicalName = "new_sipuri")]
        public virtual string NewSIPURI
        {
            get { FillData(); return _newSIPURI; }
            set { SetValue<string>("new_sipuri", value); _newSIPURI = value; }
        }
        private string _newSIPURI;

		[CrmProperty(LogicalName = "new_sitecontact")]
        public virtual bool? NewSiteContact
        {
            get { FillData(); return _newSiteContact; }
            set { SetValue<bool?>("new_sitecontact", value); _newSiteContact = value; }
        }
        private bool? _newSiteContact;

		[CrmProperty(LogicalName = "new_sitecontactname")]
        public virtual string NewSitecontactName
        {
            get { FillData(); return _newSitecontactName; }
            set {  _newSitecontactName = value; }
        }
        private string _newSitecontactName;

		[CrmProperty(LogicalName = "new_upn")]
        public virtual string NewUPN
        {
            get { FillData(); return _newUPN; }
            set { SetValue<string>("new_upn", value); _newUPN = value; }
        }
        private string _newUPN;

		[CrmProperty(LogicalName = "nickname")]
        public virtual string NickName
        {
            get { FillData(); return _nickName; }
            set { SetValue<string>("nickname", value); _nickName = value; }
        }
        private string _nickName;

		[CrmProperty(LogicalName = "numberofchildren")]
        public virtual int? NumberOfChildren
        {
            get { FillData(); return _numberOfChildren; }
            set { SetValue<int?>("numberofchildren", value); _numberOfChildren = value; }
        }
        private int? _numberOfChildren;

		[CrmProperty(LogicalName = "originatingleadid", IsLookup = true)]
        public virtual Guid? OriginatingLeadId
        {
            get { FillData(); return _originatingLeadId; }
            set {  _originatingLeadId = value; }
        }
        private Guid? _originatingLeadId;

		[CrmProperty(LogicalName = "originatingleadidname")]
        public virtual string OriginatingLeadIdName
        {
            get { FillData(); return _originatingLeadIdName; }
            set {  _originatingLeadIdName = value; }
        }
        private string _originatingLeadIdName;

		[CrmProperty(LogicalName = "originatingleadidyominame")]
        public virtual string OriginatingLeadIdYomiName
        {
            get { FillData(); return _originatingLeadIdYomiName; }
            set {  _originatingLeadIdYomiName = value; }
        }
        private string _originatingLeadIdYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "pager")]
        public virtual string Pager
        {
            get { FillData(); return _pager; }
            set { SetValue<string>("pager", value); _pager = value; }
        }
        private string _pager;

		[CrmProperty(LogicalName = "parentcontactid", IsLookup = true)]
        public virtual Guid? ParentContactId
        {
            get { FillData(); return _parentContactId; }
            set {  _parentContactId = value; }
        }
        private Guid? _parentContactId;

		[CrmProperty(LogicalName = "parentcontactidname")]
        public virtual string ParentContactIdName
        {
            get { FillData(); return _parentContactIdName; }
            set {  _parentContactIdName = value; }
        }
        private string _parentContactIdName;

		[CrmProperty(LogicalName = "parentcontactidyominame")]
        public virtual string ParentContactIdYomiName
        {
            get { FillData(); return _parentContactIdYomiName; }
            set {  _parentContactIdYomiName = value; }
        }
        private string _parentContactIdYomiName;

		[CrmProperty(LogicalName = "parentcustomerid", IsLookup = true)]
        public virtual Guid? ParentCustomerId
        {
            get { FillData(); return _parentCustomerId; }
            set { SetCustomer("parentcustomerid", ParentCustomerIdType, value); _parentCustomerId = value; }
        }
        private Guid? _parentCustomerId;

		[CrmProperty(LogicalName = "parentcustomeridname")]
        public virtual string ParentCustomerIdName
        {
            get { FillData(); return _parentCustomerIdName; }
            set {  _parentCustomerIdName = value; }
        }
        private string _parentCustomerIdName;

		[CrmProperty(LogicalName = "parentcustomeridType", IsEntityReferenceHelper = true)]
        public virtual string ParentCustomerIdType
        {
            get { FillData(); return _parentCustomerIdType; }
            set {  _parentCustomerIdType = value; }
        }
        private string _parentCustomerIdType;

		[CrmProperty(LogicalName = "parentcustomeridyominame")]
        public virtual string ParentCustomerIdYomiName
        {
            get { FillData(); return _parentCustomerIdYomiName; }
            set {  _parentCustomerIdYomiName = value; }
        }
        private string _parentCustomerIdYomiName;

		[CrmProperty(LogicalName = "participatesinworkflow")]
        public virtual bool? ParticipatesInWorkflow
        {
            get { FillData(); return _participatesInWorkflow; }
            set { SetValue<bool?>("participatesinworkflow", value); _participatesInWorkflow = value; }
        }
        private bool? _participatesInWorkflow;

		[CrmProperty(LogicalName = "participatesinworkflowname")]
        public virtual string ParticipatesInWorkflowName
        {
            get { FillData(); return _participatesInWorkflowName; }
            set {  _participatesInWorkflowName = value; }
        }
        private string _participatesInWorkflowName;

		[CrmProperty(LogicalName = "paymenttermscode")]
        public virtual Enums.PaymentTermsCode? PaymentTermsCode
        {
            get { FillData(); return _paymentTermsCode; }
            set { SetPicklist("paymenttermscode", (int?)value); _paymentTermsCode = value; }
        }
        private Enums.PaymentTermsCode? _paymentTermsCode;

		[CrmProperty(LogicalName = "paymenttermscodename")]
        public virtual string PaymentTermsCodeName
        {
            get { FillData(); return _paymentTermsCodeName; }
            set {  _paymentTermsCodeName = value; }
        }
        private string _paymentTermsCodeName;

		[CrmProperty(LogicalName = "preferredappointmentdaycode")]
        public virtual Enums.PreferredAppointmentDayCode? PreferredAppointmentDayCode
        {
            get { FillData(); return _preferredAppointmentDayCode; }
            set { SetPicklist("preferredappointmentdaycode", (int?)value); _preferredAppointmentDayCode = value; }
        }
        private Enums.PreferredAppointmentDayCode? _preferredAppointmentDayCode;

		[CrmProperty(LogicalName = "preferredappointmentdaycodename")]
        public virtual string PreferredAppointmentDayCodeName
        {
            get { FillData(); return _preferredAppointmentDayCodeName; }
            set {  _preferredAppointmentDayCodeName = value; }
        }
        private string _preferredAppointmentDayCodeName;

		[CrmProperty(LogicalName = "preferredappointmenttimecode")]
        public virtual Enums.PreferredAppointmentTimeCode? PreferredAppointmentTimeCode
        {
            get { FillData(); return _preferredAppointmentTimeCode; }
            set { SetPicklist("preferredappointmenttimecode", (int?)value); _preferredAppointmentTimeCode = value; }
        }
        private Enums.PreferredAppointmentTimeCode? _preferredAppointmentTimeCode;

		[CrmProperty(LogicalName = "preferredappointmenttimecodename")]
        public virtual string PreferredAppointmentTimeCodeName
        {
            get { FillData(); return _preferredAppointmentTimeCodeName; }
            set {  _preferredAppointmentTimeCodeName = value; }
        }
        private string _preferredAppointmentTimeCodeName;

		[CrmProperty(LogicalName = "preferredcontactmethodcode")]
        public virtual Enums.PreferredContactMethodCode? PreferredContactMethodCode
        {
            get { FillData(); return _preferredContactMethodCode; }
            set { SetPicklist("preferredcontactmethodcode", (int?)value); _preferredContactMethodCode = value; }
        }
        private Enums.PreferredContactMethodCode? _preferredContactMethodCode;

		[CrmProperty(LogicalName = "preferredcontactmethodcodename")]
        public virtual string PreferredContactMethodCodeName
        {
            get { FillData(); return _preferredContactMethodCodeName; }
            set {  _preferredContactMethodCodeName = value; }
        }
        private string _preferredContactMethodCodeName;

		[CrmProperty(LogicalName = "preferredequipmentid", IsLookup = true)]
        public virtual Guid? PreferredEquipmentId
        {
            get { FillData(); return _preferredEquipmentId; }
            set { SetLookup("preferredequipmentid", "equipment", value); _preferredEquipmentId = value; }
        }
        private Guid? _preferredEquipmentId;

		[CrmProperty(LogicalName = "preferredequipmentidname")]
        public virtual string PreferredEquipmentIdName
        {
            get { FillData(); return _preferredEquipmentIdName; }
            set {  _preferredEquipmentIdName = value; }
        }
        private string _preferredEquipmentIdName;

		[CrmProperty(LogicalName = "preferredserviceid", IsLookup = true)]
        public virtual Guid? PreferredServiceId
        {
            get { FillData(); return _preferredServiceId; }
            set { SetLookup("preferredserviceid", "service", value); _preferredServiceId = value; }
        }
        private Guid? _preferredServiceId;

		[CrmProperty(LogicalName = "preferredserviceidname")]
        public virtual string PreferredServiceIdName
        {
            get { FillData(); return _preferredServiceIdName; }
            set {  _preferredServiceIdName = value; }
        }
        private string _preferredServiceIdName;

		[CrmProperty(LogicalName = "preferredsystemuserid", IsLookup = true)]
        public virtual Guid? PreferredSystemUserId
        {
            get { FillData(); return _preferredSystemUserId; }
            set { SetLookup("preferredsystemuserid", "systemuser", value); _preferredSystemUserId = value; }
        }
        private Guid? _preferredSystemUserId;

		[CrmProperty(LogicalName = "preferredsystemuseridname")]
        public virtual string PreferredSystemUserIdName
        {
            get { FillData(); return _preferredSystemUserIdName; }
            set {  _preferredSystemUserIdName = value; }
        }
        private string _preferredSystemUserIdName;

		[CrmProperty(LogicalName = "preferredsystemuseridyominame")]
        public virtual string PreferredSystemUserIdYomiName
        {
            get { FillData(); return _preferredSystemUserIdYomiName; }
            set {  _preferredSystemUserIdYomiName = value; }
        }
        private string _preferredSystemUserIdYomiName;

		[CrmProperty(LogicalName = "salutation")]
        public virtual string Salutation
        {
            get { FillData(); return _salutation; }
            set { SetValue<string>("salutation", value); _salutation = value; }
        }
        private string _salutation;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "spousesname")]
        public virtual string SpousesName
        {
            get { FillData(); return _spousesName; }
            set { SetValue<string>("spousesname", value); _spousesName = value; }
        }
        private string _spousesName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "suffix")]
        public virtual string Suffix
        {
            get { FillData(); return _suffix; }
            set { SetValue<string>("suffix", value); _suffix = value; }
        }
        private string _suffix;

		[CrmProperty(LogicalName = "telephone1")]
        public virtual string Telephone1
        {
            get { FillData(); return _telephone1; }
            set { SetValue<string>("telephone1", value); _telephone1 = value; }
        }
        private string _telephone1;

		[CrmProperty(LogicalName = "telephone2")]
        public virtual string Telephone2
        {
            get { FillData(); return _telephone2; }
            set { SetValue<string>("telephone2", value); _telephone2 = value; }
        }
        private string _telephone2;

		[CrmProperty(LogicalName = "telephone3")]
        public virtual string Telephone3
        {
            get { FillData(); return _telephone3; }
            set { SetValue<string>("telephone3", value); _telephone3 = value; }
        }
        private string _telephone3;

		[CrmProperty(LogicalName = "territorycode")]
        public virtual Enums.TerritoryCode? TerritoryCode
        {
            get { FillData(); return _territoryCode; }
            set { SetPicklist("territorycode", (int?)value); _territoryCode = value; }
        }
        private Enums.TerritoryCode? _territoryCode;

		[CrmProperty(LogicalName = "territorycodename")]
        public virtual string TerritoryCodeName
        {
            get { FillData(); return _territoryCodeName; }
            set {  _territoryCodeName = value; }
        }
        private string _territoryCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "websiteurl")]
        public virtual string WebSiteUrl
        {
            get { FillData(); return _webSiteUrl; }
            set { SetValue<string>("websiteurl", value); _webSiteUrl = value; }
        }
        private string _webSiteUrl;

		[CrmProperty(LogicalName = "yomifirstname")]
        public virtual string YomiFirstName
        {
            get { FillData(); return _yomiFirstName; }
            set { SetValue<string>("yomifirstname", value); _yomiFirstName = value; }
        }
        private string _yomiFirstName;

		[CrmProperty(LogicalName = "yomifullname")]
        public virtual string YomiFullName
        {
            get { FillData(); return _yomiFullName; }
            set {  _yomiFullName = value; }
        }
        private string _yomiFullName;

		[CrmProperty(LogicalName = "yomilastname")]
        public virtual string YomiLastName
        {
            get { FillData(); return _yomiLastName; }
            set { SetValue<string>("yomilastname", value); _yomiLastName = value; }
        }
        private string _yomiLastName;

		[CrmProperty(LogicalName = "yomimiddlename")]
        public virtual string YomiMiddleName
        {
            get { FillData(); return _yomiMiddleName; }
            set { SetValue<string>("yomimiddlename", value); _yomiMiddleName = value; }
        }
        private string _yomiMiddleName;

	}
	[CrmEntity(LogicalName = "contract", PrimaryKey = "contractid")]
	public partial class Contract : CrmEntity
	{
		public class Enums
		{
			public enum AllotmentTypeCode 
			{
				[CrmPicklist(DisplayName = "Number of Cases", Value = 1)]NumberOfCases = 1,
				[CrmPicklist(DisplayName = "Time", Value = 2)]Time = 2,
				[CrmPicklist(DisplayName = "Coverage Dates", Value = 3)]CoverageDates = 3,
			}		
			public enum BillingFrequencyCode 
			{
				[CrmPicklist(DisplayName = "Monthly", Value = 1)]Monthly = 1,
				[CrmPicklist(DisplayName = "Bimonthly", Value = 2)]Bimonthly = 2,
				[CrmPicklist(DisplayName = "Quarterly", Value = 3)]Quarterly = 3,
				[CrmPicklist(DisplayName = "Semiannually", Value = 4)]Semiannually = 4,
				[CrmPicklist(DisplayName = "Annually", Value = 5)]Annually = 5,
			}		
			public enum ContractServiceLevelCode 
			{
				[CrmPicklist(DisplayName = "Gold", Value = 1)]Gold = 1,
				[CrmPicklist(DisplayName = "Silver", Value = 2)]Silver = 2,
				[CrmPicklist(DisplayName = "Bronze", Value = 3)]Bronze = 3,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Draft")]Draft = 0,
				[CrmPicklist(DisplayName = "Invoiced", Value = 1)]Invoiced = 1,
				[CrmPicklist(DisplayName = "Active", Value = 2)]Active = 2,
				[CrmPicklist(DisplayName = "On Hold", Value = 3)]OnHold = 3,
				[CrmPicklist(DisplayName = "Canceled", Value = 4)]Canceled = 4,
				[CrmPicklist(DisplayName = "Expired", Value = 5)]Expired = 5,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Draft", Value = 1)]Draft = 1,
				[CrmPicklist(DisplayName = "Invoiced", Value = 2)]Invoiced = 2,
				[CrmPicklist(DisplayName = "Active", Value = 3)]Active = 3,
				[CrmPicklist(DisplayName = "On Hold", Value = 4)]OnHold = 4,
				[CrmPicklist(DisplayName = "Canceled", Value = 5)]Canceled = 5,
				[CrmPicklist(DisplayName = "Expired", Value = 6)]Expired = 6,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "contract";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string ActiveOn = "activeon";
			public const string AllotmentTypeCode = "allotmenttypecode";
			public const string AllotmentTypeCodeName = "allotmenttypecodename";
			public const string BillingAccountId = "billingaccountid";
			public const string BillingAccountIdName = "billingaccountidname";
			public const string BillingAccountIdYomiName = "billingaccountidyominame";
			public const string BillingContactId = "billingcontactid";
			public const string BillingContactIdName = "billingcontactidname";
			public const string BillingContactIdYomiName = "billingcontactidyominame";
			public const string BillingCustomerId = "billingcustomerid";
			public const string BillingCustomerIdName = "billingcustomeridname";
			public const string BillingCustomerIdType = "billingcustomeridType";
			public const string BillingCustomerIdYomiName = "billingcustomeridyominame";
			public const string BillingEndOn = "billingendon";
			public const string BillingFrequencyCode = "billingfrequencycode";
			public const string BillingFrequencyCodeName = "billingfrequencycodename";
			public const string BillingStartOn = "billingstarton";
			public const string BillToAddress = "billtoaddress";
			public const string BillToAddressName = "billtoaddressname";
			public const string CancelOn = "cancelon";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string ContractId = "contractid";
			public const string ContractLanguage = "contractlanguage";
			public const string ContractNumber = "contractnumber";
			public const string ContractServiceLevelCode = "contractservicelevelcode";
			public const string ContractServiceLevelCodeName = "contractservicelevelcodename";
			public const string ContractTemplateAbbreviation = "contracttemplateabbreviation";
			public const string ContractTemplateId = "contracttemplateid";
			public const string ContractTemplateIdName = "contracttemplateidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string Duration = "duration";
			public const string EffectivityCalendar = "effectivitycalendar";
			public const string ExchangeRate = "exchangerate";
			public const string ExpiresOn = "expireson";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NetPrice = "netprice";
			public const string OriginatingContract = "originatingcontract";
			public const string OriginatingContractName = "originatingcontractname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string ServiceAddress = "serviceaddress";
			public const string ServiceAddressName = "serviceaddressname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TotalDiscount = "totaldiscount";
			public const string TotalPrice = "totalprice";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UseDiscountAsPercentage = "usediscountaspercentage";
			public const string UseDiscountAsPercentageName = "usediscountaspercentagename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ContractId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "activeon")]
        public virtual DateTime? ActiveOn
        {
            get { FillData(); return _activeOn; }
            set { SetValue<DateTime?>("activeon", value); _activeOn = value; }
        }
        private DateTime? _activeOn;

		[CrmProperty(LogicalName = "allotmenttypecode")]
        public virtual Enums.AllotmentTypeCode? AllotmentTypeCode
        {
            get { FillData(); return _allotmentTypeCode; }
            set { SetPicklist("allotmenttypecode", (int?)value); _allotmentTypeCode = value; }
        }
        private Enums.AllotmentTypeCode? _allotmentTypeCode;

		[CrmProperty(LogicalName = "allotmenttypecodename")]
        public virtual string AllotmentTypeCodeName
        {
            get { FillData(); return _allotmentTypeCodeName; }
            set {  _allotmentTypeCodeName = value; }
        }
        private string _allotmentTypeCodeName;

		[CrmProperty(LogicalName = "billingaccountid", IsLookup = true)]
        public virtual Guid? BillingAccountId
        {
            get { FillData(); return _billingAccountId; }
            set {  _billingAccountId = value; }
        }
        private Guid? _billingAccountId;

		[CrmProperty(LogicalName = "billingaccountidname")]
        public virtual string BillingAccountIdName
        {
            get { FillData(); return _billingAccountIdName; }
            set {  _billingAccountIdName = value; }
        }
        private string _billingAccountIdName;

		[CrmProperty(LogicalName = "billingaccountidyominame")]
        public virtual string BillingAccountIdYomiName
        {
            get { FillData(); return _billingAccountIdYomiName; }
            set {  _billingAccountIdYomiName = value; }
        }
        private string _billingAccountIdYomiName;

		[CrmProperty(LogicalName = "billingcontactid", IsLookup = true)]
        public virtual Guid? BillingContactId
        {
            get { FillData(); return _billingContactId; }
            set {  _billingContactId = value; }
        }
        private Guid? _billingContactId;

		[CrmProperty(LogicalName = "billingcontactidname")]
        public virtual string BillingContactIdName
        {
            get { FillData(); return _billingContactIdName; }
            set {  _billingContactIdName = value; }
        }
        private string _billingContactIdName;

		[CrmProperty(LogicalName = "billingcontactidyominame")]
        public virtual string BillingContactIdYomiName
        {
            get { FillData(); return _billingContactIdYomiName; }
            set {  _billingContactIdYomiName = value; }
        }
        private string _billingContactIdYomiName;

		[CrmProperty(LogicalName = "billingcustomerid", IsLookup = true)]
        public virtual Guid? BillingCustomerId
        {
            get { FillData(); return _billingCustomerId; }
            set { SetCustomer("billingcustomerid", BillingCustomerIdType, value); _billingCustomerId = value; }
        }
        private Guid? _billingCustomerId;

		[CrmProperty(LogicalName = "billingcustomeridname")]
        public virtual string BillingCustomerIdName
        {
            get { FillData(); return _billingCustomerIdName; }
            set {  _billingCustomerIdName = value; }
        }
        private string _billingCustomerIdName;

		[CrmProperty(LogicalName = "billingcustomeridType", IsEntityReferenceHelper = true)]
        public virtual string BillingCustomerIdType
        {
            get { FillData(); return _billingCustomerIdType; }
            set {  _billingCustomerIdType = value; }
        }
        private string _billingCustomerIdType;

		[CrmProperty(LogicalName = "billingcustomeridyominame")]
        public virtual string BillingCustomerIdYomiName
        {
            get { FillData(); return _billingCustomerIdYomiName; }
            set {  _billingCustomerIdYomiName = value; }
        }
        private string _billingCustomerIdYomiName;

		[CrmProperty(LogicalName = "billingendon")]
        public virtual DateTime? BillingEndOn
        {
            get { FillData(); return _billingEndOn; }
            set { SetValue<DateTime?>("billingendon", value); _billingEndOn = value; }
        }
        private DateTime? _billingEndOn;

		[CrmProperty(LogicalName = "billingfrequencycode")]
        public virtual Enums.BillingFrequencyCode? BillingFrequencyCode
        {
            get { FillData(); return _billingFrequencyCode; }
            set { SetPicklist("billingfrequencycode", (int?)value); _billingFrequencyCode = value; }
        }
        private Enums.BillingFrequencyCode? _billingFrequencyCode;

		[CrmProperty(LogicalName = "billingfrequencycodename")]
        public virtual string BillingFrequencyCodeName
        {
            get { FillData(); return _billingFrequencyCodeName; }
            set {  _billingFrequencyCodeName = value; }
        }
        private string _billingFrequencyCodeName;

		[CrmProperty(LogicalName = "billingstarton")]
        public virtual DateTime? BillingStartOn
        {
            get { FillData(); return _billingStartOn; }
            set { SetValue<DateTime?>("billingstarton", value); _billingStartOn = value; }
        }
        private DateTime? _billingStartOn;

		[CrmProperty(LogicalName = "billtoaddress", IsLookup = true)]
        public virtual Guid? BillToAddress
        {
            get { FillData(); return _billToAddress; }
            set { SetLookup("billtoaddress", "customeraddress", value); _billToAddress = value; }
        }
        private Guid? _billToAddress;

		[CrmProperty(LogicalName = "billtoaddressname")]
        public virtual string BillToAddressName
        {
            get { FillData(); return _billToAddressName; }
            set {  _billToAddressName = value; }
        }
        private string _billToAddressName;

		[CrmProperty(LogicalName = "cancelon")]
        public virtual DateTime? CancelOn
        {
            get { FillData(); return _cancelOn; }
            set {  _cancelOn = value; }
        }
        private DateTime? _cancelOn;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidname")]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contactidyominame")]
        public virtual string ContactIdYomiName
        {
            get { FillData(); return _contactIdYomiName; }
            set {  _contactIdYomiName = value; }
        }
        private string _contactIdYomiName;

		[CrmProperty(LogicalName = "contractid")]
        public virtual Guid ContractId
        {
            get { FillData(); return _contractId; }
            set {  _contractId = value; }
        }
        private Guid _contractId;

		[CrmProperty(LogicalName = "contractlanguage")]
        public virtual string ContractLanguage
        {
            get { FillData(); return _contractLanguage; }
            set { SetValue<string>("contractlanguage", value); _contractLanguage = value; }
        }
        private string _contractLanguage;

		[CrmProperty(LogicalName = "contractnumber")]
        public virtual string ContractNumber
        {
            get { FillData(); return _contractNumber; }
            set {  _contractNumber = value; }
        }
        private string _contractNumber;

		[CrmProperty(LogicalName = "contractservicelevelcode")]
        public virtual Enums.ContractServiceLevelCode? ContractServiceLevelCode
        {
            get { FillData(); return _contractServiceLevelCode; }
            set { SetPicklist("contractservicelevelcode", (int?)value); _contractServiceLevelCode = value; }
        }
        private Enums.ContractServiceLevelCode? _contractServiceLevelCode;

		[CrmProperty(LogicalName = "contractservicelevelcodename")]
        public virtual string ContractServiceLevelCodeName
        {
            get { FillData(); return _contractServiceLevelCodeName; }
            set {  _contractServiceLevelCodeName = value; }
        }
        private string _contractServiceLevelCodeName;

		[CrmProperty(LogicalName = "contracttemplateabbreviation")]
        public virtual string ContractTemplateAbbreviation
        {
            get { FillData(); return _contractTemplateAbbreviation; }
            set {  _contractTemplateAbbreviation = value; }
        }
        private string _contractTemplateAbbreviation;

		[CrmProperty(LogicalName = "contracttemplateid", IsLookup = true)]
        public virtual Guid? ContractTemplateId
        {
            get { FillData(); return _contractTemplateId; }
            set { SetLookup("contracttemplateid", "contracttemplate", value); _contractTemplateId = value; }
        }
        private Guid? _contractTemplateId;

		[CrmProperty(LogicalName = "contracttemplateidname")]
        public virtual string ContractTemplateIdName
        {
            get { FillData(); return _contractTemplateIdName; }
            set {  _contractTemplateIdName = value; }
        }
        private string _contractTemplateIdName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "duration")]
        public virtual int? Duration
        {
            get { FillData(); return _duration; }
            set {  _duration = value; }
        }
        private int? _duration;

		[CrmProperty(LogicalName = "effectivitycalendar")]
        public virtual string EffectivityCalendar
        {
            get { FillData(); return _effectivityCalendar; }
            set { SetValue<string>("effectivitycalendar", value); _effectivityCalendar = value; }
        }
        private string _effectivityCalendar;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "expireson")]
        public virtual DateTime? ExpiresOn
        {
            get { FillData(); return _expiresOn; }
            set { SetValue<DateTime?>("expireson", value); _expiresOn = value; }
        }
        private DateTime? _expiresOn;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "netprice")]
        public virtual decimal? NetPrice
        {
            get { FillData(); return _netPrice; }
            set {  _netPrice = value; }
        }
        private decimal? _netPrice;

		[CrmProperty(LogicalName = "originatingcontract", IsLookup = true)]
        public virtual Guid? OriginatingContract
        {
            get { FillData(); return _originatingContract; }
            set {  _originatingContract = value; }
        }
        private Guid? _originatingContract;

		[CrmProperty(LogicalName = "originatingcontractname")]
        public virtual string OriginatingContractName
        {
            get { FillData(); return _originatingContractName; }
            set {  _originatingContractName = value; }
        }
        private string _originatingContractName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "serviceaddress", IsLookup = true)]
        public virtual Guid? ServiceAddress
        {
            get { FillData(); return _serviceAddress; }
            set { SetLookup("serviceaddress", "customeraddress", value); _serviceAddress = value; }
        }
        private Guid? _serviceAddress;

		[CrmProperty(LogicalName = "serviceaddressname")]
        public virtual string ServiceAddressName
        {
            get { FillData(); return _serviceAddressName; }
            set {  _serviceAddressName = value; }
        }
        private string _serviceAddressName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "title")]
        public virtual string Title
        {
            get { FillData(); return _title; }
            set { SetValue<string>("title", value); _title = value; }
        }
        private string _title;

		[CrmProperty(LogicalName = "totaldiscount")]
        public virtual decimal? TotalDiscount
        {
            get { FillData(); return _totalDiscount; }
            set {  _totalDiscount = value; }
        }
        private decimal? _totalDiscount;

		[CrmProperty(LogicalName = "totalprice")]
        public virtual decimal? TotalPrice
        {
            get { FillData(); return _totalPrice; }
            set {  _totalPrice = value; }
        }
        private decimal? _totalPrice;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "usediscountaspercentage")]
        public virtual bool? UseDiscountAsPercentage
        {
            get { FillData(); return _useDiscountAsPercentage; }
            set {  _useDiscountAsPercentage = value; }
        }
        private bool? _useDiscountAsPercentage;

		[CrmProperty(LogicalName = "usediscountaspercentagename")]
        public virtual string UseDiscountAsPercentageName
        {
            get { FillData(); return _useDiscountAsPercentageName; }
            set {  _useDiscountAsPercentageName = value; }
        }
        private string _useDiscountAsPercentageName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "contractdetail", PrimaryKey = "contractdetailid")]
	public partial class ContractDetail : CrmEntity
	{
		public class Enums
		{
			public enum ContractStateCode 
			{
			}		
			public enum ServiceContractUnitsCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Existing")]Existing = 0,
				[CrmPicklist(DisplayName = "Renewed", Value = 1)]Renewed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Expired", Value = 3)]Expired = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "New", Value = 1)]__New = 1,
				[CrmPicklist(DisplayName = "Renewed", Value = 2)]Renewed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Expired", Value = 4)]Expired = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "contractdetail";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidName";
			public const string ActiveOn = "activeon";
			public const string AllotmentsOverage = "allotmentsoverage";
			public const string AllotmentsRemaining = "allotmentsremaining";
			public const string AllotmentsUsed = "allotmentsused";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidName";
			public const string ContractDetailId = "contractdetailid";
			public const string ContractId = "contractid";
			public const string ContractIdName = "contractidname";
			public const string ContractStateCode = "contractstatecode";
			public const string ContractStateCodeName = "contractstatecodename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string Discount = "discount";
			public const string DiscountPercentage = "discountpercentage";
			public const string EffectivityCalendar = "effectivitycalendar";
			public const string ExchangeRate = "exchangerate";
			public const string ExpiresOn = "expireson";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InitialQuantity = "initialquantity";
			public const string LineItemOrder = "lineitemorder";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Net = "net";
			public const string NewAllotmentsBilled = "new_allotmentsbilled";
			public const string NewContractOvertimeProduct = "new_contractovertimeproduct";
			public const string NewContractOvertimeProductName = "new_contractovertimeproductname";
			public const string NewContractProduct = "new_contractproduct";
			public const string NewContractproductName = "new_contractproductname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string Price = "price";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string ProductSerialNumber = "productserialnumber";
			public const string Rate = "rate";
			public const string ServiceAddress = "serviceaddress";
			public const string ServiceAddressName = "serviceaddressname";
			public const string ServiceContractUnitsCode = "servicecontractunitscode";
			public const string ServiceContractUnitsCodeName = "servicecontractunitscodename";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TotalAllotments = "totalallotments";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UoMId = "uomid";
			public const string UoMIdName = "uomidname";
			public const string UoMScheduleId = "uomscheduleid";
			public const string UoMScheduleIdName = "uomscheduleidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ContractDetailId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidName", IsEntityReferenceHelper = true)]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "activeon")]
        public virtual DateTime? ActiveOn
        {
            get { FillData(); return _activeOn; }
            set { SetValue<DateTime?>("activeon", value); _activeOn = value; }
        }
        private DateTime? _activeOn;

		[CrmProperty(LogicalName = "allotmentsoverage")]
        public virtual int? AllotmentsOverage
        {
            get { FillData(); return _allotmentsOverage; }
            set {  _allotmentsOverage = value; }
        }
        private int? _allotmentsOverage;

		[CrmProperty(LogicalName = "allotmentsremaining")]
        public virtual int? AllotmentsRemaining
        {
            get { FillData(); return _allotmentsRemaining; }
            set {  _allotmentsRemaining = value; }
        }
        private int? _allotmentsRemaining;

		[CrmProperty(LogicalName = "allotmentsused")]
        public virtual int? AllotmentsUsed
        {
            get { FillData(); return _allotmentsUsed; }
            set {  _allotmentsUsed = value; }
        }
        private int? _allotmentsUsed;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidName", IsEntityReferenceHelper = true)]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contractdetailid")]
        public virtual Guid ContractDetailId
        {
            get { FillData(); return _contractDetailId; }
            set {  _contractDetailId = value; }
        }
        private Guid _contractDetailId;

		[CrmProperty(LogicalName = "contractid", IsLookup = true)]
        public virtual Guid? ContractId
        {
            get { FillData(); return _contractId; }
            set { SetLookup("contractid", "contract", value); _contractId = value; }
        }
        private Guid? _contractId;

		[CrmProperty(LogicalName = "contractidname")]
        public virtual string ContractIdName
        {
            get { FillData(); return _contractIdName; }
            set {  _contractIdName = value; }
        }
        private string _contractIdName;

		[CrmProperty(LogicalName = "contractstatecode")]
        public virtual Enums.ContractStateCode? ContractStateCode
        {
            get { FillData(); return _contractStateCode; }
            set {  _contractStateCode = value; }
        }
        private Enums.ContractStateCode? _contractStateCode;

		[CrmProperty(LogicalName = "contractstatecodename")]
        public virtual string ContractStateCodeName
        {
            get { FillData(); return _contractStateCodeName; }
            set {  _contractStateCodeName = value; }
        }
        private string _contractStateCodeName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "discount")]
        public virtual decimal? Discount
        {
            get { FillData(); return _discount; }
            set { SetMoney("discount", value); _discount = value; }
        }
        private decimal? _discount;

		[CrmProperty(LogicalName = "discountpercentage")]
        public virtual decimal? DiscountPercentage
        {
            get { FillData(); return _discountPercentage; }
            set { SetValue<decimal?>("discountpercentage", value); _discountPercentage = value; }
        }
        private decimal? _discountPercentage;

		[CrmProperty(LogicalName = "effectivitycalendar")]
        public virtual string EffectivityCalendar
        {
            get { FillData(); return _effectivityCalendar; }
            set { SetValue<string>("effectivitycalendar", value); _effectivityCalendar = value; }
        }
        private string _effectivityCalendar;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "expireson")]
        public virtual DateTime? ExpiresOn
        {
            get { FillData(); return _expiresOn; }
            set { SetValue<DateTime?>("expireson", value); _expiresOn = value; }
        }
        private DateTime? _expiresOn;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "initialquantity")]
        public virtual int? InitialQuantity
        {
            get { FillData(); return _initialQuantity; }
            set { SetValue<int?>("initialquantity", value); _initialQuantity = value; }
        }
        private int? _initialQuantity;

		[CrmProperty(LogicalName = "lineitemorder")]
        public virtual int? LineItemOrder
        {
            get { FillData(); return _lineItemOrder; }
            set { SetValue<int?>("lineitemorder", value); _lineItemOrder = value; }
        }
        private int? _lineItemOrder;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "net")]
        public virtual decimal? Net
        {
            get { FillData(); return _net; }
            set {  _net = value; }
        }
        private decimal? _net;

		[CrmProperty(LogicalName = "new_allotmentsbilled")]
        public virtual int? NewAllotmentsBilled
        {
            get { FillData(); return _newAllotmentsBilled; }
            set { SetValue<int?>("new_allotmentsbilled", value); _newAllotmentsBilled = value; }
        }
        private int? _newAllotmentsBilled;

		[CrmProperty(LogicalName = "new_contractovertimeproduct", IsLookup = true)]
        public virtual Guid? NewContractOvertimeProduct
        {
            get { FillData(); return _newContractOvertimeProduct; }
            set { SetLookup("new_contractovertimeproduct", "product", value); _newContractOvertimeProduct = value; }
        }
        private Guid? _newContractOvertimeProduct;

		[CrmProperty(LogicalName = "new_contractovertimeproductname")]
        public virtual string NewContractOvertimeProductName
        {
            get { FillData(); return _newContractOvertimeProductName; }
            set {  _newContractOvertimeProductName = value; }
        }
        private string _newContractOvertimeProductName;

		[CrmProperty(LogicalName = "new_contractproduct")]
        public virtual bool? NewContractProduct
        {
            get { FillData(); return _newContractProduct; }
            set { SetValue<bool?>("new_contractproduct", value); _newContractProduct = value; }
        }
        private bool? _newContractProduct;

		[CrmProperty(LogicalName = "new_contractproductname")]
        public virtual string NewContractproductName
        {
            get { FillData(); return _newContractproductName; }
            set {  _newContractproductName = value; }
        }
        private string _newContractproductName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owningbusinessunit")]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owninguser")]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "price")]
        public virtual decimal? Price
        {
            get { FillData(); return _price; }
            set { SetMoney("price", value); _price = value; }
        }
        private decimal? _price;

		[CrmProperty(LogicalName = "productid", IsLookup = true)]
        public virtual Guid? ProductId
        {
            get { FillData(); return _productId; }
            set { SetLookup("productid", "product", value); _productId = value; }
        }
        private Guid? _productId;

		[CrmProperty(LogicalName = "productidname")]
        public virtual string ProductIdName
        {
            get { FillData(); return _productIdName; }
            set {  _productIdName = value; }
        }
        private string _productIdName;

		[CrmProperty(LogicalName = "productserialnumber")]
        public virtual string ProductSerialNumber
        {
            get { FillData(); return _productSerialNumber; }
            set { SetValue<string>("productserialnumber", value); _productSerialNumber = value; }
        }
        private string _productSerialNumber;

		[CrmProperty(LogicalName = "rate")]
        public virtual decimal? Rate
        {
            get { FillData(); return _rate; }
            set {  _rate = value; }
        }
        private decimal? _rate;

		[CrmProperty(LogicalName = "serviceaddress", IsLookup = true)]
        public virtual Guid? ServiceAddress
        {
            get { FillData(); return _serviceAddress; }
            set { SetLookup("serviceaddress", "customeraddress", value); _serviceAddress = value; }
        }
        private Guid? _serviceAddress;

		[CrmProperty(LogicalName = "serviceaddressname")]
        public virtual string ServiceAddressName
        {
            get { FillData(); return _serviceAddressName; }
            set {  _serviceAddressName = value; }
        }
        private string _serviceAddressName;

		[CrmProperty(LogicalName = "servicecontractunitscode")]
        public virtual Enums.ServiceContractUnitsCode? ServiceContractUnitsCode
        {
            get { FillData(); return _serviceContractUnitsCode; }
            set { SetPicklist("servicecontractunitscode", (int?)value); _serviceContractUnitsCode = value; }
        }
        private Enums.ServiceContractUnitsCode? _serviceContractUnitsCode;

		[CrmProperty(LogicalName = "servicecontractunitscodename")]
        public virtual string ServiceContractUnitsCodeName
        {
            get { FillData(); return _serviceContractUnitsCodeName; }
            set {  _serviceContractUnitsCodeName = value; }
        }
        private string _serviceContractUnitsCodeName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "title")]
        public virtual string Title
        {
            get { FillData(); return _title; }
            set { SetValue<string>("title", value); _title = value; }
        }
        private string _title;

		[CrmProperty(LogicalName = "totalallotments")]
        public virtual int? TotalAllotments
        {
            get { FillData(); return _totalAllotments; }
            set { SetValue<int?>("totalallotments", value); _totalAllotments = value; }
        }
        private int? _totalAllotments;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "uomid", IsLookup = true)]
        public virtual Guid? UoMId
        {
            get { FillData(); return _uoMId; }
            set { SetLookup("uomid", "uom", value); _uoMId = value; }
        }
        private Guid? _uoMId;

		[CrmProperty(LogicalName = "uomidname")]
        public virtual string UoMIdName
        {
            get { FillData(); return _uoMIdName; }
            set {  _uoMIdName = value; }
        }
        private string _uoMIdName;

		[CrmProperty(LogicalName = "uomscheduleid", IsLookup = true)]
        public virtual Guid? UoMScheduleId
        {
            get { FillData(); return _uoMScheduleId; }
            set { SetLookup("uomscheduleid", "uomschedule", value); _uoMScheduleId = value; }
        }
        private Guid? _uoMScheduleId;

		[CrmProperty(LogicalName = "uomscheduleidname")]
        public virtual string UoMScheduleIdName
        {
            get { FillData(); return _uoMScheduleIdName; }
            set {  _uoMScheduleIdName = value; }
        }
        private string _uoMScheduleIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "customeraddress", PrimaryKey = "customeraddressid")]
	public partial class CustomerAddress : CrmEntity
	{
		public class Enums
		{
			public enum AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Bill To", Value = 1)]BillTo = 1,
				[CrmPicklist(DisplayName = "Ship To", Value = 2)]ShipTo = 2,
				[CrmPicklist(DisplayName = "Primary", Value = 3)]Primary = 3,
				[CrmPicklist(DisplayName = "Other", Value = 4)]Other = 4,
			}		
			public enum FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
			public enum ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Airborne", Value = 1)]Airborne = 1,
				[CrmPicklist(DisplayName = "DHL", Value = 2)]DHL = 2,
				[CrmPicklist(DisplayName = "FedEx", Value = 3)]FedEx = 3,
				[CrmPicklist(DisplayName = "UPS", Value = 4)]UPS = 4,
				[CrmPicklist(DisplayName = "Postal Mail", Value = 5)]PostalMail = 5,
				[CrmPicklist(DisplayName = "Full Load", Value = 6)]FullLoad = 6,
				[CrmPicklist(DisplayName = "Will Call", Value = 7)]WillCall = 7,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "customeraddress";
			
			public const string AddressNumber = "addressnumber";
			public const string AddressTypeCode = "addresstypecode";
			public const string AddressTypeCodeName = "addresstypecodename";
			public const string City = "city";
			public const string Country = "country";
			public const string County = "county";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerAddressId = "customeraddressid";
			public const string ExchangeRate = "exchangerate";
			public const string Fax = "fax";
			public const string FreightTermsCode = "freighttermscode";
			public const string FreightTermsCodeName = "freighttermscodename";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Latitude = "latitude";
			public const string Line1 = "line1";
			public const string Line2 = "line2";
			public const string Line3 = "line3";
			public const string Longitude = "longitude";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string ObjectTypeCodeName = "objecttypecodename";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string ParentId = "parentid";
			public const string ParentIdName = "parentidName";
			public const string ParentIdType = "parentidType";
			public const string PostalCode = "postalcode";
			public const string PostOfficeBox = "postofficebox";
			public const string PrimaryContactName = "primarycontactname";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string StateOrProvince = "stateorprovince";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UPSZone = "upszone";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string UTCOffset = "utcoffset";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return CustomerAddressId; }
		}

		[CrmProperty(LogicalName = "addressnumber")]
        public virtual int? AddressNumber
        {
            get { FillData(); return _addressNumber; }
            set { SetValue<int?>("addressnumber", value); _addressNumber = value; }
        }
        private int? _addressNumber;

		[CrmProperty(LogicalName = "addresstypecode")]
        public virtual Enums.AddressTypeCode? AddressTypeCode
        {
            get { FillData(); return _addressTypeCode; }
            set { SetPicklist("addresstypecode", (int?)value); _addressTypeCode = value; }
        }
        private Enums.AddressTypeCode? _addressTypeCode;

		[CrmProperty(LogicalName = "addresstypecodename")]
        public virtual string AddressTypeCodeName
        {
            get { FillData(); return _addressTypeCodeName; }
            set {  _addressTypeCodeName = value; }
        }
        private string _addressTypeCodeName;

		[CrmProperty(LogicalName = "city")]
        public virtual string City
        {
            get { FillData(); return _city; }
            set { SetValue<string>("city", value); _city = value; }
        }
        private string _city;

		[CrmProperty(LogicalName = "country")]
        public virtual string Country
        {
            get { FillData(); return _country; }
            set { SetValue<string>("country", value); _country = value; }
        }
        private string _country;

		[CrmProperty(LogicalName = "county")]
        public virtual string County
        {
            get { FillData(); return _county; }
            set { SetValue<string>("county", value); _county = value; }
        }
        private string _county;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customeraddressid")]
        public virtual Guid CustomerAddressId
        {
            get { FillData(); return _customerAddressId; }
            set {  _customerAddressId = value; }
        }
        private Guid _customerAddressId;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "fax")]
        public virtual string Fax
        {
            get { FillData(); return _fax; }
            set { SetValue<string>("fax", value); _fax = value; }
        }
        private string _fax;

		[CrmProperty(LogicalName = "freighttermscode")]
        public virtual Enums.FreightTermsCode? FreightTermsCode
        {
            get { FillData(); return _freightTermsCode; }
            set { SetPicklist("freighttermscode", (int?)value); _freightTermsCode = value; }
        }
        private Enums.FreightTermsCode? _freightTermsCode;

		[CrmProperty(LogicalName = "freighttermscodename")]
        public virtual string FreightTermsCodeName
        {
            get { FillData(); return _freightTermsCodeName; }
            set {  _freightTermsCodeName = value; }
        }
        private string _freightTermsCodeName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "latitude")]
        public virtual double? Latitude
        {
            get { FillData(); return _latitude; }
            set { SetValue<double?>("latitude", value); _latitude = value; }
        }
        private double? _latitude;

		[CrmProperty(LogicalName = "line1")]
        public virtual string Line1
        {
            get { FillData(); return _line1; }
            set { SetValue<string>("line1", value); _line1 = value; }
        }
        private string _line1;

		[CrmProperty(LogicalName = "line2")]
        public virtual string Line2
        {
            get { FillData(); return _line2; }
            set { SetValue<string>("line2", value); _line2 = value; }
        }
        private string _line2;

		[CrmProperty(LogicalName = "line3")]
        public virtual string Line3
        {
            get { FillData(); return _line3; }
            set { SetValue<string>("line3", value); _line3 = value; }
        }
        private string _line3;

		[CrmProperty(LogicalName = "longitude")]
        public virtual double? Longitude
        {
            get { FillData(); return _longitude; }
            set { SetValue<double?>("longitude", value); _longitude = value; }
        }
        private double? _longitude;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "objecttypecodename")]
        public virtual string ObjectTypeCodeName
        {
            get { FillData(); return _objectTypeCodeName; }
            set {  _objectTypeCodeName = value; }
        }
        private string _objectTypeCodeName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "parentid", IsLookup = true)]
        public virtual Guid? ParentId
        {
            get { FillData(); return _parentId; }
            set { SetLookup("parentid", ParentIdType, value); _parentId = value; }
        }
        private Guid? _parentId;

		[CrmProperty(LogicalName = "parentidName", IsEntityReferenceHelper = true)]
        public virtual string ParentIdName
        {
            get { FillData(); return _parentIdName; }
            set {  _parentIdName = value; }
        }
        private string _parentIdName;

		[CrmProperty(LogicalName = "parentidType", IsEntityReferenceHelper = true)]
        public virtual string ParentIdType
        {
            get { FillData(); return _parentIdType; }
            set {  _parentIdType = value; }
        }
        private string _parentIdType;

		[CrmProperty(LogicalName = "postalcode")]
        public virtual string PostalCode
        {
            get { FillData(); return _postalCode; }
            set { SetValue<string>("postalcode", value); _postalCode = value; }
        }
        private string _postalCode;

		[CrmProperty(LogicalName = "postofficebox")]
        public virtual string PostOfficeBox
        {
            get { FillData(); return _postOfficeBox; }
            set { SetValue<string>("postofficebox", value); _postOfficeBox = value; }
        }
        private string _postOfficeBox;

		[CrmProperty(LogicalName = "primarycontactname")]
        public virtual string PrimaryContactName
        {
            get { FillData(); return _primaryContactName; }
            set { SetValue<string>("primarycontactname", value); _primaryContactName = value; }
        }
        private string _primaryContactName;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "stateorprovince")]
        public virtual string StateOrProvince
        {
            get { FillData(); return _stateOrProvince; }
            set { SetValue<string>("stateorprovince", value); _stateOrProvince = value; }
        }
        private string _stateOrProvince;

		[CrmProperty(LogicalName = "telephone1")]
        public virtual string Telephone1
        {
            get { FillData(); return _telephone1; }
            set { SetValue<string>("telephone1", value); _telephone1 = value; }
        }
        private string _telephone1;

		[CrmProperty(LogicalName = "telephone2")]
        public virtual string Telephone2
        {
            get { FillData(); return _telephone2; }
            set { SetValue<string>("telephone2", value); _telephone2 = value; }
        }
        private string _telephone2;

		[CrmProperty(LogicalName = "telephone3")]
        public virtual string Telephone3
        {
            get { FillData(); return _telephone3; }
            set { SetValue<string>("telephone3", value); _telephone3 = value; }
        }
        private string _telephone3;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "upszone")]
        public virtual string UPSZone
        {
            get { FillData(); return _uPSZone; }
            set { SetValue<string>("upszone", value); _uPSZone = value; }
        }
        private string _uPSZone;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "utcoffset")]
        public virtual int? UTCOffset
        {
            get { FillData(); return _uTCOffset; }
            set { SetValue<int?>("utcoffset", value); _uTCOffset = value; }
        }
        private int? _uTCOffset;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "customeropportunityrole", PrimaryKey = "customeropportunityroleid")]
	public partial class CustomerOpportunityRole : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "customeropportunityrole";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string CustomerOpportunityRoleId = "customeropportunityroleid";
			public const string Description = "description";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityIdName = "opportunityidname";
			public const string OpportunityRoleId = "opportunityroleid";
			public const string OpportunityRoleIdName = "opportunityroleidname";
			public const string OpportunityStateCode = "opportunitystatecode";
			public const string OpportunityStatusCode = "opportunitystatuscode";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string UniqueDscId = "uniquedscid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return CustomerOpportunityRoleId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "customeropportunityroleid")]
        public virtual Guid CustomerOpportunityRoleId
        {
            get { FillData(); return _customerOpportunityRoleId; }
            set {  _customerOpportunityRoleId = value; }
        }
        private Guid _customerOpportunityRoleId;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "opportunityid", IsLookup = true)]
        public virtual Guid? OpportunityId
        {
            get { FillData(); return _opportunityId; }
            set { SetLookup("opportunityid", "opportunity", value); _opportunityId = value; }
        }
        private Guid? _opportunityId;

		[CrmProperty(LogicalName = "opportunityidname")]
        public virtual string OpportunityIdName
        {
            get { FillData(); return _opportunityIdName; }
            set {  _opportunityIdName = value; }
        }
        private string _opportunityIdName;

		[CrmProperty(LogicalName = "opportunityroleid", IsLookup = true)]
        public virtual Guid? OpportunityRoleId
        {
            get { FillData(); return _opportunityRoleId; }
            set { SetLookup("opportunityroleid", "relationshiprole", value); _opportunityRoleId = value; }
        }
        private Guid? _opportunityRoleId;

		[CrmProperty(LogicalName = "opportunityroleidname")]
        public virtual string OpportunityRoleIdName
        {
            get { FillData(); return _opportunityRoleIdName; }
            set {  _opportunityRoleIdName = value; }
        }
        private string _opportunityRoleIdName;

		[CrmProperty(LogicalName = "opportunitystatecode")]
        public virtual int? OpportunityStateCode
        {
            get { FillData(); return _opportunityStateCode; }
            set {  _opportunityStateCode = value; }
        }
        private int? _opportunityStateCode;

		[CrmProperty(LogicalName = "opportunitystatuscode")]
        public virtual int? OpportunityStatusCode
        {
            get { FillData(); return _opportunityStatusCode; }
            set {  _opportunityStatusCode = value; }
        }
        private int? _opportunityStatusCode;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "uniquedscid")]
        public virtual Guid? UniqueDscId
        {
            get { FillData(); return _uniqueDscId; }
            set {  _uniqueDscId = value; }
        }
        private Guid? _uniqueDscId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "discount", PrimaryKey = "discountid")]
	public partial class Discount : CrmEntity
	{
		public class Enums
		{
			public enum StatusCode 
			{
			}		
		}

		public class Fields
		{
			public const string SchemaName = "discount";
			
			public const string Amount = "amount";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DiscountId = "discountid";
			public const string DiscountTypeId = "discounttypeid";
			public const string DiscountTypeIdName = "discounttypeidname";
			public const string ExchangeRate = "exchangerate";
			public const string HighQuantity = "highquantity";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsAmountType = "isamounttype";
			public const string IsAmountTypeName = "isamounttypename";
			public const string LowQuantity = "lowquantity";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Percentage = "percentage";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return DiscountId; }
		}

		[CrmProperty(LogicalName = "amount")]
        public virtual decimal? Amount
        {
            get { FillData(); return _amount; }
            set { SetMoney("amount", value); _amount = value; }
        }
        private decimal? _amount;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "discountid")]
        public virtual Guid DiscountId
        {
            get { FillData(); return _discountId; }
            set {  _discountId = value; }
        }
        private Guid _discountId;

		[CrmProperty(LogicalName = "discounttypeid", IsLookup = true)]
        public virtual Guid? DiscountTypeId
        {
            get { FillData(); return _discountTypeId; }
            set {  _discountTypeId = value; }
        }
        private Guid? _discountTypeId;

		[CrmProperty(LogicalName = "discounttypeidname")]
        public virtual string DiscountTypeIdName
        {
            get { FillData(); return _discountTypeIdName; }
            set {  _discountTypeIdName = value; }
        }
        private string _discountTypeIdName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "highquantity")]
        public virtual decimal? HighQuantity
        {
            get { FillData(); return _highQuantity; }
            set { SetValue<decimal?>("highquantity", value); _highQuantity = value; }
        }
        private decimal? _highQuantity;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isamounttype")]
        public virtual bool? IsAmountType
        {
            get { FillData(); return _isAmountType; }
            set {  _isAmountType = value; }
        }
        private bool? _isAmountType;

		[CrmProperty(LogicalName = "isamounttypename")]
        public virtual string IsAmountTypeName
        {
            get { FillData(); return _isAmountTypeName; }
            set {  _isAmountTypeName = value; }
        }
        private string _isAmountTypeName;

		[CrmProperty(LogicalName = "lowquantity")]
        public virtual decimal? LowQuantity
        {
            get { FillData(); return _lowQuantity; }
            set { SetValue<decimal?>("lowquantity", value); _lowQuantity = value; }
        }
        private decimal? _lowQuantity;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid")]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "percentage")]
        public virtual decimal? Percentage
        {
            get { FillData(); return _percentage; }
            set { SetValue<decimal?>("percentage", value); _percentage = value; }
        }
        private decimal? _percentage;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "discounttype", PrimaryKey = "discounttypeid")]
	public partial class DiscountType : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 100001)]Active = 100001,
				[CrmPicklist(DisplayName = "Inactive", Value = 100002)]Inactive = 100002,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "discounttype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DiscountTypeId = "discounttypeid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsAmountType = "isamounttype";
			public const string IsAmountTypeName = "isamounttypename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return DiscountTypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "discounttypeid")]
        public virtual Guid DiscountTypeId
        {
            get { FillData(); return _discountTypeId; }
            set {  _discountTypeId = value; }
        }
        private Guid _discountTypeId;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isamounttype")]
        public virtual bool? IsAmountType
        {
            get { FillData(); return _isAmountType; }
            set {  _isAmountType = value; }
        }
        private bool? _isAmountType;

		[CrmProperty(LogicalName = "isamounttypename")]
        public virtual string IsAmountTypeName
        {
            get { FillData(); return _isAmountTypeName; }
            set {  _isAmountTypeName = value; }
        }
        private string _isAmountTypeName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "email", PrimaryKey = "activityid")]
	public partial class Email : CrmEntity
	{
		public class Enums
		{
			public enum Notifications 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "The message was saved as a Microsoft Dynamics CRM e-mail record, but not all the attachments could be saved with it. An attachment cannot be saved if it is blocked or if its file type is invalid.", Value = 1)]TheMessageWasSavedAsAMicrosoftDynamicsCRMEmailRecordButNotAllTheAttachmentsCouldBeSavedWithItAnAttachmentCannotBeSavedIfItIsBlockedOrIfItsFileTypeIsInvalid = 1,
				[CrmPicklist(DisplayName = "Truncated body.", Value = 2)]TruncatedBody = 2,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Draft", Value = 1)]Draft = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Sent", Value = 3)]Sent = 3,
				[CrmPicklist(DisplayName = "Received", Value = 4)]Received = 4,
				[CrmPicklist(DisplayName = "Canceled", Value = 5)]Canceled = 5,
				[CrmPicklist(DisplayName = "Pending Send", Value = 6)]PendingSend = 6,
				[CrmPicklist(DisplayName = "Sending", Value = 7)]Sending = 7,
				[CrmPicklist(DisplayName = "Failed", Value = 8)]Failed = 8,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "email";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Bcc = "bcc";
			public const string Category = "category";
			public const string Cc = "cc";
			public const string Compressed = "compressed";
			public const string CompressedName = "compressedname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DeliveryAttempts = "deliveryattempts";
			public const string DeliveryReceiptRequested = "deliveryreceiptrequested";
			public const string DeliveryReceiptRequestedName = "deliveryreceiptrequestedname";
			public const string Description = "description";
			public const string DirectionCode = "directioncode";
			public const string DirectionCodeName = "directioncodename";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string MessageId = "messageid";
			public const string MessageIdDupCheck = "messageiddupcheck";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillableTime = "new_billabletime";
			public const string NewLinktoCustomerPortal = "new_linktocustomerportal";
			public const string NewLinktocustomerportalName = "new_linktocustomerportalname";
			public const string Notifications = "notifications";
			public const string NotificationsName = "notificationsname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoProcessed = "po_processed";
			public const string PoProcessedName = "po_processedname";
			public const string PoSurveyId = "po_surveyid";
			public const string PoSurveyIdName = "po_surveyidname";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ReadReceiptRequested = "readreceiptrequested";
			public const string ReadReceiptRequestedName = "readreceiptrequestedname";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string Sender = "sender";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubmittedBy = "submittedby";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string ToRecipients = "torecipients";
			public const string TrackingToken = "trackingtoken";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "bcc")]
        public virtual object Bcc
        {
            get { FillData(); return _bcc; }
            set {  _bcc = value; }
        }
        private object _bcc;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "cc")]
        public virtual object Cc
        {
            get { FillData(); return _cc; }
            set {  _cc = value; }
        }
        private object _cc;

		[CrmProperty(LogicalName = "compressed")]
        public virtual bool? Compressed
        {
            get { FillData(); return _compressed; }
            set {  _compressed = value; }
        }
        private bool? _compressed;

		[CrmProperty(LogicalName = "compressedname")]
        public virtual string CompressedName
        {
            get { FillData(); return _compressedName; }
            set {  _compressedName = value; }
        }
        private string _compressedName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "deliveryattempts")]
        public virtual int? DeliveryAttempts
        {
            get { FillData(); return _deliveryAttempts; }
            set { SetValue<int?>("deliveryattempts", value); _deliveryAttempts = value; }
        }
        private int? _deliveryAttempts;

		[CrmProperty(LogicalName = "deliveryreceiptrequested")]
        public virtual bool? DeliveryReceiptRequested
        {
            get { FillData(); return _deliveryReceiptRequested; }
            set { SetValue<bool?>("deliveryreceiptrequested", value); _deliveryReceiptRequested = value; }
        }
        private bool? _deliveryReceiptRequested;

		[CrmProperty(LogicalName = "deliveryreceiptrequestedname")]
        public virtual string DeliveryReceiptRequestedName
        {
            get { FillData(); return _deliveryReceiptRequestedName; }
            set {  _deliveryReceiptRequestedName = value; }
        }
        private string _deliveryReceiptRequestedName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "directioncode")]
        public virtual bool? DirectionCode
        {
            get { FillData(); return _directionCode; }
            set { SetValue<bool?>("directioncode", value); _directionCode = value; }
        }
        private bool? _directionCode;

		[CrmProperty(LogicalName = "directioncodename")]
        public virtual string DirectionCodeName
        {
            get { FillData(); return _directionCodeName; }
            set {  _directionCodeName = value; }
        }
        private string _directionCodeName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "messageid")]
        public virtual string MessageId
        {
            get { FillData(); return _messageId; }
            set { SetValue<string>("messageid", value); _messageId = value; }
        }
        private string _messageId;

		[CrmProperty(LogicalName = "messageiddupcheck")]
        public virtual Guid? MessageIdDupCheck
        {
            get { FillData(); return _messageIdDupCheck; }
            set { SetValue<Guid?>("messageiddupcheck", value); _messageIdDupCheck = value; }
        }
        private Guid? _messageIdDupCheck;

		[CrmProperty(LogicalName = "mimetype")]
        public virtual string MimeType
        {
            get { FillData(); return _mimeType; }
            set { SetValue<string>("mimetype", value); _mimeType = value; }
        }
        private string _mimeType;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billabletime")]
        public virtual int? NewBillableTime
        {
            get { FillData(); return _newBillableTime; }
            set { SetValue<int?>("new_billabletime", value); _newBillableTime = value; }
        }
        private int? _newBillableTime;

		[CrmProperty(LogicalName = "new_linktocustomerportal")]
        public virtual bool? NewLinktoCustomerPortal
        {
            get { FillData(); return _newLinktoCustomerPortal; }
            set { SetValue<bool?>("new_linktocustomerportal", value); _newLinktoCustomerPortal = value; }
        }
        private bool? _newLinktoCustomerPortal;

		[CrmProperty(LogicalName = "new_linktocustomerportalname")]
        public virtual string NewLinktocustomerportalName
        {
            get { FillData(); return _newLinktocustomerportalName; }
            set {  _newLinktocustomerportalName = value; }
        }
        private string _newLinktocustomerportalName;

		[CrmProperty(LogicalName = "notifications")]
        public virtual Enums.Notifications? Notifications
        {
            get { FillData(); return _notifications; }
            set { SetPicklist("notifications", (int?)value); _notifications = value; }
        }
        private Enums.Notifications? _notifications;

		[CrmProperty(LogicalName = "notificationsname")]
        public virtual string NotificationsName
        {
            get { FillData(); return _notificationsName; }
            set {  _notificationsName = value; }
        }
        private string _notificationsName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_processed")]
        public virtual bool? PoProcessed
        {
            get { FillData(); return _poProcessed; }
            set { SetValue<bool?>("po_processed", value); _poProcessed = value; }
        }
        private bool? _poProcessed;

		[CrmProperty(LogicalName = "po_processedname")]
        public virtual string PoProcessedName
        {
            get { FillData(); return _poProcessedName; }
            set {  _poProcessedName = value; }
        }
        private string _poProcessedName;

		[CrmProperty(LogicalName = "po_surveyid", IsLookup = true)]
        public virtual Guid? PoSurveyId
        {
            get { FillData(); return _poSurveyId; }
            set { SetLookup("po_surveyid", "po_satisfactionsurvey", value); _poSurveyId = value; }
        }
        private Guid? _poSurveyId;

		[CrmProperty(LogicalName = "po_surveyidname")]
        public virtual string PoSurveyIdName
        {
            get { FillData(); return _poSurveyIdName; }
            set {  _poSurveyIdName = value; }
        }
        private string _poSurveyIdName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "readreceiptrequested")]
        public virtual bool? ReadReceiptRequested
        {
            get { FillData(); return _readReceiptRequested; }
            set { SetValue<bool?>("readreceiptrequested", value); _readReceiptRequested = value; }
        }
        private bool? _readReceiptRequested;

		[CrmProperty(LogicalName = "readreceiptrequestedname")]
        public virtual string ReadReceiptRequestedName
        {
            get { FillData(); return _readReceiptRequestedName; }
            set {  _readReceiptRequestedName = value; }
        }
        private string _readReceiptRequestedName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "sender")]
        public virtual string Sender
        {
            get { FillData(); return _sender; }
            set { SetValue<string>("sender", value); _sender = value; }
        }
        private string _sender;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "submittedby")]
        public virtual string SubmittedBy
        {
            get { FillData(); return _submittedBy; }
            set { SetValue<string>("submittedby", value); _submittedBy = value; }
        }
        private string _submittedBy;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "torecipients")]
        public virtual string ToRecipients
        {
            get { FillData(); return _toRecipients; }
            set { SetValue<string>("torecipients", value); _toRecipients = value; }
        }
        private string _toRecipients;

		[CrmProperty(LogicalName = "trackingtoken")]
        public virtual string TrackingToken
        {
            get { FillData(); return _trackingToken; }
            set { SetValue<string>("trackingtoken", value); _trackingToken = value; }
        }
        private string _trackingToken;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "equipment", PrimaryKey = "equipmentid")]
	public partial class Equipment : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "equipment";
			
			public const string BusinessUnitId = "businessunitid";
			public const string BusinessUnitIdName = "businessunitidname";
			public const string CalendarId = "calendarid";
			public const string CalendarIdName = "calendaridName";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DisplayInServiceViews = "displayinserviceviews";
			public const string DisplayInServiceViewsName = "displayinserviceviewsname";
			public const string EMailAddress = "emailaddress";
			public const string EquipmentId = "equipmentid";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsDisabled = "isdisabled";
			public const string IsDisabledName = "isdisabledname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string SiteId = "siteid";
			public const string SiteIdName = "siteidname";
			public const string Skills = "skills";
			public const string TimeZoneCode = "timezonecode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return EquipmentId; }
		}

		[CrmProperty(LogicalName = "businessunitid", IsLookup = true)]
        public virtual Guid? BusinessUnitId
        {
            get { FillData(); return _businessUnitId; }
            set {  _businessUnitId = value; }
        }
        private Guid? _businessUnitId;

		[CrmProperty(LogicalName = "businessunitidname")]
        public virtual string BusinessUnitIdName
        {
            get { FillData(); return _businessUnitIdName; }
            set {  _businessUnitIdName = value; }
        }
        private string _businessUnitIdName;

		[CrmProperty(LogicalName = "calendarid", IsLookup = true)]
        public virtual Guid? CalendarId
        {
            get { FillData(); return _calendarId; }
            set { SetLookup("calendarid", "calendar", value); _calendarId = value; }
        }
        private Guid? _calendarId;

		[CrmProperty(LogicalName = "calendaridName", IsEntityReferenceHelper = true)]
        public virtual string CalendarIdName
        {
            get { FillData(); return _calendarIdName; }
            set {  _calendarIdName = value; }
        }
        private string _calendarIdName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "displayinserviceviews")]
        public virtual bool? DisplayInServiceViews
        {
            get { FillData(); return _displayInServiceViews; }
            set { SetValue<bool?>("displayinserviceviews", value); _displayInServiceViews = value; }
        }
        private bool? _displayInServiceViews;

		[CrmProperty(LogicalName = "displayinserviceviewsname")]
        public virtual string DisplayInServiceViewsName
        {
            get { FillData(); return _displayInServiceViewsName; }
            set {  _displayInServiceViewsName = value; }
        }
        private string _displayInServiceViewsName;

		[CrmProperty(LogicalName = "emailaddress")]
        public virtual string EMailAddress
        {
            get { FillData(); return _eMailAddress; }
            set { SetValue<string>("emailaddress", value); _eMailAddress = value; }
        }
        private string _eMailAddress;

		[CrmProperty(LogicalName = "equipmentid")]
        public virtual Guid EquipmentId
        {
            get { FillData(); return _equipmentId; }
            set {  _equipmentId = value; }
        }
        private Guid _equipmentId;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isdisabled")]
        public virtual bool? IsDisabled
        {
            get { FillData(); return _isDisabled; }
            set { SetValue<bool?>("isdisabled", value); _isDisabled = value; }
        }
        private bool? _isDisabled;

		[CrmProperty(LogicalName = "isdisabledname")]
        public virtual string IsDisabledName
        {
            get { FillData(); return _isDisabledName; }
            set {  _isDisabledName = value; }
        }
        private string _isDisabledName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "siteid", IsLookup = true)]
        public virtual Guid? SiteId
        {
            get { FillData(); return _siteId; }
            set { SetLookup("siteid", "site", value); _siteId = value; }
        }
        private Guid? _siteId;

		[CrmProperty(LogicalName = "siteidname")]
        public virtual string SiteIdName
        {
            get { FillData(); return _siteIdName; }
            set {  _siteIdName = value; }
        }
        private string _siteIdName;

		[CrmProperty(LogicalName = "skills")]
        public virtual string Skills
        {
            get { FillData(); return _skills; }
            set { SetValue<string>("skills", value); _skills = value; }
        }
        private string _skills;

		[CrmProperty(LogicalName = "timezonecode")]
        public virtual int? TimeZoneCode
        {
            get { FillData(); return _timeZoneCode; }
            set { SetValue<int?>("timezonecode", value); _timeZoneCode = value; }
        }
        private int? _timeZoneCode;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "fax", PrimaryKey = "activityid")]
	public partial class Fax : CrmEntity
	{
		public class Enums
		{
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Sent", Value = 3)]Sent = 3,
				[CrmPicklist(DisplayName = "Received", Value = 4)]Received = 4,
				[CrmPicklist(DisplayName = "Canceled", Value = 5)]Canceled = 5,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "fax";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BillingCode = "billingcode";
			public const string Category = "category";
			public const string CoverPageName = "coverpagename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DirectionCode = "directioncode";
			public const string DirectionCodeName = "directioncodename";
			public const string ExchangeRate = "exchangerate";
			public const string FaxNumber = "faxnumber";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillableTime = "new_billabletime";
			public const string NumberOfPages = "numberofpages";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string Tsid = "tsid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "billingcode")]
        public virtual string BillingCode
        {
            get { FillData(); return _billingCode; }
            set { SetValue<string>("billingcode", value); _billingCode = value; }
        }
        private string _billingCode;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "coverpagename")]
        public virtual string CoverPageName
        {
            get { FillData(); return _coverPageName; }
            set { SetValue<string>("coverpagename", value); _coverPageName = value; }
        }
        private string _coverPageName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "directioncode")]
        public virtual bool? DirectionCode
        {
            get { FillData(); return _directionCode; }
            set { SetValue<bool?>("directioncode", value); _directionCode = value; }
        }
        private bool? _directionCode;

		[CrmProperty(LogicalName = "directioncodename")]
        public virtual string DirectionCodeName
        {
            get { FillData(); return _directionCodeName; }
            set {  _directionCodeName = value; }
        }
        private string _directionCodeName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "faxnumber")]
        public virtual string FaxNumber
        {
            get { FillData(); return _faxNumber; }
            set { SetValue<string>("faxnumber", value); _faxNumber = value; }
        }
        private string _faxNumber;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billabletime")]
        public virtual int? NewBillableTime
        {
            get { FillData(); return _newBillableTime; }
            set { SetValue<int?>("new_billabletime", value); _newBillableTime = value; }
        }
        private int? _newBillableTime;

		[CrmProperty(LogicalName = "numberofpages")]
        public virtual int? NumberOfPages
        {
            get { FillData(); return _numberOfPages; }
            set { SetValue<int?>("numberofpages", value); _numberOfPages = value; }
        }
        private int? _numberOfPages;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "tsid")]
        public virtual string Tsid
        {
            get { FillData(); return _tsid; }
            set { SetValue<string>("tsid", value); _tsid = value; }
        }
        private string _tsid;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "incident", PrimaryKey = "incidentid")]
	public partial class Incident : CrmEntity
	{
		public class Enums
		{
			public enum CaseOriginCode 
			{
				[CrmPicklist(DisplayName = "E-mail", Value = 2)]Email = 2,
				[CrmPicklist(DisplayName = "Internal", Value = 100000000)]Internal = 100000000,
				[CrmPicklist(DisplayName = "Phone", Value = 1)]Phone = 1,
				[CrmPicklist(DisplayName = "Web", Value = 3)]Web = 3,
			}		
			public enum CaseTypeCode 
			{
				[CrmPicklist(DisplayName = "Question", Value = 1)]Question = 1,
				[CrmPicklist(DisplayName = "Problem", Value = 2)]Problem = 2,
				[CrmPicklist(DisplayName = "Request", Value = 3)]Request = 3,
			}		
			public enum ContractServiceLevelCode 
			{
				[CrmPicklist(DisplayName = "Gold", Value = 1)]Gold = 1,
				[CrmPicklist(DisplayName = "Silver", Value = 2)]Silver = 2,
				[CrmPicklist(DisplayName = "Bronze", Value = 3)]Bronze = 3,
			}		
			public enum CustomerSatisfactionCode 
			{
				[CrmPicklist(DisplayName = "Very Satisfied", Value = 5)]VerySatisfied = 5,
				[CrmPicklist(DisplayName = "Satisfied", Value = 4)]Satisfied = 4,
				[CrmPicklist(DisplayName = "Neutral", Value = 3)]Neutral = 3,
				[CrmPicklist(DisplayName = "Dissatisfied", Value = 2)]Dissatisfied = 2,
				[CrmPicklist(DisplayName = "Very Dissatisfied", Value = 1)]VeryDissatisfied = 1,
			}		
			public enum IncidentStageCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "High", Value = 1)]High = 1,
				[CrmPicklist(DisplayName = "Normal", Value = 2)]Normal = 2,
				[CrmPicklist(DisplayName = "Low", Value = 3)]Low = 3,
			}		
			public enum ServiceStage 
			{
				[CrmPicklist(DisplayName = "Identify")]Identify = 0,
				[CrmPicklist(DisplayName = "Research", Value = 1)]Research = 1,
				[CrmPicklist(DisplayName = "Resolve", Value = 2)]Resolve = 2,
			}		
			public enum SeverityCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Resolved", Value = 1)]Resolved = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Awaiting Customer Confirmation", Value = 100000001)]AwaitingCustomerConfirmation = 100000001,
				[CrmPicklist(DisplayName = "Information Provided", Value = 1000)]InformationProvided = 1000,
				[CrmPicklist(DisplayName = "In Progress", Value = 1)]InProgress = 1,
				[CrmPicklist(DisplayName = "On Hold", Value = 2)]OnHold = 2,
				[CrmPicklist(DisplayName = "Waiting for Details", Value = 3)]WaitingForDetails = 3,
				[CrmPicklist(DisplayName = "Researching", Value = 4)]Researching = 4,
				[CrmPicklist(DisplayName = "Completed", Value = 100000000)]Completed = 100000000,
				[CrmPicklist(DisplayName = "Resolved", Value = 5)]Resolved = 5,
				[CrmPicklist(DisplayName = "Canceled", Value = 6)]Canceled = 6,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "incident";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string ActualServiceUnits = "actualserviceunits";
			public const string AdxCreatedByIPAddress = "adx_createdbyipaddress";
			public const string AdxCreatedByUsername = "adx_createdbyusername";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string BilledServiceUnits = "billedserviceunits";
			public const string CaseOriginCode = "caseorigincode";
			public const string CaseOriginCodeName = "caseorigincodename";
			public const string CaseTypeCode = "casetypecode";
			public const string CaseTypeCodeName = "casetypecodename";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string ContractDetailId = "contractdetailid";
			public const string ContractDetailIdName = "contractdetailidname";
			public const string ContractId = "contractid";
			public const string ContractIdName = "contractidname";
			public const string ContractServiceLevelCode = "contractservicelevelcode";
			public const string ContractServiceLevelCodeName = "contractservicelevelcodename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string CustomerSatisfactionCode = "customersatisfactioncode";
			public const string CustomerSatisfactionCodeName = "customersatisfactioncodename";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExistingCase = "existingcase";
			public const string ExistingCaseName = "existingcaseName";
			public const string FollowupBy = "followupby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IncidentId = "incidentid";
			public const string IncidentStageCode = "incidentstagecode";
			public const string IncidentStageCodeName = "incidentstagecodename";
			public const string IsDecrementing = "isdecrementing";
			public const string IsDecrementingName = "isdecrementingname";
			public const string KbArticleId = "kbarticleid";
			public const string KbArticleIdName = "kbarticleidname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaPartnercontactid = "msa_partnercontactid";
			public const string MsaPartnercontactidName = "msa_partnercontactidname";
			public const string MsaPartnercontactidYomiName = "msa_partnercontactidyominame";
			public const string MsaPartnerid = "msa_partnerid";
			public const string MsaPartneridName = "msa_partneridname";
			public const string MsaPartneridYomiName = "msa_partneridyominame";
			public const string NewAssignedtoOwner = "new_assignedtoowner";
			public const string NewBillable = "new_billable";
			public const string NewBillableName = "new_billablename";
			public const string NewCaseAgeDays = "new_caseagedays";
			public const string NewCaseTypeId = "new_casetypeid";
			public const string NewCaseTypeIdName = "new_casetypeidname";
			public const string NewCustomersAccount = "new_customersaccount";
			public const string NewCustomersAccountName = "new_customersaccountname";
			public const string NewCustomersAccountYomiName = "new_customersaccountyominame";
			public const string NewInvoiceText = "new_invoicetext";
			public const string NewPriority = "new_priority";
			public const string NewPriorityName = "new_priorityname";
			public const string NewPriorityset = "new_priorityset";
			public const string NewPurchaseOrder = "new_purchaseorder";
			public const string NewResolutionSummary = "new_resolutionsummary";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string ProductSerialNumber = "productserialnumber";
			public const string ResponsibleContactId = "responsiblecontactid";
			public const string ResponsibleContactIdName = "responsiblecontactidname";
			public const string ResponsibleContactIdYomiName = "responsiblecontactidyominame";
			public const string ServiceStage = "servicestage";
			public const string ServiceStageName = "servicestagename";
			public const string SeverityCode = "severitycode";
			public const string SeverityCodeName = "severitycodename";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SubjectId = "subjectid";
			public const string SubjectIdName = "subjectidname";
			public const string TicketNumber = "ticketnumber";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return IncidentId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "actualserviceunits")]
        public virtual int? ActualServiceUnits
        {
            get { FillData(); return _actualServiceUnits; }
            set { SetValue<int?>("actualserviceunits", value); _actualServiceUnits = value; }
        }
        private int? _actualServiceUnits;

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedByIPAddress
        {
            get { FillData(); return _adxCreatedByIPAddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedByIPAddress = value; }
        }
        private string _adxCreatedByIPAddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedByUsername
        {
            get { FillData(); return _adxCreatedByUsername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedByUsername = value; }
        }
        private string _adxCreatedByUsername;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "billedserviceunits")]
        public virtual int? BilledServiceUnits
        {
            get { FillData(); return _billedServiceUnits; }
            set { SetValue<int?>("billedserviceunits", value); _billedServiceUnits = value; }
        }
        private int? _billedServiceUnits;

		[CrmProperty(LogicalName = "caseorigincode")]
        public virtual Enums.CaseOriginCode? CaseOriginCode
        {
            get { FillData(); return _caseOriginCode; }
            set { SetPicklist("caseorigincode", (int?)value); _caseOriginCode = value; }
        }
        private Enums.CaseOriginCode? _caseOriginCode;

		[CrmProperty(LogicalName = "caseorigincodename")]
        public virtual string CaseOriginCodeName
        {
            get { FillData(); return _caseOriginCodeName; }
            set {  _caseOriginCodeName = value; }
        }
        private string _caseOriginCodeName;

		[CrmProperty(LogicalName = "casetypecode")]
        public virtual Enums.CaseTypeCode? CaseTypeCode
        {
            get { FillData(); return _caseTypeCode; }
            set { SetPicklist("casetypecode", (int?)value); _caseTypeCode = value; }
        }
        private Enums.CaseTypeCode? _caseTypeCode;

		[CrmProperty(LogicalName = "casetypecodename")]
        public virtual string CaseTypeCodeName
        {
            get { FillData(); return _caseTypeCodeName; }
            set {  _caseTypeCodeName = value; }
        }
        private string _caseTypeCodeName;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidname")]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contactidyominame")]
        public virtual string ContactIdYomiName
        {
            get { FillData(); return _contactIdYomiName; }
            set {  _contactIdYomiName = value; }
        }
        private string _contactIdYomiName;

		[CrmProperty(LogicalName = "contractdetailid", IsLookup = true)]
        public virtual Guid? ContractDetailId
        {
            get { FillData(); return _contractDetailId; }
            set { SetLookup("contractdetailid", "contractdetail", value); _contractDetailId = value; }
        }
        private Guid? _contractDetailId;

		[CrmProperty(LogicalName = "contractdetailidname")]
        public virtual string ContractDetailIdName
        {
            get { FillData(); return _contractDetailIdName; }
            set {  _contractDetailIdName = value; }
        }
        private string _contractDetailIdName;

		[CrmProperty(LogicalName = "contractid", IsLookup = true)]
        public virtual Guid? ContractId
        {
            get { FillData(); return _contractId; }
            set { SetLookup("contractid", "contract", value); _contractId = value; }
        }
        private Guid? _contractId;

		[CrmProperty(LogicalName = "contractidname")]
        public virtual string ContractIdName
        {
            get { FillData(); return _contractIdName; }
            set {  _contractIdName = value; }
        }
        private string _contractIdName;

		[CrmProperty(LogicalName = "contractservicelevelcode")]
        public virtual Enums.ContractServiceLevelCode? ContractServiceLevelCode
        {
            get { FillData(); return _contractServiceLevelCode; }
            set { SetPicklist("contractservicelevelcode", (int?)value); _contractServiceLevelCode = value; }
        }
        private Enums.ContractServiceLevelCode? _contractServiceLevelCode;

		[CrmProperty(LogicalName = "contractservicelevelcodename")]
        public virtual string ContractServiceLevelCodeName
        {
            get { FillData(); return _contractServiceLevelCodeName; }
            set {  _contractServiceLevelCodeName = value; }
        }
        private string _contractServiceLevelCodeName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "customersatisfactioncode")]
        public virtual Enums.CustomerSatisfactionCode? CustomerSatisfactionCode
        {
            get { FillData(); return _customerSatisfactionCode; }
            set { SetPicklist("customersatisfactioncode", (int?)value); _customerSatisfactionCode = value; }
        }
        private Enums.CustomerSatisfactionCode? _customerSatisfactionCode;

		[CrmProperty(LogicalName = "customersatisfactioncodename")]
        public virtual string CustomerSatisfactionCodeName
        {
            get { FillData(); return _customerSatisfactionCodeName; }
            set {  _customerSatisfactionCodeName = value; }
        }
        private string _customerSatisfactionCodeName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "existingcase", IsLookup = true)]
        public virtual Guid? ExistingCase
        {
            get { FillData(); return _existingCase; }
            set { SetLookup("existingcase", "incident", value); _existingCase = value; }
        }
        private Guid? _existingCase;

		[CrmProperty(LogicalName = "existingcaseName", IsEntityReferenceHelper = true)]
        public virtual string ExistingCaseName
        {
            get { FillData(); return _existingCaseName; }
            set {  _existingCaseName = value; }
        }
        private string _existingCaseName;

		[CrmProperty(LogicalName = "followupby")]
        public virtual DateTime? FollowupBy
        {
            get { FillData(); return _followupBy; }
            set { SetValue<DateTime?>("followupby", value); _followupBy = value; }
        }
        private DateTime? _followupBy;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "incidentid")]
        public virtual Guid IncidentId
        {
            get { FillData(); return _incidentId; }
            set {  _incidentId = value; }
        }
        private Guid _incidentId;

		[CrmProperty(LogicalName = "incidentstagecode")]
        public virtual Enums.IncidentStageCode? IncidentStageCode
        {
            get { FillData(); return _incidentStageCode; }
            set { SetPicklist("incidentstagecode", (int?)value); _incidentStageCode = value; }
        }
        private Enums.IncidentStageCode? _incidentStageCode;

		[CrmProperty(LogicalName = "incidentstagecodename")]
        public virtual string IncidentStageCodeName
        {
            get { FillData(); return _incidentStageCodeName; }
            set {  _incidentStageCodeName = value; }
        }
        private string _incidentStageCodeName;

		[CrmProperty(LogicalName = "isdecrementing")]
        public virtual bool? IsDecrementing
        {
            get { FillData(); return _isDecrementing; }
            set { SetValue<bool?>("isdecrementing", value); _isDecrementing = value; }
        }
        private bool? _isDecrementing;

		[CrmProperty(LogicalName = "isdecrementingname")]
        public virtual string IsDecrementingName
        {
            get { FillData(); return _isDecrementingName; }
            set {  _isDecrementingName = value; }
        }
        private string _isDecrementingName;

		[CrmProperty(LogicalName = "kbarticleid", IsLookup = true)]
        public virtual Guid? KbArticleId
        {
            get { FillData(); return _kbArticleId; }
            set { SetLookup("kbarticleid", "kbarticle", value); _kbArticleId = value; }
        }
        private Guid? _kbArticleId;

		[CrmProperty(LogicalName = "kbarticleidname")]
        public virtual string KbArticleIdName
        {
            get { FillData(); return _kbArticleIdName; }
            set {  _kbArticleIdName = value; }
        }
        private string _kbArticleIdName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_partnercontactid", IsLookup = true)]
        public virtual Guid? MsaPartnercontactid
        {
            get { FillData(); return _msaPartnercontactid; }
            set { SetLookup("msa_partnercontactid", "contact", value); _msaPartnercontactid = value; }
        }
        private Guid? _msaPartnercontactid;

		[CrmProperty(LogicalName = "msa_partnercontactidname")]
        public virtual string MsaPartnercontactidName
        {
            get { FillData(); return _msaPartnercontactidName; }
            set {  _msaPartnercontactidName = value; }
        }
        private string _msaPartnercontactidName;

		[CrmProperty(LogicalName = "msa_partnercontactidyominame")]
        public virtual string MsaPartnercontactidYomiName
        {
            get { FillData(); return _msaPartnercontactidYomiName; }
            set {  _msaPartnercontactidYomiName = value; }
        }
        private string _msaPartnercontactidYomiName;

		[CrmProperty(LogicalName = "msa_partnerid", IsLookup = true)]
        public virtual Guid? MsaPartnerid
        {
            get { FillData(); return _msaPartnerid; }
            set { SetLookup("msa_partnerid", "account", value); _msaPartnerid = value; }
        }
        private Guid? _msaPartnerid;

		[CrmProperty(LogicalName = "msa_partneridname")]
        public virtual string MsaPartneridName
        {
            get { FillData(); return _msaPartneridName; }
            set {  _msaPartneridName = value; }
        }
        private string _msaPartneridName;

		[CrmProperty(LogicalName = "msa_partneridyominame")]
        public virtual string MsaPartneridYomiName
        {
            get { FillData(); return _msaPartneridYomiName; }
            set {  _msaPartneridYomiName = value; }
        }
        private string _msaPartneridYomiName;

		[CrmProperty(LogicalName = "new_assignedtoowner")]
        public virtual DateTime? NewAssignedtoOwner
        {
            get { FillData(); return _newAssignedtoOwner; }
            set { SetValue<DateTime?>("new_assignedtoowner", value); _newAssignedtoOwner = value; }
        }
        private DateTime? _newAssignedtoOwner;

		[CrmProperty(LogicalName = "new_billable")]
        public virtual bool? NewBillable
        {
            get { FillData(); return _newBillable; }
            set { SetValue<bool?>("new_billable", value); _newBillable = value; }
        }
        private bool? _newBillable;

		[CrmProperty(LogicalName = "new_billablename")]
        public virtual string NewBillableName
        {
            get { FillData(); return _newBillableName; }
            set {  _newBillableName = value; }
        }
        private string _newBillableName;

		[CrmProperty(LogicalName = "new_caseagedays")]
        public virtual int? NewCaseAgeDays
        {
            get { FillData(); return _newCaseAgeDays; }
            set { SetValue<int?>("new_caseagedays", value); _newCaseAgeDays = value; }
        }
        private int? _newCaseAgeDays;

		[CrmProperty(LogicalName = "new_casetypeid", IsLookup = true)]
        public virtual Guid? NewCaseTypeId
        {
            get { FillData(); return _newCaseTypeId; }
            set { SetLookup("new_casetypeid", "new_casetype", value); _newCaseTypeId = value; }
        }
        private Guid? _newCaseTypeId;

		[CrmProperty(LogicalName = "new_casetypeidname")]
        public virtual string NewCaseTypeIdName
        {
            get { FillData(); return _newCaseTypeIdName; }
            set {  _newCaseTypeIdName = value; }
        }
        private string _newCaseTypeIdName;

		[CrmProperty(LogicalName = "new_customersaccount", IsLookup = true)]
        public virtual Guid? NewCustomersAccount
        {
            get { FillData(); return _newCustomersAccount; }
            set { SetLookup("new_customersaccount", "account", value); _newCustomersAccount = value; }
        }
        private Guid? _newCustomersAccount;

		[CrmProperty(LogicalName = "new_customersaccountname")]
        public virtual string NewCustomersAccountName
        {
            get { FillData(); return _newCustomersAccountName; }
            set {  _newCustomersAccountName = value; }
        }
        private string _newCustomersAccountName;

		[CrmProperty(LogicalName = "new_customersaccountyominame")]
        public virtual string NewCustomersAccountYomiName
        {
            get { FillData(); return _newCustomersAccountYomiName; }
            set {  _newCustomersAccountYomiName = value; }
        }
        private string _newCustomersAccountYomiName;

		[CrmProperty(LogicalName = "new_invoicetext")]
        public virtual string NewInvoiceText
        {
            get { FillData(); return _newInvoiceText; }
            set { SetValue<string>("new_invoicetext", value); _newInvoiceText = value; }
        }
        private string _newInvoiceText;

		[CrmProperty(LogicalName = "new_priority", IsLookup = true)]
        public virtual Guid? NewPriority
        {
            get { FillData(); return _newPriority; }
            set { SetLookup("new_priority", "new_priority", value); _newPriority = value; }
        }
        private Guid? _newPriority;

		[CrmProperty(LogicalName = "new_priorityname")]
        public virtual string NewPriorityName
        {
            get { FillData(); return _newPriorityName; }
            set {  _newPriorityName = value; }
        }
        private string _newPriorityName;

		[CrmProperty(LogicalName = "new_priorityset")]
        public virtual DateTime? NewPriorityset
        {
            get { FillData(); return _newPriorityset; }
            set { SetValue<DateTime?>("new_priorityset", value); _newPriorityset = value; }
        }
        private DateTime? _newPriorityset;

		[CrmProperty(LogicalName = "new_purchaseorder")]
        public virtual string NewPurchaseOrder
        {
            get { FillData(); return _newPurchaseOrder; }
            set { SetValue<string>("new_purchaseorder", value); _newPurchaseOrder = value; }
        }
        private string _newPurchaseOrder;

		[CrmProperty(LogicalName = "new_resolutionsummary")]
        public virtual string NewResolutionSummary
        {
            get { FillData(); return _newResolutionSummary; }
            set { SetValue<string>("new_resolutionsummary", value); _newResolutionSummary = value; }
        }
        private string _newResolutionSummary;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "productid", IsLookup = true)]
        public virtual Guid? ProductId
        {
            get { FillData(); return _productId; }
            set { SetLookup("productid", "product", value); _productId = value; }
        }
        private Guid? _productId;

		[CrmProperty(LogicalName = "productidname")]
        public virtual string ProductIdName
        {
            get { FillData(); return _productIdName; }
            set {  _productIdName = value; }
        }
        private string _productIdName;

		[CrmProperty(LogicalName = "productserialnumber")]
        public virtual string ProductSerialNumber
        {
            get { FillData(); return _productSerialNumber; }
            set { SetValue<string>("productserialnumber", value); _productSerialNumber = value; }
        }
        private string _productSerialNumber;

		[CrmProperty(LogicalName = "responsiblecontactid", IsLookup = true)]
        public virtual Guid? ResponsibleContactId
        {
            get { FillData(); return _responsibleContactId; }
            set { SetLookup("responsiblecontactid", "contact", value); _responsibleContactId = value; }
        }
        private Guid? _responsibleContactId;

		[CrmProperty(LogicalName = "responsiblecontactidname")]
        public virtual string ResponsibleContactIdName
        {
            get { FillData(); return _responsibleContactIdName; }
            set {  _responsibleContactIdName = value; }
        }
        private string _responsibleContactIdName;

		[CrmProperty(LogicalName = "responsiblecontactidyominame")]
        public virtual string ResponsibleContactIdYomiName
        {
            get { FillData(); return _responsibleContactIdYomiName; }
            set {  _responsibleContactIdYomiName = value; }
        }
        private string _responsibleContactIdYomiName;

		[CrmProperty(LogicalName = "servicestage")]
        public virtual Enums.ServiceStage? ServiceStage
        {
            get { FillData(); return _serviceStage; }
            set { SetPicklist("servicestage", (int?)value); _serviceStage = value; }
        }
        private Enums.ServiceStage? _serviceStage;

		[CrmProperty(LogicalName = "servicestagename")]
        public virtual string ServiceStageName
        {
            get { FillData(); return _serviceStageName; }
            set {  _serviceStageName = value; }
        }
        private string _serviceStageName;

		[CrmProperty(LogicalName = "severitycode")]
        public virtual Enums.SeverityCode? SeverityCode
        {
            get { FillData(); return _severityCode; }
            set { SetPicklist("severitycode", (int?)value); _severityCode = value; }
        }
        private Enums.SeverityCode? _severityCode;

		[CrmProperty(LogicalName = "severitycodename")]
        public virtual string SeverityCodeName
        {
            get { FillData(); return _severityCodeName; }
            set {  _severityCodeName = value; }
        }
        private string _severityCodeName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subjectid", IsLookup = true)]
        public virtual Guid? SubjectId
        {
            get { FillData(); return _subjectId; }
            set { SetLookup("subjectid", "subject", value); _subjectId = value; }
        }
        private Guid? _subjectId;

		[CrmProperty(LogicalName = "subjectidname")]
        public virtual string SubjectIdName
        {
            get { FillData(); return _subjectIdName; }
            set {  _subjectIdName = value; }
        }
        private string _subjectIdName;

		[CrmProperty(LogicalName = "ticketnumber")]
        public virtual string TicketNumber
        {
            get { FillData(); return _ticketNumber; }
            set {  _ticketNumber = value; }
        }
        private string _ticketNumber;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "title")]
        public virtual string Title
        {
            get { FillData(); return _title; }
            set { SetValue<string>("title", value); _title = value; }
        }
        private string _title;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "incidentresolution", PrimaryKey = "activityid")]
	public partial class IncidentResolution : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Closed", Value = 2)]Closed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "incidentresolution";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IncidentId = "incidentid";
			public const string IncidentIdName = "incidentidname";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string TimeSpent = "timespent";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "incidentid", IsLookup = true)]
        public virtual Guid? IncidentId
        {
            get { FillData(); return _incidentId; }
            set { SetLookup("incidentid", "incident", value); _incidentId = value; }
        }
        private Guid? _incidentId;

		[CrmProperty(LogicalName = "incidentidname")]
        public virtual string IncidentIdName
        {
            get { FillData(); return _incidentIdName; }
            set {  _incidentIdName = value; }
        }
        private string _incidentIdName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timespent")]
        public virtual int? TimeSpent
        {
            get { FillData(); return _timeSpent; }
            set { SetValue<int?>("timespent", value); _timeSpent = value; }
        }
        private int? _timeSpent;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "invoice", PrimaryKey = "invoiceid")]
	public partial class Invoice : CrmEntity
	{
		public class Enums
		{
			public enum PaymentTermsCode 
			{
				[CrmPicklist(DisplayName = "Net 30", Value = 1)]Net30 = 1,
				[CrmPicklist(DisplayName = "2% 10, Net 30", Value = 2)]_210Net30 = 2,
				[CrmPicklist(DisplayName = "Net 45", Value = 3)]Net45 = 3,
				[CrmPicklist(DisplayName = "Net 60", Value = 4)]Net60 = 4,
			}		
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Airborne", Value = 1)]Airborne = 1,
				[CrmPicklist(DisplayName = "DHL", Value = 2)]DHL = 2,
				[CrmPicklist(DisplayName = "FedEx", Value = 3)]FedEx = 3,
				[CrmPicklist(DisplayName = "UPS", Value = 4)]UPS = 4,
				[CrmPicklist(DisplayName = "Postal Mail", Value = 5)]PostalMail = 5,
				[CrmPicklist(DisplayName = "Full Load", Value = 6)]FullLoad = 6,
				[CrmPicklist(DisplayName = "Will Call", Value = 7)]WillCall = 7,
			}		
			public enum ShipToFreightTermsCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Closed (deprecated)", Value = 1)]Closeddeprecated = 1,
				[CrmPicklist(DisplayName = "Paid", Value = 2)]Paid = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "New", Value = 1)]__New = 1,
				[CrmPicklist(DisplayName = "Partially Shipped", Value = 2)]PartiallyShipped = 2,
				[CrmPicklist(DisplayName = "Billed", Value = 4)]Billed = 4,
				[CrmPicklist(DisplayName = "Booked (applies to services)", Value = 5)]BookedappliesToServices = 5,
				[CrmPicklist(DisplayName = "Installed (applies to services)", Value = 6)]InstalledappliesToServices = 6,
				[CrmPicklist(DisplayName = "Canceled (deprecated)", Value = 3)]Canceleddeprecated = 3,
				[CrmPicklist(DisplayName = "Paid in Full (deprecated)", Value = 7)]PaidInFulldeprecated = 7,
				[CrmPicklist(DisplayName = "Complete", Value = 100001)]Complete = 100001,
				[CrmPicklist(DisplayName = "Partial", Value = 100002)]__Partial = 100002,
				[CrmPicklist(DisplayName = "Canceled", Value = 100003)]Canceled = 100003,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "invoice";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string BillToCity = "billto_city";
			public const string BillToCountry = "billto_country";
			public const string BillToFax = "billto_fax";
			public const string BillToLine1 = "billto_line1";
			public const string BillToLine2 = "billto_line2";
			public const string BillToLine3 = "billto_line3";
			public const string BillToName = "billto_name";
			public const string BillToPostalCode = "billto_postalcode";
			public const string BillToStateOrProvince = "billto_stateorprovince";
			public const string BillToTelephone = "billto_telephone";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string DateDelivered = "datedelivered";
			public const string Description = "description";
			public const string DiscountAmount = "discountamount";
			public const string DiscountPercentage = "discountpercentage";
			public const string DueDate = "duedate";
			public const string ExchangeRate = "exchangerate";
			public const string FreightAmount = "freightamount";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InvoiceId = "invoiceid";
			public const string InvoiceNumber = "invoicenumber";
			public const string IsPriceLocked = "ispricelocked";
			public const string IsPriceLockedName = "ispricelockedname";
			public const string LastBackofficeSubmit = "lastbackofficesubmit";
			public const string MagAddToXero = "mag_addtoxero";
			public const string MagAddtoxeroName = "mag_addtoxeroname";
			public const string MagConnectorToUseId = "mag_connectortouseid";
			public const string MagConnectorToUseIdName = "mag_connectortouseidname";
			public const string MagReference = "mag_reference";
			public const string MagSynchedwithxero = "mag_synchedwithxero";
			public const string MagSynchedwithxeroName = "mag_synchedwithxeroname";
			public const string MagXeroId = "mag_xeroid";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string NewEndUserCustomerId = "new_endusercustomerid";
			public const string NewEndUserCustomerIdName = "new_endusercustomeridname";
			public const string NewEndUserCustomerIdYomiName = "new_endusercustomeridyominame";
			public const string NewResellerId = "new_resellerid";
			public const string NewResellerIdName = "new_reselleridname";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityIdName = "opportunityidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodeName = "paymenttermscodename";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string SalesOrderId = "salesorderid";
			public const string SalesOrderIdName = "salesorderidname";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string ShipToCity = "shipto_city";
			public const string ShipToCountry = "shipto_country";
			public const string ShipToFax = "shipto_fax";
			public const string ShipToFreightTermsCode = "shipto_freighttermscode";
			public const string ShipToFreightTermsCodeName = "shipto_freighttermscodename";
			public const string ShipToLine1 = "shipto_line1";
			public const string ShipToLine2 = "shipto_line2";
			public const string ShipToLine3 = "shipto_line3";
			public const string ShipToName = "shipto_name";
			public const string ShipToPostalCode = "shipto_postalcode";
			public const string ShipToStateOrProvince = "shipto_stateorprovince";
			public const string ShipToTelephone = "shipto_telephone";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalAmount = "totalamount";
			public const string TotalAmountLessFreight = "totalamountlessfreight";
			public const string TotalDiscountAmount = "totaldiscountamount";
			public const string TotalLineItemAmount = "totallineitemamount";
			public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
			public const string TotalTax = "totaltax";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WillCall = "willcall";
			public const string WillCallName = "willcallname";
		}

		public override Guid PrimaryKey
		{
			get { return InvoiceId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "billto_city")]
        public virtual string BillToCity
        {
            get { FillData(); return _billToCity; }
            set { SetValue<string>("billto_city", value); _billToCity = value; }
        }
        private string _billToCity;

		[CrmProperty(LogicalName = "billto_country")]
        public virtual string BillToCountry
        {
            get { FillData(); return _billToCountry; }
            set { SetValue<string>("billto_country", value); _billToCountry = value; }
        }
        private string _billToCountry;

		[CrmProperty(LogicalName = "billto_fax")]
        public virtual string BillToFax
        {
            get { FillData(); return _billToFax; }
            set { SetValue<string>("billto_fax", value); _billToFax = value; }
        }
        private string _billToFax;

		[CrmProperty(LogicalName = "billto_line1")]
        public virtual string BillToLine1
        {
            get { FillData(); return _billToLine1; }
            set { SetValue<string>("billto_line1", value); _billToLine1 = value; }
        }
        private string _billToLine1;

		[CrmProperty(LogicalName = "billto_line2")]
        public virtual string BillToLine2
        {
            get { FillData(); return _billToLine2; }
            set { SetValue<string>("billto_line2", value); _billToLine2 = value; }
        }
        private string _billToLine2;

		[CrmProperty(LogicalName = "billto_line3")]
        public virtual string BillToLine3
        {
            get { FillData(); return _billToLine3; }
            set { SetValue<string>("billto_line3", value); _billToLine3 = value; }
        }
        private string _billToLine3;

		[CrmProperty(LogicalName = "billto_name")]
        public virtual string BillToName
        {
            get { FillData(); return _billToName; }
            set { SetValue<string>("billto_name", value); _billToName = value; }
        }
        private string _billToName;

		[CrmProperty(LogicalName = "billto_postalcode")]
        public virtual string BillToPostalCode
        {
            get { FillData(); return _billToPostalCode; }
            set { SetValue<string>("billto_postalcode", value); _billToPostalCode = value; }
        }
        private string _billToPostalCode;

		[CrmProperty(LogicalName = "billto_stateorprovince")]
        public virtual string BillToStateOrProvince
        {
            get { FillData(); return _billToStateOrProvince; }
            set { SetValue<string>("billto_stateorprovince", value); _billToStateOrProvince = value; }
        }
        private string _billToStateOrProvince;

		[CrmProperty(LogicalName = "billto_telephone")]
        public virtual string BillToTelephone
        {
            get { FillData(); return _billToTelephone; }
            set { SetValue<string>("billto_telephone", value); _billToTelephone = value; }
        }
        private string _billToTelephone;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidname")]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contactidyominame")]
        public virtual string ContactIdYomiName
        {
            get { FillData(); return _contactIdYomiName; }
            set {  _contactIdYomiName = value; }
        }
        private string _contactIdYomiName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "datedelivered")]
        public virtual DateTime? DateDelivered
        {
            get { FillData(); return _dateDelivered; }
            set { SetValue<DateTime?>("datedelivered", value); _dateDelivered = value; }
        }
        private DateTime? _dateDelivered;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "discountamount")]
        public virtual decimal? DiscountAmount
        {
            get { FillData(); return _discountAmount; }
            set { SetMoney("discountamount", value); _discountAmount = value; }
        }
        private decimal? _discountAmount;

		[CrmProperty(LogicalName = "discountpercentage")]
        public virtual decimal? DiscountPercentage
        {
            get { FillData(); return _discountPercentage; }
            set { SetValue<decimal?>("discountpercentage", value); _discountPercentage = value; }
        }
        private decimal? _discountPercentage;

		[CrmProperty(LogicalName = "duedate")]
        public virtual DateTime? DueDate
        {
            get { FillData(); return _dueDate; }
            set { SetValue<DateTime?>("duedate", value); _dueDate = value; }
        }
        private DateTime? _dueDate;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "freightamount")]
        public virtual decimal? FreightAmount
        {
            get { FillData(); return _freightAmount; }
            set { SetMoney("freightamount", value); _freightAmount = value; }
        }
        private decimal? _freightAmount;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "invoiceid")]
        public virtual Guid InvoiceId
        {
            get { FillData(); return _invoiceId; }
            set {  _invoiceId = value; }
        }
        private Guid _invoiceId;

		[CrmProperty(LogicalName = "invoicenumber")]
        public virtual string InvoiceNumber
        {
            get { FillData(); return _invoiceNumber; }
            set {  _invoiceNumber = value; }
        }
        private string _invoiceNumber;

		[CrmProperty(LogicalName = "ispricelocked")]
        public virtual bool? IsPriceLocked
        {
            get { FillData(); return _isPriceLocked; }
            set {  _isPriceLocked = value; }
        }
        private bool? _isPriceLocked;

		[CrmProperty(LogicalName = "ispricelockedname")]
        public virtual string IsPriceLockedName
        {
            get { FillData(); return _isPriceLockedName; }
            set {  _isPriceLockedName = value; }
        }
        private string _isPriceLockedName;

		[CrmProperty(LogicalName = "lastbackofficesubmit")]
        public virtual DateTime? LastBackofficeSubmit
        {
            get { FillData(); return _lastBackofficeSubmit; }
            set { SetValue<DateTime?>("lastbackofficesubmit", value); _lastBackofficeSubmit = value; }
        }
        private DateTime? _lastBackofficeSubmit;

		[CrmProperty(LogicalName = "mag_addtoxero")]
        public virtual bool? MagAddToXero
        {
            get { FillData(); return _magAddToXero; }
            set { SetValue<bool?>("mag_addtoxero", value); _magAddToXero = value; }
        }
        private bool? _magAddToXero;

		[CrmProperty(LogicalName = "mag_addtoxeroname")]
        public virtual string MagAddtoxeroName
        {
            get { FillData(); return _magAddtoxeroName; }
            set {  _magAddtoxeroName = value; }
        }
        private string _magAddtoxeroName;

		[CrmProperty(LogicalName = "mag_connectortouseid", IsLookup = true)]
        public virtual Guid? MagConnectorToUseId
        {
            get { FillData(); return _magConnectorToUseId; }
            set { SetLookup("mag_connectortouseid", "mag_xeroconnector", value); _magConnectorToUseId = value; }
        }
        private Guid? _magConnectorToUseId;

		[CrmProperty(LogicalName = "mag_connectortouseidname")]
        public virtual string MagConnectorToUseIdName
        {
            get { FillData(); return _magConnectorToUseIdName; }
            set {  _magConnectorToUseIdName = value; }
        }
        private string _magConnectorToUseIdName;

		[CrmProperty(LogicalName = "mag_reference")]
        public virtual string MagReference
        {
            get { FillData(); return _magReference; }
            set { SetValue<string>("mag_reference", value); _magReference = value; }
        }
        private string _magReference;

		[CrmProperty(LogicalName = "mag_synchedwithxero")]
        public virtual bool? MagSynchedwithxero
        {
            get { FillData(); return _magSynchedwithxero; }
            set { SetValue<bool?>("mag_synchedwithxero", value); _magSynchedwithxero = value; }
        }
        private bool? _magSynchedwithxero;

		[CrmProperty(LogicalName = "mag_synchedwithxeroname")]
        public virtual string MagSynchedwithxeroName
        {
            get { FillData(); return _magSynchedwithxeroName; }
            set {  _magSynchedwithxeroName = value; }
        }
        private string _magSynchedwithxeroName;

		[CrmProperty(LogicalName = "mag_xeroid")]
        public virtual string MagXeroId
        {
            get { FillData(); return _magXeroId; }
            set { SetValue<string>("mag_xeroid", value); _magXeroId = value; }
        }
        private string _magXeroId;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "new_endusercustomerid", IsLookup = true)]
        public virtual Guid? NewEndUserCustomerId
        {
            get { FillData(); return _newEndUserCustomerId; }
            set { SetLookup("new_endusercustomerid", "account", value); _newEndUserCustomerId = value; }
        }
        private Guid? _newEndUserCustomerId;

		[CrmProperty(LogicalName = "new_endusercustomeridname")]
        public virtual string NewEndUserCustomerIdName
        {
            get { FillData(); return _newEndUserCustomerIdName; }
            set {  _newEndUserCustomerIdName = value; }
        }
        private string _newEndUserCustomerIdName;

		[CrmProperty(LogicalName = "new_endusercustomeridyominame")]
        public virtual string NewEndUserCustomerIdYomiName
        {
            get { FillData(); return _newEndUserCustomerIdYomiName; }
            set {  _newEndUserCustomerIdYomiName = value; }
        }
        private string _newEndUserCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_resellerid", IsLookup = true)]
        public virtual Guid? NewResellerId
        {
            get { FillData(); return _newResellerId; }
            set { SetLookup("new_resellerid", "new_resellers", value); _newResellerId = value; }
        }
        private Guid? _newResellerId;

		[CrmProperty(LogicalName = "new_reselleridname")]
        public virtual string NewResellerIdName
        {
            get { FillData(); return _newResellerIdName; }
            set {  _newResellerIdName = value; }
        }
        private string _newResellerIdName;

		[CrmProperty(LogicalName = "opportunityid", IsLookup = true)]
        public virtual Guid? OpportunityId
        {
            get { FillData(); return _opportunityId; }
            set { SetLookup("opportunityid", "opportunity", value); _opportunityId = value; }
        }
        private Guid? _opportunityId;

		[CrmProperty(LogicalName = "opportunityidname")]
        public virtual string OpportunityIdName
        {
            get { FillData(); return _opportunityIdName; }
            set {  _opportunityIdName = value; }
        }
        private string _opportunityIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "paymenttermscode")]
        public virtual Enums.PaymentTermsCode? PaymentTermsCode
        {
            get { FillData(); return _paymentTermsCode; }
            set { SetPicklist("paymenttermscode", (int?)value); _paymentTermsCode = value; }
        }
        private Enums.PaymentTermsCode? _paymentTermsCode;

		[CrmProperty(LogicalName = "paymenttermscodename")]
        public virtual string PaymentTermsCodeName
        {
            get { FillData(); return _paymentTermsCodeName; }
            set {  _paymentTermsCodeName = value; }
        }
        private string _paymentTermsCodeName;

		[CrmProperty(LogicalName = "pricelevelid", IsLookup = true)]
        public virtual Guid? PriceLevelId
        {
            get { FillData(); return _priceLevelId; }
            set { SetLookup("pricelevelid", "pricelevel", value); _priceLevelId = value; }
        }
        private Guid? _priceLevelId;

		[CrmProperty(LogicalName = "pricelevelidname")]
        public virtual string PriceLevelIdName
        {
            get { FillData(); return _priceLevelIdName; }
            set {  _priceLevelIdName = value; }
        }
        private string _priceLevelIdName;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "salesorderid", IsLookup = true)]
        public virtual Guid? SalesOrderId
        {
            get { FillData(); return _salesOrderId; }
            set { SetLookup("salesorderid", "salesorder", value); _salesOrderId = value; }
        }
        private Guid? _salesOrderId;

		[CrmProperty(LogicalName = "salesorderidname")]
        public virtual string SalesOrderIdName
        {
            get { FillData(); return _salesOrderIdName; }
            set {  _salesOrderIdName = value; }
        }
        private string _salesOrderIdName;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "shipto_city")]
        public virtual string ShipToCity
        {
            get { FillData(); return _shipToCity; }
            set { SetValue<string>("shipto_city", value); _shipToCity = value; }
        }
        private string _shipToCity;

		[CrmProperty(LogicalName = "shipto_country")]
        public virtual string ShipToCountry
        {
            get { FillData(); return _shipToCountry; }
            set { SetValue<string>("shipto_country", value); _shipToCountry = value; }
        }
        private string _shipToCountry;

		[CrmProperty(LogicalName = "shipto_fax")]
        public virtual string ShipToFax
        {
            get { FillData(); return _shipToFax; }
            set { SetValue<string>("shipto_fax", value); _shipToFax = value; }
        }
        private string _shipToFax;

		[CrmProperty(LogicalName = "shipto_freighttermscode")]
        public virtual Enums.ShipToFreightTermsCode? ShipToFreightTermsCode
        {
            get { FillData(); return _shipToFreightTermsCode; }
            set { SetPicklist("shipto_freighttermscode", (int?)value); _shipToFreightTermsCode = value; }
        }
        private Enums.ShipToFreightTermsCode? _shipToFreightTermsCode;

		[CrmProperty(LogicalName = "shipto_freighttermscodename")]
        public virtual string ShipToFreightTermsCodeName
        {
            get { FillData(); return _shipToFreightTermsCodeName; }
            set {  _shipToFreightTermsCodeName = value; }
        }
        private string _shipToFreightTermsCodeName;

		[CrmProperty(LogicalName = "shipto_line1")]
        public virtual string ShipToLine1
        {
            get { FillData(); return _shipToLine1; }
            set { SetValue<string>("shipto_line1", value); _shipToLine1 = value; }
        }
        private string _shipToLine1;

		[CrmProperty(LogicalName = "shipto_line2")]
        public virtual string ShipToLine2
        {
            get { FillData(); return _shipToLine2; }
            set { SetValue<string>("shipto_line2", value); _shipToLine2 = value; }
        }
        private string _shipToLine2;

		[CrmProperty(LogicalName = "shipto_line3")]
        public virtual string ShipToLine3
        {
            get { FillData(); return _shipToLine3; }
            set { SetValue<string>("shipto_line3", value); _shipToLine3 = value; }
        }
        private string _shipToLine3;

		[CrmProperty(LogicalName = "shipto_name")]
        public virtual string ShipToName
        {
            get { FillData(); return _shipToName; }
            set { SetValue<string>("shipto_name", value); _shipToName = value; }
        }
        private string _shipToName;

		[CrmProperty(LogicalName = "shipto_postalcode")]
        public virtual string ShipToPostalCode
        {
            get { FillData(); return _shipToPostalCode; }
            set { SetValue<string>("shipto_postalcode", value); _shipToPostalCode = value; }
        }
        private string _shipToPostalCode;

		[CrmProperty(LogicalName = "shipto_stateorprovince")]
        public virtual string ShipToStateOrProvince
        {
            get { FillData(); return _shipToStateOrProvince; }
            set { SetValue<string>("shipto_stateorprovince", value); _shipToStateOrProvince = value; }
        }
        private string _shipToStateOrProvince;

		[CrmProperty(LogicalName = "shipto_telephone")]
        public virtual string ShipToTelephone
        {
            get { FillData(); return _shipToTelephone; }
            set { SetValue<string>("shipto_telephone", value); _shipToTelephone = value; }
        }
        private string _shipToTelephone;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "totalamount")]
        public virtual decimal? TotalAmount
        {
            get { FillData(); return _totalAmount; }
            set {  _totalAmount = value; }
        }
        private decimal? _totalAmount;

		[CrmProperty(LogicalName = "totalamountlessfreight")]
        public virtual decimal? TotalAmountLessFreight
        {
            get { FillData(); return _totalAmountLessFreight; }
            set {  _totalAmountLessFreight = value; }
        }
        private decimal? _totalAmountLessFreight;

		[CrmProperty(LogicalName = "totaldiscountamount")]
        public virtual decimal? TotalDiscountAmount
        {
            get { FillData(); return _totalDiscountAmount; }
            set {  _totalDiscountAmount = value; }
        }
        private decimal? _totalDiscountAmount;

		[CrmProperty(LogicalName = "totallineitemamount")]
        public virtual decimal? TotalLineItemAmount
        {
            get { FillData(); return _totalLineItemAmount; }
            set {  _totalLineItemAmount = value; }
        }
        private decimal? _totalLineItemAmount;

		[CrmProperty(LogicalName = "totallineitemdiscountamount")]
        public virtual decimal? TotalLineItemDiscountAmount
        {
            get { FillData(); return _totalLineItemDiscountAmount; }
            set {  _totalLineItemDiscountAmount = value; }
        }
        private decimal? _totalLineItemDiscountAmount;

		[CrmProperty(LogicalName = "totaltax")]
        public virtual decimal? TotalTax
        {
            get { FillData(); return _totalTax; }
            set {  _totalTax = value; }
        }
        private decimal? _totalTax;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "willcall")]
        public virtual bool? WillCall
        {
            get { FillData(); return _willCall; }
            set { SetValue<bool?>("willcall", value); _willCall = value; }
        }
        private bool? _willCall;

		[CrmProperty(LogicalName = "willcallname")]
        public virtual string WillCallName
        {
            get { FillData(); return _willCallName; }
            set {  _willCallName = value; }
        }
        private string _willCallName;

	}
	[CrmEntity(LogicalName = "invoicedetail", PrimaryKey = "invoicedetailid")]
	public partial class InvoiceDetail : CrmEntity
	{
		public class Enums
		{
			public enum InvoiceStateCode 
			{
			}		
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
			public enum ShipToFreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "invoicedetail";
			
			public const string ActualDeliveryOn = "actualdeliveryon";
			public const string BaseAmount = "baseamount";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExtendedAmount = "extendedamount";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InvoiceDetailId = "invoicedetailid";
			public const string InvoiceId = "invoiceid";
			public const string InvoiceIdName = "invoiceidName";
			public const string InvoiceIsPriceLocked = "invoiceispricelocked";
			public const string InvoiceIsPriceLockedName = "invoiceispricelockedname";
			public const string InvoiceStateCode = "invoicestatecode";
			public const string InvoiceStateCodeName = "invoicestatecodename";
			public const string IsCopied = "iscopied";
			public const string IsCopiedName = "iscopiedname";
			public const string IsPriceOverridden = "ispriceoverridden";
			public const string IsPriceOverriddenName = "ispriceoverriddenname";
			public const string IsProductOverridden = "isproductoverridden";
			public const string IsProductOverriddenName = "isproductoverriddenname";
			public const string LineItemNumber = "lineitemnumber";
			public const string MagXeroAccountCodeId = "mag_xeroaccountcodeid";
			public const string MagXeroAccountCodeIdName = "mag_xeroaccountcodeidname";
			public const string ManualDiscountAmount = "manualdiscountamount";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewNoTax = "new_notax";
			public const string NewNotaxName = "new_notaxname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string PricePerUnit = "priceperunit";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string ProductDescription = "productdescription";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string Quantity = "quantity";
			public const string QuantityBackordered = "quantitybackordered";
			public const string QuantityCancelled = "quantitycancelled";
			public const string QuantityShipped = "quantityshipped";
			public const string SalesRepId = "salesrepid";
			public const string SalesRepIdName = "salesrepidname";
			public const string SalesRepIdYomiName = "salesrepidyominame";
			public const string ShippingTrackingNumber = "shippingtrackingnumber";
			public const string ShipToCity = "shipto_city";
			public const string ShipToCountry = "shipto_country";
			public const string ShipToFax = "shipto_fax";
			public const string ShipToFreightTermsCode = "shipto_freighttermscode";
			public const string ShipToFreightTermsCodeName = "shipto_freighttermscodename";
			public const string ShipToLine1 = "shipto_line1";
			public const string ShipToLine2 = "shipto_line2";
			public const string ShipToLine3 = "shipto_line3";
			public const string ShipToName = "shipto_name";
			public const string ShipToPostalCode = "shipto_postalcode";
			public const string ShipToStateOrProvince = "shipto_stateorprovince";
			public const string ShipToTelephone = "shipto_telephone";
			public const string Tax = "tax";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UoMId = "uomid";
			public const string UoMIdName = "uomidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string VolumeDiscountAmount = "volumediscountamount";
			public const string WillCall = "willcall";
			public const string WillCallName = "willcallname";
		}

		public override Guid PrimaryKey
		{
			get { return InvoiceDetailId; }
		}

		[CrmProperty(LogicalName = "actualdeliveryon")]
        public virtual DateTime? ActualDeliveryOn
        {
            get { FillData(); return _actualDeliveryOn; }
            set { SetValue<DateTime?>("actualdeliveryon", value); _actualDeliveryOn = value; }
        }
        private DateTime? _actualDeliveryOn;

		[CrmProperty(LogicalName = "baseamount")]
        public virtual decimal? BaseAmount
        {
            get { FillData(); return _baseAmount; }
            set {  _baseAmount = value; }
        }
        private decimal? _baseAmount;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "extendedamount")]
        public virtual decimal? ExtendedAmount
        {
            get { FillData(); return _extendedAmount; }
            set {  _extendedAmount = value; }
        }
        private decimal? _extendedAmount;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "invoicedetailid")]
        public virtual Guid InvoiceDetailId
        {
            get { FillData(); return _invoiceDetailId; }
            set {  _invoiceDetailId = value; }
        }
        private Guid _invoiceDetailId;

		[CrmProperty(LogicalName = "invoiceid", IsLookup = true)]
        public virtual Guid? InvoiceId
        {
            get { FillData(); return _invoiceId; }
            set { SetLookup("invoiceid", "invoice", value); _invoiceId = value; }
        }
        private Guid? _invoiceId;

		[CrmProperty(LogicalName = "invoiceidName", IsEntityReferenceHelper = true)]
        public virtual string InvoiceIdName
        {
            get { FillData(); return _invoiceIdName; }
            set {  _invoiceIdName = value; }
        }
        private string _invoiceIdName;

		[CrmProperty(LogicalName = "invoiceispricelocked")]
        public virtual bool? InvoiceIsPriceLocked
        {
            get { FillData(); return _invoiceIsPriceLocked; }
            set {  _invoiceIsPriceLocked = value; }
        }
        private bool? _invoiceIsPriceLocked;

		[CrmProperty(LogicalName = "invoiceispricelockedname")]
        public virtual string InvoiceIsPriceLockedName
        {
            get { FillData(); return _invoiceIsPriceLockedName; }
            set {  _invoiceIsPriceLockedName = value; }
        }
        private string _invoiceIsPriceLockedName;

		[CrmProperty(LogicalName = "invoicestatecode")]
        public virtual Enums.InvoiceStateCode? InvoiceStateCode
        {
            get { FillData(); return _invoiceStateCode; }
            set {  _invoiceStateCode = value; }
        }
        private Enums.InvoiceStateCode? _invoiceStateCode;

		[CrmProperty(LogicalName = "invoicestatecodename")]
        public virtual string InvoiceStateCodeName
        {
            get { FillData(); return _invoiceStateCodeName; }
            set {  _invoiceStateCodeName = value; }
        }
        private string _invoiceStateCodeName;

		[CrmProperty(LogicalName = "iscopied")]
        public virtual bool? IsCopied
        {
            get { FillData(); return _isCopied; }
            set { SetValue<bool?>("iscopied", value); _isCopied = value; }
        }
        private bool? _isCopied;

		[CrmProperty(LogicalName = "iscopiedname")]
        public virtual string IsCopiedName
        {
            get { FillData(); return _isCopiedName; }
            set {  _isCopiedName = value; }
        }
        private string _isCopiedName;

		[CrmProperty(LogicalName = "ispriceoverridden")]
        public virtual bool? IsPriceOverridden
        {
            get { FillData(); return _isPriceOverridden; }
            set { SetValue<bool?>("ispriceoverridden", value); _isPriceOverridden = value; }
        }
        private bool? _isPriceOverridden;

		[CrmProperty(LogicalName = "ispriceoverriddenname")]
        public virtual string IsPriceOverriddenName
        {
            get { FillData(); return _isPriceOverriddenName; }
            set {  _isPriceOverriddenName = value; }
        }
        private string _isPriceOverriddenName;

		[CrmProperty(LogicalName = "isproductoverridden")]
        public virtual bool? IsProductOverridden
        {
            get { FillData(); return _isProductOverridden; }
            set { SetValue<bool?>("isproductoverridden", value); _isProductOverridden = value; }
        }
        private bool? _isProductOverridden;

		[CrmProperty(LogicalName = "isproductoverriddenname")]
        public virtual string IsProductOverriddenName
        {
            get { FillData(); return _isProductOverriddenName; }
            set {  _isProductOverriddenName = value; }
        }
        private string _isProductOverriddenName;

		[CrmProperty(LogicalName = "lineitemnumber")]
        public virtual int? LineItemNumber
        {
            get { FillData(); return _lineItemNumber; }
            set { SetValue<int?>("lineitemnumber", value); _lineItemNumber = value; }
        }
        private int? _lineItemNumber;

		[CrmProperty(LogicalName = "mag_xeroaccountcodeid", IsLookup = true)]
        public virtual Guid? MagXeroAccountCodeId
        {
            get { FillData(); return _magXeroAccountCodeId; }
            set { SetLookup("mag_xeroaccountcodeid", "mag_xeroaccountcode", value); _magXeroAccountCodeId = value; }
        }
        private Guid? _magXeroAccountCodeId;

		[CrmProperty(LogicalName = "mag_xeroaccountcodeidname")]
        public virtual string MagXeroAccountCodeIdName
        {
            get { FillData(); return _magXeroAccountCodeIdName; }
            set {  _magXeroAccountCodeIdName = value; }
        }
        private string _magXeroAccountCodeIdName;

		[CrmProperty(LogicalName = "manualdiscountamount")]
        public virtual decimal? ManualDiscountAmount
        {
            get { FillData(); return _manualDiscountAmount; }
            set { SetMoney("manualdiscountamount", value); _manualDiscountAmount = value; }
        }
        private decimal? _manualDiscountAmount;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_notax")]
        public virtual bool? NewNoTax
        {
            get { FillData(); return _newNoTax; }
            set { SetValue<bool?>("new_notax", value); _newNoTax = value; }
        }
        private bool? _newNoTax;

		[CrmProperty(LogicalName = "new_notaxname")]
        public virtual string NewNotaxName
        {
            get { FillData(); return _newNotaxName; }
            set {  _newNotaxName = value; }
        }
        private string _newNotaxName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owningbusinessunit")]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owninguser")]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "priceperunit")]
        public virtual decimal? PricePerUnit
        {
            get { FillData(); return _pricePerUnit; }
            set { SetMoney("priceperunit", value); _pricePerUnit = value; }
        }
        private decimal? _pricePerUnit;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "productdescription")]
        public virtual string ProductDescription
        {
            get { FillData(); return _productDescription; }
            set { SetValue<string>("productdescription", value); _productDescription = value; }
        }
        private string _productDescription;

		[CrmProperty(LogicalName = "productid", IsLookup = true)]
        public virtual Guid? ProductId
        {
            get { FillData(); return _productId; }
            set { SetLookup("productid", "product", value); _productId = value; }
        }
        private Guid? _productId;

		[CrmProperty(LogicalName = "productidname")]
        public virtual string ProductIdName
        {
            get { FillData(); return _productIdName; }
            set {  _productIdName = value; }
        }
        private string _productIdName;

		[CrmProperty(LogicalName = "quantity")]
        public virtual decimal? Quantity
        {
            get { FillData(); return _quantity; }
            set { SetValue<decimal?>("quantity", value); _quantity = value; }
        }
        private decimal? _quantity;

		[CrmProperty(LogicalName = "quantitybackordered")]
        public virtual decimal? QuantityBackordered
        {
            get { FillData(); return _quantityBackordered; }
            set { SetValue<decimal?>("quantitybackordered", value); _quantityBackordered = value; }
        }
        private decimal? _quantityBackordered;

		[CrmProperty(LogicalName = "quantitycancelled")]
        public virtual decimal? QuantityCancelled
        {
            get { FillData(); return _quantityCancelled; }
            set { SetValue<decimal?>("quantitycancelled", value); _quantityCancelled = value; }
        }
        private decimal? _quantityCancelled;

		[CrmProperty(LogicalName = "quantityshipped")]
        public virtual decimal? QuantityShipped
        {
            get { FillData(); return _quantityShipped; }
            set { SetValue<decimal?>("quantityshipped", value); _quantityShipped = value; }
        }
        private decimal? _quantityShipped;

		[CrmProperty(LogicalName = "salesrepid", IsLookup = true)]
        public virtual Guid? SalesRepId
        {
            get { FillData(); return _salesRepId; }
            set { SetLookup("salesrepid", "systemuser", value); _salesRepId = value; }
        }
        private Guid? _salesRepId;

		[CrmProperty(LogicalName = "salesrepidname")]
        public virtual string SalesRepIdName
        {
            get { FillData(); return _salesRepIdName; }
            set {  _salesRepIdName = value; }
        }
        private string _salesRepIdName;

		[CrmProperty(LogicalName = "salesrepidyominame")]
        public virtual string SalesRepIdYomiName
        {
            get { FillData(); return _salesRepIdYomiName; }
            set {  _salesRepIdYomiName = value; }
        }
        private string _salesRepIdYomiName;

		[CrmProperty(LogicalName = "shippingtrackingnumber")]
        public virtual string ShippingTrackingNumber
        {
            get { FillData(); return _shippingTrackingNumber; }
            set { SetValue<string>("shippingtrackingnumber", value); _shippingTrackingNumber = value; }
        }
        private string _shippingTrackingNumber;

		[CrmProperty(LogicalName = "shipto_city")]
        public virtual string ShipToCity
        {
            get { FillData(); return _shipToCity; }
            set { SetValue<string>("shipto_city", value); _shipToCity = value; }
        }
        private string _shipToCity;

		[CrmProperty(LogicalName = "shipto_country")]
        public virtual string ShipToCountry
        {
            get { FillData(); return _shipToCountry; }
            set { SetValue<string>("shipto_country", value); _shipToCountry = value; }
        }
        private string _shipToCountry;

		[CrmProperty(LogicalName = "shipto_fax")]
        public virtual string ShipToFax
        {
            get { FillData(); return _shipToFax; }
            set { SetValue<string>("shipto_fax", value); _shipToFax = value; }
        }
        private string _shipToFax;

		[CrmProperty(LogicalName = "shipto_freighttermscode")]
        public virtual Enums.ShipToFreightTermsCode? ShipToFreightTermsCode
        {
            get { FillData(); return _shipToFreightTermsCode; }
            set { SetPicklist("shipto_freighttermscode", (int?)value); _shipToFreightTermsCode = value; }
        }
        private Enums.ShipToFreightTermsCode? _shipToFreightTermsCode;

		[CrmProperty(LogicalName = "shipto_freighttermscodename")]
        public virtual string ShipToFreightTermsCodeName
        {
            get { FillData(); return _shipToFreightTermsCodeName; }
            set {  _shipToFreightTermsCodeName = value; }
        }
        private string _shipToFreightTermsCodeName;

		[CrmProperty(LogicalName = "shipto_line1")]
        public virtual string ShipToLine1
        {
            get { FillData(); return _shipToLine1; }
            set { SetValue<string>("shipto_line1", value); _shipToLine1 = value; }
        }
        private string _shipToLine1;

		[CrmProperty(LogicalName = "shipto_line2")]
        public virtual string ShipToLine2
        {
            get { FillData(); return _shipToLine2; }
            set { SetValue<string>("shipto_line2", value); _shipToLine2 = value; }
        }
        private string _shipToLine2;

		[CrmProperty(LogicalName = "shipto_line3")]
        public virtual string ShipToLine3
        {
            get { FillData(); return _shipToLine3; }
            set { SetValue<string>("shipto_line3", value); _shipToLine3 = value; }
        }
        private string _shipToLine3;

		[CrmProperty(LogicalName = "shipto_name")]
        public virtual string ShipToName
        {
            get { FillData(); return _shipToName; }
            set { SetValue<string>("shipto_name", value); _shipToName = value; }
        }
        private string _shipToName;

		[CrmProperty(LogicalName = "shipto_postalcode")]
        public virtual string ShipToPostalCode
        {
            get { FillData(); return _shipToPostalCode; }
            set { SetValue<string>("shipto_postalcode", value); _shipToPostalCode = value; }
        }
        private string _shipToPostalCode;

		[CrmProperty(LogicalName = "shipto_stateorprovince")]
        public virtual string ShipToStateOrProvince
        {
            get { FillData(); return _shipToStateOrProvince; }
            set { SetValue<string>("shipto_stateorprovince", value); _shipToStateOrProvince = value; }
        }
        private string _shipToStateOrProvince;

		[CrmProperty(LogicalName = "shipto_telephone")]
        public virtual string ShipToTelephone
        {
            get { FillData(); return _shipToTelephone; }
            set { SetValue<string>("shipto_telephone", value); _shipToTelephone = value; }
        }
        private string _shipToTelephone;

		[CrmProperty(LogicalName = "tax")]
        public virtual decimal? Tax
        {
            get { FillData(); return _tax; }
            set { SetMoney("tax", value); _tax = value; }
        }
        private decimal? _tax;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "uomid", IsLookup = true)]
        public virtual Guid? UoMId
        {
            get { FillData(); return _uoMId; }
            set { SetLookup("uomid", "uom", value); _uoMId = value; }
        }
        private Guid? _uoMId;

		[CrmProperty(LogicalName = "uomidname")]
        public virtual string UoMIdName
        {
            get { FillData(); return _uoMIdName; }
            set {  _uoMIdName = value; }
        }
        private string _uoMIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "volumediscountamount")]
        public virtual decimal? VolumeDiscountAmount
        {
            get { FillData(); return _volumeDiscountAmount; }
            set {  _volumeDiscountAmount = value; }
        }
        private decimal? _volumeDiscountAmount;

		[CrmProperty(LogicalName = "willcall")]
        public virtual bool? WillCall
        {
            get { FillData(); return _willCall; }
            set { SetValue<bool?>("willcall", value); _willCall = value; }
        }
        private bool? _willCall;

		[CrmProperty(LogicalName = "willcallname")]
        public virtual string WillCallName
        {
            get { FillData(); return _willCallName; }
            set {  _willCallName = value; }
        }
        private string _willCallName;

	}
	[CrmEntity(LogicalName = "kbarticle", PrimaryKey = "kbarticleid")]
	public partial class KbArticle : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Draft", Value = 1)]Draft = 1,
				[CrmPicklist(DisplayName = "Unapproved", Value = 2)]Unapproved = 2,
				[CrmPicklist(DisplayName = "Published", Value = 3)]Published = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Draft", Value = 1)]Draft = 1,
				[CrmPicklist(DisplayName = "Unapproved", Value = 2)]Unapproved = 2,
				[CrmPicklist(DisplayName = "Published", Value = 3)]Published = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "kbarticle";
			
			public const string ArticleXml = "articlexml";
			public const string Comments = "comments";
			public const string Content = "content";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string KbArticleId = "kbarticleid";
			public const string KbArticleTemplateId = "kbarticletemplateid";
			public const string KbArticleTemplateIdName = "kbarticletemplateidName";
			public const string KbArticleTemplateIdTitle = "kbarticletemplateidtitle";
			public const string KeyWords = "keywords";
			public const string LanguageCode = "languagecode";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaPublishtoweb = "msa_publishtoweb";
			public const string MsaPublishtowebName = "msa_publishtowebname";
			public const string Number = "number";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SubjectId = "subjectid";
			public const string SubjectIdName = "subjectidname";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return KbArticleId; }
		}

		[CrmProperty(LogicalName = "articlexml")]
        public virtual string ArticleXml
        {
            get { FillData(); return _articleXml; }
            set { SetValue<string>("articlexml", value); _articleXml = value; }
        }
        private string _articleXml;

		[CrmProperty(LogicalName = "comments")]
        public virtual string Comments
        {
            get { FillData(); return _comments; }
            set { SetValue<string>("comments", value); _comments = value; }
        }
        private string _comments;

		[CrmProperty(LogicalName = "content")]
        public virtual string Content
        {
            get { FillData(); return _content; }
            set {  _content = value; }
        }
        private string _content;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "kbarticleid")]
        public virtual Guid KbArticleId
        {
            get { FillData(); return _kbArticleId; }
            set {  _kbArticleId = value; }
        }
        private Guid _kbArticleId;

		[CrmProperty(LogicalName = "kbarticletemplateid", IsLookup = true)]
        public virtual Guid? KbArticleTemplateId
        {
            get { FillData(); return _kbArticleTemplateId; }
            set { SetLookup("kbarticletemplateid", "kbarticletemplate", value); _kbArticleTemplateId = value; }
        }
        private Guid? _kbArticleTemplateId;

		[CrmProperty(LogicalName = "kbarticletemplateidName", IsEntityReferenceHelper = true)]
        public virtual string KbArticleTemplateIdName
        {
            get { FillData(); return _kbArticleTemplateIdName; }
            set {  _kbArticleTemplateIdName = value; }
        }
        private string _kbArticleTemplateIdName;

		[CrmProperty(LogicalName = "kbarticletemplateidtitle")]
        public virtual string KbArticleTemplateIdTitle
        {
            get { FillData(); return _kbArticleTemplateIdTitle; }
            set {  _kbArticleTemplateIdTitle = value; }
        }
        private string _kbArticleTemplateIdTitle;

		[CrmProperty(LogicalName = "keywords")]
        public virtual string KeyWords
        {
            get { FillData(); return _keyWords; }
            set { SetValue<string>("keywords", value); _keyWords = value; }
        }
        private string _keyWords;

		[CrmProperty(LogicalName = "languagecode")]
        public virtual int? LanguageCode
        {
            get { FillData(); return _languageCode; }
            set { SetValue<int?>("languagecode", value); _languageCode = value; }
        }
        private int? _languageCode;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_publishtoweb")]
        public virtual bool? MsaPublishtoweb
        {
            get { FillData(); return _msaPublishtoweb; }
            set { SetValue<bool?>("msa_publishtoweb", value); _msaPublishtoweb = value; }
        }
        private bool? _msaPublishtoweb;

		[CrmProperty(LogicalName = "msa_publishtowebname")]
        public virtual string MsaPublishtowebName
        {
            get { FillData(); return _msaPublishtowebName; }
            set {  _msaPublishtowebName = value; }
        }
        private string _msaPublishtowebName;

		[CrmProperty(LogicalName = "number")]
        public virtual string Number
        {
            get { FillData(); return _number; }
            set {  _number = value; }
        }
        private string _number;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subjectid", IsLookup = true)]
        public virtual Guid? SubjectId
        {
            get { FillData(); return _subjectId; }
            set { SetLookup("subjectid", "subject", value); _subjectId = value; }
        }
        private Guid? _subjectId;

		[CrmProperty(LogicalName = "subjectidname")]
        public virtual string SubjectIdName
        {
            get { FillData(); return _subjectIdName; }
            set {  _subjectIdName = value; }
        }
        private string _subjectIdName;

		[CrmProperty(LogicalName = "title")]
        public virtual string Title
        {
            get { FillData(); return _title; }
            set { SetValue<string>("title", value); _title = value; }
        }
        private string _title;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "lead", PrimaryKey = "leadid")]
	public partial class Lead : CrmEntity
	{
		public class Enums
		{
			public enum Address1AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address1ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum BudgetStatus 
			{
				[CrmPicklist(DisplayName = "No Committed Budget")]NoCommittedBudget = 0,
				[CrmPicklist(DisplayName = "May Buy", Value = 1)]MayBuy = 1,
				[CrmPicklist(DisplayName = "Can Buy", Value = 2)]CanBuy = 2,
				[CrmPicklist(DisplayName = "Will Buy", Value = 3)]WillBuy = 3,
			}		
			public enum IndustryCode 
			{
				[CrmPicklist(DisplayName = "Accounting", Value = 1)]Accounting = 1,
				[CrmPicklist(DisplayName = "Agriculture and Non-petrol Natural Resource Extraction", Value = 2)]AgricultureAndNonpetrolNaturalResourceExtraction = 2,
				[CrmPicklist(DisplayName = "Broadcasting Printing and Publishing", Value = 3)]BroadcastingPrintingAndPublishing = 3,
				[CrmPicklist(DisplayName = "Brokers", Value = 4)]Brokers = 4,
				[CrmPicklist(DisplayName = "Building Supply Retail", Value = 5)]BuildingSupplyRetail = 5,
				[CrmPicklist(DisplayName = "Business Services", Value = 6)]BusinessServices = 6,
				[CrmPicklist(DisplayName = "Consulting", Value = 7)]Consulting = 7,
				[CrmPicklist(DisplayName = "Consumer Services", Value = 8)]ConsumerServices = 8,
				[CrmPicklist(DisplayName = "Design, Direction and Creative Management", Value = 9)]DesignDirectionAndCreativeManagement = 9,
				[CrmPicklist(DisplayName = "Distributors, Dispatchers and Processors", Value = 10)]DistributorsDispatchersAndProcessors = 10,
				[CrmPicklist(DisplayName = "Doctor's Offices and Clinics", Value = 11)]DoctorsOfficesAndClinics = 11,
				[CrmPicklist(DisplayName = "Durable Manufacturing", Value = 12)]DurableManufacturing = 12,
				[CrmPicklist(DisplayName = "Eating and Drinking Places", Value = 13)]EatingAndDrinkingPlaces = 13,
				[CrmPicklist(DisplayName = "Entertainment Retail", Value = 14)]EntertainmentRetail = 14,
				[CrmPicklist(DisplayName = "Equipment Rental and Leasing", Value = 15)]EquipmentRentalAndLeasing = 15,
				[CrmPicklist(DisplayName = "Financial", Value = 16)]Financial = 16,
				[CrmPicklist(DisplayName = "Food and Tobacco Processing", Value = 17)]FoodAndTobaccoProcessing = 17,
				[CrmPicklist(DisplayName = "Inbound Capital Intensive Processing", Value = 18)]InboundCapitalIntensiveProcessing = 18,
				[CrmPicklist(DisplayName = "Inbound Repair and Services", Value = 19)]InboundRepairAndServices = 19,
				[CrmPicklist(DisplayName = "Insurance", Value = 20)]Insurance = 20,
				[CrmPicklist(DisplayName = "Legal Services", Value = 21)]LegalServices = 21,
				[CrmPicklist(DisplayName = "Non-Durable Merchandise Retail", Value = 22)]NonDurableMerchandiseRetail = 22,
				[CrmPicklist(DisplayName = "Outbound Consumer Service", Value = 23)]OutboundConsumerService = 23,
				[CrmPicklist(DisplayName = "Petrochemical Extraction and Distribution", Value = 24)]PetrochemicalExtractionAndDistribution = 24,
				[CrmPicklist(DisplayName = "Service Retail", Value = 25)]ServiceRetail = 25,
				[CrmPicklist(DisplayName = "SIG Affiliations", Value = 26)]SIGAffiliations = 26,
				[CrmPicklist(DisplayName = "Social Services", Value = 27)]SocialServices = 27,
				[CrmPicklist(DisplayName = "Special Outbound Trade Contractors", Value = 28)]SpecialOutboundTradeContractors = 28,
				[CrmPicklist(DisplayName = "Specialty Realty", Value = 29)]SpecialtyRealty = 29,
				[CrmPicklist(DisplayName = "Transportation", Value = 30)]Transportation = 30,
				[CrmPicklist(DisplayName = "Utility Creation and Distribution", Value = 31)]UtilityCreationAndDistribution = 31,
				[CrmPicklist(DisplayName = "Vehicle Retail", Value = 32)]VehicleRetail = 32,
				[CrmPicklist(DisplayName = "Wholesale", Value = 33)]Wholesale = 33,
				[CrmPicklist(DisplayName = "Adhesive Tape Manufacturers & Distributors", Value = 100000000)]AdhesiveTapeManufacturersDistributors = 100000000,
				[CrmPicklist(DisplayName = "Adult Education", Value = 100000001)]AdultEducation = 100000001,
				[CrmPicklist(DisplayName = "Agricultural Chemicals", Value = 100000002)]AgriculturalChemicals = 100000002,
				[CrmPicklist(DisplayName = "Agricultural Inspection & Testing Services", Value = 100000003)]AgriculturalInspectionTestingServices = 100000003,
				[CrmPicklist(DisplayName = "Agricultural Machinery Manufacturers", Value = 100000004)]AgriculturalMachineryManufacturers = 100000004,
				[CrmPicklist(DisplayName = "Air Conditioning Specialists & Engineers", Value = 100000005)]AirConditioningSpecialistsEngineers = 100000005,
				[CrmPicklist(DisplayName = "Airlines", Value = 100000006)]Airlines = 100000006,
				[CrmPicklist(DisplayName = "Aluminium Windows & Doors", Value = 100000007)]AluminiumWindowsDoors = 100000007,
				[CrmPicklist(DisplayName = "Animal Health Products", Value = 100000008)]AnimalHealthProducts = 100000008,
				[CrmPicklist(DisplayName = "Apprentice Training", Value = 100000009)]ApprenticeTraining = 100000009,
				[CrmPicklist(DisplayName = "Artificial Plants & Flowers", Value = 100000010)]ArtificialPlantsFlowers = 100000010,
				[CrmPicklist(DisplayName = "Bathroom Fittings Manufacturers", Value = 100000011)]BathroomFittingsManufacturers = 100000011,
				[CrmPicklist(DisplayName = "Battery Charger Manufacturers", Value = 100000012)]BatteryChargerManufacturers = 100000012,
				[CrmPicklist(DisplayName = "Blind Manufacturers", Value = 100000013)]BlindManufacturers = 100000013,
				[CrmPicklist(DisplayName = "Bottlers & Packers Supplies", Value = 100000014)]BottlersPackersSupplies = 100000014,
				[CrmPicklist(DisplayName = "Builders & Building Contractors", Value = 100000015)]BuildersBuildingContractors = 100000015,
				[CrmPicklist(DisplayName = "Building & Construction", Value = 100000016)]BuildingConstruction = 100000016,
				[CrmPicklist(DisplayName = "Building Maintenance Contractors", Value = 100000017)]BuildingMaintenanceContractors = 100000017,
				[CrmPicklist(DisplayName = "Building Material Suppliers", Value = 100000018)]BuildingMaterialSuppliers = 100000018,
				[CrmPicklist(DisplayName = "Bus &/or Coach Services", Value = 100000019)]BusorCoachServices = 100000019,
				[CrmPicklist(DisplayName = "Bus Hire & Charter Services", Value = 100000020)]BusHireCharterServices = 100000020,
				[CrmPicklist(DisplayName = "Butchers & Smallgoods Dealers Supplies", Value = 100000021)]ButchersSmallgoodsDealersSupplies = 100000021,
				[CrmPicklist(DisplayName = "Cake Manufacturers", Value = 100000022)]CakeManufacturers = 100000022,
				[CrmPicklist(DisplayName = "Car & Commercial Vehicle Importers & Dealers", Value = 100000023)]CarCommercialVehicleImportersDealers = 100000023,
				[CrmPicklist(DisplayName = "Carpet Manufacturers &/or Exporters", Value = 100000024)]CarpetManufacturersorExporters = 100000024,
				[CrmPicklist(DisplayName = "Ceilings Suspended", Value = 100000025)]CeilingsSuspended = 100000025,
				[CrmPicklist(DisplayName = "Cement Manufacturers & Exporters", Value = 100000026)]CementManufacturersExporters = 100000026,
				[CrmPicklist(DisplayName = "Chemical Products Manufacturers", Value = 100000027)]ChemicalProductsManufacturers = 100000027,
				[CrmPicklist(DisplayName = "Cleaners Commercial", Value = 100000028)]CleanersCommercial = 100000028,
				[CrmPicklist(DisplayName = "Cleaning Machinery", Value = 100000029)]CleaningMachinery = 100000029,
				[CrmPicklist(DisplayName = "Clothing Manufacturers", Value = 100000030)]ClothingManufacturers = 100000030,
				[CrmPicklist(DisplayName = "Coffee Merchants", Value = 100000031)]CoffeeMerchants = 100000031,
				[CrmPicklist(DisplayName = "Community Services", Value = 100000032)]CommunityServices = 100000032,
				[CrmPicklist(DisplayName = "Compliance Services", Value = 100000033)]ComplianceServices = 100000033,
				[CrmPicklist(DisplayName = "Compressed Air Equipment", Value = 100000034)]CompressedAirEquipment = 100000034,
				[CrmPicklist(DisplayName = "Computer Importers & Distributors", Value = 100000035)]ComputerImportersDistributors = 100000035,
				[CrmPicklist(DisplayName = "Computer Software", Value = 100000036)]ComputerSoftware = 100000036,
				[CrmPicklist(DisplayName = "Computer Training", Value = 100000037)]ComputerTraining = 100000037,
				[CrmPicklist(DisplayName = "Confectionery Distributors", Value = 100000038)]ConfectioneryDistributors = 100000038,
				[CrmPicklist(DisplayName = "Credit Card Companies", Value = 100000039)]CreditCardCompanies = 100000039,
				[CrmPicklist(DisplayName = "Customs Brokers", Value = 100000040)]CustomsBrokers = 100000040,
				[CrmPicklist(DisplayName = "Direct Mail Advertising", Value = 100000041)]DirectMailAdvertising = 100000041,
				[CrmPicklist(DisplayName = "Direct Marketing", Value = 100000042)]DirectMarketing = 100000042,
				[CrmPicklist(DisplayName = "Door Manufacturers & Distributors", Value = 100000043)]DoorManufacturersDistributors = 100000043,
				[CrmPicklist(DisplayName = "Earthmoving Contractors", Value = 100000044)]EarthmovingContractors = 100000044,
				[CrmPicklist(DisplayName = "Electric Switchboard & Switchgear Manufacturers Importers & Suppliers", Value = 100000045)]ElectricSwitchboardSwitchgearManufacturersImportersSuppliers = 100000045,
				[CrmPicklist(DisplayName = "Electrical Appliance Servicing & Repairs", Value = 100000046)]ElectricalApplianceServicingRepairs = 100000046,
				[CrmPicklist(DisplayName = "Electrical Contractors & Electricians", Value = 100000047)]ElectricalContractorsElectricians = 100000047,
				[CrmPicklist(DisplayName = "Electrical Goods Importers Manufacturers &/or Distributors", Value = 100000048)]ElectricalGoodsImportersManufacturersorDistributors = 100000048,
				[CrmPicklist(DisplayName = "Electrical Supplies Wholesalers", Value = 100000049)]ElectricalSuppliesWholesalers = 100000049,
				[CrmPicklist(DisplayName = "Engineering Supplies", Value = 100000050)]EngineeringSupplies = 100000050,
				[CrmPicklist(DisplayName = "Engineers Designing & Manufacturing", Value = 100000051)]EngineersDesigningManufacturing = 100000051,
				[CrmPicklist(DisplayName = "Engineers Electrical", Value = 100000052)]EngineersElectrical = 100000052,
				[CrmPicklist(DisplayName = "Engineers General", Value = 100000053)]EngineersGeneral = 100000053,
				[CrmPicklist(DisplayName = "Engineers General Mechanical & Manufacturing", Value = 100000054)]EngineersGeneralMechanicalManufacturing = 100000054,
				[CrmPicklist(DisplayName = "Engineers Marine", Value = 100000055)]EngineersMarine = 100000055,
				[CrmPicklist(DisplayName = "Fasteners", Value = 100000056)]Fasteners = 100000056,
				[CrmPicklist(DisplayName = "Fire Protection Engineers & Equipment", Value = 100000057)]FireProtectionEngineersEquipment = 100000057,
				[CrmPicklist(DisplayName = "Fire Protection Hardware Suppliers & Distributors", Value = 100000058)]FireProtectionHardwareSuppliersDistributors = 100000058,
				[CrmPicklist(DisplayName = "Food & Produce Exporters (Fresh)", Value = 100000059)]FoodProduceExportersFresh = 100000059,
				[CrmPicklist(DisplayName = "Food Distributors", Value = 100000060)]FoodDistributors = 100000060,
				[CrmPicklist(DisplayName = "Food Manufacturers", Value = 100000061)]FoodManufacturers = 100000061,
				[CrmPicklist(DisplayName = "Food Manufacturers Distributors &/or Exporters", Value = 100000062)]FoodManufacturersDistributorsorExporters = 100000062,
				[CrmPicklist(DisplayName = "Forklift Hire & Service", Value = 100000063)]ForkliftHireService = 100000063,
				[CrmPicklist(DisplayName = "Foundries", Value = 100000064)]Foundries = 100000064,
				[CrmPicklist(DisplayName = "Freight Forwarders", Value = 100000065)]FreightForwarders = 100000065,
				[CrmPicklist(DisplayName = "Freight Forwarding", Value = 100000066)]FreightForwarding = 100000066,
				[CrmPicklist(DisplayName = "Freight Forwarding International", Value = 100000067)]FreightForwardingInternational = 100000067,
				[CrmPicklist(DisplayName = "Freight Services", Value = 100000068)]FreightServices = 100000068,
				[CrmPicklist(DisplayName = "Fruit & Produce Exporters", Value = 100000069)]FruitProduceExporters = 100000069,
				[CrmPicklist(DisplayName = "Fruit & Produce Retailers", Value = 100000070)]FruitProduceRetailers = 100000070,
				[CrmPicklist(DisplayName = "Funeral Directors", Value = 100000071)]FuneralDirectors = 100000071,
				[CrmPicklist(DisplayName = "Furniture Manufacturers Supplies", Value = 100000072)]FurnitureManufacturersSupplies = 100000072,
				[CrmPicklist(DisplayName = "Garden Supplies", Value = 100000073)]GardenSupplies = 100000073,
				[CrmPicklist(DisplayName = "Gardening Bag Services", Value = 100000074)]GardeningBagServices = 100000074,
				[CrmPicklist(DisplayName = "Gardening Services", Value = 100000075)]GardeningServices = 100000075,
				[CrmPicklist(DisplayName = "Glasshouse Manufacturers", Value = 100000076)]GlasshouseManufacturers = 100000076,
				[CrmPicklist(DisplayName = "Glazing Equipment & Supplies", Value = 100000077)]GlazingEquipmentSupplies = 100000077,
				[CrmPicklist(DisplayName = "Health & Beauty Products", Value = 100000078)]HealthBeautyProducts = 100000078,
				[CrmPicklist(DisplayName = "Horticultural Supplies", Value = 100000079)]HorticulturalSupplies = 100000079,
				[CrmPicklist(DisplayName = "Hydraulic Equipment & Supplies", Value = 100000080)]HydraulicEquipmentSupplies = 100000080,
				[CrmPicklist(DisplayName = "Industrial Equipment", Value = 100000081)]IndustrialEquipment = 100000081,
				[CrmPicklist(DisplayName = "Insulation Material Manufacturers & Distributors", Value = 100000082)]InsulationMaterialManufacturersDistributors = 100000082,
				[CrmPicklist(DisplayName = "Joinery Manufacturers", Value = 100000083)]JoineryManufacturers = 100000083,
				[CrmPicklist(DisplayName = "Knitwear Manufacturers", Value = 100000084)]KnitwearManufacturers = 100000084,
				[CrmPicklist(DisplayName = "Lighting & Power Poles", Value = 100000085)]LightingPowerPoles = 100000085,
				[CrmPicklist(DisplayName = "Lighting Commercial & Industrial Systems", Value = 100000086)]LightingCommercialIndustrialSystems = 100000086,
				[CrmPicklist(DisplayName = "Locksmiths & Security", Value = 100000087)]LocksmithsSecurity = 100000087,
				[CrmPicklist(DisplayName = "Marine Electronic Equipment", Value = 100000088)]MarineElectronicEquipment = 100000088,
				[CrmPicklist(DisplayName = "Medical Centres", Value = 100000089)]MedicalCentres = 100000089,
				[CrmPicklist(DisplayName = "Motor Car & Truck Dealers", Value = 100000090)]MotorCarTruckDealers = 100000090,
				[CrmPicklist(DisplayName = "Motor Trimmers", Value = 100000091)]MotorTrimmers = 100000091,
				[CrmPicklist(DisplayName = "Nails & Nailing Equipment Importers Manufacturers", Value = 100000092)]NailsNailingEquipmentImportersManufacturers = 100000092,
				[CrmPicklist(DisplayName = "Nutriceutical Food Products", Value = 100000093)]NutriceuticalFoodProducts = 100000093,
				[CrmPicklist(DisplayName = "Office Furniture Manufacturers", Value = 100000094)]OfficeFurnitureManufacturers = 100000094,
				[CrmPicklist(DisplayName = "Partition Installation", Value = 100000095)]PartitionInstallation = 100000095,
				[CrmPicklist(DisplayName = "Picture Framing & Moulding Manufacturers", Value = 100000096)]PictureFramingMouldingManufacturers = 100000096,
				[CrmPicklist(DisplayName = "Pie Makers", Value = 100000097)]PieMakers = 100000097,
				[CrmPicklist(DisplayName = "Powder Coaters", Value = 100000098)]PowderCoaters = 100000098,
				[CrmPicklist(DisplayName = "Printing Ink Manufacturers &/or Suppliers", Value = 100000099)]PrintingInkManufacturersorSuppliers = 100000099,
				[CrmPicklist(DisplayName = "Records & File Management", Value = 100000100)]RecordsFileManagement = 100000100,
				[CrmPicklist(DisplayName = "Refractory Installations", Value = 100000101)]RefractoryInstallations = 100000101,
				[CrmPicklist(DisplayName = "Rental Cars", Value = 100000102)]RentalCars = 100000102,
				[CrmPicklist(DisplayName = "Scales & Weighing Machines Electronic & Mechanical", Value = 100000103)]ScalesWeighingMachinesElectronicMechanical = 100000103,
				[CrmPicklist(DisplayName = "Sign Installation", Value = 100000104)]SignInstallation = 100000104,
				[CrmPicklist(DisplayName = "Sign Manufacturers &/or Consultants", Value = 100000105)]SignManufacturersorConsultants = 100000105,
				[CrmPicklist(DisplayName = "Stainless Steel Equipment &/or Fittings", Value = 100000106)]StainlessSteelEquipmentorFittings = 100000106,
				[CrmPicklist(DisplayName = "Stainless Steel Fabricators &/or Manufacturers", Value = 100000107)]StainlessSteelFabricatorsorManufacturers = 100000107,
				[CrmPicklist(DisplayName = "Stock Feed Manufacturers", Value = 100000108)]StockFeedManufacturers = 100000108,
				[CrmPicklist(DisplayName = "Swimming Pool Accessories & Chemicals", Value = 100000109)]SwimmingPoolAccessoriesChemicals = 100000109,
				[CrmPicklist(DisplayName = "Swimming Pool Manufacturers", Value = 100000110)]SwimmingPoolManufacturers = 100000110,
				[CrmPicklist(DisplayName = "Timber Merchants &/or Supplies", Value = 100000111)]TimberMerchantsorSupplies = 100000111,
				[CrmPicklist(DisplayName = "Timber Moulding Manufacturers & Suppliers", Value = 100000112)]TimberMouldingManufacturersSuppliers = 100000112,
				[CrmPicklist(DisplayName = "Tool Wholesalers", Value = 100000113)]ToolWholesalers = 100000113,
				[CrmPicklist(DisplayName = "Tractor Spare Parts Importers &/or Distributors", Value = 100000114)]TractorSparePartsImportersorDistributors = 100000114,
				[CrmPicklist(DisplayName = "Training & Development Consultants", Value = 100000115)]TrainingDevelopmentConsultants = 100000115,
				[CrmPicklist(DisplayName = "Training & Development Courses", Value = 100000116)]TrainingDevelopmentCourses = 100000116,
				[CrmPicklist(DisplayName = "Vehicle Compliance & Seatbelt Fitting", Value = 100000117)]VehicleComplianceSeatbeltFitting = 100000117,
				[CrmPicklist(DisplayName = "Water Blasting & Spray Equipment", Value = 100000118)]WaterBlastingSprayEquipment = 100000118,
				[CrmPicklist(DisplayName = "Windscreen Supplies", Value = 100000119)]WindscreenSupplies = 100000119,
				[CrmPicklist(DisplayName = "Wine Importers & Distributors", Value = 100000120)]WineImportersDistributors = 100000120,
				[CrmPicklist(DisplayName = "Wood Products", Value = 100000121)]WoodProducts = 100000121,
			}		
			public enum InitialCommunication 
			{
				[CrmPicklist(DisplayName = "Contacted")]Contacted = 0,
				[CrmPicklist(DisplayName = "Not Contacted", Value = 1)]NotContacted = 1,
			}		
			public enum LeadQualityCode 
			{
				[CrmPicklist(DisplayName = "Hot", Value = 1)]Hot = 1,
				[CrmPicklist(DisplayName = "Warm", Value = 2)]Warm = 2,
				[CrmPicklist(DisplayName = "Cold", Value = 3)]Cold = 3,
			}		
			public enum LeadSourceCode 
			{
				[CrmPicklist(DisplayName = "Advertisement", Value = 1)]Advertisement = 1,
				[CrmPicklist(DisplayName = "Employee Referral", Value = 2)]EmployeeReferral = 2,
				[CrmPicklist(DisplayName = "External Referral", Value = 3)]ExternalReferral = 3,
				[CrmPicklist(DisplayName = "Partner", Value = 4)]Partner = 4,
				[CrmPicklist(DisplayName = "Public Relations", Value = 5)]PublicRelations = 5,
				[CrmPicklist(DisplayName = "Seminar", Value = 6)]Seminar = 6,
				[CrmPicklist(DisplayName = "Trade Show", Value = 7)]TradeShow = 7,
				[CrmPicklist(DisplayName = "Web", Value = 8)]Web = 8,
				[CrmPicklist(DisplayName = "Word of Mouth", Value = 9)]WordOfMouth = 9,
				[CrmPicklist(DisplayName = "Other", Value = 10)]Other = 10,
			}		
			public enum Need 
			{
				[CrmPicklist(DisplayName = "Must have")]MustHave = 0,
				[CrmPicklist(DisplayName = "Should have", Value = 1)]ShouldHave = 1,
				[CrmPicklist(DisplayName = "Good to have", Value = 2)]GoodToHave = 2,
				[CrmPicklist(DisplayName = "No need", Value = 3)]NoNeed = 3,
			}		
			public enum PreferredContactMethodCode 
			{
				[CrmPicklist(DisplayName = "Any", Value = 1)]Any = 1,
				[CrmPicklist(DisplayName = "E-mail", Value = 2)]Email = 2,
				[CrmPicklist(DisplayName = "Phone", Value = 3)]Phone = 3,
				[CrmPicklist(DisplayName = "Fax", Value = 4)]Fax = 4,
				[CrmPicklist(DisplayName = "Mail", Value = 5)]Mail = 5,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum PurchaseProcess 
			{
				[CrmPicklist(DisplayName = "Individual")]Individual = 0,
				[CrmPicklist(DisplayName = "Committee", Value = 1)]Committee = 1,
				[CrmPicklist(DisplayName = "Unknown", Value = 2)]Unknown = 2,
			}		
			public enum PurchaseTimeFrame 
			{
				[CrmPicklist(DisplayName = "Immediate")]Immediate = 0,
				[CrmPicklist(DisplayName = "This Quarter", Value = 1)]ThisQuarter = 1,
				[CrmPicklist(DisplayName = "Next Quarter", Value = 2)]NextQuarter = 2,
				[CrmPicklist(DisplayName = "This Year", Value = 3)]ThisYear = 3,
				[CrmPicklist(DisplayName = "Unknown", Value = 4)]Unknown = 4,
			}		
			public enum SalesStage 
			{
				[CrmPicklist(DisplayName = "Qualify")]Qualify = 0,
			}		
			public enum SalesStageCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Qualified", Value = 1)]Qualified = 1,
				[CrmPicklist(DisplayName = "Disqualified", Value = 2)]Disqualified = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "New", Value = 1)]__New = 1,
				[CrmPicklist(DisplayName = "Contacted", Value = 2)]Contacted = 2,
				[CrmPicklist(DisplayName = "Qualified", Value = 3)]Qualified = 3,
				[CrmPicklist(DisplayName = "Lost", Value = 4)]Lost = 4,
				[CrmPicklist(DisplayName = "Cannot Contact", Value = 5)]CannotContact = 5,
				[CrmPicklist(DisplayName = "No Longer Interested", Value = 6)]NoLongerInterested = 6,
				[CrmPicklist(DisplayName = "Canceled", Value = 7)]Canceled = 7,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "lead";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string BudgetAmount = "budgetamount";
			public const string BudgetStatus = "budgetstatus";
			public const string BudgetStatusName = "budgetstatusname";
			public const string CampaignId = "campaignid";
			public const string CampaignIdName = "campaignidname";
			public const string CompanyName = "companyname";
			public const string ConfirmInterest = "confirminterest";
			public const string ConfirmInterestName = "confirminterestname";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string DecisionMaker = "decisionmaker";
			public const string DecisionMakerName = "decisionmakername";
			public const string Description = "description";
			public const string DoNotBulkEMail = "donotbulkemail";
			public const string DoNotBulkEMailName = "donotbulkemailname";
			public const string DoNotEMail = "donotemail";
			public const string DoNotEMailName = "donotemailname";
			public const string DoNotFax = "donotfax";
			public const string DoNotFaxName = "donotfaxname";
			public const string DoNotPhone = "donotphone";
			public const string DoNotPhoneName = "donotphonename";
			public const string DoNotPostalMail = "donotpostalmail";
			public const string DoNotPostalMailName = "donotpostalmailname";
			public const string DoNotSendMarketingMaterialName = "donotsendmarketingmaterialname";
			public const string DoNotSendMM = "donotsendmm";
			public const string EMailAddress1 = "emailaddress1";
			public const string EMailAddress2 = "emailaddress2";
			public const string EMailAddress3 = "emailaddress3";
			public const string EstimatedAmount = "estimatedamount";
			public const string EstimatedCloseDate = "estimatedclosedate";
			public const string EstimatedValue = "estimatedvalue";
			public const string EvaluateFit = "evaluatefit";
			public const string EvaluateFitName = "evaluatefitname";
			public const string ExchangeRate = "exchangerate";
			public const string Fax = "fax";
			public const string FirstName = "firstname";
			public const string FullName = "fullname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IndustryCode = "industrycode";
			public const string IndustryCodeName = "industrycodename";
			public const string InitialCommunication = "initialcommunication";
			public const string InitialCommunicationName = "initialcommunicationname";
			public const string IsAutoCreate = "isautocreate";
			public const string IsPrivate = "isprivate";
			public const string IsPrivateName = "isprivatename";
			public const string JobTitle = "jobtitle";
			public const string LastName = "lastname";
			public const string LastUsedInCampaign = "lastusedincampaign";
			public const string LeadId = "leadid";
			public const string LeadQualityCode = "leadqualitycode";
			public const string LeadQualityCodeName = "leadqualitycodename";
			public const string LeadSourceCode = "leadsourcecode";
			public const string LeadSourceCodeName = "leadsourcecodename";
			public const string MasterId = "masterid";
			public const string MasterIdName = "masteridName";
			public const string MasterLeadIdName = "masterleadidname";
			public const string MasterLeadIdYomiName = "masterleadidyominame";
			public const string Merged = "merged";
			public const string MergedName = "mergedname";
			public const string MiddleName = "middlename";
			public const string MobilePhone = "mobilephone";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Need = "need";
			public const string NeedName = "needname";
			public const string NumberOfEmployees = "numberofemployees";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Pager = "pager";
			public const string ParentAccountId = "parentaccountid";
			public const string ParentAccountIdName = "parentaccountidname";
			public const string ParentAccountIdYomiName = "parentaccountidyominame";
			public const string ParentContactId = "parentcontactid";
			public const string ParentContactIdName = "parentcontactidname";
			public const string ParentContactIdYomiName = "parentcontactidyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PreferredContactMethodCode = "preferredcontactmethodcode";
			public const string PreferredContactMethodCodeName = "preferredcontactmethodcodename";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string PurchaseProcess = "purchaseprocess";
			public const string PurchaseProcessName = "purchaseprocessname";
			public const string PurchaseTimeFrame = "purchasetimeframe";
			public const string PurchaseTimeFrameName = "purchasetimeframename";
			public const string QualificationComments = "qualificationcomments";
			public const string QualifyingOpportunityId = "qualifyingopportunityid";
			public const string QualifyingOpportunityIdName = "qualifyingopportunityidname";
			public const string Revenue = "revenue";
			public const string SalesStage = "salesstage";
			public const string SalesStageCode = "salesstagecode";
			public const string SalesStageCodeName = "salesstagecodename";
			public const string SalesStageName = "salesstagename";
			public const string Salutation = "salutation";
			public const string ScheduleFollowUpProspect = "schedulefollowup_prospect";
			public const string ScheduleFollowUpQualify = "schedulefollowup_qualify";
			public const string SIC = "sic";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subject = "subject";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WebSiteUrl = "websiteurl";
			public const string YomiCompanyName = "yomicompanyname";
			public const string YomiFirstName = "yomifirstname";
			public const string YomiFullName = "yomifullname";
			public const string YomiLastName = "yomilastname";
			public const string YomiMiddleName = "yomimiddlename";
		}

		public override Guid PrimaryKey
		{
			get { return LeadId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "address1_addressid")]
        public virtual Guid Address1AddressId
        {
            get { FillData(); return _address1AddressId; }
            set { SetValue<Guid?>("address1_addressid", value); _address1AddressId = value; }
        }
        private Guid _address1AddressId;

		[CrmProperty(LogicalName = "address1_addresstypecode")]
        public virtual Enums.Address1AddressTypeCode? Address1AddressTypeCode
        {
            get { FillData(); return _address1AddressTypeCode; }
            set { SetPicklist("address1_addresstypecode", (int?)value); _address1AddressTypeCode = value; }
        }
        private Enums.Address1AddressTypeCode? _address1AddressTypeCode;

		[CrmProperty(LogicalName = "address1_addresstypecodename")]
        public virtual string Address1AddressTypeCodeName
        {
            get { FillData(); return _address1AddressTypeCodeName; }
            set {  _address1AddressTypeCodeName = value; }
        }
        private string _address1AddressTypeCodeName;

		[CrmProperty(LogicalName = "address1_city")]
        public virtual string Address1City
        {
            get { FillData(); return _address1City; }
            set { SetValue<string>("address1_city", value); _address1City = value; }
        }
        private string _address1City;

		[CrmProperty(LogicalName = "address1_country")]
        public virtual string Address1Country
        {
            get { FillData(); return _address1Country; }
            set { SetValue<string>("address1_country", value); _address1Country = value; }
        }
        private string _address1Country;

		[CrmProperty(LogicalName = "address1_county")]
        public virtual string Address1County
        {
            get { FillData(); return _address1County; }
            set { SetValue<string>("address1_county", value); _address1County = value; }
        }
        private string _address1County;

		[CrmProperty(LogicalName = "address1_fax")]
        public virtual string Address1Fax
        {
            get { FillData(); return _address1Fax; }
            set { SetValue<string>("address1_fax", value); _address1Fax = value; }
        }
        private string _address1Fax;

		[CrmProperty(LogicalName = "address1_latitude")]
        public virtual double? Address1Latitude
        {
            get { FillData(); return _address1Latitude; }
            set { SetValue<double?>("address1_latitude", value); _address1Latitude = value; }
        }
        private double? _address1Latitude;

		[CrmProperty(LogicalName = "address1_line1")]
        public virtual string Address1Line1
        {
            get { FillData(); return _address1Line1; }
            set { SetValue<string>("address1_line1", value); _address1Line1 = value; }
        }
        private string _address1Line1;

		[CrmProperty(LogicalName = "address1_line2")]
        public virtual string Address1Line2
        {
            get { FillData(); return _address1Line2; }
            set { SetValue<string>("address1_line2", value); _address1Line2 = value; }
        }
        private string _address1Line2;

		[CrmProperty(LogicalName = "address1_line3")]
        public virtual string Address1Line3
        {
            get { FillData(); return _address1Line3; }
            set { SetValue<string>("address1_line3", value); _address1Line3 = value; }
        }
        private string _address1Line3;

		[CrmProperty(LogicalName = "address1_longitude")]
        public virtual double? Address1Longitude
        {
            get { FillData(); return _address1Longitude; }
            set { SetValue<double?>("address1_longitude", value); _address1Longitude = value; }
        }
        private double? _address1Longitude;

		[CrmProperty(LogicalName = "address1_name")]
        public virtual string Address1Name
        {
            get { FillData(); return _address1Name; }
            set { SetValue<string>("address1_name", value); _address1Name = value; }
        }
        private string _address1Name;

		[CrmProperty(LogicalName = "address1_postalcode")]
        public virtual string Address1PostalCode
        {
            get { FillData(); return _address1PostalCode; }
            set { SetValue<string>("address1_postalcode", value); _address1PostalCode = value; }
        }
        private string _address1PostalCode;

		[CrmProperty(LogicalName = "address1_postofficebox")]
        public virtual string Address1PostOfficeBox
        {
            get { FillData(); return _address1PostOfficeBox; }
            set { SetValue<string>("address1_postofficebox", value); _address1PostOfficeBox = value; }
        }
        private string _address1PostOfficeBox;

		[CrmProperty(LogicalName = "address1_shippingmethodcode")]
        public virtual Enums.Address1ShippingMethodCode? Address1ShippingMethodCode
        {
            get { FillData(); return _address1ShippingMethodCode; }
            set { SetPicklist("address1_shippingmethodcode", (int?)value); _address1ShippingMethodCode = value; }
        }
        private Enums.Address1ShippingMethodCode? _address1ShippingMethodCode;

		[CrmProperty(LogicalName = "address1_shippingmethodcodename")]
        public virtual string Address1ShippingMethodCodeName
        {
            get { FillData(); return _address1ShippingMethodCodeName; }
            set {  _address1ShippingMethodCodeName = value; }
        }
        private string _address1ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address1_stateorprovince")]
        public virtual string Address1StateOrProvince
        {
            get { FillData(); return _address1StateOrProvince; }
            set { SetValue<string>("address1_stateorprovince", value); _address1StateOrProvince = value; }
        }
        private string _address1StateOrProvince;

		[CrmProperty(LogicalName = "address1_telephone1")]
        public virtual string Address1Telephone1
        {
            get { FillData(); return _address1Telephone1; }
            set { SetValue<string>("address1_telephone1", value); _address1Telephone1 = value; }
        }
        private string _address1Telephone1;

		[CrmProperty(LogicalName = "address1_telephone2")]
        public virtual string Address1Telephone2
        {
            get { FillData(); return _address1Telephone2; }
            set { SetValue<string>("address1_telephone2", value); _address1Telephone2 = value; }
        }
        private string _address1Telephone2;

		[CrmProperty(LogicalName = "address1_telephone3")]
        public virtual string Address1Telephone3
        {
            get { FillData(); return _address1Telephone3; }
            set { SetValue<string>("address1_telephone3", value); _address1Telephone3 = value; }
        }
        private string _address1Telephone3;

		[CrmProperty(LogicalName = "address1_upszone")]
        public virtual string Address1UPSZone
        {
            get { FillData(); return _address1UPSZone; }
            set { SetValue<string>("address1_upszone", value); _address1UPSZone = value; }
        }
        private string _address1UPSZone;

		[CrmProperty(LogicalName = "address1_utcoffset")]
        public virtual int? Address1UTCOffset
        {
            get { FillData(); return _address1UTCOffset; }
            set { SetValue<int?>("address1_utcoffset", value); _address1UTCOffset = value; }
        }
        private int? _address1UTCOffset;

		[CrmProperty(LogicalName = "address2_addressid")]
        public virtual Guid Address2AddressId
        {
            get { FillData(); return _address2AddressId; }
            set { SetValue<Guid?>("address2_addressid", value); _address2AddressId = value; }
        }
        private Guid _address2AddressId;

		[CrmProperty(LogicalName = "address2_addresstypecode")]
        public virtual Enums.Address2AddressTypeCode? Address2AddressTypeCode
        {
            get { FillData(); return _address2AddressTypeCode; }
            set { SetPicklist("address2_addresstypecode", (int?)value); _address2AddressTypeCode = value; }
        }
        private Enums.Address2AddressTypeCode? _address2AddressTypeCode;

		[CrmProperty(LogicalName = "address2_addresstypecodename")]
        public virtual string Address2AddressTypeCodeName
        {
            get { FillData(); return _address2AddressTypeCodeName; }
            set {  _address2AddressTypeCodeName = value; }
        }
        private string _address2AddressTypeCodeName;

		[CrmProperty(LogicalName = "address2_city")]
        public virtual string Address2City
        {
            get { FillData(); return _address2City; }
            set { SetValue<string>("address2_city", value); _address2City = value; }
        }
        private string _address2City;

		[CrmProperty(LogicalName = "address2_country")]
        public virtual string Address2Country
        {
            get { FillData(); return _address2Country; }
            set { SetValue<string>("address2_country", value); _address2Country = value; }
        }
        private string _address2Country;

		[CrmProperty(LogicalName = "address2_county")]
        public virtual string Address2County
        {
            get { FillData(); return _address2County; }
            set { SetValue<string>("address2_county", value); _address2County = value; }
        }
        private string _address2County;

		[CrmProperty(LogicalName = "address2_fax")]
        public virtual string Address2Fax
        {
            get { FillData(); return _address2Fax; }
            set { SetValue<string>("address2_fax", value); _address2Fax = value; }
        }
        private string _address2Fax;

		[CrmProperty(LogicalName = "address2_latitude")]
        public virtual double? Address2Latitude
        {
            get { FillData(); return _address2Latitude; }
            set { SetValue<double?>("address2_latitude", value); _address2Latitude = value; }
        }
        private double? _address2Latitude;

		[CrmProperty(LogicalName = "address2_line1")]
        public virtual string Address2Line1
        {
            get { FillData(); return _address2Line1; }
            set { SetValue<string>("address2_line1", value); _address2Line1 = value; }
        }
        private string _address2Line1;

		[CrmProperty(LogicalName = "address2_line2")]
        public virtual string Address2Line2
        {
            get { FillData(); return _address2Line2; }
            set { SetValue<string>("address2_line2", value); _address2Line2 = value; }
        }
        private string _address2Line2;

		[CrmProperty(LogicalName = "address2_line3")]
        public virtual string Address2Line3
        {
            get { FillData(); return _address2Line3; }
            set { SetValue<string>("address2_line3", value); _address2Line3 = value; }
        }
        private string _address2Line3;

		[CrmProperty(LogicalName = "address2_longitude")]
        public virtual double? Address2Longitude
        {
            get { FillData(); return _address2Longitude; }
            set { SetValue<double?>("address2_longitude", value); _address2Longitude = value; }
        }
        private double? _address2Longitude;

		[CrmProperty(LogicalName = "address2_name")]
        public virtual string Address2Name
        {
            get { FillData(); return _address2Name; }
            set { SetValue<string>("address2_name", value); _address2Name = value; }
        }
        private string _address2Name;

		[CrmProperty(LogicalName = "address2_postalcode")]
        public virtual string Address2PostalCode
        {
            get { FillData(); return _address2PostalCode; }
            set { SetValue<string>("address2_postalcode", value); _address2PostalCode = value; }
        }
        private string _address2PostalCode;

		[CrmProperty(LogicalName = "address2_postofficebox")]
        public virtual string Address2PostOfficeBox
        {
            get { FillData(); return _address2PostOfficeBox; }
            set { SetValue<string>("address2_postofficebox", value); _address2PostOfficeBox = value; }
        }
        private string _address2PostOfficeBox;

		[CrmProperty(LogicalName = "address2_shippingmethodcode")]
        public virtual Enums.Address2ShippingMethodCode? Address2ShippingMethodCode
        {
            get { FillData(); return _address2ShippingMethodCode; }
            set { SetPicklist("address2_shippingmethodcode", (int?)value); _address2ShippingMethodCode = value; }
        }
        private Enums.Address2ShippingMethodCode? _address2ShippingMethodCode;

		[CrmProperty(LogicalName = "address2_shippingmethodcodename")]
        public virtual string Address2ShippingMethodCodeName
        {
            get { FillData(); return _address2ShippingMethodCodeName; }
            set {  _address2ShippingMethodCodeName = value; }
        }
        private string _address2ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address2_stateorprovince")]
        public virtual string Address2StateOrProvince
        {
            get { FillData(); return _address2StateOrProvince; }
            set { SetValue<string>("address2_stateorprovince", value); _address2StateOrProvince = value; }
        }
        private string _address2StateOrProvince;

		[CrmProperty(LogicalName = "address2_telephone1")]
        public virtual string Address2Telephone1
        {
            get { FillData(); return _address2Telephone1; }
            set { SetValue<string>("address2_telephone1", value); _address2Telephone1 = value; }
        }
        private string _address2Telephone1;

		[CrmProperty(LogicalName = "address2_telephone2")]
        public virtual string Address2Telephone2
        {
            get { FillData(); return _address2Telephone2; }
            set { SetValue<string>("address2_telephone2", value); _address2Telephone2 = value; }
        }
        private string _address2Telephone2;

		[CrmProperty(LogicalName = "address2_telephone3")]
        public virtual string Address2Telephone3
        {
            get { FillData(); return _address2Telephone3; }
            set { SetValue<string>("address2_telephone3", value); _address2Telephone3 = value; }
        }
        private string _address2Telephone3;

		[CrmProperty(LogicalName = "address2_upszone")]
        public virtual string Address2UPSZone
        {
            get { FillData(); return _address2UPSZone; }
            set { SetValue<string>("address2_upszone", value); _address2UPSZone = value; }
        }
        private string _address2UPSZone;

		[CrmProperty(LogicalName = "address2_utcoffset")]
        public virtual int? Address2UTCOffset
        {
            get { FillData(); return _address2UTCOffset; }
            set { SetValue<int?>("address2_utcoffset", value); _address2UTCOffset = value; }
        }
        private int? _address2UTCOffset;

		[CrmProperty(LogicalName = "budgetamount")]
        public virtual decimal? BudgetAmount
        {
            get { FillData(); return _budgetAmount; }
            set { SetMoney("budgetamount", value); _budgetAmount = value; }
        }
        private decimal? _budgetAmount;

		[CrmProperty(LogicalName = "budgetstatus")]
        public virtual Enums.BudgetStatus? BudgetStatus
        {
            get { FillData(); return _budgetStatus; }
            set { SetPicklist("budgetstatus", (int?)value); _budgetStatus = value; }
        }
        private Enums.BudgetStatus? _budgetStatus;

		[CrmProperty(LogicalName = "budgetstatusname")]
        public virtual string BudgetStatusName
        {
            get { FillData(); return _budgetStatusName; }
            set {  _budgetStatusName = value; }
        }
        private string _budgetStatusName;

		[CrmProperty(LogicalName = "campaignid", IsLookup = true)]
        public virtual Guid? CampaignId
        {
            get { FillData(); return _campaignId; }
            set { SetLookup("campaignid", "campaign", value); _campaignId = value; }
        }
        private Guid? _campaignId;

		[CrmProperty(LogicalName = "campaignidname")]
        public virtual string CampaignIdName
        {
            get { FillData(); return _campaignIdName; }
            set {  _campaignIdName = value; }
        }
        private string _campaignIdName;

		[CrmProperty(LogicalName = "companyname")]
        public virtual string CompanyName
        {
            get { FillData(); return _companyName; }
            set { SetValue<string>("companyname", value); _companyName = value; }
        }
        private string _companyName;

		[CrmProperty(LogicalName = "confirminterest")]
        public virtual bool? ConfirmInterest
        {
            get { FillData(); return _confirmInterest; }
            set { SetValue<bool?>("confirminterest", value); _confirmInterest = value; }
        }
        private bool? _confirmInterest;

		[CrmProperty(LogicalName = "confirminterestname")]
        public virtual string ConfirmInterestName
        {
            get { FillData(); return _confirmInterestName; }
            set {  _confirmInterestName = value; }
        }
        private string _confirmInterestName;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidname")]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contactidyominame")]
        public virtual string ContactIdYomiName
        {
            get { FillData(); return _contactIdYomiName; }
            set {  _contactIdYomiName = value; }
        }
        private string _contactIdYomiName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "decisionmaker")]
        public virtual bool? DecisionMaker
        {
            get { FillData(); return _decisionMaker; }
            set { SetValue<bool?>("decisionmaker", value); _decisionMaker = value; }
        }
        private bool? _decisionMaker;

		[CrmProperty(LogicalName = "decisionmakername")]
        public virtual string DecisionMakerName
        {
            get { FillData(); return _decisionMakerName; }
            set {  _decisionMakerName = value; }
        }
        private string _decisionMakerName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "donotbulkemail")]
        public virtual bool? DoNotBulkEMail
        {
            get { FillData(); return _doNotBulkEMail; }
            set { SetValue<bool?>("donotbulkemail", value); _doNotBulkEMail = value; }
        }
        private bool? _doNotBulkEMail;

		[CrmProperty(LogicalName = "donotbulkemailname")]
        public virtual string DoNotBulkEMailName
        {
            get { FillData(); return _doNotBulkEMailName; }
            set {  _doNotBulkEMailName = value; }
        }
        private string _doNotBulkEMailName;

		[CrmProperty(LogicalName = "donotemail")]
        public virtual bool? DoNotEMail
        {
            get { FillData(); return _doNotEMail; }
            set { SetValue<bool?>("donotemail", value); _doNotEMail = value; }
        }
        private bool? _doNotEMail;

		[CrmProperty(LogicalName = "donotemailname")]
        public virtual string DoNotEMailName
        {
            get { FillData(); return _doNotEMailName; }
            set {  _doNotEMailName = value; }
        }
        private string _doNotEMailName;

		[CrmProperty(LogicalName = "donotfax")]
        public virtual bool? DoNotFax
        {
            get { FillData(); return _doNotFax; }
            set { SetValue<bool?>("donotfax", value); _doNotFax = value; }
        }
        private bool? _doNotFax;

		[CrmProperty(LogicalName = "donotfaxname")]
        public virtual string DoNotFaxName
        {
            get { FillData(); return _doNotFaxName; }
            set {  _doNotFaxName = value; }
        }
        private string _doNotFaxName;

		[CrmProperty(LogicalName = "donotphone")]
        public virtual bool? DoNotPhone
        {
            get { FillData(); return _doNotPhone; }
            set { SetValue<bool?>("donotphone", value); _doNotPhone = value; }
        }
        private bool? _doNotPhone;

		[CrmProperty(LogicalName = "donotphonename")]
        public virtual string DoNotPhoneName
        {
            get { FillData(); return _doNotPhoneName; }
            set {  _doNotPhoneName = value; }
        }
        private string _doNotPhoneName;

		[CrmProperty(LogicalName = "donotpostalmail")]
        public virtual bool? DoNotPostalMail
        {
            get { FillData(); return _doNotPostalMail; }
            set { SetValue<bool?>("donotpostalmail", value); _doNotPostalMail = value; }
        }
        private bool? _doNotPostalMail;

		[CrmProperty(LogicalName = "donotpostalmailname")]
        public virtual string DoNotPostalMailName
        {
            get { FillData(); return _doNotPostalMailName; }
            set {  _doNotPostalMailName = value; }
        }
        private string _doNotPostalMailName;

		[CrmProperty(LogicalName = "donotsendmarketingmaterialname")]
        public virtual string DoNotSendMarketingMaterialName
        {
            get { FillData(); return _doNotSendMarketingMaterialName; }
            set {  _doNotSendMarketingMaterialName = value; }
        }
        private string _doNotSendMarketingMaterialName;

		[CrmProperty(LogicalName = "donotsendmm")]
        public virtual bool? DoNotSendMM
        {
            get { FillData(); return _doNotSendMM; }
            set { SetValue<bool?>("donotsendmm", value); _doNotSendMM = value; }
        }
        private bool? _doNotSendMM;

		[CrmProperty(LogicalName = "emailaddress1")]
        public virtual string EMailAddress1
        {
            get { FillData(); return _eMailAddress1; }
            set { SetValue<string>("emailaddress1", value); _eMailAddress1 = value; }
        }
        private string _eMailAddress1;

		[CrmProperty(LogicalName = "emailaddress2")]
        public virtual string EMailAddress2
        {
            get { FillData(); return _eMailAddress2; }
            set { SetValue<string>("emailaddress2", value); _eMailAddress2 = value; }
        }
        private string _eMailAddress2;

		[CrmProperty(LogicalName = "emailaddress3")]
        public virtual string EMailAddress3
        {
            get { FillData(); return _eMailAddress3; }
            set { SetValue<string>("emailaddress3", value); _eMailAddress3 = value; }
        }
        private string _eMailAddress3;

		[CrmProperty(LogicalName = "estimatedamount")]
        public virtual decimal? EstimatedAmount
        {
            get { FillData(); return _estimatedAmount; }
            set { SetMoney("estimatedamount", value); _estimatedAmount = value; }
        }
        private decimal? _estimatedAmount;

		[CrmProperty(LogicalName = "estimatedclosedate")]
        public virtual DateTime? EstimatedCloseDate
        {
            get { FillData(); return _estimatedCloseDate; }
            set { SetValue<DateTime?>("estimatedclosedate", value); _estimatedCloseDate = value; }
        }
        private DateTime? _estimatedCloseDate;

		[CrmProperty(LogicalName = "estimatedvalue")]
        public virtual double? EstimatedValue
        {
            get { FillData(); return _estimatedValue; }
            set { SetValue<double?>("estimatedvalue", value); _estimatedValue = value; }
        }
        private double? _estimatedValue;

		[CrmProperty(LogicalName = "evaluatefit")]
        public virtual bool? EvaluateFit
        {
            get { FillData(); return _evaluateFit; }
            set { SetValue<bool?>("evaluatefit", value); _evaluateFit = value; }
        }
        private bool? _evaluateFit;

		[CrmProperty(LogicalName = "evaluatefitname")]
        public virtual string EvaluateFitName
        {
            get { FillData(); return _evaluateFitName; }
            set {  _evaluateFitName = value; }
        }
        private string _evaluateFitName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "fax")]
        public virtual string Fax
        {
            get { FillData(); return _fax; }
            set { SetValue<string>("fax", value); _fax = value; }
        }
        private string _fax;

		[CrmProperty(LogicalName = "firstname")]
        public virtual string FirstName
        {
            get { FillData(); return _firstName; }
            set { SetValue<string>("firstname", value); _firstName = value; }
        }
        private string _firstName;

		[CrmProperty(LogicalName = "fullname")]
        public virtual string FullName
        {
            get { FillData(); return _fullName; }
            set {  _fullName = value; }
        }
        private string _fullName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "industrycode")]
        public virtual Enums.IndustryCode? IndustryCode
        {
            get { FillData(); return _industryCode; }
            set { SetPicklist("industrycode", (int?)value); _industryCode = value; }
        }
        private Enums.IndustryCode? _industryCode;

		[CrmProperty(LogicalName = "industrycodename")]
        public virtual string IndustryCodeName
        {
            get { FillData(); return _industryCodeName; }
            set {  _industryCodeName = value; }
        }
        private string _industryCodeName;

		[CrmProperty(LogicalName = "initialcommunication")]
        public virtual Enums.InitialCommunication? InitialCommunication
        {
            get { FillData(); return _initialCommunication; }
            set { SetPicklist("initialcommunication", (int?)value); _initialCommunication = value; }
        }
        private Enums.InitialCommunication? _initialCommunication;

		[CrmProperty(LogicalName = "initialcommunicationname")]
        public virtual string InitialCommunicationName
        {
            get { FillData(); return _initialCommunicationName; }
            set {  _initialCommunicationName = value; }
        }
        private string _initialCommunicationName;

		[CrmProperty(LogicalName = "isautocreate")]
        public virtual bool? IsAutoCreate
        {
            get { FillData(); return _isAutoCreate; }
            set {  _isAutoCreate = value; }
        }
        private bool? _isAutoCreate;

		[CrmProperty(LogicalName = "isprivate")]
        public virtual bool? IsPrivate
        {
            get { FillData(); return _isPrivate; }
            set {  _isPrivate = value; }
        }
        private bool? _isPrivate;

		[CrmProperty(LogicalName = "isprivatename")]
        public virtual string IsPrivateName
        {
            get { FillData(); return _isPrivateName; }
            set {  _isPrivateName = value; }
        }
        private string _isPrivateName;

		[CrmProperty(LogicalName = "jobtitle")]
        public virtual string JobTitle
        {
            get { FillData(); return _jobTitle; }
            set { SetValue<string>("jobtitle", value); _jobTitle = value; }
        }
        private string _jobTitle;

		[CrmProperty(LogicalName = "lastname")]
        public virtual string LastName
        {
            get { FillData(); return _lastName; }
            set { SetValue<string>("lastname", value); _lastName = value; }
        }
        private string _lastName;

		[CrmProperty(LogicalName = "lastusedincampaign")]
        public virtual DateTime? LastUsedInCampaign
        {
            get { FillData(); return _lastUsedInCampaign; }
            set { SetValue<DateTime?>("lastusedincampaign", value); _lastUsedInCampaign = value; }
        }
        private DateTime? _lastUsedInCampaign;

		[CrmProperty(LogicalName = "leadid")]
        public virtual Guid LeadId
        {
            get { FillData(); return _leadId; }
            set {  _leadId = value; }
        }
        private Guid _leadId;

		[CrmProperty(LogicalName = "leadqualitycode")]
        public virtual Enums.LeadQualityCode? LeadQualityCode
        {
            get { FillData(); return _leadQualityCode; }
            set { SetPicklist("leadqualitycode", (int?)value); _leadQualityCode = value; }
        }
        private Enums.LeadQualityCode? _leadQualityCode;

		[CrmProperty(LogicalName = "leadqualitycodename")]
        public virtual string LeadQualityCodeName
        {
            get { FillData(); return _leadQualityCodeName; }
            set {  _leadQualityCodeName = value; }
        }
        private string _leadQualityCodeName;

		[CrmProperty(LogicalName = "leadsourcecode")]
        public virtual Enums.LeadSourceCode? LeadSourceCode
        {
            get { FillData(); return _leadSourceCode; }
            set { SetPicklist("leadsourcecode", (int?)value); _leadSourceCode = value; }
        }
        private Enums.LeadSourceCode? _leadSourceCode;

		[CrmProperty(LogicalName = "leadsourcecodename")]
        public virtual string LeadSourceCodeName
        {
            get { FillData(); return _leadSourceCodeName; }
            set {  _leadSourceCodeName = value; }
        }
        private string _leadSourceCodeName;

		[CrmProperty(LogicalName = "masterid", IsLookup = true)]
        public virtual Guid? MasterId
        {
            get { FillData(); return _masterId; }
            set {  _masterId = value; }
        }
        private Guid? _masterId;

		[CrmProperty(LogicalName = "masteridName", IsEntityReferenceHelper = true)]
        public virtual string MasterIdName
        {
            get { FillData(); return _masterIdName; }
            set {  _masterIdName = value; }
        }
        private string _masterIdName;

		[CrmProperty(LogicalName = "masterleadidname")]
        public virtual string MasterLeadIdName
        {
            get { FillData(); return _masterLeadIdName; }
            set {  _masterLeadIdName = value; }
        }
        private string _masterLeadIdName;

		[CrmProperty(LogicalName = "masterleadidyominame")]
        public virtual string MasterLeadIdYomiName
        {
            get { FillData(); return _masterLeadIdYomiName; }
            set {  _masterLeadIdYomiName = value; }
        }
        private string _masterLeadIdYomiName;

		[CrmProperty(LogicalName = "merged")]
        public virtual bool? Merged
        {
            get { FillData(); return _merged; }
            set {  _merged = value; }
        }
        private bool? _merged;

		[CrmProperty(LogicalName = "mergedname")]
        public virtual string MergedName
        {
            get { FillData(); return _mergedName; }
            set {  _mergedName = value; }
        }
        private string _mergedName;

		[CrmProperty(LogicalName = "middlename")]
        public virtual string MiddleName
        {
            get { FillData(); return _middleName; }
            set { SetValue<string>("middlename", value); _middleName = value; }
        }
        private string _middleName;

		[CrmProperty(LogicalName = "mobilephone")]
        public virtual string MobilePhone
        {
            get { FillData(); return _mobilePhone; }
            set { SetValue<string>("mobilephone", value); _mobilePhone = value; }
        }
        private string _mobilePhone;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "need")]
        public virtual Enums.Need? Need
        {
            get { FillData(); return _need; }
            set { SetPicklist("need", (int?)value); _need = value; }
        }
        private Enums.Need? _need;

		[CrmProperty(LogicalName = "needname")]
        public virtual string NeedName
        {
            get { FillData(); return _needName; }
            set {  _needName = value; }
        }
        private string _needName;

		[CrmProperty(LogicalName = "numberofemployees")]
        public virtual int? NumberOfEmployees
        {
            get { FillData(); return _numberOfEmployees; }
            set { SetValue<int?>("numberofemployees", value); _numberOfEmployees = value; }
        }
        private int? _numberOfEmployees;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "pager")]
        public virtual string Pager
        {
            get { FillData(); return _pager; }
            set { SetValue<string>("pager", value); _pager = value; }
        }
        private string _pager;

		[CrmProperty(LogicalName = "parentaccountid", IsLookup = true)]
        public virtual Guid? ParentAccountId
        {
            get { FillData(); return _parentAccountId; }
            set { SetLookup("parentaccountid", "account", value); _parentAccountId = value; }
        }
        private Guid? _parentAccountId;

		[CrmProperty(LogicalName = "parentaccountidname")]
        public virtual string ParentAccountIdName
        {
            get { FillData(); return _parentAccountIdName; }
            set {  _parentAccountIdName = value; }
        }
        private string _parentAccountIdName;

		[CrmProperty(LogicalName = "parentaccountidyominame")]
        public virtual string ParentAccountIdYomiName
        {
            get { FillData(); return _parentAccountIdYomiName; }
            set {  _parentAccountIdYomiName = value; }
        }
        private string _parentAccountIdYomiName;

		[CrmProperty(LogicalName = "parentcontactid", IsLookup = true)]
        public virtual Guid? ParentContactId
        {
            get { FillData(); return _parentContactId; }
            set { SetLookup("parentcontactid", "contact", value); _parentContactId = value; }
        }
        private Guid? _parentContactId;

		[CrmProperty(LogicalName = "parentcontactidname")]
        public virtual string ParentContactIdName
        {
            get { FillData(); return _parentContactIdName; }
            set {  _parentContactIdName = value; }
        }
        private string _parentContactIdName;

		[CrmProperty(LogicalName = "parentcontactidyominame")]
        public virtual string ParentContactIdYomiName
        {
            get { FillData(); return _parentContactIdYomiName; }
            set {  _parentContactIdYomiName = value; }
        }
        private string _parentContactIdYomiName;

		[CrmProperty(LogicalName = "participatesinworkflow")]
        public virtual bool? ParticipatesInWorkflow
        {
            get { FillData(); return _participatesInWorkflow; }
            set { SetValue<bool?>("participatesinworkflow", value); _participatesInWorkflow = value; }
        }
        private bool? _participatesInWorkflow;

		[CrmProperty(LogicalName = "participatesinworkflowname")]
        public virtual string ParticipatesInWorkflowName
        {
            get { FillData(); return _participatesInWorkflowName; }
            set {  _participatesInWorkflowName = value; }
        }
        private string _participatesInWorkflowName;

		[CrmProperty(LogicalName = "preferredcontactmethodcode")]
        public virtual Enums.PreferredContactMethodCode? PreferredContactMethodCode
        {
            get { FillData(); return _preferredContactMethodCode; }
            set { SetPicklist("preferredcontactmethodcode", (int?)value); _preferredContactMethodCode = value; }
        }
        private Enums.PreferredContactMethodCode? _preferredContactMethodCode;

		[CrmProperty(LogicalName = "preferredcontactmethodcodename")]
        public virtual string PreferredContactMethodCodeName
        {
            get { FillData(); return _preferredContactMethodCodeName; }
            set {  _preferredContactMethodCodeName = value; }
        }
        private string _preferredContactMethodCodeName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "purchaseprocess")]
        public virtual Enums.PurchaseProcess? PurchaseProcess
        {
            get { FillData(); return _purchaseProcess; }
            set { SetPicklist("purchaseprocess", (int?)value); _purchaseProcess = value; }
        }
        private Enums.PurchaseProcess? _purchaseProcess;

		[CrmProperty(LogicalName = "purchaseprocessname")]
        public virtual string PurchaseProcessName
        {
            get { FillData(); return _purchaseProcessName; }
            set {  _purchaseProcessName = value; }
        }
        private string _purchaseProcessName;

		[CrmProperty(LogicalName = "purchasetimeframe")]
        public virtual Enums.PurchaseTimeFrame? PurchaseTimeFrame
        {
            get { FillData(); return _purchaseTimeFrame; }
            set { SetPicklist("purchasetimeframe", (int?)value); _purchaseTimeFrame = value; }
        }
        private Enums.PurchaseTimeFrame? _purchaseTimeFrame;

		[CrmProperty(LogicalName = "purchasetimeframename")]
        public virtual string PurchaseTimeFrameName
        {
            get { FillData(); return _purchaseTimeFrameName; }
            set {  _purchaseTimeFrameName = value; }
        }
        private string _purchaseTimeFrameName;

		[CrmProperty(LogicalName = "qualificationcomments")]
        public virtual string QualificationComments
        {
            get { FillData(); return _qualificationComments; }
            set { SetValue<string>("qualificationcomments", value); _qualificationComments = value; }
        }
        private string _qualificationComments;

		[CrmProperty(LogicalName = "qualifyingopportunityid", IsLookup = true)]
        public virtual Guid? QualifyingOpportunityId
        {
            get { FillData(); return _qualifyingOpportunityId; }
            set { SetLookup("qualifyingopportunityid", "opportunity", value); _qualifyingOpportunityId = value; }
        }
        private Guid? _qualifyingOpportunityId;

		[CrmProperty(LogicalName = "qualifyingopportunityidname")]
        public virtual string QualifyingOpportunityIdName
        {
            get { FillData(); return _qualifyingOpportunityIdName; }
            set {  _qualifyingOpportunityIdName = value; }
        }
        private string _qualifyingOpportunityIdName;

		[CrmProperty(LogicalName = "revenue")]
        public virtual decimal? Revenue
        {
            get { FillData(); return _revenue; }
            set { SetMoney("revenue", value); _revenue = value; }
        }
        private decimal? _revenue;

		[CrmProperty(LogicalName = "salesstage")]
        public virtual Enums.SalesStage? SalesStage
        {
            get { FillData(); return _salesStage; }
            set { SetPicklist("salesstage", (int?)value); _salesStage = value; }
        }
        private Enums.SalesStage? _salesStage;

		[CrmProperty(LogicalName = "salesstagecode")]
        public virtual Enums.SalesStageCode? SalesStageCode
        {
            get { FillData(); return _salesStageCode; }
            set { SetPicklist("salesstagecode", (int?)value); _salesStageCode = value; }
        }
        private Enums.SalesStageCode? _salesStageCode;

		[CrmProperty(LogicalName = "salesstagecodename")]
        public virtual string SalesStageCodeName
        {
            get { FillData(); return _salesStageCodeName; }
            set {  _salesStageCodeName = value; }
        }
        private string _salesStageCodeName;

		[CrmProperty(LogicalName = "salesstagename")]
        public virtual string SalesStageName
        {
            get { FillData(); return _salesStageName; }
            set {  _salesStageName = value; }
        }
        private string _salesStageName;

		[CrmProperty(LogicalName = "salutation")]
        public virtual string Salutation
        {
            get { FillData(); return _salutation; }
            set { SetValue<string>("salutation", value); _salutation = value; }
        }
        private string _salutation;

		[CrmProperty(LogicalName = "schedulefollowup_prospect")]
        public virtual DateTime? ScheduleFollowUpProspect
        {
            get { FillData(); return _scheduleFollowUpProspect; }
            set { SetValue<DateTime?>("schedulefollowup_prospect", value); _scheduleFollowUpProspect = value; }
        }
        private DateTime? _scheduleFollowUpProspect;

		[CrmProperty(LogicalName = "schedulefollowup_qualify")]
        public virtual DateTime? ScheduleFollowUpQualify
        {
            get { FillData(); return _scheduleFollowUpQualify; }
            set { SetValue<DateTime?>("schedulefollowup_qualify", value); _scheduleFollowUpQualify = value; }
        }
        private DateTime? _scheduleFollowUpQualify;

		[CrmProperty(LogicalName = "sic")]
        public virtual string SIC
        {
            get { FillData(); return _sIC; }
            set { SetValue<string>("sic", value); _sIC = value; }
        }
        private string _sIC;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "telephone1")]
        public virtual string Telephone1
        {
            get { FillData(); return _telephone1; }
            set { SetValue<string>("telephone1", value); _telephone1 = value; }
        }
        private string _telephone1;

		[CrmProperty(LogicalName = "telephone2")]
        public virtual string Telephone2
        {
            get { FillData(); return _telephone2; }
            set { SetValue<string>("telephone2", value); _telephone2 = value; }
        }
        private string _telephone2;

		[CrmProperty(LogicalName = "telephone3")]
        public virtual string Telephone3
        {
            get { FillData(); return _telephone3; }
            set { SetValue<string>("telephone3", value); _telephone3 = value; }
        }
        private string _telephone3;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "websiteurl")]
        public virtual string WebSiteUrl
        {
            get { FillData(); return _webSiteUrl; }
            set { SetValue<string>("websiteurl", value); _webSiteUrl = value; }
        }
        private string _webSiteUrl;

		[CrmProperty(LogicalName = "yomicompanyname")]
        public virtual string YomiCompanyName
        {
            get { FillData(); return _yomiCompanyName; }
            set { SetValue<string>("yomicompanyname", value); _yomiCompanyName = value; }
        }
        private string _yomiCompanyName;

		[CrmProperty(LogicalName = "yomifirstname")]
        public virtual string YomiFirstName
        {
            get { FillData(); return _yomiFirstName; }
            set { SetValue<string>("yomifirstname", value); _yomiFirstName = value; }
        }
        private string _yomiFirstName;

		[CrmProperty(LogicalName = "yomifullname")]
        public virtual string YomiFullName
        {
            get { FillData(); return _yomiFullName; }
            set {  _yomiFullName = value; }
        }
        private string _yomiFullName;

		[CrmProperty(LogicalName = "yomilastname")]
        public virtual string YomiLastName
        {
            get { FillData(); return _yomiLastName; }
            set { SetValue<string>("yomilastname", value); _yomiLastName = value; }
        }
        private string _yomiLastName;

		[CrmProperty(LogicalName = "yomimiddlename")]
        public virtual string YomiMiddleName
        {
            get { FillData(); return _yomiMiddleName; }
            set { SetValue<string>("yomimiddlename", value); _yomiMiddleName = value; }
        }
        private string _yomiMiddleName;

	}
	[CrmEntity(LogicalName = "leadaddress", PrimaryKey = "leadaddressid")]
	public partial class LeadAddress : CrmEntity
	{
		public class Enums
		{
			public enum AddressTypeCode 
			{
			}		
			public enum ShippingMethodCode 
			{
			}		
		}

		public class Fields
		{
			public const string SchemaName = "leadaddress";
			
			public const string AddressNumber = "addressnumber";
			public const string AddressTypeCode = "addresstypecode";
			public const string AddressTypeCodeName = "addresstypecodename";
			public const string City = "city";
			public const string Country = "country";
			public const string County = "county";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string Fax = "fax";
			public const string Latitude = "latitude";
			public const string LeadAddressId = "leadaddressid";
			public const string Line1 = "line1";
			public const string Line2 = "line2";
			public const string Line3 = "line3";
			public const string Longitude = "longitude";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string ParentId = "parentid";
			public const string ParentIdName = "parentidname";
			public const string ParentIdYomiName = "parentidyominame";
			public const string PostalCode = "postalcode";
			public const string PostOfficeBox = "postofficebox";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string StateOrProvince = "stateorprovince";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UPSZone = "upszone";
			public const string UTCOffset = "utcoffset";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return LeadAddressId; }
		}

		[CrmProperty(LogicalName = "addressnumber")]
        public virtual int? AddressNumber
        {
            get { FillData(); return _addressNumber; }
            set { SetValue<int?>("addressnumber", value); _addressNumber = value; }
        }
        private int? _addressNumber;

		[CrmProperty(LogicalName = "addresstypecode")]
        public virtual Enums.AddressTypeCode? AddressTypeCode
        {
            get { FillData(); return _addressTypeCode; }
            set { SetPicklist("addresstypecode", (int?)value); _addressTypeCode = value; }
        }
        private Enums.AddressTypeCode? _addressTypeCode;

		[CrmProperty(LogicalName = "addresstypecodename")]
        public virtual string AddressTypeCodeName
        {
            get { FillData(); return _addressTypeCodeName; }
            set {  _addressTypeCodeName = value; }
        }
        private string _addressTypeCodeName;

		[CrmProperty(LogicalName = "city")]
        public virtual string City
        {
            get { FillData(); return _city; }
            set { SetValue<string>("city", value); _city = value; }
        }
        private string _city;

		[CrmProperty(LogicalName = "country")]
        public virtual string Country
        {
            get { FillData(); return _country; }
            set { SetValue<string>("country", value); _country = value; }
        }
        private string _country;

		[CrmProperty(LogicalName = "county")]
        public virtual string County
        {
            get { FillData(); return _county; }
            set { SetValue<string>("county", value); _county = value; }
        }
        private string _county;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "fax")]
        public virtual string Fax
        {
            get { FillData(); return _fax; }
            set { SetValue<string>("fax", value); _fax = value; }
        }
        private string _fax;

		[CrmProperty(LogicalName = "latitude")]
        public virtual double? Latitude
        {
            get { FillData(); return _latitude; }
            set { SetValue<double?>("latitude", value); _latitude = value; }
        }
        private double? _latitude;

		[CrmProperty(LogicalName = "leadaddressid")]
        public virtual Guid LeadAddressId
        {
            get { FillData(); return _leadAddressId; }
            set {  _leadAddressId = value; }
        }
        private Guid _leadAddressId;

		[CrmProperty(LogicalName = "line1")]
        public virtual string Line1
        {
            get { FillData(); return _line1; }
            set { SetValue<string>("line1", value); _line1 = value; }
        }
        private string _line1;

		[CrmProperty(LogicalName = "line2")]
        public virtual string Line2
        {
            get { FillData(); return _line2; }
            set { SetValue<string>("line2", value); _line2 = value; }
        }
        private string _line2;

		[CrmProperty(LogicalName = "line3")]
        public virtual string Line3
        {
            get { FillData(); return _line3; }
            set { SetValue<string>("line3", value); _line3 = value; }
        }
        private string _line3;

		[CrmProperty(LogicalName = "longitude")]
        public virtual double? Longitude
        {
            get { FillData(); return _longitude; }
            set { SetValue<double?>("longitude", value); _longitude = value; }
        }
        private double? _longitude;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "parentid", IsLookup = true)]
        public virtual Guid? ParentId
        {
            get { FillData(); return _parentId; }
            set { SetLookup("parentid", "lead", value); _parentId = value; }
        }
        private Guid? _parentId;

		[CrmProperty(LogicalName = "parentidname")]
        public virtual string ParentIdName
        {
            get { FillData(); return _parentIdName; }
            set {  _parentIdName = value; }
        }
        private string _parentIdName;

		[CrmProperty(LogicalName = "parentidyominame")]
        public virtual string ParentIdYomiName
        {
            get { FillData(); return _parentIdYomiName; }
            set {  _parentIdYomiName = value; }
        }
        private string _parentIdYomiName;

		[CrmProperty(LogicalName = "postalcode")]
        public virtual string PostalCode
        {
            get { FillData(); return _postalCode; }
            set { SetValue<string>("postalcode", value); _postalCode = value; }
        }
        private string _postalCode;

		[CrmProperty(LogicalName = "postofficebox")]
        public virtual string PostOfficeBox
        {
            get { FillData(); return _postOfficeBox; }
            set { SetValue<string>("postofficebox", value); _postOfficeBox = value; }
        }
        private string _postOfficeBox;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "stateorprovince")]
        public virtual string StateOrProvince
        {
            get { FillData(); return _stateOrProvince; }
            set { SetValue<string>("stateorprovince", value); _stateOrProvince = value; }
        }
        private string _stateOrProvince;

		[CrmProperty(LogicalName = "telephone1")]
        public virtual string Telephone1
        {
            get { FillData(); return _telephone1; }
            set { SetValue<string>("telephone1", value); _telephone1 = value; }
        }
        private string _telephone1;

		[CrmProperty(LogicalName = "telephone2")]
        public virtual string Telephone2
        {
            get { FillData(); return _telephone2; }
            set { SetValue<string>("telephone2", value); _telephone2 = value; }
        }
        private string _telephone2;

		[CrmProperty(LogicalName = "telephone3")]
        public virtual string Telephone3
        {
            get { FillData(); return _telephone3; }
            set { SetValue<string>("telephone3", value); _telephone3 = value; }
        }
        private string _telephone3;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "upszone")]
        public virtual string UPSZone
        {
            get { FillData(); return _uPSZone; }
            set { SetValue<string>("upszone", value); _uPSZone = value; }
        }
        private string _uPSZone;

		[CrmProperty(LogicalName = "utcoffset")]
        public virtual int? UTCOffset
        {
            get { FillData(); return _uTCOffset; }
            set { SetValue<int?>("utcoffset", value); _uTCOffset = value; }
        }
        private int? _uTCOffset;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "letter", PrimaryKey = "activityid")]
	public partial class Letter : CrmEntity
	{
		public class Enums
		{
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Draft", Value = 2)]Draft = 2,
				[CrmPicklist(DisplayName = "Received", Value = 3)]Received = 3,
				[CrmPicklist(DisplayName = "Sent", Value = 4)]Sent = 4,
				[CrmPicklist(DisplayName = "Canceled", Value = 5)]Canceled = 5,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "letter";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Address = "address";
			public const string Bcc = "bcc";
			public const string Category = "category";
			public const string Cc = "cc";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DirectionCode = "directioncode";
			public const string DirectionCodeName = "directioncodename";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillableTime = "new_billabletime";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "address")]
        public virtual string Address
        {
            get { FillData(); return _address; }
            set { SetValue<string>("address", value); _address = value; }
        }
        private string _address;

		[CrmProperty(LogicalName = "bcc")]
        public virtual object Bcc
        {
            get { FillData(); return _bcc; }
            set {  _bcc = value; }
        }
        private object _bcc;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "cc")]
        public virtual object Cc
        {
            get { FillData(); return _cc; }
            set {  _cc = value; }
        }
        private object _cc;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "directioncode")]
        public virtual bool? DirectionCode
        {
            get { FillData(); return _directionCode; }
            set { SetValue<bool?>("directioncode", value); _directionCode = value; }
        }
        private bool? _directionCode;

		[CrmProperty(LogicalName = "directioncodename")]
        public virtual string DirectionCodeName
        {
            get { FillData(); return _directionCodeName; }
            set {  _directionCodeName = value; }
        }
        private string _directionCodeName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billabletime")]
        public virtual int? NewBillableTime
        {
            get { FillData(); return _newBillableTime; }
            set { SetValue<int?>("new_billabletime", value); _newBillableTime = value; }
        }
        private int? _newBillableTime;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "list", PrimaryKey = "listid")]
	public partial class List : CrmEntity
	{
		public class Enums
		{
			public enum CreatedFromCode 
			{
				[CrmPicklist(DisplayName = "Account", Value = 1)]Account = 1,
				[CrmPicklist(DisplayName = "Contact", Value = 2)]Contact = 2,
				[CrmPicklist(DisplayName = "Lead", Value = 4)]Lead = 4,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "list";
			
			public const string CheckForDoNotSendMMOnListMembersName = "checkfordonotsendmmonlistmembersname";
			public const string Cost = "cost";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedFromCode = "createdfromcode";
			public const string CreatedFromCodeName = "createdfromcodename";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DoNotSendOnOptOut = "donotsendonoptout";
			public const string ExchangeRate = "exchangerate";
			public const string IgnoreInactiveListMembers = "ignoreinactivelistmembers";
			public const string IgnoreInactiveListMembersName = "ignoreinactivelistmembersname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string LastUsedOn = "lastusedon";
			public const string ListId = "listid";
			public const string ListName = "listname";
			public const string LockStatus = "lockstatus";
			public const string LockStatusName = "lockstatusname";
			public const string MemberCount = "membercount";
			public const string MemberType = "membertype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoError = "po_error";
			public const string PoMailchimplist = "po_mailchimplist";
			public const string PoMailchimplistid = "po_mailchimplistid";
			public const string Purpose = "purpose";
			public const string Query = "query";
			public const string Source = "source";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string Type = "type";
			public const string TypeName = "typename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ListId; }
		}

		[CrmProperty(LogicalName = "checkfordonotsendmmonlistmembersname")]
        public virtual string CheckForDoNotSendMMOnListMembersName
        {
            get { FillData(); return _checkForDoNotSendMMOnListMembersName; }
            set {  _checkForDoNotSendMMOnListMembersName = value; }
        }
        private string _checkForDoNotSendMMOnListMembersName;

		[CrmProperty(LogicalName = "cost")]
        public virtual decimal? Cost
        {
            get { FillData(); return _cost; }
            set { SetMoney("cost", value); _cost = value; }
        }
        private decimal? _cost;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdfromcode")]
        public virtual Enums.CreatedFromCode? CreatedFromCode
        {
            get { FillData(); return _createdFromCode; }
            set {  _createdFromCode = value; }
        }
        private Enums.CreatedFromCode? _createdFromCode;

		[CrmProperty(LogicalName = "createdfromcodename")]
        public virtual string CreatedFromCodeName
        {
            get { FillData(); return _createdFromCodeName; }
            set {  _createdFromCodeName = value; }
        }
        private string _createdFromCodeName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "donotsendonoptout")]
        public virtual bool? DoNotSendOnOptOut
        {
            get { FillData(); return _doNotSendOnOptOut; }
            set { SetValue<bool?>("donotsendonoptout", value); _doNotSendOnOptOut = value; }
        }
        private bool? _doNotSendOnOptOut;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "ignoreinactivelistmembers")]
        public virtual bool? IgnoreInactiveListMembers
        {
            get { FillData(); return _ignoreInactiveListMembers; }
            set { SetValue<bool?>("ignoreinactivelistmembers", value); _ignoreInactiveListMembers = value; }
        }
        private bool? _ignoreInactiveListMembers;

		[CrmProperty(LogicalName = "ignoreinactivelistmembersname")]
        public virtual string IgnoreInactiveListMembersName
        {
            get { FillData(); return _ignoreInactiveListMembersName; }
            set {  _ignoreInactiveListMembersName = value; }
        }
        private string _ignoreInactiveListMembersName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "lastusedon")]
        public virtual DateTime? LastUsedOn
        {
            get { FillData(); return _lastUsedOn; }
            set {  _lastUsedOn = value; }
        }
        private DateTime? _lastUsedOn;

		[CrmProperty(LogicalName = "listid")]
        public virtual Guid ListId
        {
            get { FillData(); return _listId; }
            set {  _listId = value; }
        }
        private Guid _listId;

		[CrmProperty(LogicalName = "listname")]
        public virtual string ListName
        {
            get { FillData(); return _listName; }
            set { SetValue<string>("listname", value); _listName = value; }
        }
        private string _listName;

		[CrmProperty(LogicalName = "lockstatus")]
        public virtual bool? LockStatus
        {
            get { FillData(); return _lockStatus; }
            set { SetValue<bool?>("lockstatus", value); _lockStatus = value; }
        }
        private bool? _lockStatus;

		[CrmProperty(LogicalName = "lockstatusname")]
        public virtual string LockStatusName
        {
            get { FillData(); return _lockStatusName; }
            set {  _lockStatusName = value; }
        }
        private string _lockStatusName;

		[CrmProperty(LogicalName = "membercount")]
        public virtual int? MemberCount
        {
            get { FillData(); return _memberCount; }
            set {  _memberCount = value; }
        }
        private int? _memberCount;

		[CrmProperty(LogicalName = "membertype")]
        public virtual int? MemberType
        {
            get { FillData(); return _memberType; }
            set {  _memberType = value; }
        }
        private int? _memberType;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_error")]
        public virtual string PoError
        {
            get { FillData(); return _poError; }
            set { SetValue<string>("po_error", value); _poError = value; }
        }
        private string _poError;

		[CrmProperty(LogicalName = "po_mailchimplist")]
        public virtual string PoMailchimplist
        {
            get { FillData(); return _poMailchimplist; }
            set { SetValue<string>("po_mailchimplist", value); _poMailchimplist = value; }
        }
        private string _poMailchimplist;

		[CrmProperty(LogicalName = "po_mailchimplistid")]
        public virtual string PoMailchimplistid
        {
            get { FillData(); return _poMailchimplistid; }
            set { SetValue<string>("po_mailchimplistid", value); _poMailchimplistid = value; }
        }
        private string _poMailchimplistid;

		[CrmProperty(LogicalName = "purpose")]
        public virtual string Purpose
        {
            get { FillData(); return _purpose; }
            set { SetValue<string>("purpose", value); _purpose = value; }
        }
        private string _purpose;

		[CrmProperty(LogicalName = "query")]
        public virtual string Query
        {
            get { FillData(); return _query; }
            set { SetValue<string>("query", value); _query = value; }
        }
        private string _query;

		[CrmProperty(LogicalName = "source")]
        public virtual string Source
        {
            get { FillData(); return _source; }
            set { SetValue<string>("source", value); _source = value; }
        }
        private string _source;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "type")]
        public virtual bool? Type
        {
            get { FillData(); return _type; }
            set {  _type = value; }
        }
        private bool? _type;

		[CrmProperty(LogicalName = "typename")]
        public virtual string TypeName
        {
            get { FillData(); return _typeName; }
            set {  _typeName = value; }
        }
        private string _typeName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "mag_creditnote", PrimaryKey = "mag_creditnoteid")]
	public partial class MagCreditnote : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "mag_creditnote";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string MagAmount = "mag_amount";
			public const string MagCreditDate = "mag_creditdate";
			public const string MagCreditnoteId = "mag_creditnoteid";
			public const string MagCreditNoteNumber = "mag_creditnotenumber";
			public const string MagInvoiceId = "mag_invoiceid";
			public const string MagInvoiceIdName = "mag_invoiceidname";
			public const string MagReference = "mag_reference";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MagCreditnoteId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "mag_amount")]
        public virtual decimal? MagAmount
        {
            get { FillData(); return _magAmount; }
            set { SetMoney("mag_amount", value); _magAmount = value; }
        }
        private decimal? _magAmount;

		[CrmProperty(LogicalName = "mag_creditdate")]
        public virtual DateTime? MagCreditDate
        {
            get { FillData(); return _magCreditDate; }
            set { SetValue<DateTime?>("mag_creditdate", value); _magCreditDate = value; }
        }
        private DateTime? _magCreditDate;

		[CrmProperty(LogicalName = "mag_creditnoteid")]
        public virtual Guid MagCreditnoteId
        {
            get { FillData(); return _magCreditnoteId; }
            set {  _magCreditnoteId = value; }
        }
        private Guid _magCreditnoteId;

		[CrmProperty(LogicalName = "mag_creditnotenumber")]
        public virtual string MagCreditNoteNumber
        {
            get { FillData(); return _magCreditNoteNumber; }
            set { SetValue<string>("mag_creditnotenumber", value); _magCreditNoteNumber = value; }
        }
        private string _magCreditNoteNumber;

		[CrmProperty(LogicalName = "mag_invoiceid", IsLookup = true)]
        public virtual Guid? MagInvoiceId
        {
            get { FillData(); return _magInvoiceId; }
            set { SetLookup("mag_invoiceid", "invoice", value); _magInvoiceId = value; }
        }
        private Guid? _magInvoiceId;

		[CrmProperty(LogicalName = "mag_invoiceidname")]
        public virtual string MagInvoiceIdName
        {
            get { FillData(); return _magInvoiceIdName; }
            set {  _magInvoiceIdName = value; }
        }
        private string _magInvoiceIdName;

		[CrmProperty(LogicalName = "mag_reference")]
        public virtual string MagReference
        {
            get { FillData(); return _magReference; }
            set { SetValue<string>("mag_reference", value); _magReference = value; }
        }
        private string _magReference;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "mag_maintenance", PrimaryKey = "mag_maintenanceid")]
	public partial class MagMaintenance : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "mag_maintenance";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string MagEffectedServices = "mag_effectedservices";
			public const string MagEndTime = "mag_endtime";
			public const string MagMaintenanceDescription = "mag_maintenancedescription";
			public const string MagMaintenanceId = "mag_maintenanceid";
			public const string MagName = "mag_name";
			public const string MagStartTime = "mag_starttime";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MagMaintenanceId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "mag_effectedservices")]
        public virtual string MagEffectedServices
        {
            get { FillData(); return _magEffectedServices; }
            set { SetValue<string>("mag_effectedservices", value); _magEffectedServices = value; }
        }
        private string _magEffectedServices;

		[CrmProperty(LogicalName = "mag_endtime")]
        public virtual DateTime? MagEndTime
        {
            get { FillData(); return _magEndTime; }
            set { SetValue<DateTime?>("mag_endtime", value); _magEndTime = value; }
        }
        private DateTime? _magEndTime;

		[CrmProperty(LogicalName = "mag_maintenancedescription")]
        public virtual string MagMaintenanceDescription
        {
            get { FillData(); return _magMaintenanceDescription; }
            set { SetValue<string>("mag_maintenancedescription", value); _magMaintenanceDescription = value; }
        }
        private string _magMaintenanceDescription;

		[CrmProperty(LogicalName = "mag_maintenanceid")]
        public virtual Guid MagMaintenanceId
        {
            get { FillData(); return _magMaintenanceId; }
            set {  _magMaintenanceId = value; }
        }
        private Guid _magMaintenanceId;

		[CrmProperty(LogicalName = "mag_name")]
        public virtual string MagName
        {
            get { FillData(); return _magName; }
            set { SetValue<string>("mag_name", value); _magName = value; }
        }
        private string _magName;

		[CrmProperty(LogicalName = "mag_starttime")]
        public virtual DateTime? MagStartTime
        {
            get { FillData(); return _magStartTime; }
            set { SetValue<DateTime?>("mag_starttime", value); _magStartTime = value; }
        }
        private DateTime? _magStartTime;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "mag_payment", PrimaryKey = "mag_paymentid")]
	public partial class MagPayment : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "mag_payment";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string MagAmount = "mag_amount";
			public const string MagInvoiceId = "mag_invoiceid";
			public const string MagInvoiceIdName = "mag_invoiceidname";
			public const string MagPaymentDate = "mag_paymentdate";
			public const string MagPaymentId = "mag_paymentid";
			public const string MagReference = "mag_reference";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MagPaymentId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "mag_amount")]
        public virtual decimal? MagAmount
        {
            get { FillData(); return _magAmount; }
            set { SetMoney("mag_amount", value); _magAmount = value; }
        }
        private decimal? _magAmount;

		[CrmProperty(LogicalName = "mag_invoiceid", IsLookup = true)]
        public virtual Guid? MagInvoiceId
        {
            get { FillData(); return _magInvoiceId; }
            set { SetLookup("mag_invoiceid", "invoice", value); _magInvoiceId = value; }
        }
        private Guid? _magInvoiceId;

		[CrmProperty(LogicalName = "mag_invoiceidname")]
        public virtual string MagInvoiceIdName
        {
            get { FillData(); return _magInvoiceIdName; }
            set {  _magInvoiceIdName = value; }
        }
        private string _magInvoiceIdName;

		[CrmProperty(LogicalName = "mag_paymentdate")]
        public virtual DateTime? MagPaymentDate
        {
            get { FillData(); return _magPaymentDate; }
            set { SetValue<DateTime?>("mag_paymentdate", value); _magPaymentDate = value; }
        }
        private DateTime? _magPaymentDate;

		[CrmProperty(LogicalName = "mag_paymentid")]
        public virtual Guid MagPaymentId
        {
            get { FillData(); return _magPaymentId; }
            set {  _magPaymentId = value; }
        }
        private Guid _magPaymentId;

		[CrmProperty(LogicalName = "mag_reference")]
        public virtual string MagReference
        {
            get { FillData(); return _magReference; }
            set { SetValue<string>("mag_reference", value); _magReference = value; }
        }
        private string _magReference;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "mag_taxrule", PrimaryKey = "mag_taxruleid")]
	public partial class MagTaxrule : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "mag_taxrule";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string MagAmountFieldSchemaName = "mag_amountfieldschemaname";
			public const string MagApplytaxfieldschemaname = "mag_applytaxfieldschemaname";
			public const string MagCurrencyFieldSchemaName = "mag_currencyfieldschemaname";
			public const string MagCurrencyId = "mag_currencyid";
			public const string MagCurrencyIdName = "mag_currencyidname";
			public const string MagEntitySchemaName = "mag_entityschemaname";
			public const string MagIsDefault = "mag_isdefault";
			public const string MagIsdefaultName = "mag_isdefaultname";
			public const string MagIsEnabled = "mag_isenabled";
			public const string MagIsenabledName = "mag_isenabledname";
			public const string MagLicenseKey = "mag_licensekey";
			public const string MagName = "mag_name";
			public const string MagTax = "mag_tax";
			public const string MagTaxFieldSchemaName = "mag_taxfieldschemaname";
			public const string MagTaxruleId = "mag_taxruleid";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MagTaxruleId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "mag_amountfieldschemaname")]
        public virtual string MagAmountFieldSchemaName
        {
            get { FillData(); return _magAmountFieldSchemaName; }
            set { SetValue<string>("mag_amountfieldschemaname", value); _magAmountFieldSchemaName = value; }
        }
        private string _magAmountFieldSchemaName;

		[CrmProperty(LogicalName = "mag_applytaxfieldschemaname")]
        public virtual string MagApplytaxfieldschemaname
        {
            get { FillData(); return _magApplytaxfieldschemaname; }
            set { SetValue<string>("mag_applytaxfieldschemaname", value); _magApplytaxfieldschemaname = value; }
        }
        private string _magApplytaxfieldschemaname;

		[CrmProperty(LogicalName = "mag_currencyfieldschemaname")]
        public virtual string MagCurrencyFieldSchemaName
        {
            get { FillData(); return _magCurrencyFieldSchemaName; }
            set { SetValue<string>("mag_currencyfieldschemaname", value); _magCurrencyFieldSchemaName = value; }
        }
        private string _magCurrencyFieldSchemaName;

		[CrmProperty(LogicalName = "mag_currencyid", IsLookup = true)]
        public virtual Guid? MagCurrencyId
        {
            get { FillData(); return _magCurrencyId; }
            set { SetLookup("mag_currencyid", "transactioncurrency", value); _magCurrencyId = value; }
        }
        private Guid? _magCurrencyId;

		[CrmProperty(LogicalName = "mag_currencyidname")]
        public virtual string MagCurrencyIdName
        {
            get { FillData(); return _magCurrencyIdName; }
            set {  _magCurrencyIdName = value; }
        }
        private string _magCurrencyIdName;

		[CrmProperty(LogicalName = "mag_entityschemaname")]
        public virtual string MagEntitySchemaName
        {
            get { FillData(); return _magEntitySchemaName; }
            set { SetValue<string>("mag_entityschemaname", value); _magEntitySchemaName = value; }
        }
        private string _magEntitySchemaName;

		[CrmProperty(LogicalName = "mag_isdefault")]
        public virtual bool? MagIsDefault
        {
            get { FillData(); return _magIsDefault; }
            set { SetValue<bool?>("mag_isdefault", value); _magIsDefault = value; }
        }
        private bool? _magIsDefault;

		[CrmProperty(LogicalName = "mag_isdefaultname")]
        public virtual string MagIsdefaultName
        {
            get { FillData(); return _magIsdefaultName; }
            set {  _magIsdefaultName = value; }
        }
        private string _magIsdefaultName;

		[CrmProperty(LogicalName = "mag_isenabled")]
        public virtual bool? MagIsEnabled
        {
            get { FillData(); return _magIsEnabled; }
            set { SetValue<bool?>("mag_isenabled", value); _magIsEnabled = value; }
        }
        private bool? _magIsEnabled;

		[CrmProperty(LogicalName = "mag_isenabledname")]
        public virtual string MagIsenabledName
        {
            get { FillData(); return _magIsenabledName; }
            set {  _magIsenabledName = value; }
        }
        private string _magIsenabledName;

		[CrmProperty(LogicalName = "mag_licensekey")]
        public virtual string MagLicenseKey
        {
            get { FillData(); return _magLicenseKey; }
            set { SetValue<string>("mag_licensekey", value); _magLicenseKey = value; }
        }
        private string _magLicenseKey;

		[CrmProperty(LogicalName = "mag_name")]
        public virtual string MagName
        {
            get { FillData(); return _magName; }
            set { SetValue<string>("mag_name", value); _magName = value; }
        }
        private string _magName;

		[CrmProperty(LogicalName = "mag_tax")]
        public virtual decimal? MagTax
        {
            get { FillData(); return _magTax; }
            set { SetValue<decimal?>("mag_tax", value); _magTax = value; }
        }
        private decimal? _magTax;

		[CrmProperty(LogicalName = "mag_taxfieldschemaname")]
        public virtual string MagTaxFieldSchemaName
        {
            get { FillData(); return _magTaxFieldSchemaName; }
            set { SetValue<string>("mag_taxfieldschemaname", value); _magTaxFieldSchemaName = value; }
        }
        private string _magTaxFieldSchemaName;

		[CrmProperty(LogicalName = "mag_taxruleid")]
        public virtual Guid MagTaxruleId
        {
            get { FillData(); return _magTaxruleId; }
            set {  _magTaxruleId = value; }
        }
        private Guid _magTaxruleId;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "mag_xeroaccountcode", PrimaryKey = "mag_xeroaccountcodeid")]
	public partial class MagXeroaccountcode : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "mag_xeroaccountcode";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string MagAccountType = "mag_accounttype";
			public const string MagCode = "mag_code";
			public const string MagDescription = "mag_description";
			public const string MagName = "mag_name";
			public const string MagTaxType = "mag_taxtype";
			public const string MagXeroaccountcodeId = "mag_xeroaccountcodeid";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MagXeroaccountcodeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "mag_accounttype")]
        public virtual string MagAccountType
        {
            get { FillData(); return _magAccountType; }
            set { SetValue<string>("mag_accounttype", value); _magAccountType = value; }
        }
        private string _magAccountType;

		[CrmProperty(LogicalName = "mag_code")]
        public virtual string MagCode
        {
            get { FillData(); return _magCode; }
            set { SetValue<string>("mag_code", value); _magCode = value; }
        }
        private string _magCode;

		[CrmProperty(LogicalName = "mag_description")]
        public virtual string MagDescription
        {
            get { FillData(); return _magDescription; }
            set { SetValue<string>("mag_description", value); _magDescription = value; }
        }
        private string _magDescription;

		[CrmProperty(LogicalName = "mag_name")]
        public virtual string MagName
        {
            get { FillData(); return _magName; }
            set { SetValue<string>("mag_name", value); _magName = value; }
        }
        private string _magName;

		[CrmProperty(LogicalName = "mag_taxtype")]
        public virtual string MagTaxType
        {
            get { FillData(); return _magTaxType; }
            set { SetValue<string>("mag_taxtype", value); _magTaxType = value; }
        }
        private string _magTaxType;

		[CrmProperty(LogicalName = "mag_xeroaccountcodeid")]
        public virtual Guid MagXeroaccountcodeId
        {
            get { FillData(); return _magXeroaccountcodeId; }
            set {  _magXeroaccountcodeId = value; }
        }
        private Guid _magXeroaccountcodeId;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "mag_xeroconnector", PrimaryKey = "mag_xeroconnectorid")]
	public partial class MagXeroconnector : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "mag_xeroconnector";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string MagApikey = "mag_apikey";
			public const string MagDefaultaccountcodeid = "mag_defaultaccountcodeid";
			public const string MagDefaultaccountcodeidName = "mag_defaultaccountcodeidname";
			public const string MagDefaultConnector = "mag_defaultconnector";
			public const string MagDefaultconnectorName = "mag_defaultconnectorname";
			public const string MagEnabled = "mag_enabled";
			public const string MagEnabledName = "mag_enabledname";
			public const string MagLastSynchedOn = "mag_lastsynchedon";
			public const string MagLicenseKey = "mag_licensekey";
			public const string MagSyncNow = "mag_syncnow";
			public const string MagSyncnowName = "mag_syncnowname";
			public const string MagXeroconnectorId = "mag_xeroconnectorid";
			public const string MagXeroKey = "mag_xerokey";
			public const string MagXeroOrganizationName = "mag_xeroorganizationname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MagXeroconnectorId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "mag_apikey")]
        public virtual string MagApikey
        {
            get { FillData(); return _magApikey; }
            set { SetValue<string>("mag_apikey", value); _magApikey = value; }
        }
        private string _magApikey;

		[CrmProperty(LogicalName = "mag_defaultaccountcodeid", IsLookup = true)]
        public virtual Guid? MagDefaultaccountcodeid
        {
            get { FillData(); return _magDefaultaccountcodeid; }
            set { SetLookup("mag_defaultaccountcodeid", "mag_xeroaccountcode", value); _magDefaultaccountcodeid = value; }
        }
        private Guid? _magDefaultaccountcodeid;

		[CrmProperty(LogicalName = "mag_defaultaccountcodeidname")]
        public virtual string MagDefaultaccountcodeidName
        {
            get { FillData(); return _magDefaultaccountcodeidName; }
            set {  _magDefaultaccountcodeidName = value; }
        }
        private string _magDefaultaccountcodeidName;

		[CrmProperty(LogicalName = "mag_defaultconnector")]
        public virtual bool? MagDefaultConnector
        {
            get { FillData(); return _magDefaultConnector; }
            set { SetValue<bool?>("mag_defaultconnector", value); _magDefaultConnector = value; }
        }
        private bool? _magDefaultConnector;

		[CrmProperty(LogicalName = "mag_defaultconnectorname")]
        public virtual string MagDefaultconnectorName
        {
            get { FillData(); return _magDefaultconnectorName; }
            set {  _magDefaultconnectorName = value; }
        }
        private string _magDefaultconnectorName;

		[CrmProperty(LogicalName = "mag_enabled")]
        public virtual bool? MagEnabled
        {
            get { FillData(); return _magEnabled; }
            set { SetValue<bool?>("mag_enabled", value); _magEnabled = value; }
        }
        private bool? _magEnabled;

		[CrmProperty(LogicalName = "mag_enabledname")]
        public virtual string MagEnabledName
        {
            get { FillData(); return _magEnabledName; }
            set {  _magEnabledName = value; }
        }
        private string _magEnabledName;

		[CrmProperty(LogicalName = "mag_lastsynchedon")]
        public virtual DateTime? MagLastSynchedOn
        {
            get { FillData(); return _magLastSynchedOn; }
            set { SetValue<DateTime?>("mag_lastsynchedon", value); _magLastSynchedOn = value; }
        }
        private DateTime? _magLastSynchedOn;

		[CrmProperty(LogicalName = "mag_licensekey")]
        public virtual string MagLicenseKey
        {
            get { FillData(); return _magLicenseKey; }
            set { SetValue<string>("mag_licensekey", value); _magLicenseKey = value; }
        }
        private string _magLicenseKey;

		[CrmProperty(LogicalName = "mag_syncnow")]
        public virtual bool? MagSyncNow
        {
            get { FillData(); return _magSyncNow; }
            set { SetValue<bool?>("mag_syncnow", value); _magSyncNow = value; }
        }
        private bool? _magSyncNow;

		[CrmProperty(LogicalName = "mag_syncnowname")]
        public virtual string MagSyncnowName
        {
            get { FillData(); return _magSyncnowName; }
            set {  _magSyncnowName = value; }
        }
        private string _magSyncnowName;

		[CrmProperty(LogicalName = "mag_xeroconnectorid")]
        public virtual Guid MagXeroconnectorId
        {
            get { FillData(); return _magXeroconnectorId; }
            set {  _magXeroconnectorId = value; }
        }
        private Guid _magXeroconnectorId;

		[CrmProperty(LogicalName = "mag_xerokey")]
        public virtual string MagXeroKey
        {
            get { FillData(); return _magXeroKey; }
            set { SetValue<string>("mag_xerokey", value); _magXeroKey = value; }
        }
        private string _magXeroKey;

		[CrmProperty(LogicalName = "mag_xeroorganizationname")]
        public virtual string MagXeroOrganizationName
        {
            get { FillData(); return _magXeroOrganizationName; }
            set { SetValue<string>("mag_xeroorganizationname", value); _magXeroOrganizationName = value; }
        }
        private string _magXeroOrganizationName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventgroupallocation", PrimaryKey = "msa_eventgroupallocationid")]
	public partial class MSAEventgroupallocation : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventgroupallocation";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAAttendeeQuota = "msa_attendeequota";
			public const string MSAEventgroupallocationId = "msa_eventgroupallocationid";
			public const string MsaGroupallocationeventid = "msa_groupallocationeventid";
			public const string MsaGroupallocationeventidName = "msa_groupallocationeventidname";
			public const string MSAGroupPrice = "msa_groupprice";
			public const string MSAName = "msa_name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventgroupallocationId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_attendeequota")]
        public virtual int? MSAAttendeeQuota
        {
            get { FillData(); return _mSAAttendeeQuota; }
            set { SetValue<int?>("msa_attendeequota", value); _mSAAttendeeQuota = value; }
        }
        private int? _mSAAttendeeQuota;

		[CrmProperty(LogicalName = "msa_eventgroupallocationid")]
        public virtual Guid MSAEventgroupallocationId
        {
            get { FillData(); return _mSAEventgroupallocationId; }
            set {  _mSAEventgroupallocationId = value; }
        }
        private Guid _mSAEventgroupallocationId;

		[CrmProperty(LogicalName = "msa_groupallocationeventid", IsLookup = true)]
        public virtual Guid? MsaGroupallocationeventid
        {
            get { FillData(); return _msaGroupallocationeventid; }
            set { SetLookup("msa_groupallocationeventid", "campaign", value); _msaGroupallocationeventid = value; }
        }
        private Guid? _msaGroupallocationeventid;

		[CrmProperty(LogicalName = "msa_groupallocationeventidname")]
        public virtual string MsaGroupallocationeventidName
        {
            get { FillData(); return _msaGroupallocationeventidName; }
            set {  _msaGroupallocationeventidName = value; }
        }
        private string _msaGroupallocationeventidName;

		[CrmProperty(LogicalName = "msa_groupprice")]
        public virtual decimal? MSAGroupPrice
        {
            get { FillData(); return _mSAGroupPrice; }
            set { SetMoney("msa_groupprice", value); _mSAGroupPrice = value; }
        }
        private decimal? _mSAGroupPrice;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventpackage", PrimaryKey = "msa_eventpackageid")]
	public partial class MSAEventpackage : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventpackage";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaEventcampaignpackageid = "msa_eventcampaignpackageid";
			public const string MsaEventcampaignpackageidName = "msa_eventcampaignpackageidname";
			public const string MSAEventPackageCode = "msa_eventpackagecode";
			public const string MSAEventpackageId = "msa_eventpackageid";
			public const string MSAMaximumGroupSize = "msa_maximumgroupsize";
			public const string MSAName = "msa_name";
			public const string MSAPackageCost = "msa_packagecost";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventpackageId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_eventcampaignpackageid", IsLookup = true)]
        public virtual Guid? MsaEventcampaignpackageid
        {
            get { FillData(); return _msaEventcampaignpackageid; }
            set { SetLookup("msa_eventcampaignpackageid", "campaign", value); _msaEventcampaignpackageid = value; }
        }
        private Guid? _msaEventcampaignpackageid;

		[CrmProperty(LogicalName = "msa_eventcampaignpackageidname")]
        public virtual string MsaEventcampaignpackageidName
        {
            get { FillData(); return _msaEventcampaignpackageidName; }
            set {  _msaEventcampaignpackageidName = value; }
        }
        private string _msaEventcampaignpackageidName;

		[CrmProperty(LogicalName = "msa_eventpackagecode")]
        public virtual string MSAEventPackageCode
        {
            get { FillData(); return _mSAEventPackageCode; }
            set { SetValue<string>("msa_eventpackagecode", value); _mSAEventPackageCode = value; }
        }
        private string _mSAEventPackageCode;

		[CrmProperty(LogicalName = "msa_eventpackageid")]
        public virtual Guid MSAEventpackageId
        {
            get { FillData(); return _mSAEventpackageId; }
            set {  _mSAEventpackageId = value; }
        }
        private Guid _mSAEventpackageId;

		[CrmProperty(LogicalName = "msa_maximumgroupsize")]
        public virtual int? MSAMaximumGroupSize
        {
            get { FillData(); return _mSAMaximumGroupSize; }
            set { SetValue<int?>("msa_maximumgroupsize", value); _mSAMaximumGroupSize = value; }
        }
        private int? _mSAMaximumGroupSize;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "msa_packagecost")]
        public virtual decimal? MSAPackageCost
        {
            get { FillData(); return _mSAPackageCost; }
            set { SetMoney("msa_packagecost", value); _mSAPackageCost = value; }
        }
        private decimal? _mSAPackageCost;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventpackageactivity", PrimaryKey = "msa_eventpackageactivityid")]
	public partial class MSAEventpackageactivity : CrmEntity
	{
		public class Enums
		{
			public enum MSAActivityType 
			{
				[CrmPicklist(DisplayName = "Team-Building", Value = 1)]TeamBuilding = 1,
				[CrmPicklist(DisplayName = "Outdoor Recreation", Value = 2)]OutdoorRecreation = 2,
				[CrmPicklist(DisplayName = "Accommodation", Value = 3)]Accommodation = 3,
				[CrmPicklist(DisplayName = "Dining", Value = 4)]Dining = 4,
				[CrmPicklist(DisplayName = "Leisure/Entertainment", Value = 5)]LeisureEntertainment = 5,
				[CrmPicklist(DisplayName = "Sports", Value = 6)]Sports = 6,
				[CrmPicklist(DisplayName = "Arts/Cultural", Value = 7)]ArtsCultural = 7,
				[CrmPicklist(DisplayName = "Other", Value = 8)]Other = 8,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventpackageactivity";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAActivityCost = "msa_activitycost";
			public const string MSAActivityType = "msa_activitytype";
			public const string MsaActivitytypeName = "msa_activitytypename";
			public const string MSADescription = "msa_description";
			public const string MSADuration = "msa_duration";
			public const string MSAEventpackageactivityId = "msa_eventpackageactivityid";
			public const string MsaEventpackageEventactivityid = "msa_eventpackage_eventactivityid";
			public const string MsaEventpackageEventactivityidName = "msa_eventpackage_eventactivityidname";
			public const string MSAGroupSize = "msa_groupsize";
			public const string MSAName = "msa_name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventpackageactivityId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_activitycost")]
        public virtual decimal? MSAActivityCost
        {
            get { FillData(); return _mSAActivityCost; }
            set { SetMoney("msa_activitycost", value); _mSAActivityCost = value; }
        }
        private decimal? _mSAActivityCost;

		[CrmProperty(LogicalName = "msa_activitytype")]
        public virtual Enums.MSAActivityType? MSAActivityType
        {
            get { FillData(); return _mSAActivityType; }
            set { SetPicklist("msa_activitytype", (int?)value); _mSAActivityType = value; }
        }
        private Enums.MSAActivityType? _mSAActivityType;

		[CrmProperty(LogicalName = "msa_activitytypename")]
        public virtual string MsaActivitytypeName
        {
            get { FillData(); return _msaActivitytypeName; }
            set {  _msaActivitytypeName = value; }
        }
        private string _msaActivitytypeName;

		[CrmProperty(LogicalName = "msa_description")]
        public virtual string MSADescription
        {
            get { FillData(); return _mSADescription; }
            set { SetValue<string>("msa_description", value); _mSADescription = value; }
        }
        private string _mSADescription;

		[CrmProperty(LogicalName = "msa_duration")]
        public virtual int? MSADuration
        {
            get { FillData(); return _mSADuration; }
            set { SetValue<int?>("msa_duration", value); _mSADuration = value; }
        }
        private int? _mSADuration;

		[CrmProperty(LogicalName = "msa_eventpackageactivityid")]
        public virtual Guid MSAEventpackageactivityId
        {
            get { FillData(); return _mSAEventpackageactivityId; }
            set {  _mSAEventpackageactivityId = value; }
        }
        private Guid _mSAEventpackageactivityId;

		[CrmProperty(LogicalName = "msa_eventpackage_eventactivityid", IsLookup = true)]
        public virtual Guid? MsaEventpackageEventactivityid
        {
            get { FillData(); return _msaEventpackageEventactivityid; }
            set { SetLookup("msa_eventpackage_eventactivityid", "msa_eventpackage", value); _msaEventpackageEventactivityid = value; }
        }
        private Guid? _msaEventpackageEventactivityid;

		[CrmProperty(LogicalName = "msa_eventpackage_eventactivityidname")]
        public virtual string MsaEventpackageEventactivityidName
        {
            get { FillData(); return _msaEventpackageEventactivityidName; }
            set {  _msaEventpackageEventactivityidName = value; }
        }
        private string _msaEventpackageEventactivityidName;

		[CrmProperty(LogicalName = "msa_groupsize")]
        public virtual int? MSAGroupSize
        {
            get { FillData(); return _mSAGroupSize; }
            set { SetValue<int?>("msa_groupsize", value); _mSAGroupSize = value; }
        }
        private int? _mSAGroupSize;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventroom", PrimaryKey = "msa_eventroomid")]
	public partial class MSAEventroom : CrmEntity
	{
		public class Enums
		{
			public enum MSARoomType 
			{
				[CrmPicklist(DisplayName = "Conference", Value = 1)]Conference = 1,
				[CrmPicklist(DisplayName = "Boardroom", Value = 2)]Boardroom = 2,
				[CrmPicklist(DisplayName = "Theater", Value = 3)]Theater = 3,
				[CrmPicklist(DisplayName = "Open Floorspace", Value = 4)]OpenFloorspace = 4,
				[CrmPicklist(DisplayName = "Training", Value = 5)]Training = 5,
			}		
			public enum MSASeatingType 
			{
				[CrmPicklist(DisplayName = "Fixed", Value = 1)]Fixed = 1,
				[CrmPicklist(DisplayName = "Flexible", Value = 2)]Flexible = 2,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventroom";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAAVSupport = "msa_avsupport";
			public const string MsaAvsupportName = "msa_avsupportname";
			public const string MSADisabledAccess = "msa_disabledaccess";
			public const string MsaDisabledaccessName = "msa_disabledaccessname";
			public const string MsaEventRoomid = "msa_event_roomid";
			public const string MSAEventroomId = "msa_eventroomid";
			public const string MsaEventRoomidName = "msa_event_roomidname";
			public const string MSAInternetConnection = "msa_internetconnection";
			public const string MsaInternetconnectionName = "msa_internetconnectionname";
			public const string MSAName = "msa_name";
			public const string MSARoomCapacity = "msa_roomcapacity";
			public const string MSARoomType = "msa_roomtype";
			public const string MsaRoomtypeName = "msa_roomtypename";
			public const string MSASeatingType = "msa_seatingtype";
			public const string MsaSeatingtypeName = "msa_seatingtypename";
			public const string MSAVideoConferencing = "msa_videoconferencing";
			public const string MsaVideoconferencingName = "msa_videoconferencingname";
			public const string MSAWhiteboard = "msa_whiteboard";
			public const string MsaWhiteboardName = "msa_whiteboardname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventroomId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_avsupport")]
        public virtual bool? MSAAVSupport
        {
            get { FillData(); return _mSAAVSupport; }
            set { SetValue<bool?>("msa_avsupport", value); _mSAAVSupport = value; }
        }
        private bool? _mSAAVSupport;

		[CrmProperty(LogicalName = "msa_avsupportname")]
        public virtual string MsaAvsupportName
        {
            get { FillData(); return _msaAvsupportName; }
            set {  _msaAvsupportName = value; }
        }
        private string _msaAvsupportName;

		[CrmProperty(LogicalName = "msa_disabledaccess")]
        public virtual bool? MSADisabledAccess
        {
            get { FillData(); return _mSADisabledAccess; }
            set { SetValue<bool?>("msa_disabledaccess", value); _mSADisabledAccess = value; }
        }
        private bool? _mSADisabledAccess;

		[CrmProperty(LogicalName = "msa_disabledaccessname")]
        public virtual string MsaDisabledaccessName
        {
            get { FillData(); return _msaDisabledaccessName; }
            set {  _msaDisabledaccessName = value; }
        }
        private string _msaDisabledaccessName;

		[CrmProperty(LogicalName = "msa_event_roomid", IsLookup = true)]
        public virtual Guid? MsaEventRoomid
        {
            get { FillData(); return _msaEventRoomid; }
            set { SetLookup("msa_event_roomid", "msa_eventvenue", value); _msaEventRoomid = value; }
        }
        private Guid? _msaEventRoomid;

		[CrmProperty(LogicalName = "msa_eventroomid")]
        public virtual Guid MSAEventroomId
        {
            get { FillData(); return _mSAEventroomId; }
            set {  _mSAEventroomId = value; }
        }
        private Guid _mSAEventroomId;

		[CrmProperty(LogicalName = "msa_event_roomidname")]
        public virtual string MsaEventRoomidName
        {
            get { FillData(); return _msaEventRoomidName; }
            set {  _msaEventRoomidName = value; }
        }
        private string _msaEventRoomidName;

		[CrmProperty(LogicalName = "msa_internetconnection")]
        public virtual bool? MSAInternetConnection
        {
            get { FillData(); return _mSAInternetConnection; }
            set { SetValue<bool?>("msa_internetconnection", value); _mSAInternetConnection = value; }
        }
        private bool? _mSAInternetConnection;

		[CrmProperty(LogicalName = "msa_internetconnectionname")]
        public virtual string MsaInternetconnectionName
        {
            get { FillData(); return _msaInternetconnectionName; }
            set {  _msaInternetconnectionName = value; }
        }
        private string _msaInternetconnectionName;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "msa_roomcapacity")]
        public virtual int? MSARoomCapacity
        {
            get { FillData(); return _mSARoomCapacity; }
            set { SetValue<int?>("msa_roomcapacity", value); _mSARoomCapacity = value; }
        }
        private int? _mSARoomCapacity;

		[CrmProperty(LogicalName = "msa_roomtype")]
        public virtual Enums.MSARoomType? MSARoomType
        {
            get { FillData(); return _mSARoomType; }
            set { SetPicklist("msa_roomtype", (int?)value); _mSARoomType = value; }
        }
        private Enums.MSARoomType? _mSARoomType;

		[CrmProperty(LogicalName = "msa_roomtypename")]
        public virtual string MsaRoomtypeName
        {
            get { FillData(); return _msaRoomtypeName; }
            set {  _msaRoomtypeName = value; }
        }
        private string _msaRoomtypeName;

		[CrmProperty(LogicalName = "msa_seatingtype")]
        public virtual Enums.MSASeatingType? MSASeatingType
        {
            get { FillData(); return _mSASeatingType; }
            set { SetPicklist("msa_seatingtype", (int?)value); _mSASeatingType = value; }
        }
        private Enums.MSASeatingType? _mSASeatingType;

		[CrmProperty(LogicalName = "msa_seatingtypename")]
        public virtual string MsaSeatingtypeName
        {
            get { FillData(); return _msaSeatingtypeName; }
            set {  _msaSeatingtypeName = value; }
        }
        private string _msaSeatingtypeName;

		[CrmProperty(LogicalName = "msa_videoconferencing")]
        public virtual bool? MSAVideoConferencing
        {
            get { FillData(); return _mSAVideoConferencing; }
            set { SetValue<bool?>("msa_videoconferencing", value); _mSAVideoConferencing = value; }
        }
        private bool? _mSAVideoConferencing;

		[CrmProperty(LogicalName = "msa_videoconferencingname")]
        public virtual string MsaVideoconferencingName
        {
            get { FillData(); return _msaVideoconferencingName; }
            set {  _msaVideoconferencingName = value; }
        }
        private string _msaVideoconferencingName;

		[CrmProperty(LogicalName = "msa_whiteboard")]
        public virtual bool? MSAWhiteboard
        {
            get { FillData(); return _mSAWhiteboard; }
            set { SetValue<bool?>("msa_whiteboard", value); _mSAWhiteboard = value; }
        }
        private bool? _mSAWhiteboard;

		[CrmProperty(LogicalName = "msa_whiteboardname")]
        public virtual string MsaWhiteboardName
        {
            get { FillData(); return _msaWhiteboardName; }
            set {  _msaWhiteboardName = value; }
        }
        private string _msaWhiteboardName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventsession", PrimaryKey = "msa_eventsessionid")]
	public partial class MSAEventsession : CrmEntity
	{
		public class Enums
		{
			public enum MSAAudienceType 
			{
				[CrmPicklist(DisplayName = "Keynote/General", Value = 1)]KeynoteGeneral = 1,
				[CrmPicklist(DisplayName = "Introductory", Value = 2)]Introductory = 2,
				[CrmPicklist(DisplayName = "Intermediate", Value = 3)]Intermediate = 3,
				[CrmPicklist(DisplayName = "Advanced", Value = 4)]Advanced = 4,
			}		
			public enum MSASessionType 
			{
				[CrmPicklist(DisplayName = "Keynote", Value = 1)]Keynote = 1,
				[CrmPicklist(DisplayName = "General", Value = 5)]General = 5,
				[CrmPicklist(DisplayName = "Interactive", Value = 6)]Interactive = 6,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventsession";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAAudienceType = "msa_audiencetype";
			public const string MsaAudiencetypeName = "msa_audiencetypename";
			public const string MSAAVSupport = "msa_avsupport";
			public const string MsaAvsupportName = "msa_avsupportname";
			public const string MSADetailedDescription = "msa_detaileddescription";
			public const string MSADurationmins = "msa_durationmins";
			public const string MSAEventsessionId = "msa_eventsessionid";
			public const string MSAFlipChart = "msa_flipchart";
			public const string MsaFlipchartName = "msa_flipchartname";
			public const string MSAInternetConnection = "msa_internetconnection";
			public const string MsaInternetconnectionName = "msa_internetconnectionname";
			public const string MSAKeywords = "msa_keywords";
			public const string MSAName = "msa_name";
			public const string MSASessionCode = "msa_sessioncode";
			public const string MSASessionObjectives = "msa_sessionobjectives";
			public const string MSASessionSummary = "msa_sessionsummary";
			public const string MSASessionType = "msa_sessiontype";
			public const string MsaSessiontypeName = "msa_sessiontypename";
			public const string MSAVideoConferencing = "msa_videoconferencing";
			public const string MsaVideoconferencingName = "msa_videoconferencingname";
			public const string MSAWhiteboard = "msa_whiteboard";
			public const string MsaWhiteboardName = "msa_whiteboardname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventsessionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_audiencetype")]
        public virtual Enums.MSAAudienceType? MSAAudienceType
        {
            get { FillData(); return _mSAAudienceType; }
            set { SetPicklist("msa_audiencetype", (int?)value); _mSAAudienceType = value; }
        }
        private Enums.MSAAudienceType? _mSAAudienceType;

		[CrmProperty(LogicalName = "msa_audiencetypename")]
        public virtual string MsaAudiencetypeName
        {
            get { FillData(); return _msaAudiencetypeName; }
            set {  _msaAudiencetypeName = value; }
        }
        private string _msaAudiencetypeName;

		[CrmProperty(LogicalName = "msa_avsupport")]
        public virtual bool? MSAAVSupport
        {
            get { FillData(); return _mSAAVSupport; }
            set { SetValue<bool?>("msa_avsupport", value); _mSAAVSupport = value; }
        }
        private bool? _mSAAVSupport;

		[CrmProperty(LogicalName = "msa_avsupportname")]
        public virtual string MsaAvsupportName
        {
            get { FillData(); return _msaAvsupportName; }
            set {  _msaAvsupportName = value; }
        }
        private string _msaAvsupportName;

		[CrmProperty(LogicalName = "msa_detaileddescription")]
        public virtual string MSADetailedDescription
        {
            get { FillData(); return _mSADetailedDescription; }
            set { SetValue<string>("msa_detaileddescription", value); _mSADetailedDescription = value; }
        }
        private string _mSADetailedDescription;

		[CrmProperty(LogicalName = "msa_durationmins")]
        public virtual int? MSADurationmins
        {
            get { FillData(); return _mSADurationmins; }
            set { SetValue<int?>("msa_durationmins", value); _mSADurationmins = value; }
        }
        private int? _mSADurationmins;

		[CrmProperty(LogicalName = "msa_eventsessionid")]
        public virtual Guid MSAEventsessionId
        {
            get { FillData(); return _mSAEventsessionId; }
            set {  _mSAEventsessionId = value; }
        }
        private Guid _mSAEventsessionId;

		[CrmProperty(LogicalName = "msa_flipchart")]
        public virtual bool? MSAFlipChart
        {
            get { FillData(); return _mSAFlipChart; }
            set { SetValue<bool?>("msa_flipchart", value); _mSAFlipChart = value; }
        }
        private bool? _mSAFlipChart;

		[CrmProperty(LogicalName = "msa_flipchartname")]
        public virtual string MsaFlipchartName
        {
            get { FillData(); return _msaFlipchartName; }
            set {  _msaFlipchartName = value; }
        }
        private string _msaFlipchartName;

		[CrmProperty(LogicalName = "msa_internetconnection")]
        public virtual bool? MSAInternetConnection
        {
            get { FillData(); return _mSAInternetConnection; }
            set { SetValue<bool?>("msa_internetconnection", value); _mSAInternetConnection = value; }
        }
        private bool? _mSAInternetConnection;

		[CrmProperty(LogicalName = "msa_internetconnectionname")]
        public virtual string MsaInternetconnectionName
        {
            get { FillData(); return _msaInternetconnectionName; }
            set {  _msaInternetconnectionName = value; }
        }
        private string _msaInternetconnectionName;

		[CrmProperty(LogicalName = "msa_keywords")]
        public virtual string MSAKeywords
        {
            get { FillData(); return _mSAKeywords; }
            set { SetValue<string>("msa_keywords", value); _mSAKeywords = value; }
        }
        private string _mSAKeywords;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "msa_sessioncode")]
        public virtual string MSASessionCode
        {
            get { FillData(); return _mSASessionCode; }
            set { SetValue<string>("msa_sessioncode", value); _mSASessionCode = value; }
        }
        private string _mSASessionCode;

		[CrmProperty(LogicalName = "msa_sessionobjectives")]
        public virtual string MSASessionObjectives
        {
            get { FillData(); return _mSASessionObjectives; }
            set { SetValue<string>("msa_sessionobjectives", value); _mSASessionObjectives = value; }
        }
        private string _mSASessionObjectives;

		[CrmProperty(LogicalName = "msa_sessionsummary")]
        public virtual string MSASessionSummary
        {
            get { FillData(); return _mSASessionSummary; }
            set { SetValue<string>("msa_sessionsummary", value); _mSASessionSummary = value; }
        }
        private string _mSASessionSummary;

		[CrmProperty(LogicalName = "msa_sessiontype")]
        public virtual Enums.MSASessionType? MSASessionType
        {
            get { FillData(); return _mSASessionType; }
            set { SetPicklist("msa_sessiontype", (int?)value); _mSASessionType = value; }
        }
        private Enums.MSASessionType? _mSASessionType;

		[CrmProperty(LogicalName = "msa_sessiontypename")]
        public virtual string MsaSessiontypeName
        {
            get { FillData(); return _msaSessiontypeName; }
            set {  _msaSessiontypeName = value; }
        }
        private string _msaSessiontypeName;

		[CrmProperty(LogicalName = "msa_videoconferencing")]
        public virtual bool? MSAVideoConferencing
        {
            get { FillData(); return _mSAVideoConferencing; }
            set { SetValue<bool?>("msa_videoconferencing", value); _mSAVideoConferencing = value; }
        }
        private bool? _mSAVideoConferencing;

		[CrmProperty(LogicalName = "msa_videoconferencingname")]
        public virtual string MsaVideoconferencingName
        {
            get { FillData(); return _msaVideoconferencingName; }
            set {  _msaVideoconferencingName = value; }
        }
        private string _msaVideoconferencingName;

		[CrmProperty(LogicalName = "msa_whiteboard")]
        public virtual bool? MSAWhiteboard
        {
            get { FillData(); return _mSAWhiteboard; }
            set { SetValue<bool?>("msa_whiteboard", value); _mSAWhiteboard = value; }
        }
        private bool? _mSAWhiteboard;

		[CrmProperty(LogicalName = "msa_whiteboardname")]
        public virtual string MsaWhiteboardName
        {
            get { FillData(); return _msaWhiteboardName; }
            set {  _msaWhiteboardName = value; }
        }
        private string _msaWhiteboardName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventsession_speakers_internal", PrimaryKey = "msa_eventsession_speakers_internalid")]
	public partial class MsaEventsessionSpeakersInternal : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventsession_speakers_internal";
			
			public const string MsaEventsessionid = "msa_eventsessionid";
			public const string MsaEventsessionSpeakersInternalId = "msa_eventsession_speakers_internalid";
			public const string Systemuserid = "systemuserid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MsaEventsessionSpeakersInternalId; }
		}

		[CrmProperty(LogicalName = "msa_eventsessionid")]
        public virtual Guid? MsaEventsessionid
        {
            get { FillData(); return _msaEventsessionid; }
            set {  _msaEventsessionid = value; }
        }
        private Guid? _msaEventsessionid;

		[CrmProperty(LogicalName = "msa_eventsession_speakers_internalid")]
        public virtual Guid MsaEventsessionSpeakersInternalId
        {
            get { FillData(); return _msaEventsessionSpeakersInternalId; }
            set {  _msaEventsessionSpeakersInternalId = value; }
        }
        private Guid _msaEventsessionSpeakersInternalId;

		[CrmProperty(LogicalName = "systemuserid")]
        public virtual Guid? Systemuserid
        {
            get { FillData(); return _systemuserid; }
            set {  _systemuserid = value; }
        }
        private Guid? _systemuserid;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventsessiontime", PrimaryKey = "msa_eventsessiontimeid")]
	public partial class MSAEventsessiontime : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventsessiontime";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAEventsessiontimeId = "msa_eventsessiontimeid";
			public const string MsaEventvenueid = "msa_eventvenueid";
			public const string MsaEventvenueidName = "msa_eventvenueidname";
			public const string MSAName = "msa_name";
			public const string MSASessionEndTime = "msa_sessionendtime";
			public const string MsaSessionid = "msa_sessionid";
			public const string MsaSessionidName = "msa_sessionidname";
			public const string MsaSessionroomid = "msa_sessionroomid";
			public const string MsaSessionroomidName = "msa_sessionroomidname";
			public const string MSASessionStartTime = "msa_sessionstarttime";
			public const string MsaSessionTimeid = "msa_session_timeid";
			public const string MsaSessionTimeidName = "msa_session_timeidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventsessiontimeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_eventsessiontimeid")]
        public virtual Guid MSAEventsessiontimeId
        {
            get { FillData(); return _mSAEventsessiontimeId; }
            set {  _mSAEventsessiontimeId = value; }
        }
        private Guid _mSAEventsessiontimeId;

		[CrmProperty(LogicalName = "msa_eventvenueid", IsLookup = true)]
        public virtual Guid? MsaEventvenueid
        {
            get { FillData(); return _msaEventvenueid; }
            set { SetLookup("msa_eventvenueid", "msa_eventvenue", value); _msaEventvenueid = value; }
        }
        private Guid? _msaEventvenueid;

		[CrmProperty(LogicalName = "msa_eventvenueidname")]
        public virtual string MsaEventvenueidName
        {
            get { FillData(); return _msaEventvenueidName; }
            set {  _msaEventvenueidName = value; }
        }
        private string _msaEventvenueidName;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "msa_sessionendtime")]
        public virtual DateTime? MSASessionEndTime
        {
            get { FillData(); return _mSASessionEndTime; }
            set { SetValue<DateTime?>("msa_sessionendtime", value); _mSASessionEndTime = value; }
        }
        private DateTime? _mSASessionEndTime;

		[CrmProperty(LogicalName = "msa_sessionid", IsLookup = true)]
        public virtual Guid? MsaSessionid
        {
            get { FillData(); return _msaSessionid; }
            set { SetLookup("msa_sessionid", "msa_eventsession", value); _msaSessionid = value; }
        }
        private Guid? _msaSessionid;

		[CrmProperty(LogicalName = "msa_sessionidname")]
        public virtual string MsaSessionidName
        {
            get { FillData(); return _msaSessionidName; }
            set {  _msaSessionidName = value; }
        }
        private string _msaSessionidName;

		[CrmProperty(LogicalName = "msa_sessionroomid", IsLookup = true)]
        public virtual Guid? MsaSessionroomid
        {
            get { FillData(); return _msaSessionroomid; }
            set { SetLookup("msa_sessionroomid", "msa_eventroom", value); _msaSessionroomid = value; }
        }
        private Guid? _msaSessionroomid;

		[CrmProperty(LogicalName = "msa_sessionroomidname")]
        public virtual string MsaSessionroomidName
        {
            get { FillData(); return _msaSessionroomidName; }
            set {  _msaSessionroomidName = value; }
        }
        private string _msaSessionroomidName;

		[CrmProperty(LogicalName = "msa_sessionstarttime")]
        public virtual DateTime? MSASessionStartTime
        {
            get { FillData(); return _mSASessionStartTime; }
            set { SetValue<DateTime?>("msa_sessionstarttime", value); _mSASessionStartTime = value; }
        }
        private DateTime? _mSASessionStartTime;

		[CrmProperty(LogicalName = "msa_session_timeid", IsLookup = true)]
        public virtual Guid? MsaSessionTimeid
        {
            get { FillData(); return _msaSessionTimeid; }
            set { SetLookup("msa_session_timeid", "campaign", value); _msaSessionTimeid = value; }
        }
        private Guid? _msaSessionTimeid;

		[CrmProperty(LogicalName = "msa_session_timeidname")]
        public virtual string MsaSessionTimeidName
        {
            get { FillData(); return _msaSessionTimeidName; }
            set {  _msaSessionTimeidName = value; }
        }
        private string _msaSessionTimeidName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventsessiontimes_speakers_internal", PrimaryKey = "msa_eventsessiontimes_speakers_internalid")]
	public partial class MsaEventsessiontimesSpeakersInternal : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventsessiontimes_speakers_internal";
			
			public const string MsaEventsessiontimeid = "msa_eventsessiontimeid";
			public const string MsaEventsessiontimesSpeakersInternalId = "msa_eventsessiontimes_speakers_internalid";
			public const string Systemuserid = "systemuserid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MsaEventsessiontimesSpeakersInternalId; }
		}

		[CrmProperty(LogicalName = "msa_eventsessiontimeid")]
        public virtual Guid? MsaEventsessiontimeid
        {
            get { FillData(); return _msaEventsessiontimeid; }
            set {  _msaEventsessiontimeid = value; }
        }
        private Guid? _msaEventsessiontimeid;

		[CrmProperty(LogicalName = "msa_eventsessiontimes_speakers_internalid")]
        public virtual Guid MsaEventsessiontimesSpeakersInternalId
        {
            get { FillData(); return _msaEventsessiontimesSpeakersInternalId; }
            set {  _msaEventsessiontimesSpeakersInternalId = value; }
        }
        private Guid _msaEventsessiontimesSpeakersInternalId;

		[CrmProperty(LogicalName = "systemuserid")]
        public virtual Guid? Systemuserid
        {
            get { FillData(); return _systemuserid; }
            set {  _systemuserid = value; }
        }
        private Guid? _systemuserid;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventsponsor", PrimaryKey = "msa_eventsponsorid")]
	public partial class MSAEventsponsor : CrmEntity
	{
		public class Enums
		{
			public enum MSASponsorshipCategory 
			{
				[CrmPicklist(DisplayName = "Gold", Value = 1)]Gold = 1,
				[CrmPicklist(DisplayName = "Silver", Value = 2)]Silver = 2,
				[CrmPicklist(DisplayName = "Bronze", Value = 3)]Bronze = 3,
			}		
			public enum MSASponsorshipType 
			{
				[CrmPicklist(DisplayName = "Monetary", Value = 1)]Monetary = 1,
				[CrmPicklist(DisplayName = "Services", Value = 2)]Services = 2,
				[CrmPicklist(DisplayName = "Equipment", Value = 3)]Equipment = 3,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventsponsor";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaAccountsponsorid = "msa_accountsponsorid";
			public const string MsaAccountsponsoridName = "msa_accountsponsoridname";
			public const string MsaAccountsponsoridYomiName = "msa_accountsponsoridyominame";
			public const string MsaCampaignEventsponsorid = "msa_campaign_eventsponsorid";
			public const string MsaCampaignEventsponsoridName = "msa_campaign_eventsponsoridname";
			public const string MSADescription = "msa_description";
			public const string MSAEventsponsorId = "msa_eventsponsorid";
			public const string MSAName = "msa_name";
			public const string MSASponsorshipAmount = "msa_sponsorshipamount";
			public const string MSASponsorshipCategory = "msa_sponsorshipcategory";
			public const string MsaSponsorshipcategoryName = "msa_sponsorshipcategoryname";
			public const string MSASponsorshipType = "msa_sponsorshiptype";
			public const string MsaSponsorshiptypeName = "msa_sponsorshiptypename";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventsponsorId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_accountsponsorid", IsLookup = true)]
        public virtual Guid? MsaAccountsponsorid
        {
            get { FillData(); return _msaAccountsponsorid; }
            set { SetLookup("msa_accountsponsorid", "account", value); _msaAccountsponsorid = value; }
        }
        private Guid? _msaAccountsponsorid;

		[CrmProperty(LogicalName = "msa_accountsponsoridname")]
        public virtual string MsaAccountsponsoridName
        {
            get { FillData(); return _msaAccountsponsoridName; }
            set {  _msaAccountsponsoridName = value; }
        }
        private string _msaAccountsponsoridName;

		[CrmProperty(LogicalName = "msa_accountsponsoridyominame")]
        public virtual string MsaAccountsponsoridYomiName
        {
            get { FillData(); return _msaAccountsponsoridYomiName; }
            set {  _msaAccountsponsoridYomiName = value; }
        }
        private string _msaAccountsponsoridYomiName;

		[CrmProperty(LogicalName = "msa_campaign_eventsponsorid", IsLookup = true)]
        public virtual Guid? MsaCampaignEventsponsorid
        {
            get { FillData(); return _msaCampaignEventsponsorid; }
            set { SetLookup("msa_campaign_eventsponsorid", "campaign", value); _msaCampaignEventsponsorid = value; }
        }
        private Guid? _msaCampaignEventsponsorid;

		[CrmProperty(LogicalName = "msa_campaign_eventsponsoridname")]
        public virtual string MsaCampaignEventsponsoridName
        {
            get { FillData(); return _msaCampaignEventsponsoridName; }
            set {  _msaCampaignEventsponsoridName = value; }
        }
        private string _msaCampaignEventsponsoridName;

		[CrmProperty(LogicalName = "msa_description")]
        public virtual string MSADescription
        {
            get { FillData(); return _mSADescription; }
            set { SetValue<string>("msa_description", value); _mSADescription = value; }
        }
        private string _mSADescription;

		[CrmProperty(LogicalName = "msa_eventsponsorid")]
        public virtual Guid MSAEventsponsorId
        {
            get { FillData(); return _mSAEventsponsorId; }
            set {  _mSAEventsponsorId = value; }
        }
        private Guid _mSAEventsponsorId;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "msa_sponsorshipamount")]
        public virtual decimal? MSASponsorshipAmount
        {
            get { FillData(); return _mSASponsorshipAmount; }
            set { SetMoney("msa_sponsorshipamount", value); _mSASponsorshipAmount = value; }
        }
        private decimal? _mSASponsorshipAmount;

		[CrmProperty(LogicalName = "msa_sponsorshipcategory")]
        public virtual Enums.MSASponsorshipCategory? MSASponsorshipCategory
        {
            get { FillData(); return _mSASponsorshipCategory; }
            set { SetPicklist("msa_sponsorshipcategory", (int?)value); _mSASponsorshipCategory = value; }
        }
        private Enums.MSASponsorshipCategory? _mSASponsorshipCategory;

		[CrmProperty(LogicalName = "msa_sponsorshipcategoryname")]
        public virtual string MsaSponsorshipcategoryName
        {
            get { FillData(); return _msaSponsorshipcategoryName; }
            set {  _msaSponsorshipcategoryName = value; }
        }
        private string _msaSponsorshipcategoryName;

		[CrmProperty(LogicalName = "msa_sponsorshiptype")]
        public virtual Enums.MSASponsorshipType? MSASponsorshipType
        {
            get { FillData(); return _mSASponsorshipType; }
            set { SetPicklist("msa_sponsorshiptype", (int?)value); _mSASponsorshipType = value; }
        }
        private Enums.MSASponsorshipType? _mSASponsorshipType;

		[CrmProperty(LogicalName = "msa_sponsorshiptypename")]
        public virtual string MsaSponsorshiptypeName
        {
            get { FillData(); return _msaSponsorshiptypeName; }
            set {  _msaSponsorshiptypeName = value; }
        }
        private string _msaSponsorshiptypeName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventteammemberexternal", PrimaryKey = "msa_eventteammemberexternalid")]
	public partial class MSAEventteammemberexternal : CrmEntity
	{
		public class Enums
		{
			public enum MSAEventTeamRole 
			{
				[CrmPicklist(DisplayName = "Venue Management", Value = 1)]VenueManagement = 1,
				[CrmPicklist(DisplayName = "Food & Beverage Management", Value = 2)]FoodBeverageManagement = 2,
				[CrmPicklist(DisplayName = "Security Management", Value = 3)]SecurityManagement = 3,
				[CrmPicklist(DisplayName = "Attendee Management", Value = 4)]AttendeeManagement = 4,
				[CrmPicklist(DisplayName = "Speaker", Value = 5)]Speaker = 5,
				[CrmPicklist(DisplayName = "Accommodation Management", Value = 6)]AccommodationManagement = 6,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventteammemberexternal";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaEventexternalteamcontactid = "msa_eventexternalteamcontactid";
			public const string MsaEventexternalteamcontactidName = "msa_eventexternalteamcontactidname";
			public const string MsaEventexternalteamcontactidYomiName = "msa_eventexternalteamcontactidyominame";
			public const string MsaEventexternalteammemberid = "msa_eventexternalteammemberid";
			public const string MsaEventexternalteammemberidName = "msa_eventexternalteammemberidname";
			public const string MSAEventteammemberexternalId = "msa_eventteammemberexternalid";
			public const string MSAEventTeamRole = "msa_eventteamrole";
			public const string MsaEventteamroleName = "msa_eventteamrolename";
			public const string MSAName = "msa_name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventteammemberexternalId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_eventexternalteamcontactid", IsLookup = true)]
        public virtual Guid? MsaEventexternalteamcontactid
        {
            get { FillData(); return _msaEventexternalteamcontactid; }
            set { SetLookup("msa_eventexternalteamcontactid", "contact", value); _msaEventexternalteamcontactid = value; }
        }
        private Guid? _msaEventexternalteamcontactid;

		[CrmProperty(LogicalName = "msa_eventexternalteamcontactidname")]
        public virtual string MsaEventexternalteamcontactidName
        {
            get { FillData(); return _msaEventexternalteamcontactidName; }
            set {  _msaEventexternalteamcontactidName = value; }
        }
        private string _msaEventexternalteamcontactidName;

		[CrmProperty(LogicalName = "msa_eventexternalteamcontactidyominame")]
        public virtual string MsaEventexternalteamcontactidYomiName
        {
            get { FillData(); return _msaEventexternalteamcontactidYomiName; }
            set {  _msaEventexternalteamcontactidYomiName = value; }
        }
        private string _msaEventexternalteamcontactidYomiName;

		[CrmProperty(LogicalName = "msa_eventexternalteammemberid", IsLookup = true)]
        public virtual Guid? MsaEventexternalteammemberid
        {
            get { FillData(); return _msaEventexternalteammemberid; }
            set { SetLookup("msa_eventexternalteammemberid", "campaign", value); _msaEventexternalteammemberid = value; }
        }
        private Guid? _msaEventexternalteammemberid;

		[CrmProperty(LogicalName = "msa_eventexternalteammemberidname")]
        public virtual string MsaEventexternalteammemberidName
        {
            get { FillData(); return _msaEventexternalteammemberidName; }
            set {  _msaEventexternalteammemberidName = value; }
        }
        private string _msaEventexternalteammemberidName;

		[CrmProperty(LogicalName = "msa_eventteammemberexternalid")]
        public virtual Guid MSAEventteammemberexternalId
        {
            get { FillData(); return _mSAEventteammemberexternalId; }
            set {  _mSAEventteammemberexternalId = value; }
        }
        private Guid _mSAEventteammemberexternalId;

		[CrmProperty(LogicalName = "msa_eventteamrole")]
        public virtual Enums.MSAEventTeamRole? MSAEventTeamRole
        {
            get { FillData(); return _mSAEventTeamRole; }
            set { SetPicklist("msa_eventteamrole", (int?)value); _mSAEventTeamRole = value; }
        }
        private Enums.MSAEventTeamRole? _mSAEventTeamRole;

		[CrmProperty(LogicalName = "msa_eventteamrolename")]
        public virtual string MsaEventteamroleName
        {
            get { FillData(); return _msaEventteamroleName; }
            set {  _msaEventteamroleName = value; }
        }
        private string _msaEventteamroleName;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventteammemberinternal", PrimaryKey = "msa_eventteammemberinternalid")]
	public partial class MSAEventteammemberinternal : CrmEntity
	{
		public class Enums
		{
			public enum MSAEventTeamRole 
			{
				[CrmPicklist(DisplayName = "Event Owner", Value = 1)]EventOwner = 1,
				[CrmPicklist(DisplayName = "Event Planner", Value = 2)]EventPlanner = 2,
				[CrmPicklist(DisplayName = "Event Support", Value = 3)]EventSupport = 3,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventteammemberinternal";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaEventinternalteammemberid = "msa_eventinternalteammemberid";
			public const string MsaEventinternalteammemberidName = "msa_eventinternalteammemberidname";
			public const string MSAEventteammemberinternalId = "msa_eventteammemberinternalid";
			public const string MSAEventTeamRole = "msa_eventteamrole";
			public const string MsaEventteamroleName = "msa_eventteamrolename";
			public const string MSAName = "msa_name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventteammemberinternalId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_eventinternalteammemberid", IsLookup = true)]
        public virtual Guid? MsaEventinternalteammemberid
        {
            get { FillData(); return _msaEventinternalteammemberid; }
            set { SetLookup("msa_eventinternalteammemberid", "campaign", value); _msaEventinternalteammemberid = value; }
        }
        private Guid? _msaEventinternalteammemberid;

		[CrmProperty(LogicalName = "msa_eventinternalteammemberidname")]
        public virtual string MsaEventinternalteammemberidName
        {
            get { FillData(); return _msaEventinternalteammemberidName; }
            set {  _msaEventinternalteammemberidName = value; }
        }
        private string _msaEventinternalteammemberidName;

		[CrmProperty(LogicalName = "msa_eventteammemberinternalid")]
        public virtual Guid MSAEventteammemberinternalId
        {
            get { FillData(); return _mSAEventteammemberinternalId; }
            set {  _mSAEventteammemberinternalId = value; }
        }
        private Guid _mSAEventteammemberinternalId;

		[CrmProperty(LogicalName = "msa_eventteamrole")]
        public virtual Enums.MSAEventTeamRole? MSAEventTeamRole
        {
            get { FillData(); return _mSAEventTeamRole; }
            set { SetPicklist("msa_eventteamrole", (int?)value); _mSAEventTeamRole = value; }
        }
        private Enums.MSAEventTeamRole? _mSAEventTeamRole;

		[CrmProperty(LogicalName = "msa_eventteamrolename")]
        public virtual string MsaEventteamroleName
        {
            get { FillData(); return _msaEventteamroleName; }
            set {  _msaEventteamroleName = value; }
        }
        private string _msaEventteamroleName;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_eventvenue", PrimaryKey = "msa_eventvenueid")]
	public partial class MSAEventvenue : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_eventvenue";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAAccessibleToilets = "msa_accessibletoilets";
			public const string MsaAccessibletoiletsName = "msa_accessibletoiletsname";
			public const string MSAAddressLine1 = "msa_addressline1";
			public const string MSAAddressLine2 = "msa_addressline2";
			public const string MSAAddressLine3 = "msa_addressline3";
			public const string MSACity = "msa_city";
			public const string MSACountry = "msa_country";
			public const string MSADisabledAccess = "msa_disabledaccess";
			public const string MsaDisabledaccessName = "msa_disabledaccessname";
			public const string MSADisabledParking = "msa_disabledparking";
			public const string MsaDisabledparkingName = "msa_disabledparkingname";
			public const string MSAEmail = "msa_email";
			public const string MSAEventvenueId = "msa_eventvenueid";
			public const string MSAName = "msa_name";
			public const string MSAPostalCode = "msa_postalcode";
			public const string MSAStateorProvince = "msa_stateorprovince";
			public const string MSATelephone1 = "msa_telephone1";
			public const string MSATelephone2 = "msa_telephone2";
			public const string MSATelephone3 = "msa_telephone3";
			public const string MSAVenueCapacity = "msa_venuecapacity";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAEventvenueId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_accessibletoilets")]
        public virtual bool? MSAAccessibleToilets
        {
            get { FillData(); return _mSAAccessibleToilets; }
            set { SetValue<bool?>("msa_accessibletoilets", value); _mSAAccessibleToilets = value; }
        }
        private bool? _mSAAccessibleToilets;

		[CrmProperty(LogicalName = "msa_accessibletoiletsname")]
        public virtual string MsaAccessibletoiletsName
        {
            get { FillData(); return _msaAccessibletoiletsName; }
            set {  _msaAccessibletoiletsName = value; }
        }
        private string _msaAccessibletoiletsName;

		[CrmProperty(LogicalName = "msa_addressline1")]
        public virtual string MSAAddressLine1
        {
            get { FillData(); return _mSAAddressLine1; }
            set { SetValue<string>("msa_addressline1", value); _mSAAddressLine1 = value; }
        }
        private string _mSAAddressLine1;

		[CrmProperty(LogicalName = "msa_addressline2")]
        public virtual string MSAAddressLine2
        {
            get { FillData(); return _mSAAddressLine2; }
            set { SetValue<string>("msa_addressline2", value); _mSAAddressLine2 = value; }
        }
        private string _mSAAddressLine2;

		[CrmProperty(LogicalName = "msa_addressline3")]
        public virtual string MSAAddressLine3
        {
            get { FillData(); return _mSAAddressLine3; }
            set { SetValue<string>("msa_addressline3", value); _mSAAddressLine3 = value; }
        }
        private string _mSAAddressLine3;

		[CrmProperty(LogicalName = "msa_city")]
        public virtual string MSACity
        {
            get { FillData(); return _mSACity; }
            set { SetValue<string>("msa_city", value); _mSACity = value; }
        }
        private string _mSACity;

		[CrmProperty(LogicalName = "msa_country")]
        public virtual string MSACountry
        {
            get { FillData(); return _mSACountry; }
            set { SetValue<string>("msa_country", value); _mSACountry = value; }
        }
        private string _mSACountry;

		[CrmProperty(LogicalName = "msa_disabledaccess")]
        public virtual bool? MSADisabledAccess
        {
            get { FillData(); return _mSADisabledAccess; }
            set { SetValue<bool?>("msa_disabledaccess", value); _mSADisabledAccess = value; }
        }
        private bool? _mSADisabledAccess;

		[CrmProperty(LogicalName = "msa_disabledaccessname")]
        public virtual string MsaDisabledaccessName
        {
            get { FillData(); return _msaDisabledaccessName; }
            set {  _msaDisabledaccessName = value; }
        }
        private string _msaDisabledaccessName;

		[CrmProperty(LogicalName = "msa_disabledparking")]
        public virtual bool? MSADisabledParking
        {
            get { FillData(); return _mSADisabledParking; }
            set { SetValue<bool?>("msa_disabledparking", value); _mSADisabledParking = value; }
        }
        private bool? _mSADisabledParking;

		[CrmProperty(LogicalName = "msa_disabledparkingname")]
        public virtual string MsaDisabledparkingName
        {
            get { FillData(); return _msaDisabledparkingName; }
            set {  _msaDisabledparkingName = value; }
        }
        private string _msaDisabledparkingName;

		[CrmProperty(LogicalName = "msa_email")]
        public virtual string MSAEmail
        {
            get { FillData(); return _mSAEmail; }
            set { SetValue<string>("msa_email", value); _mSAEmail = value; }
        }
        private string _mSAEmail;

		[CrmProperty(LogicalName = "msa_eventvenueid")]
        public virtual Guid MSAEventvenueId
        {
            get { FillData(); return _mSAEventvenueId; }
            set {  _mSAEventvenueId = value; }
        }
        private Guid _mSAEventvenueId;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "msa_postalcode")]
        public virtual string MSAPostalCode
        {
            get { FillData(); return _mSAPostalCode; }
            set { SetValue<string>("msa_postalcode", value); _mSAPostalCode = value; }
        }
        private string _mSAPostalCode;

		[CrmProperty(LogicalName = "msa_stateorprovince")]
        public virtual string MSAStateorProvince
        {
            get { FillData(); return _mSAStateorProvince; }
            set { SetValue<string>("msa_stateorprovince", value); _mSAStateorProvince = value; }
        }
        private string _mSAStateorProvince;

		[CrmProperty(LogicalName = "msa_telephone1")]
        public virtual string MSATelephone1
        {
            get { FillData(); return _mSATelephone1; }
            set { SetValue<string>("msa_telephone1", value); _mSATelephone1 = value; }
        }
        private string _mSATelephone1;

		[CrmProperty(LogicalName = "msa_telephone2")]
        public virtual string MSATelephone2
        {
            get { FillData(); return _mSATelephone2; }
            set { SetValue<string>("msa_telephone2", value); _mSATelephone2 = value; }
        }
        private string _mSATelephone2;

		[CrmProperty(LogicalName = "msa_telephone3")]
        public virtual string MSATelephone3
        {
            get { FillData(); return _mSATelephone3; }
            set { SetValue<string>("msa_telephone3", value); _mSATelephone3 = value; }
        }
        private string _mSATelephone3;

		[CrmProperty(LogicalName = "msa_venuecapacity")]
        public virtual int? MSAVenueCapacity
        {
            get { FillData(); return _mSAVenueCapacity; }
            set { SetValue<int?>("msa_venuecapacity", value); _mSAVenueCapacity = value; }
        }
        private int? _mSAVenueCapacity;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_productregistration", PrimaryKey = "msa_productregistrationid")]
	public partial class MSAProductregistration : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_productregistration";
			
			public const string AdxCreatedByIPAddress = "adx_createdbyipaddress";
			public const string AdxCreatedByUsername = "adx_createdbyusername";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaCustomeraccountid = "msa_customeraccountid";
			public const string MsaCustomeraccountidName = "msa_customeraccountidname";
			public const string MsaCustomeraccountidYomiName = "msa_customeraccountidyominame";
			public const string MsaCustomercontactid = "msa_customercontactid";
			public const string MsaCustomercontactidName = "msa_customercontactidname";
			public const string MsaCustomercontactidYomiName = "msa_customercontactidyominame";
			public const string MSAName = "msa_name";
			public const string MSAProductregistrationId = "msa_productregistrationid";
			public const string MSAPurchaseDate = "msa_purchasedate";
			public const string MSAPurchasedFrom = "msa_purchasedfrom";
			public const string MsaPurchasedfromid = "msa_purchasedfromid";
			public const string MsaPurchasedfromidName = "msa_purchasedfromidname";
			public const string MsaPurchasedfromidYomiName = "msa_purchasedfromidyominame";
			public const string MSAPurchasePrice = "msa_purchaseprice";
			public const string MsaRegisteredproductid = "msa_registeredproductid";
			public const string MsaRegisteredproductidName = "msa_registeredproductidname";
			public const string MSASerialNumber = "msa_serialnumber";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MSAProductregistrationId; }
		}

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedByIPAddress
        {
            get { FillData(); return _adxCreatedByIPAddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedByIPAddress = value; }
        }
        private string _adxCreatedByIPAddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedByUsername
        {
            get { FillData(); return _adxCreatedByUsername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedByUsername = value; }
        }
        private string _adxCreatedByUsername;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_customeraccountid", IsLookup = true)]
        public virtual Guid? MsaCustomeraccountid
        {
            get { FillData(); return _msaCustomeraccountid; }
            set { SetLookup("msa_customeraccountid", "account", value); _msaCustomeraccountid = value; }
        }
        private Guid? _msaCustomeraccountid;

		[CrmProperty(LogicalName = "msa_customeraccountidname")]
        public virtual string MsaCustomeraccountidName
        {
            get { FillData(); return _msaCustomeraccountidName; }
            set {  _msaCustomeraccountidName = value; }
        }
        private string _msaCustomeraccountidName;

		[CrmProperty(LogicalName = "msa_customeraccountidyominame")]
        public virtual string MsaCustomeraccountidYomiName
        {
            get { FillData(); return _msaCustomeraccountidYomiName; }
            set {  _msaCustomeraccountidYomiName = value; }
        }
        private string _msaCustomeraccountidYomiName;

		[CrmProperty(LogicalName = "msa_customercontactid", IsLookup = true)]
        public virtual Guid? MsaCustomercontactid
        {
            get { FillData(); return _msaCustomercontactid; }
            set { SetLookup("msa_customercontactid", "contact", value); _msaCustomercontactid = value; }
        }
        private Guid? _msaCustomercontactid;

		[CrmProperty(LogicalName = "msa_customercontactidname")]
        public virtual string MsaCustomercontactidName
        {
            get { FillData(); return _msaCustomercontactidName; }
            set {  _msaCustomercontactidName = value; }
        }
        private string _msaCustomercontactidName;

		[CrmProperty(LogicalName = "msa_customercontactidyominame")]
        public virtual string MsaCustomercontactidYomiName
        {
            get { FillData(); return _msaCustomercontactidYomiName; }
            set {  _msaCustomercontactidYomiName = value; }
        }
        private string _msaCustomercontactidYomiName;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MSAName
        {
            get { FillData(); return _mSAName; }
            set { SetValue<string>("msa_name", value); _mSAName = value; }
        }
        private string _mSAName;

		[CrmProperty(LogicalName = "msa_productregistrationid")]
        public virtual Guid MSAProductregistrationId
        {
            get { FillData(); return _mSAProductregistrationId; }
            set {  _mSAProductregistrationId = value; }
        }
        private Guid _mSAProductregistrationId;

		[CrmProperty(LogicalName = "msa_purchasedate")]
        public virtual DateTime? MSAPurchaseDate
        {
            get { FillData(); return _mSAPurchaseDate; }
            set { SetValue<DateTime?>("msa_purchasedate", value); _mSAPurchaseDate = value; }
        }
        private DateTime? _mSAPurchaseDate;

		[CrmProperty(LogicalName = "msa_purchasedfrom")]
        public virtual string MSAPurchasedFrom
        {
            get { FillData(); return _mSAPurchasedFrom; }
            set { SetValue<string>("msa_purchasedfrom", value); _mSAPurchasedFrom = value; }
        }
        private string _mSAPurchasedFrom;

		[CrmProperty(LogicalName = "msa_purchasedfromid", IsLookup = true)]
        public virtual Guid? MsaPurchasedfromid
        {
            get { FillData(); return _msaPurchasedfromid; }
            set { SetLookup("msa_purchasedfromid", "systemuser", value); _msaPurchasedfromid = value; }
        }
        private Guid? _msaPurchasedfromid;

		[CrmProperty(LogicalName = "msa_purchasedfromidname")]
        public virtual string MsaPurchasedfromidName
        {
            get { FillData(); return _msaPurchasedfromidName; }
            set {  _msaPurchasedfromidName = value; }
        }
        private string _msaPurchasedfromidName;

		[CrmProperty(LogicalName = "msa_purchasedfromidyominame")]
        public virtual string MsaPurchasedfromidYomiName
        {
            get { FillData(); return _msaPurchasedfromidYomiName; }
            set {  _msaPurchasedfromidYomiName = value; }
        }
        private string _msaPurchasedfromidYomiName;

		[CrmProperty(LogicalName = "msa_purchaseprice")]
        public virtual decimal? MSAPurchasePrice
        {
            get { FillData(); return _mSAPurchasePrice; }
            set { SetMoney("msa_purchaseprice", value); _mSAPurchasePrice = value; }
        }
        private decimal? _mSAPurchasePrice;

		[CrmProperty(LogicalName = "msa_registeredproductid", IsLookup = true)]
        public virtual Guid? MsaRegisteredproductid
        {
            get { FillData(); return _msaRegisteredproductid; }
            set { SetLookup("msa_registeredproductid", "product", value); _msaRegisteredproductid = value; }
        }
        private Guid? _msaRegisteredproductid;

		[CrmProperty(LogicalName = "msa_registeredproductidname")]
        public virtual string MsaRegisteredproductidName
        {
            get { FillData(); return _msaRegisteredproductidName; }
            set {  _msaRegisteredproductidName = value; }
        }
        private string _msaRegisteredproductidName;

		[CrmProperty(LogicalName = "msa_serialnumber")]
        public virtual string MSASerialNumber
        {
            get { FillData(); return _mSASerialNumber; }
            set { SetValue<string>("msa_serialnumber", value); _mSASerialNumber = value; }
        }
        private string _mSASerialNumber;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "msa_webliterature", PrimaryKey = "msa_webliteratureid")]
	public partial class MsaWebliterature : CrmEntity
	{
		public class Enums
		{
			public enum MsaCategory 
			{
				[CrmPicklist(DisplayName = "Portal Literature", Value = 1)]PortalLiterature = 1,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "msa_webliterature";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MsaCategory = "msa_category";
			public const string MsaCategoryName = "msa_categoryname";
			public const string MsaName = "msa_name";
			public const string MsaPublishToWeb = "msa_publishtoweb";
			public const string MsaPublishtowebName = "msa_publishtowebname";
			public const string MsaWebliteratureId = "msa_webliteratureid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return MsaWebliteratureId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_category")]
        public virtual Enums.MsaCategory? MsaCategory
        {
            get { FillData(); return _msaCategory; }
            set { SetPicklist("msa_category", (int?)value); _msaCategory = value; }
        }
        private Enums.MsaCategory? _msaCategory;

		[CrmProperty(LogicalName = "msa_categoryname")]
        public virtual string MsaCategoryName
        {
            get { FillData(); return _msaCategoryName; }
            set {  _msaCategoryName = value; }
        }
        private string _msaCategoryName;

		[CrmProperty(LogicalName = "msa_name")]
        public virtual string MsaName
        {
            get { FillData(); return _msaName; }
            set { SetValue<string>("msa_name", value); _msaName = value; }
        }
        private string _msaName;

		[CrmProperty(LogicalName = "msa_publishtoweb")]
        public virtual bool? MsaPublishToWeb
        {
            get { FillData(); return _msaPublishToWeb; }
            set { SetValue<bool?>("msa_publishtoweb", value); _msaPublishToWeb = value; }
        }
        private bool? _msaPublishToWeb;

		[CrmProperty(LogicalName = "msa_publishtowebname")]
        public virtual string MsaPublishtowebName
        {
            get { FillData(); return _msaPublishtowebName; }
            set {  _msaPublishtowebName = value; }
        }
        private string _msaPublishtowebName;

		[CrmProperty(LogicalName = "msa_webliteratureid")]
        public virtual Guid MsaWebliteratureId
        {
            get { FillData(); return _msaWebliteratureId; }
            set {  _msaWebliteratureId = value; }
        }
        private Guid _msaWebliteratureId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_assetregister", PrimaryKey = "new_assetregisterid")]
	public partial class NewAssetregister : CrmEntity
	{
		public class Enums
		{
			public enum NewAssetType 
			{
				[CrmPicklist(DisplayName = "Customer Asset", Value = 100000000)]CustomerAsset = 100000000,
				[CrmPicklist(DisplayName = "Internal Asset", Value = 100000001)]InternalAsset = 100000001,
			}		
			public enum NewDeviceType 
			{
				[CrmPicklist(DisplayName = "Cable", Value = 100000015)]Cable = 100000015,
				[CrmPicklist(DisplayName = "External Hard Drive", Value = 100000016)]ExternalHardDrive = 100000016,
				[CrmPicklist(DisplayName = "Firewall", Value = 100000007)]Firewall = 100000007,
				[CrmPicklist(DisplayName = "Flash Drive", Value = 100000017)]FlashDrive = 100000017,
				[CrmPicklist(DisplayName = "Keyboard", Value = 100000001)]Keyboard = 100000001,
				[CrmPicklist(DisplayName = "Laptop", Value = 100000003)]Laptop = 100000003,
				[CrmPicklist(DisplayName = "Mobile Phone", Value = 100000013)]MobilePhone = 100000013,
				[CrmPicklist(DisplayName = "Modem", Value = 100000008)]Modem = 100000008,
				[CrmPicklist(DisplayName = "Monitor", Value = 100000000)]Monitor = 100000000,
				[CrmPicklist(DisplayName = "Mouse", Value = 100000011)]Mouse = 100000011,
				[CrmPicklist(DisplayName = "NAS", Value = 100000009)]NAS = 100000009,
				[CrmPicklist(DisplayName = "PC", Value = 100000002)]PC = 100000002,
				[CrmPicklist(DisplayName = "Peripherals", Value = 100000019)]Peripherals = 100000019,
				[CrmPicklist(DisplayName = "Printer", Value = 100000018)]Printer = 100000018,
				[CrmPicklist(DisplayName = "Router", Value = 100000006)]Router = 100000006,
				[CrmPicklist(DisplayName = "Server", Value = 100000010)]Server = 100000010,
				[CrmPicklist(DisplayName = "Switch", Value = 100000005)]Switch = 100000005,
				[CrmPicklist(DisplayName = "Tablet", Value = 100000004)]Tablet = 100000004,
				[CrmPicklist(DisplayName = "Telephone", Value = 100000012)]Telephone = 100000012,
				[CrmPicklist(DisplayName = "Other", Value = 100000020)]Other = 100000020,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_assetregister";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAssetregisterId = "new_assetregisterid";
			public const string NewAssetType = "new_assettype";
			public const string NewAssettypeName = "new_assettypename";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewCost = "new_cost";
			public const string NewDateofPurchase = "new_dateofpurchase";
			public const string NewDeviceType = "new_devicetype";
			public const string NewDevicetypeName = "new_devicetypename";
			public const string NewDueforReturn = "new_dueforreturn";
			public const string NewFurtherInformation = "new_furtherinformation";
			public const string NewInternalReferenceNo = "new_internalreferenceno";
			public const string NewLocation = "new_location";
			public const string NewLocationName = "new_locationname";
			public const string NewName = "new_name";
			public const string NewProductMake = "new_productmake";
			public const string NewProductModel = "new_productmodel";
			public const string NewPurchaseOrderItem = "new_purchaseorderitem";
			public const string NewPurchaseOrderItemName = "new_purchaseorderitemname";
			public const string NewSerialNumber = "new_serialnumber";
			public const string NewSupplier = "new_supplier";
			public const string NewSupplierName = "new_suppliername";
			public const string NewSupplierYomiName = "new_supplieryominame";
			public const string NewUser = "new_user";
			public const string NewUserName = "new_username";
			public const string NewUserYomiName = "new_useryominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewAssetregisterId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_assetregisterid")]
        public virtual Guid NewAssetregisterId
        {
            get { FillData(); return _newAssetregisterId; }
            set {  _newAssetregisterId = value; }
        }
        private Guid _newAssetregisterId;

		[CrmProperty(LogicalName = "new_assettype")]
        public virtual Enums.NewAssetType? NewAssetType
        {
            get { FillData(); return _newAssetType; }
            set { SetPicklist("new_assettype", (int?)value); _newAssetType = value; }
        }
        private Enums.NewAssetType? _newAssetType;

		[CrmProperty(LogicalName = "new_assettypename")]
        public virtual string NewAssettypeName
        {
            get { FillData(); return _newAssettypeName; }
            set {  _newAssettypeName = value; }
        }
        private string _newAssettypeName;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_cost")]
        public virtual decimal? NewCost
        {
            get { FillData(); return _newCost; }
            set { SetMoney("new_cost", value); _newCost = value; }
        }
        private decimal? _newCost;

		[CrmProperty(LogicalName = "new_dateofpurchase")]
        public virtual DateTime? NewDateofPurchase
        {
            get { FillData(); return _newDateofPurchase; }
            set { SetValue<DateTime?>("new_dateofpurchase", value); _newDateofPurchase = value; }
        }
        private DateTime? _newDateofPurchase;

		[CrmProperty(LogicalName = "new_devicetype")]
        public virtual Enums.NewDeviceType? NewDeviceType
        {
            get { FillData(); return _newDeviceType; }
            set { SetPicklist("new_devicetype", (int?)value); _newDeviceType = value; }
        }
        private Enums.NewDeviceType? _newDeviceType;

		[CrmProperty(LogicalName = "new_devicetypename")]
        public virtual string NewDevicetypeName
        {
            get { FillData(); return _newDevicetypeName; }
            set {  _newDevicetypeName = value; }
        }
        private string _newDevicetypeName;

		[CrmProperty(LogicalName = "new_dueforreturn")]
        public virtual DateTime? NewDueforReturn
        {
            get { FillData(); return _newDueforReturn; }
            set { SetValue<DateTime?>("new_dueforreturn", value); _newDueforReturn = value; }
        }
        private DateTime? _newDueforReturn;

		[CrmProperty(LogicalName = "new_furtherinformation")]
        public virtual string NewFurtherInformation
        {
            get { FillData(); return _newFurtherInformation; }
            set { SetValue<string>("new_furtherinformation", value); _newFurtherInformation = value; }
        }
        private string _newFurtherInformation;

		[CrmProperty(LogicalName = "new_internalreferenceno")]
        public virtual string NewInternalReferenceNo
        {
            get { FillData(); return _newInternalReferenceNo; }
            set { SetValue<string>("new_internalreferenceno", value); _newInternalReferenceNo = value; }
        }
        private string _newInternalReferenceNo;

		[CrmProperty(LogicalName = "new_location", IsLookup = true)]
        public virtual Guid? NewLocation
        {
            get { FillData(); return _newLocation; }
            set { SetLookup("new_location", "new_sitelocation", value); _newLocation = value; }
        }
        private Guid? _newLocation;

		[CrmProperty(LogicalName = "new_locationname")]
        public virtual string NewLocationName
        {
            get { FillData(); return _newLocationName; }
            set {  _newLocationName = value; }
        }
        private string _newLocationName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_productmake")]
        public virtual string NewProductMake
        {
            get { FillData(); return _newProductMake; }
            set { SetValue<string>("new_productmake", value); _newProductMake = value; }
        }
        private string _newProductMake;

		[CrmProperty(LogicalName = "new_productmodel")]
        public virtual string NewProductModel
        {
            get { FillData(); return _newProductModel; }
            set { SetValue<string>("new_productmodel", value); _newProductModel = value; }
        }
        private string _newProductModel;

		[CrmProperty(LogicalName = "new_purchaseorderitem", IsLookup = true)]
        public virtual Guid? NewPurchaseOrderItem
        {
            get { FillData(); return _newPurchaseOrderItem; }
            set { SetLookup("new_purchaseorderitem", "new_orderitems", value); _newPurchaseOrderItem = value; }
        }
        private Guid? _newPurchaseOrderItem;

		[CrmProperty(LogicalName = "new_purchaseorderitemname")]
        public virtual string NewPurchaseOrderItemName
        {
            get { FillData(); return _newPurchaseOrderItemName; }
            set {  _newPurchaseOrderItemName = value; }
        }
        private string _newPurchaseOrderItemName;

		[CrmProperty(LogicalName = "new_serialnumber")]
        public virtual string NewSerialNumber
        {
            get { FillData(); return _newSerialNumber; }
            set { SetValue<string>("new_serialnumber", value); _newSerialNumber = value; }
        }
        private string _newSerialNumber;

		[CrmProperty(LogicalName = "new_supplier", IsLookup = true)]
        public virtual Guid? NewSupplier
        {
            get { FillData(); return _newSupplier; }
            set { SetLookup("new_supplier", "account", value); _newSupplier = value; }
        }
        private Guid? _newSupplier;

		[CrmProperty(LogicalName = "new_suppliername")]
        public virtual string NewSupplierName
        {
            get { FillData(); return _newSupplierName; }
            set {  _newSupplierName = value; }
        }
        private string _newSupplierName;

		[CrmProperty(LogicalName = "new_supplieryominame")]
        public virtual string NewSupplierYomiName
        {
            get { FillData(); return _newSupplierYomiName; }
            set {  _newSupplierYomiName = value; }
        }
        private string _newSupplierYomiName;

		[CrmProperty(LogicalName = "new_user", IsLookup = true)]
        public virtual Guid? NewUser
        {
            get { FillData(); return _newUser; }
            set { SetLookup("new_user", "contact", value); _newUser = value; }
        }
        private Guid? _newUser;

		[CrmProperty(LogicalName = "new_username")]
        public virtual string NewUserName
        {
            get { FillData(); return _newUserName; }
            set {  _newUserName = value; }
        }
        private string _newUserName;

		[CrmProperty(LogicalName = "new_useryominame")]
        public virtual string NewUserYomiName
        {
            get { FillData(); return _newUserYomiName; }
            set {  _newUserYomiName = value; }
        }
        private string _newUserYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_autonumber", PrimaryKey = "new_autonumberid")]
	public partial class NewAutonumber : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_autonumber";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAutonumberId = "new_autonumberid";
			public const string NewEntity = "new_entity";
			public const string NewField = "new_field";
			public const string NewName = "new_name";
			public const string NewNumberLength = "new_numberlength";
			public const string NewPosition = "new_position";
			public const string NewPrefix = "new_prefix";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewAutonumberId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_autonumberid")]
        public virtual Guid NewAutonumberId
        {
            get { FillData(); return _newAutonumberId; }
            set {  _newAutonumberId = value; }
        }
        private Guid _newAutonumberId;

		[CrmProperty(LogicalName = "new_entity")]
        public virtual string NewEntity
        {
            get { FillData(); return _newEntity; }
            set { SetValue<string>("new_entity", value); _newEntity = value; }
        }
        private string _newEntity;

		[CrmProperty(LogicalName = "new_field")]
        public virtual string NewField
        {
            get { FillData(); return _newField; }
            set { SetValue<string>("new_field", value); _newField = value; }
        }
        private string _newField;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_numberlength")]
        public virtual int? NewNumberLength
        {
            get { FillData(); return _newNumberLength; }
            set { SetValue<int?>("new_numberlength", value); _newNumberLength = value; }
        }
        private int? _newNumberLength;

		[CrmProperty(LogicalName = "new_position")]
        public virtual int? NewPosition
        {
            get { FillData(); return _newPosition; }
            set { SetValue<int?>("new_position", value); _newPosition = value; }
        }
        private int? _newPosition;

		[CrmProperty(LogicalName = "new_prefix")]
        public virtual string NewPrefix
        {
            get { FillData(); return _newPrefix; }
            set { SetValue<string>("new_prefix", value); _newPrefix = value; }
        }
        private string _newPrefix;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_billingoverride", PrimaryKey = "new_billingoverrideid")]
	public partial class NewBillingoverride : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_billingoverride";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAccountId = "new_accountid";
			public const string NewAccountIdName = "new_accountidname";
			public const string NewAccountIdYomiName = "new_accountidyominame";
			public const string NewBillingoverrideId = "new_billingoverrideid";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewEndDate = "new_enddate";
			public const string NewName = "new_name";
			public const string NewNoOfUnits = "new_noofunits";
			public const string NewOverrideAllProducts = "new_overrideallproducts";
			public const string NewOverrideallproductsName = "new_overrideallproductsname";
			public const string NewOverrideEnabled = "new_overrideenabled";
			public const string NewOverrideenabledName = "new_overrideenabledname";
			public const string NewProductId = "new_productid";
			public const string NewProductIdName = "new_productidname";
			public const string NewReason = "new_reason";
			public const string NewStartDate = "new_startdate";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewBillingoverrideId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_accountid", IsLookup = true)]
        public virtual Guid? NewAccountId
        {
            get { FillData(); return _newAccountId; }
            set { SetLookup("new_accountid", "account", value); _newAccountId = value; }
        }
        private Guid? _newAccountId;

		[CrmProperty(LogicalName = "new_accountidname")]
        public virtual string NewAccountIdName
        {
            get { FillData(); return _newAccountIdName; }
            set {  _newAccountIdName = value; }
        }
        private string _newAccountIdName;

		[CrmProperty(LogicalName = "new_accountidyominame")]
        public virtual string NewAccountIdYomiName
        {
            get { FillData(); return _newAccountIdYomiName; }
            set {  _newAccountIdYomiName = value; }
        }
        private string _newAccountIdYomiName;

		[CrmProperty(LogicalName = "new_billingoverrideid")]
        public virtual Guid NewBillingoverrideId
        {
            get { FillData(); return _newBillingoverrideId; }
            set {  _newBillingoverrideId = value; }
        }
        private Guid _newBillingoverrideId;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_enddate")]
        public virtual DateTime? NewEndDate
        {
            get { FillData(); return _newEndDate; }
            set { SetValue<DateTime?>("new_enddate", value); _newEndDate = value; }
        }
        private DateTime? _newEndDate;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_noofunits")]
        public virtual int? NewNoOfUnits
        {
            get { FillData(); return _newNoOfUnits; }
            set { SetValue<int?>("new_noofunits", value); _newNoOfUnits = value; }
        }
        private int? _newNoOfUnits;

		[CrmProperty(LogicalName = "new_overrideallproducts")]
        public virtual bool? NewOverrideAllProducts
        {
            get { FillData(); return _newOverrideAllProducts; }
            set { SetValue<bool?>("new_overrideallproducts", value); _newOverrideAllProducts = value; }
        }
        private bool? _newOverrideAllProducts;

		[CrmProperty(LogicalName = "new_overrideallproductsname")]
        public virtual string NewOverrideallproductsName
        {
            get { FillData(); return _newOverrideallproductsName; }
            set {  _newOverrideallproductsName = value; }
        }
        private string _newOverrideallproductsName;

		[CrmProperty(LogicalName = "new_overrideenabled")]
        public virtual bool? NewOverrideEnabled
        {
            get { FillData(); return _newOverrideEnabled; }
            set { SetValue<bool?>("new_overrideenabled", value); _newOverrideEnabled = value; }
        }
        private bool? _newOverrideEnabled;

		[CrmProperty(LogicalName = "new_overrideenabledname")]
        public virtual string NewOverrideenabledName
        {
            get { FillData(); return _newOverrideenabledName; }
            set {  _newOverrideenabledName = value; }
        }
        private string _newOverrideenabledName;

		[CrmProperty(LogicalName = "new_productid", IsLookup = true)]
        public virtual Guid? NewProductId
        {
            get { FillData(); return _newProductId; }
            set { SetLookup("new_productid", "product", value); _newProductId = value; }
        }
        private Guid? _newProductId;

		[CrmProperty(LogicalName = "new_productidname")]
        public virtual string NewProductIdName
        {
            get { FillData(); return _newProductIdName; }
            set {  _newProductIdName = value; }
        }
        private string _newProductIdName;

		[CrmProperty(LogicalName = "new_reason")]
        public virtual string NewReason
        {
            get { FillData(); return _newReason; }
            set { SetValue<string>("new_reason", value); _newReason = value; }
        }
        private string _newReason;

		[CrmProperty(LogicalName = "new_startdate")]
        public virtual DateTime? NewStartDate
        {
            get { FillData(); return _newStartDate; }
            set { SetValue<DateTime?>("new_startdate", value); _newStartDate = value; }
        }
        private DateTime? _newStartDate;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_billingrecord", PrimaryKey = "new_billingrecordid")]
	public partial class NewBillingrecord : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_billingrecord";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAccountId = "new_accountid";
			public const string NewAccountIdName = "new_accountidname";
			public const string NewAccountIdYomiName = "new_accountidyominame";
			public const string NewBillingrecordId = "new_billingrecordid";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewEndDate = "new_enddate";
			public const string NewInvoiceCustomer = "new_invoicecustomer";
			public const string NewInvoicecustomerName = "new_invoicecustomername";
			public const string NewInvoiceSetup = "new_invoicesetup";
			public const string NewInvoiceSetupDate = "new_invoicesetupdate";
			public const string NewInvoicesetupName = "new_invoicesetupname";
			public const string NewName = "new_name";
			public const string NewOrderTemplateNoId = "new_ordertemplatenoid";
			public const string NewOrderTemplateNoIdName = "new_ordertemplatenoidname";
			public const string NewProductId = "new_productid";
			public const string NewProductIdName = "new_productidname";
			public const string NewProductType = "new_producttype";
			public const string NewProducttypeName = "new_producttypename";
			public const string NewRecordTypeId = "new_recordtypeid";
			public const string NewRecordTypeIdName = "new_recordtypeidname";
			public const string NewSetupProductId = "new_setupproductid";
			public const string NewSetupProductIdName = "new_setupproductidname";
			public const string NewStartDate = "new_startdate";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string NewVendorReference = "new_vendorreference";
			public const string NewWriteInProduct = "new_writeinproduct";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewBillingrecordId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_accountid", IsLookup = true)]
        public virtual Guid? NewAccountId
        {
            get { FillData(); return _newAccountId; }
            set { SetLookup("new_accountid", "account", value); _newAccountId = value; }
        }
        private Guid? _newAccountId;

		[CrmProperty(LogicalName = "new_accountidname")]
        public virtual string NewAccountIdName
        {
            get { FillData(); return _newAccountIdName; }
            set {  _newAccountIdName = value; }
        }
        private string _newAccountIdName;

		[CrmProperty(LogicalName = "new_accountidyominame")]
        public virtual string NewAccountIdYomiName
        {
            get { FillData(); return _newAccountIdYomiName; }
            set {  _newAccountIdYomiName = value; }
        }
        private string _newAccountIdYomiName;

		[CrmProperty(LogicalName = "new_billingrecordid")]
        public virtual Guid NewBillingrecordId
        {
            get { FillData(); return _newBillingrecordId; }
            set {  _newBillingrecordId = value; }
        }
        private Guid _newBillingrecordId;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_enddate")]
        public virtual DateTime? NewEndDate
        {
            get { FillData(); return _newEndDate; }
            set { SetValue<DateTime?>("new_enddate", value); _newEndDate = value; }
        }
        private DateTime? _newEndDate;

		[CrmProperty(LogicalName = "new_invoicecustomer")]
        public virtual bool? NewInvoiceCustomer
        {
            get { FillData(); return _newInvoiceCustomer; }
            set { SetValue<bool?>("new_invoicecustomer", value); _newInvoiceCustomer = value; }
        }
        private bool? _newInvoiceCustomer;

		[CrmProperty(LogicalName = "new_invoicecustomername")]
        public virtual string NewInvoicecustomerName
        {
            get { FillData(); return _newInvoicecustomerName; }
            set {  _newInvoicecustomerName = value; }
        }
        private string _newInvoicecustomerName;

		[CrmProperty(LogicalName = "new_invoicesetup")]
        public virtual bool? NewInvoiceSetup
        {
            get { FillData(); return _newInvoiceSetup; }
            set { SetValue<bool?>("new_invoicesetup", value); _newInvoiceSetup = value; }
        }
        private bool? _newInvoiceSetup;

		[CrmProperty(LogicalName = "new_invoicesetupdate")]
        public virtual DateTime? NewInvoiceSetupDate
        {
            get { FillData(); return _newInvoiceSetupDate; }
            set { SetValue<DateTime?>("new_invoicesetupdate", value); _newInvoiceSetupDate = value; }
        }
        private DateTime? _newInvoiceSetupDate;

		[CrmProperty(LogicalName = "new_invoicesetupname")]
        public virtual string NewInvoicesetupName
        {
            get { FillData(); return _newInvoicesetupName; }
            set {  _newInvoicesetupName = value; }
        }
        private string _newInvoicesetupName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_ordertemplatenoid", IsLookup = true)]
        public virtual Guid? NewOrderTemplateNoId
        {
            get { FillData(); return _newOrderTemplateNoId; }
            set { SetLookup("new_ordertemplatenoid", "salesorder", value); _newOrderTemplateNoId = value; }
        }
        private Guid? _newOrderTemplateNoId;

		[CrmProperty(LogicalName = "new_ordertemplatenoidname")]
        public virtual string NewOrderTemplateNoIdName
        {
            get { FillData(); return _newOrderTemplateNoIdName; }
            set {  _newOrderTemplateNoIdName = value; }
        }
        private string _newOrderTemplateNoIdName;

		[CrmProperty(LogicalName = "new_productid", IsLookup = true)]
        public virtual Guid? NewProductId
        {
            get { FillData(); return _newProductId; }
            set { SetLookup("new_productid", "product", value); _newProductId = value; }
        }
        private Guid? _newProductId;

		[CrmProperty(LogicalName = "new_productidname")]
        public virtual string NewProductIdName
        {
            get { FillData(); return _newProductIdName; }
            set {  _newProductIdName = value; }
        }
        private string _newProductIdName;

		[CrmProperty(LogicalName = "new_producttype")]
        public virtual bool? NewProductType
        {
            get { FillData(); return _newProductType; }
            set { SetValue<bool?>("new_producttype", value); _newProductType = value; }
        }
        private bool? _newProductType;

		[CrmProperty(LogicalName = "new_producttypename")]
        public virtual string NewProducttypeName
        {
            get { FillData(); return _newProducttypeName; }
            set {  _newProducttypeName = value; }
        }
        private string _newProducttypeName;

		[CrmProperty(LogicalName = "new_recordtypeid", IsLookup = true)]
        public virtual Guid? NewRecordTypeId
        {
            get { FillData(); return _newRecordTypeId; }
            set { SetLookup("new_recordtypeid", "new_billingrecordtype", value); _newRecordTypeId = value; }
        }
        private Guid? _newRecordTypeId;

		[CrmProperty(LogicalName = "new_recordtypeidname")]
        public virtual string NewRecordTypeIdName
        {
            get { FillData(); return _newRecordTypeIdName; }
            set {  _newRecordTypeIdName = value; }
        }
        private string _newRecordTypeIdName;

		[CrmProperty(LogicalName = "new_setupproductid", IsLookup = true)]
        public virtual Guid? NewSetupProductId
        {
            get { FillData(); return _newSetupProductId; }
            set { SetLookup("new_setupproductid", "product", value); _newSetupProductId = value; }
        }
        private Guid? _newSetupProductId;

		[CrmProperty(LogicalName = "new_setupproductidname")]
        public virtual string NewSetupProductIdName
        {
            get { FillData(); return _newSetupProductIdName; }
            set {  _newSetupProductIdName = value; }
        }
        private string _newSetupProductIdName;

		[CrmProperty(LogicalName = "new_startdate")]
        public virtual DateTime? NewStartDate
        {
            get { FillData(); return _newStartDate; }
            set { SetValue<DateTime?>("new_startdate", value); _newStartDate = value; }
        }
        private DateTime? _newStartDate;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "new_vendorreference")]
        public virtual string NewVendorReference
        {
            get { FillData(); return _newVendorReference; }
            set { SetValue<string>("new_vendorreference", value); _newVendorReference = value; }
        }
        private string _newVendorReference;

		[CrmProperty(LogicalName = "new_writeinproduct")]
        public virtual string NewWriteInProduct
        {
            get { FillData(); return _newWriteInProduct; }
            set { SetValue<string>("new_writeinproduct", value); _newWriteInProduct = value; }
        }
        private string _newWriteInProduct;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_billingrecordtype", PrimaryKey = "new_billingrecordtypeid")]
	public partial class NewBillingrecordtype : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_billingrecordtype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillingrecordtypeId = "new_billingrecordtypeid";
			public const string NewName = "new_name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewBillingrecordtypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billingrecordtypeid")]
        public virtual Guid NewBillingrecordtypeId
        {
            get { FillData(); return _newBillingrecordtypeId; }
            set {  _newBillingrecordtypeId = value; }
        }
        private Guid _newBillingrecordtypeId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_callingarea", PrimaryKey = "new_callingareaid")]
	public partial class NewCallingarea : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_callingarea";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCallingareaId = "new_callingareaid";
			public const string NewCallingPrefix = "new_callingprefix";
			public const string NewCountry = "new_country";
			public const string NewDescription = "new_description";
			public const string NewFromCallingAreaId = "new_fromcallingareaid";
			public const string NewFromCallingAreaIdName = "new_fromcallingareaidname";
			public const string NewGPSLat = "new_gpslat";
			public const string NewGPSLong = "new_gpslong";
			public const string NewName = "new_name";
			public const string NewProductId = "new_productid";
			public const string NewProductIdName = "new_productidname";
			public const string NewReference = "new_reference";
			public const string NewToCallingAreaId = "new_tocallingareaid";
			public const string NewToCallingAreaIdName = "new_tocallingareaidname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCallingareaId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_callingareaid")]
        public virtual Guid NewCallingareaId
        {
            get { FillData(); return _newCallingareaId; }
            set {  _newCallingareaId = value; }
        }
        private Guid _newCallingareaId;

		[CrmProperty(LogicalName = "new_callingprefix")]
        public virtual string NewCallingPrefix
        {
            get { FillData(); return _newCallingPrefix; }
            set { SetValue<string>("new_callingprefix", value); _newCallingPrefix = value; }
        }
        private string _newCallingPrefix;

		[CrmProperty(LogicalName = "new_country")]
        public virtual string NewCountry
        {
            get { FillData(); return _newCountry; }
            set { SetValue<string>("new_country", value); _newCountry = value; }
        }
        private string _newCountry;

		[CrmProperty(LogicalName = "new_description")]
        public virtual string NewDescription
        {
            get { FillData(); return _newDescription; }
            set { SetValue<string>("new_description", value); _newDescription = value; }
        }
        private string _newDescription;

		[CrmProperty(LogicalName = "new_fromcallingareaid", IsLookup = true)]
        public virtual Guid? NewFromCallingAreaId
        {
            get { FillData(); return _newFromCallingAreaId; }
            set { SetLookup("new_fromcallingareaid", "new_fromcallingregion", value); _newFromCallingAreaId = value; }
        }
        private Guid? _newFromCallingAreaId;

		[CrmProperty(LogicalName = "new_fromcallingareaidname")]
        public virtual string NewFromCallingAreaIdName
        {
            get { FillData(); return _newFromCallingAreaIdName; }
            set {  _newFromCallingAreaIdName = value; }
        }
        private string _newFromCallingAreaIdName;

		[CrmProperty(LogicalName = "new_gpslat")]
        public virtual string NewGPSLat
        {
            get { FillData(); return _newGPSLat; }
            set { SetValue<string>("new_gpslat", value); _newGPSLat = value; }
        }
        private string _newGPSLat;

		[CrmProperty(LogicalName = "new_gpslong")]
        public virtual string NewGPSLong
        {
            get { FillData(); return _newGPSLong; }
            set { SetValue<string>("new_gpslong", value); _newGPSLong = value; }
        }
        private string _newGPSLong;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_productid", IsLookup = true)]
        public virtual Guid? NewProductId
        {
            get { FillData(); return _newProductId; }
            set { SetLookup("new_productid", "product", value); _newProductId = value; }
        }
        private Guid? _newProductId;

		[CrmProperty(LogicalName = "new_productidname")]
        public virtual string NewProductIdName
        {
            get { FillData(); return _newProductIdName; }
            set {  _newProductIdName = value; }
        }
        private string _newProductIdName;

		[CrmProperty(LogicalName = "new_reference")]
        public virtual string NewReference
        {
            get { FillData(); return _newReference; }
            set { SetValue<string>("new_reference", value); _newReference = value; }
        }
        private string _newReference;

		[CrmProperty(LogicalName = "new_tocallingareaid", IsLookup = true)]
        public virtual Guid? NewToCallingAreaId
        {
            get { FillData(); return _newToCallingAreaId; }
            set { SetLookup("new_tocallingareaid", "new_tocallingregion", value); _newToCallingAreaId = value; }
        }
        private Guid? _newToCallingAreaId;

		[CrmProperty(LogicalName = "new_tocallingareaidname")]
        public virtual string NewToCallingAreaIdName
        {
            get { FillData(); return _newToCallingAreaIdName; }
            set {  _newToCallingAreaIdName = value; }
        }
        private string _newToCallingAreaIdName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_callingregion", PrimaryKey = "new_callingregionid")]
	public partial class NewCallingregion : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_callingregion";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCallingregionId = "new_callingregionid";
			public const string NewName = "new_name";
            public const string NewPrefix = "new_prefix";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCallingregionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_callingregionid")]
        public virtual Guid NewCallingregionId
        {
            get { FillData(); return _newCallingregionId; }
            set {  _newCallingregionId = value; }
        }
        private Guid _newCallingregionId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

        [CrmProperty(LogicalName = "new_prefix")]
        public virtual string NewPrefix
        {
            get { FillData(); return _newPrefix; }
            set { SetValue<string>("new_prefix", value); _newPrefix = value; }
        }
        private string _newPrefix;

        [CrmProperty(LogicalName = "new_published")]
        public virtual bool NewPublished
        {
            get { FillData(); return _newPublished; }
            set { SetValue<bool>("new_published", value); _newPublished = value; }
        }
        private bool _newPublished;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_callingregionproductmap", PrimaryKey = "new_callingregionproductmapid")]
	public partial class NewCallingregionproductmap : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_callingregionproductmap";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCallingregionproductmapId = "new_callingregionproductmapid";
			public const string NewFromCallingRecordId = "new_fromcallingrecordid";
			public const string NewFromCallingRecordIdName = "new_fromcallingrecordidname";
			public const string NewLkupProductrulesExternalcallingregion = "new_lkup_productrules_externalcallingregion";
			public const string NewLkupProductrulesExternalcallingregionName = "new_lkup_productrules_externalcallingregionname";
			public const string NewLkupProductrulesLocalcallingregion = "new_lkup_productrules_localcallingregion";
			public const string NewLkupProductrulesLocalcallingregionName = "new_lkup_productrules_localcallingregionname";
			public const string NewName = "new_name";
			public const string NewOrder = "new_order";
			public const string NewPhoneTrunkId = "new_phonetrunkid";
			public const string NewPhoneTrunkIdName = "new_phonetrunkidname";
			public const string NewProductId = "new_productid";
			public const string NewProductIdName = "new_productidname";
			public const string NewToCallingRegionId = "new_tocallingregionid";
			public const string NewToCallingRegionIdName = "new_tocallingregionidname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCallingregionproductmapId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_callingregionproductmapid")]
        public virtual Guid NewCallingregionproductmapId
        {
            get { FillData(); return _newCallingregionproductmapId; }
            set {  _newCallingregionproductmapId = value; }
        }
        private Guid _newCallingregionproductmapId;

		[CrmProperty(LogicalName = "new_fromcallingrecordid", IsLookup = true)]
        public virtual Guid? NewFromCallingRecordId
        {
            get { FillData(); return _newFromCallingRecordId; }
            set { SetLookup("new_fromcallingrecordid", "new_fromcallingregion", value); _newFromCallingRecordId = value; }
        }
        private Guid? _newFromCallingRecordId;

		[CrmProperty(LogicalName = "new_fromcallingrecordidname")]
        public virtual string NewFromCallingRecordIdName
        {
            get { FillData(); return _newFromCallingRecordIdName; }
            set {  _newFromCallingRecordIdName = value; }
        }
        private string _newFromCallingRecordIdName;

		[CrmProperty(LogicalName = "new_lkup_productrules_externalcallingregion", IsLookup = true)]
        public virtual Guid? NewLkupProductrulesExternalcallingregion
        {
            get { FillData(); return _newLkupProductrulesExternalcallingregion; }
            set { SetLookup("new_lkup_productrules_externalcallingregion", "new_callingregion", value); _newLkupProductrulesExternalcallingregion = value; }
        }
        private Guid? _newLkupProductrulesExternalcallingregion;

		[CrmProperty(LogicalName = "new_lkup_productrules_externalcallingregionname")]
        public virtual string NewLkupProductrulesExternalcallingregionName
        {
            get { FillData(); return _newLkupProductrulesExternalcallingregionName; }
            set {  _newLkupProductrulesExternalcallingregionName = value; }
        }
        private string _newLkupProductrulesExternalcallingregionName;

		[CrmProperty(LogicalName = "new_lkup_productrules_localcallingregion", IsLookup = true)]
        public virtual Guid? NewLkupProductrulesLocalcallingregion
        {
            get { FillData(); return _newLkupProductrulesLocalcallingregion; }
            set { SetLookup("new_lkup_productrules_localcallingregion", "new_callingregion", value); _newLkupProductrulesLocalcallingregion = value; }
        }
        private Guid? _newLkupProductrulesLocalcallingregion;

		[CrmProperty(LogicalName = "new_lkup_productrules_localcallingregionname")]
        public virtual string NewLkupProductrulesLocalcallingregionName
        {
            get { FillData(); return _newLkupProductrulesLocalcallingregionName; }
            set {  _newLkupProductrulesLocalcallingregionName = value; }
        }
        private string _newLkupProductrulesLocalcallingregionName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

        [CrmProperty(LogicalName = "new_prefix")]
        public virtual string NewPrefix
        {
            get { FillData(); return _newPrefix; }
            set { SetValue<string>("new_prefix", value); _newPrefix = value; }
        }
        private string _newPrefix;

        [CrmProperty(LogicalName = "new_published")]
        public virtual bool NewPublished
        {
            get { FillData(); return _newPublished; }
            set { SetValue<bool>("new_published", value); _newPublished = value; }
        }
        private bool _newPublished;

		[CrmProperty(LogicalName = "new_order")]
        public virtual int? NewOrder
        {
            get { FillData(); return _newOrder; }
            set { SetValue<int?>("new_order", value); _newOrder = value; }
        }
        private int? _newOrder;

		[CrmProperty(LogicalName = "new_phonetrunkid", IsLookup = true)]
        public virtual Guid? NewPhoneTrunkId
        {
            get { FillData(); return _newPhoneTrunkId; }
            set { SetLookup("new_phonetrunkid", "new_phonetrunk", value); _newPhoneTrunkId = value; }
        }
        private Guid? _newPhoneTrunkId;

		[CrmProperty(LogicalName = "new_phonetrunkidname")]
        public virtual string NewPhoneTrunkIdName
        {
            get { FillData(); return _newPhoneTrunkIdName; }
            set {  _newPhoneTrunkIdName = value; }
        }
        private string _newPhoneTrunkIdName;

		[CrmProperty(LogicalName = "new_productid", IsLookup = true)]
        public virtual Guid? NewProductId
        {
            get { FillData(); return _newProductId; }
            set { SetLookup("new_productid", "product", value); _newProductId = value; }
        }
        private Guid? _newProductId;

		[CrmProperty(LogicalName = "new_productidname")]
        public virtual string NewProductIdName
        {
            get { FillData(); return _newProductIdName; }
            set {  _newProductIdName = value; }
        }
        private string _newProductIdName;

		[CrmProperty(LogicalName = "new_tocallingregionid", IsLookup = true)]
        public virtual Guid? NewToCallingRegionId
        {
            get { FillData(); return _newToCallingRegionId; }
            set { SetLookup("new_tocallingregionid", "new_tocallingregion", value); _newToCallingRegionId = value; }
        }
        private Guid? _newToCallingRegionId;

		[CrmProperty(LogicalName = "new_tocallingregionidname")]
        public virtual string NewToCallingRegionIdName
        {
            get { FillData(); return _newToCallingRegionIdName; }
            set {  _newToCallingRegionIdName = value; }
        }
        private string _newToCallingRegionIdName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_callrecord", PrimaryKey = "new_callrecordid")]
	public partial class NewCallrecord : CrmEntity
	{
		public class Enums
		{
			public enum NewCallDirection 
			{
				[CrmPicklist(DisplayName = "Incoming", Value = 100000000)]Incoming = 100000000,
				[CrmPicklist(DisplayName = "Outgoing", Value = 100000001)]Outgoing = 100000001,
				[CrmPicklist(DisplayName = "Forwarded", Value = 100000002)]Forwarded = 100000002,
				[CrmPicklist(DisplayName = "Internal", Value = 100000003)]Internal = 100000003,
				[CrmPicklist(DisplayName = "Federated", Value = 100000004)]Federated = 100000004,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_callrecord";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCallDate = "new_calldate";
			public const string NewCallDirection = "new_calldirection";
			public const string NewCalldirectionName = "new_calldirectionname";
			public const string NewCallFrom = "new_callfrom";
			public const string NewCallrecordId = "new_callrecordid";
			public const string NewCallRegion = "new_callregion";
			public const string NewCallTo = "new_callto";
			public const string NewCallVendor = "new_callvendor";
			public const string NewCarrierCharge = "new_carriercharge";
			public const string NewChargeToId = "new_chargetoid";
			public const string NewChargeToIdName = "new_chargetoidname";
			public const string NewDisconnectedById = "new_disconnectedbyid";
			public const string NewDisconnectedByIdName = "new_disconnectedbyidname";
			public const string NewDurationActual = "new_durationactual";
			public const string NewDurationCharged = "new_durationcharged";
			public const string NewFromAccountId = "new_fromaccountid";
			public const string NewFromAccountIdName = "new_fromaccountidname";
			public const string NewFromAccountIdYomiName = "new_fromaccountidyominame";
			public const string NewFromCallingAreaId = "new_fromcallingareaid";
			public const string NewFromCallingAreaIdName = "new_fromcallingareaidname";
			public const string NewFromCallingRegionId = "new_fromcallingregionid";
			public const string NewFromCallingRegionIdName = "new_fromcallingregionidname";
			public const string NewFromContactId = "new_fromcontactid";
			public const string NewFromContactIdName = "new_fromcontactidname";
			public const string NewFromContactIdYomiName = "new_fromcontactidyominame";
			public const string NewFromPhoneNumberId = "new_fromphonenumberid";
			public const string NewFromPhoneNumberIdName = "new_fromphonenumberidname";
			public const string NewFromTrunkId = "new_fromtrunkid";
			public const string NewFromTrunkIdName = "new_fromtrunkidname";
			public const string NewImported = "new_imported";
			public const string NewLkupCallRecordCallingRegionFROM = "new_lkup_callrecord_callingregion_from";
			public const string NewLkupCallRecordCallingRegionFROMName = "new_lkup_callrecord_callingregion_fromname";
			public const string NewLkupCallRecordCallingRegionTO = "new_lkup_callrecord_callingregion_to";
			public const string NewLkupCallRecordCallingRegionTOName = "new_lkup_callrecord_callingregion_toname";
			public const string NewLyncCallDuration = "new_lynccallduration";
			public const string NewLyncCallEnd = "new_lynccallend";
			public const string NewLyncCallStart = "new_lynccallstart";
			public const string NewLyncCallTime = "new_lynccalltime";
			public const string NewLyncDisconnectedbyNumber = "new_lyncdisconnectedbynumber";
			public const string NewLyncDisconnectedbyURI = "new_lyncdisconnectedbyuri";
			public const string NewLyncFromGateway = "new_lyncfromgateway";
			public const string NewLyncFromMediation = "new_lyncfrommediation";
			public const string NewLyncFromNumber = "new_lyncfromnumber";
			public const string NewLyncFromURI = "new_lyncfromuri";
			public const string NewLyncReferredbyURI = "new_lyncreferredbyuri";
			public const string NewLyncToGateway = "new_lynctogateway";
			public const string NewLyncToMediation = "new_lynctomediation";
			public const string NewLyncToNumber = "new_lynctonumber";
			public const string NewLyncToURI = "new_lynctouri";
			public const string NewName = "new_name";
			public const string NewOrderId = "new_orderid";
			public const string NewOrderIdName = "new_orderidname";
			public const string NewParsed = "new_parsed";
			public const string NewReferredBy = "new_referredby";
			public const string NewReferredById = "new_referredbyid";
			public const string NewReferredByIdName = "new_referredbyidname";
			public const string NewTelcoVerified = "new_telcoverified";
			public const string NewToAccountId = "new_toaccountid";
			public const string NewToAccountIdName = "new_toaccountidname";
			public const string NewToAccountIdYomiName = "new_toaccountidyominame";
			public const string NewToCallingAreaId = "new_tocallingareaid";
			public const string NewToCallingAreaIdName = "new_tocallingareaidname";
			public const string NewToCallingRegionId = "new_tocallingregionid";
			public const string NewToCallingRegionIdName = "new_tocallingregionidname";
			public const string NewToContactId = "new_tocontactid";
			public const string NewToContactIdName = "new_tocontactidname";
			public const string NewToContactIdYomiName = "new_tocontactidyominame";
			public const string NewToPhoneNumberId = "new_tophonenumberid";
			public const string NewToPhoneNumberIdName = "new_tophonenumberidname";
			public const string NewToTrunkId = "new_totrunkid";
			public const string NewToTrunkIdName = "new_totrunkidname";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string NewVendorInvoiceDate = "new_vendorinvoicedate";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCallrecordId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_calldate")]
        public virtual DateTime? NewCallDate
        {
            get { FillData(); return _newCallDate; }
            set { SetValue<DateTime?>("new_calldate", value); _newCallDate = value; }
        }
        private DateTime? _newCallDate;

		[CrmProperty(LogicalName = "new_calldirection")]
        public virtual Enums.NewCallDirection? NewCallDirection
        {
            get { FillData(); return _newCallDirection; }
            set { SetPicklist("new_calldirection", (int?)value); _newCallDirection = value; }
        }
        private Enums.NewCallDirection? _newCallDirection;

		[CrmProperty(LogicalName = "new_calldirectionname")]
        public virtual string NewCalldirectionName
        {
            get { FillData(); return _newCalldirectionName; }
            set {  _newCalldirectionName = value; }
        }
        private string _newCalldirectionName;

		[CrmProperty(LogicalName = "new_callfrom")]
        public virtual string NewCallFrom
        {
            get { FillData(); return _newCallFrom; }
            set { SetValue<string>("new_callfrom", value); _newCallFrom = value; }
        }
        private string _newCallFrom;

		[CrmProperty(LogicalName = "new_callrecordid")]
        public virtual Guid NewCallrecordId
        {
            get { FillData(); return _newCallrecordId; }
            set {  _newCallrecordId = value; }
        }
        private Guid _newCallrecordId;

		[CrmProperty(LogicalName = "new_callregion")]
        public virtual string NewCallRegion
        {
            get { FillData(); return _newCallRegion; }
            set { SetValue<string>("new_callregion", value); _newCallRegion = value; }
        }
        private string _newCallRegion;

		[CrmProperty(LogicalName = "new_callto")]
        public virtual string NewCallTo
        {
            get { FillData(); return _newCallTo; }
            set { SetValue<string>("new_callto", value); _newCallTo = value; }
        }
        private string _newCallTo;

		[CrmProperty(LogicalName = "new_callvendor")]
        public virtual string NewCallVendor
        {
            get { FillData(); return _newCallVendor; }
            set { SetValue<string>("new_callvendor", value); _newCallVendor = value; }
        }
        private string _newCallVendor;

		[CrmProperty(LogicalName = "new_carriercharge")]
        public virtual decimal? NewCarrierCharge
        {
            get { FillData(); return _newCarrierCharge; }
            set { SetMoney("new_carriercharge", value); _newCarrierCharge = value; }
        }
        private decimal? _newCarrierCharge;

		[CrmProperty(LogicalName = "new_chargetoid", IsLookup = true)]
        public virtual Guid? NewChargeToId
        {
            get { FillData(); return _newChargeToId; }
            set { SetLookup("new_chargetoid", "new_phonenumber", value); _newChargeToId = value; }
        }
        private Guid? _newChargeToId;

		[CrmProperty(LogicalName = "new_chargetoidname")]
        public virtual string NewChargeToIdName
        {
            get { FillData(); return _newChargeToIdName; }
            set {  _newChargeToIdName = value; }
        }
        private string _newChargeToIdName;

		[CrmProperty(LogicalName = "new_disconnectedbyid", IsLookup = true)]
        public virtual Guid? NewDisconnectedById
        {
            get { FillData(); return _newDisconnectedById; }
            set { SetLookup("new_disconnectedbyid", "new_phonenumber", value); _newDisconnectedById = value; }
        }
        private Guid? _newDisconnectedById;

		[CrmProperty(LogicalName = "new_disconnectedbyidname")]
        public virtual string NewDisconnectedByIdName
        {
            get { FillData(); return _newDisconnectedByIdName; }
            set {  _newDisconnectedByIdName = value; }
        }
        private string _newDisconnectedByIdName;

		[CrmProperty(LogicalName = "new_durationactual")]
        public virtual string NewDurationActual
        {
            get { FillData(); return _newDurationActual; }
            set { SetValue<string>("new_durationactual", value); _newDurationActual = value; }
        }
        private string _newDurationActual;

		[CrmProperty(LogicalName = "new_durationcharged")]
        public virtual string NewDurationCharged
        {
            get { FillData(); return _newDurationCharged; }
            set { SetValue<string>("new_durationcharged", value); _newDurationCharged = value; }
        }
        private string _newDurationCharged;

		[CrmProperty(LogicalName = "new_fromaccountid", IsLookup = true)]
        public virtual Guid? NewFromAccountId
        {
            get { FillData(); return _newFromAccountId; }
            set { SetLookup("new_fromaccountid", "account", value); _newFromAccountId = value; }
        }
        private Guid? _newFromAccountId;

		[CrmProperty(LogicalName = "new_fromaccountidname")]
        public virtual string NewFromAccountIdName
        {
            get { FillData(); return _newFromAccountIdName; }
            set {  _newFromAccountIdName = value; }
        }
        private string _newFromAccountIdName;

		[CrmProperty(LogicalName = "new_fromaccountidyominame")]
        public virtual string NewFromAccountIdYomiName
        {
            get { FillData(); return _newFromAccountIdYomiName; }
            set {  _newFromAccountIdYomiName = value; }
        }
        private string _newFromAccountIdYomiName;

		[CrmProperty(LogicalName = "new_fromcallingareaid", IsLookup = true)]
        public virtual Guid? NewFromCallingAreaId
        {
            get { FillData(); return _newFromCallingAreaId; }
            set { SetLookup("new_fromcallingareaid", "new_callingarea", value); _newFromCallingAreaId = value; }
        }
        private Guid? _newFromCallingAreaId;

		[CrmProperty(LogicalName = "new_fromcallingareaidname")]
        public virtual string NewFromCallingAreaIdName
        {
            get { FillData(); return _newFromCallingAreaIdName; }
            set {  _newFromCallingAreaIdName = value; }
        }
        private string _newFromCallingAreaIdName;

		[CrmProperty(LogicalName = "new_fromcallingregionid", IsLookup = true)]
        public virtual Guid? NewFromCallingRegionId
        {
            get { FillData(); return _newFromCallingRegionId; }
            set { SetLookup("new_fromcallingregionid", "new_fromcallingregion", value); _newFromCallingRegionId = value; }
        }
        private Guid? _newFromCallingRegionId;

		[CrmProperty(LogicalName = "new_fromcallingregionidname")]
        public virtual string NewFromCallingRegionIdName
        {
            get { FillData(); return _newFromCallingRegionIdName; }
            set {  _newFromCallingRegionIdName = value; }
        }
        private string _newFromCallingRegionIdName;

		[CrmProperty(LogicalName = "new_fromcontactid", IsLookup = true)]
        public virtual Guid? NewFromContactId
        {
            get { FillData(); return _newFromContactId; }
            set { SetLookup("new_fromcontactid", "contact", value); _newFromContactId = value; }
        }
        private Guid? _newFromContactId;

		[CrmProperty(LogicalName = "new_fromcontactidname")]
        public virtual string NewFromContactIdName
        {
            get { FillData(); return _newFromContactIdName; }
            set {  _newFromContactIdName = value; }
        }
        private string _newFromContactIdName;

		[CrmProperty(LogicalName = "new_fromcontactidyominame")]
        public virtual string NewFromContactIdYomiName
        {
            get { FillData(); return _newFromContactIdYomiName; }
            set {  _newFromContactIdYomiName = value; }
        }
        private string _newFromContactIdYomiName;

		[CrmProperty(LogicalName = "new_fromphonenumberid", IsLookup = true)]
        public virtual Guid? NewFromPhoneNumberId
        {
            get { FillData(); return _newFromPhoneNumberId; }
            set { SetLookup("new_fromphonenumberid", "new_phonenumber", value); _newFromPhoneNumberId = value; }
        }
        private Guid? _newFromPhoneNumberId;

		[CrmProperty(LogicalName = "new_fromphonenumberidname")]
        public virtual string NewFromPhoneNumberIdName
        {
            get { FillData(); return _newFromPhoneNumberIdName; }
            set {  _newFromPhoneNumberIdName = value; }
        }
        private string _newFromPhoneNumberIdName;

		[CrmProperty(LogicalName = "new_fromtrunkid", IsLookup = true)]
        public virtual Guid? NewFromTrunkId
        {
            get { FillData(); return _newFromTrunkId; }
            set { SetLookup("new_fromtrunkid", "new_phonetrunk", value); _newFromTrunkId = value; }
        }
        private Guid? _newFromTrunkId;

		[CrmProperty(LogicalName = "new_fromtrunkidname")]
        public virtual string NewFromTrunkIdName
        {
            get { FillData(); return _newFromTrunkIdName; }
            set {  _newFromTrunkIdName = value; }
        }
        private string _newFromTrunkIdName;

		[CrmProperty(LogicalName = "new_imported")]
        public virtual DateTime? NewImported
        {
            get { FillData(); return _newImported; }
            set { SetValue<DateTime?>("new_imported", value); _newImported = value; }
        }
        private DateTime? _newImported;

		[CrmProperty(LogicalName = "new_lkup_callrecord_callingregion_from", IsLookup = true)]
        public virtual Guid? NewLkupCallRecordCallingRegionFROM
        {
            get { FillData(); return _newLkupCallRecordCallingRegionFROM; }
            set { SetLookup("new_lkup_callrecord_callingregion_from", "new_callingregion", value); _newLkupCallRecordCallingRegionFROM = value; }
        }
        private Guid? _newLkupCallRecordCallingRegionFROM;

		[CrmProperty(LogicalName = "new_lkup_callrecord_callingregion_fromname")]
        public virtual string NewLkupCallRecordCallingRegionFROMName
        {
            get { FillData(); return _newLkupCallRecordCallingRegionFROMName; }
            set {  _newLkupCallRecordCallingRegionFROMName = value; }
        }
        private string _newLkupCallRecordCallingRegionFROMName;

		[CrmProperty(LogicalName = "new_lkup_callrecord_callingregion_to", IsLookup = true)]
        public virtual Guid? NewLkupCallRecordCallingRegionTO
        {
            get { FillData(); return _newLkupCallRecordCallingRegionTO; }
            set { SetLookup("new_lkup_callrecord_callingregion_to", "new_callingregion", value); _newLkupCallRecordCallingRegionTO = value; }
        }
        private Guid? _newLkupCallRecordCallingRegionTO;

		[CrmProperty(LogicalName = "new_lkup_callrecord_callingregion_toname")]
        public virtual string NewLkupCallRecordCallingRegionTOName
        {
            get { FillData(); return _newLkupCallRecordCallingRegionTOName; }
            set {  _newLkupCallRecordCallingRegionTOName = value; }
        }
        private string _newLkupCallRecordCallingRegionTOName;

		[CrmProperty(LogicalName = "new_lynccallduration")]
        public virtual string NewLyncCallDuration
        {
            get { FillData(); return _newLyncCallDuration; }
            set { SetValue<string>("new_lynccallduration", value); _newLyncCallDuration = value; }
        }
        private string _newLyncCallDuration;

		[CrmProperty(LogicalName = "new_lynccallend")]
        public virtual DateTime? NewLyncCallEnd
        {
            get { FillData(); return _newLyncCallEnd; }
            set { SetValue<DateTime?>("new_lynccallend", value); _newLyncCallEnd = value; }
        }
        private DateTime? _newLyncCallEnd;

		[CrmProperty(LogicalName = "new_lynccallstart")]
        public virtual DateTime? NewLyncCallStart
        {
            get { FillData(); return _newLyncCallStart; }
            set { SetValue<DateTime?>("new_lynccallstart", value); _newLyncCallStart = value; }
        }
        private DateTime? _newLyncCallStart;

		[CrmProperty(LogicalName = "new_lynccalltime")]
        public virtual DateTime? NewLyncCallTime
        {
            get { FillData(); return _newLyncCallTime; }
            set { SetValue<DateTime?>("new_lynccalltime", value); _newLyncCallTime = value; }
        }
        private DateTime? _newLyncCallTime;

		[CrmProperty(LogicalName = "new_lyncdisconnectedbynumber")]
        public virtual string NewLyncDisconnectedbyNumber
        {
            get { FillData(); return _newLyncDisconnectedbyNumber; }
            set { SetValue<string>("new_lyncdisconnectedbynumber", value); _newLyncDisconnectedbyNumber = value; }
        }
        private string _newLyncDisconnectedbyNumber;

		[CrmProperty(LogicalName = "new_lyncdisconnectedbyuri")]
        public virtual string NewLyncDisconnectedbyURI
        {
            get { FillData(); return _newLyncDisconnectedbyURI; }
            set { SetValue<string>("new_lyncdisconnectedbyuri", value); _newLyncDisconnectedbyURI = value; }
        }
        private string _newLyncDisconnectedbyURI;

		[CrmProperty(LogicalName = "new_lyncfromgateway")]
        public virtual string NewLyncFromGateway
        {
            get { FillData(); return _newLyncFromGateway; }
            set { SetValue<string>("new_lyncfromgateway", value); _newLyncFromGateway = value; }
        }
        private string _newLyncFromGateway;

		[CrmProperty(LogicalName = "new_lyncfrommediation")]
        public virtual string NewLyncFromMediation
        {
            get { FillData(); return _newLyncFromMediation; }
            set { SetValue<string>("new_lyncfrommediation", value); _newLyncFromMediation = value; }
        }
        private string _newLyncFromMediation;

		[CrmProperty(LogicalName = "new_lyncfromnumber")]
        public virtual string NewLyncFromNumber
        {
            get { FillData(); return _newLyncFromNumber; }
            set { SetValue<string>("new_lyncfromnumber", value); _newLyncFromNumber = value; }
        }
        private string _newLyncFromNumber;

		[CrmProperty(LogicalName = "new_lyncfromuri")]
        public virtual string NewLyncFromURI
        {
            get { FillData(); return _newLyncFromURI; }
            set { SetValue<string>("new_lyncfromuri", value); _newLyncFromURI = value; }
        }
        private string _newLyncFromURI;

		[CrmProperty(LogicalName = "new_lyncreferredbyuri")]
        public virtual string NewLyncReferredbyURI
        {
            get { FillData(); return _newLyncReferredbyURI; }
            set { SetValue<string>("new_lyncreferredbyuri", value); _newLyncReferredbyURI = value; }
        }
        private string _newLyncReferredbyURI;

		[CrmProperty(LogicalName = "new_lynctogateway")]
        public virtual string NewLyncToGateway
        {
            get { FillData(); return _newLyncToGateway; }
            set { SetValue<string>("new_lynctogateway", value); _newLyncToGateway = value; }
        }
        private string _newLyncToGateway;

		[CrmProperty(LogicalName = "new_lynctomediation")]
        public virtual string NewLyncToMediation
        {
            get { FillData(); return _newLyncToMediation; }
            set { SetValue<string>("new_lynctomediation", value); _newLyncToMediation = value; }
        }
        private string _newLyncToMediation;

		[CrmProperty(LogicalName = "new_lynctonumber")]
        public virtual string NewLyncToNumber
        {
            get { FillData(); return _newLyncToNumber; }
            set { SetValue<string>("new_lynctonumber", value); _newLyncToNumber = value; }
        }
        private string _newLyncToNumber;

		[CrmProperty(LogicalName = "new_lynctouri")]
        public virtual string NewLyncToURI
        {
            get { FillData(); return _newLyncToURI; }
            set { SetValue<string>("new_lynctouri", value); _newLyncToURI = value; }
        }
        private string _newLyncToURI;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_orderid", IsLookup = true)]
        public virtual Guid? NewOrderId
        {
            get { FillData(); return _newOrderId; }
            set { SetLookup("new_orderid", "salesorder", value); _newOrderId = value; }
        }
        private Guid? _newOrderId;

		[CrmProperty(LogicalName = "new_orderidname")]
        public virtual string NewOrderIdName
        {
            get { FillData(); return _newOrderIdName; }
            set {  _newOrderIdName = value; }
        }
        private string _newOrderIdName;

		[CrmProperty(LogicalName = "new_parsed")]
        public virtual DateTime? NewParsed
        {
            get { FillData(); return _newParsed; }
            set { SetValue<DateTime?>("new_parsed", value); _newParsed = value; }
        }
        private DateTime? _newParsed;

		[CrmProperty(LogicalName = "new_referredby")]
        public virtual string NewReferredBy
        {
            get { FillData(); return _newReferredBy; }
            set { SetValue<string>("new_referredby", value); _newReferredBy = value; }
        }
        private string _newReferredBy;

		[CrmProperty(LogicalName = "new_referredbyid", IsLookup = true)]
        public virtual Guid? NewReferredById
        {
            get { FillData(); return _newReferredById; }
            set { SetLookup("new_referredbyid", "new_phonenumber", value); _newReferredById = value; }
        }
        private Guid? _newReferredById;

		[CrmProperty(LogicalName = "new_referredbyidname")]
        public virtual string NewReferredByIdName
        {
            get { FillData(); return _newReferredByIdName; }
            set {  _newReferredByIdName = value; }
        }
        private string _newReferredByIdName;

		[CrmProperty(LogicalName = "new_telcoverified")]
        public virtual DateTime? NewTelcoVerified
        {
            get { FillData(); return _newTelcoVerified; }
            set { SetValue<DateTime?>("new_telcoverified", value); _newTelcoVerified = value; }
        }
        private DateTime? _newTelcoVerified;

		[CrmProperty(LogicalName = "new_toaccountid", IsLookup = true)]
        public virtual Guid? NewToAccountId
        {
            get { FillData(); return _newToAccountId; }
            set { SetLookup("new_toaccountid", "account", value); _newToAccountId = value; }
        }
        private Guid? _newToAccountId;

		[CrmProperty(LogicalName = "new_toaccountidname")]
        public virtual string NewToAccountIdName
        {
            get { FillData(); return _newToAccountIdName; }
            set {  _newToAccountIdName = value; }
        }
        private string _newToAccountIdName;

		[CrmProperty(LogicalName = "new_toaccountidyominame")]
        public virtual string NewToAccountIdYomiName
        {
            get { FillData(); return _newToAccountIdYomiName; }
            set {  _newToAccountIdYomiName = value; }
        }
        private string _newToAccountIdYomiName;

		[CrmProperty(LogicalName = "new_tocallingareaid", IsLookup = true)]
        public virtual Guid? NewToCallingAreaId
        {
            get { FillData(); return _newToCallingAreaId; }
            set { SetLookup("new_tocallingareaid", "new_callingarea", value); _newToCallingAreaId = value; }
        }
        private Guid? _newToCallingAreaId;

		[CrmProperty(LogicalName = "new_tocallingareaidname")]
        public virtual string NewToCallingAreaIdName
        {
            get { FillData(); return _newToCallingAreaIdName; }
            set {  _newToCallingAreaIdName = value; }
        }
        private string _newToCallingAreaIdName;

		[CrmProperty(LogicalName = "new_tocallingregionid", IsLookup = true)]
        public virtual Guid? NewToCallingRegionId
        {
            get { FillData(); return _newToCallingRegionId; }
            set { SetLookup("new_tocallingregionid", "new_tocallingregion", value); _newToCallingRegionId = value; }
        }
        private Guid? _newToCallingRegionId;

		[CrmProperty(LogicalName = "new_tocallingregionidname")]
        public virtual string NewToCallingRegionIdName
        {
            get { FillData(); return _newToCallingRegionIdName; }
            set {  _newToCallingRegionIdName = value; }
        }
        private string _newToCallingRegionIdName;

		[CrmProperty(LogicalName = "new_tocontactid", IsLookup = true)]
        public virtual Guid? NewToContactId
        {
            get { FillData(); return _newToContactId; }
            set { SetLookup("new_tocontactid", "contact", value); _newToContactId = value; }
        }
        private Guid? _newToContactId;

		[CrmProperty(LogicalName = "new_tocontactidname")]
        public virtual string NewToContactIdName
        {
            get { FillData(); return _newToContactIdName; }
            set {  _newToContactIdName = value; }
        }
        private string _newToContactIdName;

		[CrmProperty(LogicalName = "new_tocontactidyominame")]
        public virtual string NewToContactIdYomiName
        {
            get { FillData(); return _newToContactIdYomiName; }
            set {  _newToContactIdYomiName = value; }
        }
        private string _newToContactIdYomiName;

		[CrmProperty(LogicalName = "new_tophonenumberid", IsLookup = true)]
        public virtual Guid? NewToPhoneNumberId
        {
            get { FillData(); return _newToPhoneNumberId; }
            set { SetLookup("new_tophonenumberid", "new_phonenumber", value); _newToPhoneNumberId = value; }
        }
        private Guid? _newToPhoneNumberId;

		[CrmProperty(LogicalName = "new_tophonenumberidname")]
        public virtual string NewToPhoneNumberIdName
        {
            get { FillData(); return _newToPhoneNumberIdName; }
            set {  _newToPhoneNumberIdName = value; }
        }
        private string _newToPhoneNumberIdName;

		[CrmProperty(LogicalName = "new_totrunkid", IsLookup = true)]
        public virtual Guid? NewToTrunkId
        {
            get { FillData(); return _newToTrunkId; }
            set { SetLookup("new_totrunkid", "new_phonetrunk", value); _newToTrunkId = value; }
        }
        private Guid? _newToTrunkId;

		[CrmProperty(LogicalName = "new_totrunkidname")]
        public virtual string NewToTrunkIdName
        {
            get { FillData(); return _newToTrunkIdName; }
            set {  _newToTrunkIdName = value; }
        }
        private string _newToTrunkIdName;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "new_vendorinvoicedate")]
        public virtual DateTime? NewVendorInvoiceDate
        {
            get { FillData(); return _newVendorInvoiceDate; }
            set { SetValue<DateTime?>("new_vendorinvoicedate", value); _newVendorInvoiceDate = value; }
        }
        private DateTime? _newVendorInvoiceDate;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_caseactivity", PrimaryKey = "activityid")]
	public partial class NewCaseactivity : CrmEntity
	{
		public class Enums
		{
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Scheduled", Value = 4)]Scheduled = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_caseactivity";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BCC = "bcc";
			public const string CC = "cc";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customers = "customers";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillableTime = "new_billabletime";
			public const string NewCustomerVisable = "new_customervisable";
			public const string NewCustomervisableName = "new_customervisablename";
			public const string NewDueby = "new_dueby";
			public const string NewLinktoCustomerPortal = "new_linktocustomerportal";
			public const string NewLinktocustomerportalName = "new_linktocustomerportalname";
			public const string NewTechnicalDetails = "new_technicaldetails";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Partners = "partners";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "bcc")]
        public virtual object BCC
        {
            get { FillData(); return _bCC; }
            set {  _bCC = value; }
        }
        private object _bCC;

		[CrmProperty(LogicalName = "cc")]
        public virtual object CC
        {
            get { FillData(); return _cC; }
            set {  _cC = value; }
        }
        private object _cC;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customers")]
        public virtual object Customers
        {
            get { FillData(); return _customers; }
            set {  _customers = value; }
        }
        private object _customers;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billabletime")]
        public virtual int? NewBillableTime
        {
            get { FillData(); return _newBillableTime; }
            set { SetValue<int?>("new_billabletime", value); _newBillableTime = value; }
        }
        private int? _newBillableTime;

		[CrmProperty(LogicalName = "new_customervisable")]
        public virtual bool? NewCustomerVisable
        {
            get { FillData(); return _newCustomerVisable; }
            set { SetValue<bool?>("new_customervisable", value); _newCustomerVisable = value; }
        }
        private bool? _newCustomerVisable;

		[CrmProperty(LogicalName = "new_customervisablename")]
        public virtual string NewCustomervisableName
        {
            get { FillData(); return _newCustomervisableName; }
            set {  _newCustomervisableName = value; }
        }
        private string _newCustomervisableName;

		[CrmProperty(LogicalName = "new_dueby")]
        public virtual DateTime? NewDueby
        {
            get { FillData(); return _newDueby; }
            set { SetValue<DateTime?>("new_dueby", value); _newDueby = value; }
        }
        private DateTime? _newDueby;

		[CrmProperty(LogicalName = "new_linktocustomerportal")]
        public virtual bool? NewLinktoCustomerPortal
        {
            get { FillData(); return _newLinktoCustomerPortal; }
            set { SetValue<bool?>("new_linktocustomerportal", value); _newLinktoCustomerPortal = value; }
        }
        private bool? _newLinktoCustomerPortal;

		[CrmProperty(LogicalName = "new_linktocustomerportalname")]
        public virtual string NewLinktocustomerportalName
        {
            get { FillData(); return _newLinktocustomerportalName; }
            set {  _newLinktocustomerportalName = value; }
        }
        private string _newLinktocustomerportalName;

		[CrmProperty(LogicalName = "new_technicaldetails")]
        public virtual string NewTechnicalDetails
        {
            get { FillData(); return _newTechnicalDetails; }
            set { SetValue<string>("new_technicaldetails", value); _newTechnicalDetails = value; }
        }
        private string _newTechnicalDetails;

		[CrmProperty(LogicalName = "optionalattendees")]
        public virtual object OptionalAttendees
        {
            get { FillData(); return _optionalAttendees; }
            set {  _optionalAttendees = value; }
        }
        private object _optionalAttendees;

		[CrmProperty(LogicalName = "organizer")]
        public virtual object Organizer
        {
            get { FillData(); return _organizer; }
            set {  _organizer = value; }
        }
        private object _organizer;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "partners")]
        public virtual object Partners
        {
            get { FillData(); return _partners; }
            set {  _partners = value; }
        }
        private object _partners;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set { SetValue<string>("regardingobjectidname", value); _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set { SetValue<string>("regardingobjectidyominame", value); _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "requiredattendees")]
        public virtual object RequiredAttendees
        {
            get { FillData(); return _requiredAttendees; }
            set {  _requiredAttendees = value; }
        }
        private object _requiredAttendees;

		[CrmProperty(LogicalName = "resources")]
        public virtual object Resources
        {
            get { FillData(); return _resources; }
            set {  _resources = value; }
        }
        private object _resources;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesid")]
        public virtual Guid? SeriesId
        {
            get { FillData(); return _seriesId; }
            set {  _seriesId = value; }
        }
        private Guid? _seriesId;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidname")]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_casetype", PrimaryKey = "new_casetypeid")]
	public partial class NewCasetype : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_casetype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCasetypeId = "new_casetypeid";
			public const string NewName = "new_name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCasetypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_casetypeid")]
        public virtual Guid NewCasetypeId
        {
            get { FillData(); return _newCasetypeId; }
            set {  _newCasetypeId = value; }
        }
        private Guid _newCasetypeId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_cloudhostingpacksettings", PrimaryKey = "new_cloudhostingpacksettingsid")]
	public partial class NewCloudhostingpacksettings : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_cloudhostingpacksettings";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCloudhostingpacksettingsId = "new_cloudhostingpacksettingsid";
			public const string NewKey = "new_key";
			public const string NewName = "new_name";
			public const string NewValue = "new_value";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCloudhostingpacksettingsId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_cloudhostingpacksettingsid")]
        public virtual Guid NewCloudhostingpacksettingsId
        {
            get { FillData(); return _newCloudhostingpacksettingsId; }
            set {  _newCloudhostingpacksettingsId = value; }
        }
        private Guid _newCloudhostingpacksettingsId;

		[CrmProperty(LogicalName = "new_key")]
        public virtual string NewKey
        {
            get { FillData(); return _newKey; }
            set { SetValue<string>("new_key", value); _newKey = value; }
        }
        private string _newKey;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_value")]
        public virtual string NewValue
        {
            get { FillData(); return _newValue; }
            set { SetValue<string>("new_value", value); _newValue = value; }
        }
        private string _newValue;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_cloudpackmodules", PrimaryKey = "new_cloudpackmodulesid")]
	public partial class NewCloudpackmodules : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_cloudpackmodules";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCloudpackmodulesId = "new_cloudpackmodulesid";
			public const string NewKey = "new_key";
			public const string NewName = "new_name";
			public const string NewValue = "new_value";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCloudpackmodulesId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_cloudpackmodulesid")]
        public virtual Guid NewCloudpackmodulesId
        {
            get { FillData(); return _newCloudpackmodulesId; }
            set {  _newCloudpackmodulesId = value; }
        }
        private Guid _newCloudpackmodulesId;

		[CrmProperty(LogicalName = "new_key")]
        public virtual string NewKey
        {
            get { FillData(); return _newKey; }
            set { SetValue<string>("new_key", value); _newKey = value; }
        }
        private string _newKey;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_value")]
        public virtual string NewValue
        {
            get { FillData(); return _newValue; }
            set { SetValue<string>("new_value", value); _newValue = value; }
        }
        private string _newValue;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_contractlinetypes", PrimaryKey = "new_contractlinetypesid")]
	public partial class NewContractlinetypes : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_contractlinetypes";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAccount = "new_account";
			public const string NewAccountName = "new_accountname";
			public const string NewAccountYomiName = "new_accountyominame";
			public const string NewContractlinetypesId = "new_contractlinetypesid";
			public const string NewName = "new_name";
			public const string NewProduct = "new_product";
			public const string NewProductName = "new_productname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewContractlinetypesId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_account", IsLookup = true)]
        public virtual Guid? NewAccount
        {
            get { FillData(); return _newAccount; }
            set { SetLookup("new_account", "account", value); _newAccount = value; }
        }
        private Guid? _newAccount;

		[CrmProperty(LogicalName = "new_accountname")]
        public virtual string NewAccountName
        {
            get { FillData(); return _newAccountName; }
            set {  _newAccountName = value; }
        }
        private string _newAccountName;

		[CrmProperty(LogicalName = "new_accountyominame")]
        public virtual string NewAccountYomiName
        {
            get { FillData(); return _newAccountYomiName; }
            set {  _newAccountYomiName = value; }
        }
        private string _newAccountYomiName;

		[CrmProperty(LogicalName = "new_contractlinetypesid")]
        public virtual Guid NewContractlinetypesId
        {
            get { FillData(); return _newContractlinetypesId; }
            set {  _newContractlinetypesId = value; }
        }
        private Guid _newContractlinetypesId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_product", IsLookup = true)]
        public virtual Guid? NewProduct
        {
            get { FillData(); return _newProduct; }
            set { SetLookup("new_product", "product", value); _newProduct = value; }
        }
        private Guid? _newProduct;

		[CrmProperty(LogicalName = "new_productname")]
        public virtual string NewProductName
        {
            get { FillData(); return _newProductName; }
            set {  _newProductName = value; }
        }
        private string _newProductName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_cpsmproduct", PrimaryKey = "new_cpsmproductid")]
	public partial class NewCpsmproduct : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_cpsmproduct";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCpsmproductId = "new_cpsmproductid";
			public const string NewName = "new_name";
			public const string NewOrder = "new_order";
			public const string NewProductId = "new_productid";
			public const string NewProductIdName = "new_productidname";
			public const string NewRegex = "new_regex";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCpsmproductId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_cpsmproductid")]
        public virtual Guid NewCpsmproductId
        {
            get { FillData(); return _newCpsmproductId; }
            set {  _newCpsmproductId = value; }
        }
        private Guid _newCpsmproductId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_order")]
        public virtual int? NewOrder
        {
            get { FillData(); return _newOrder; }
            set { SetValue<int?>("new_order", value); _newOrder = value; }
        }
        private int? _newOrder;

		[CrmProperty(LogicalName = "new_productid", IsLookup = true)]
        public virtual Guid? NewProductId
        {
            get { FillData(); return _newProductId; }
            set { SetLookup("new_productid", "product", value); _newProductId = value; }
        }
        private Guid? _newProductId;

		[CrmProperty(LogicalName = "new_productidname")]
        public virtual string NewProductIdName
        {
            get { FillData(); return _newProductIdName; }
            set {  _newProductIdName = value; }
        }
        private string _newProductIdName;

		[CrmProperty(LogicalName = "new_regex")]
        public virtual string NewRegex
        {
            get { FillData(); return _newRegex; }
            set { SetValue<string>("new_regex", value); _newRegex = value; }
        }
        private string _newRegex;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_cpsmrecords", PrimaryKey = "new_cpsmrecordsid")]
	public partial class NewCpsmrecords : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_cpsmrecords";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAccountId = "new_accountid";
			public const string NewAccountIdName = "new_accountidname";
			public const string NewAccountIdYomiName = "new_accountidyominame";
			public const string NewBilled = "new_billed";
			public const string NewBilledName = "new_billedname";
			public const string NewBillingID = "new_billingid";
			public const string NewBillingOverride = "new_billingoverride";
			public const string NewBillingoverrideName = "new_billingoverridename";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewCostCentre = "new_costcentre";
			public const string NewCpsmrecordsId = "new_cpsmrecordsid";
			public const string NewCRMProductId = "new_crmproductid";
			public const string NewCRMProductIdName = "new_crmproductidname";
			public const string NewCustomerLabel = "new_customerlabel";
			public const string NewCustomerName = "new_customername";
			public const string NewDateAdded = "new_dateadded";
			public const string NewDateDeleted = "new_datedeleted";
			public const string NewMBUsage = "new_mbusage";
			public const string NewMonthtoBillDate = "new_monthtobilldate";
			public const string NewMSUsageCost = "new_msusagecost";
			public const string NewName = "new_name";
			public const string NewOrderId = "new_orderid";
			public const string NewOrderIdName = "new_orderidname";
			public const string NewParentHierachy = "new_parenthierachy";
			public const string NewProduct = "new_product";
			public const string NewProductCode = "new_productcode";
			public const string NewResellerAccountId = "new_reselleraccountid";
			public const string NewResellerAccountIdName = "new_reselleraccountidname";
			public const string NewResellerAccountIdYomiName = "new_reselleraccountidyominame";
			public const string NewResellerLabel = "new_resellerlabel";
			public const string NewResellerName = "new_resellername";
			public const string NewSalesCost = "new_salescost";
			public const string NewUPN = "new_upn";
			public const string NewUserCount = "new_usercount";
			public const string NewUserLabel = "new_userlabel";
			public const string NewUserName = "new_username";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewCpsmrecordsId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_accountid", IsLookup = true)]
        public virtual Guid? NewAccountId
        {
            get { FillData(); return _newAccountId; }
            set { SetLookup("new_accountid", "account", value); _newAccountId = value; }
        }
        private Guid? _newAccountId;

		[CrmProperty(LogicalName = "new_accountidname")]
        public virtual string NewAccountIdName
        {
            get { FillData(); return _newAccountIdName; }
            set {  _newAccountIdName = value; }
        }
        private string _newAccountIdName;

		[CrmProperty(LogicalName = "new_accountidyominame")]
        public virtual string NewAccountIdYomiName
        {
            get { FillData(); return _newAccountIdYomiName; }
            set {  _newAccountIdYomiName = value; }
        }
        private string _newAccountIdYomiName;

		[CrmProperty(LogicalName = "new_billed")]
        public virtual bool? NewBilled
        {
            get { FillData(); return _newBilled; }
            set { SetValue<bool?>("new_billed", value); _newBilled = value; }
        }
        private bool? _newBilled;

		[CrmProperty(LogicalName = "new_billedname")]
        public virtual string NewBilledName
        {
            get { FillData(); return _newBilledName; }
            set {  _newBilledName = value; }
        }
        private string _newBilledName;

		[CrmProperty(LogicalName = "new_billingid")]
        public virtual string NewBillingID
        {
            get { FillData(); return _newBillingID; }
            set { SetValue<string>("new_billingid", value); _newBillingID = value; }
        }
        private string _newBillingID;

		[CrmProperty(LogicalName = "new_billingoverride")]
        public virtual bool? NewBillingOverride
        {
            get { FillData(); return _newBillingOverride; }
            set { SetValue<bool?>("new_billingoverride", value); _newBillingOverride = value; }
        }
        private bool? _newBillingOverride;

		[CrmProperty(LogicalName = "new_billingoverridename")]
        public virtual string NewBillingoverrideName
        {
            get { FillData(); return _newBillingoverrideName; }
            set {  _newBillingoverrideName = value; }
        }
        private string _newBillingoverrideName;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_costcentre")]
        public virtual string NewCostCentre
        {
            get { FillData(); return _newCostCentre; }
            set { SetValue<string>("new_costcentre", value); _newCostCentre = value; }
        }
        private string _newCostCentre;

		[CrmProperty(LogicalName = "new_cpsmrecordsid")]
        public virtual Guid NewCpsmrecordsId
        {
            get { FillData(); return _newCpsmrecordsId; }
            set {  _newCpsmrecordsId = value; }
        }
        private Guid _newCpsmrecordsId;

		[CrmProperty(LogicalName = "new_crmproductid", IsLookup = true)]
        public virtual Guid? NewCRMProductId
        {
            get { FillData(); return _newCRMProductId; }
            set { SetLookup("new_crmproductid", "product", value); _newCRMProductId = value; }
        }
        private Guid? _newCRMProductId;

		[CrmProperty(LogicalName = "new_crmproductidname")]
        public virtual string NewCRMProductIdName
        {
            get { FillData(); return _newCRMProductIdName; }
            set {  _newCRMProductIdName = value; }
        }
        private string _newCRMProductIdName;

		[CrmProperty(LogicalName = "new_customerlabel")]
        public virtual string NewCustomerLabel
        {
            get { FillData(); return _newCustomerLabel; }
            set { SetValue<string>("new_customerlabel", value); _newCustomerLabel = value; }
        }
        private string _newCustomerLabel;

		[CrmProperty(LogicalName = "new_customername")]
        public virtual string NewCustomerName
        {
            get { FillData(); return _newCustomerName; }
            set { SetValue<string>("new_customername", value); _newCustomerName = value; }
        }
        private string _newCustomerName;

		[CrmProperty(LogicalName = "new_dateadded")]
        public virtual DateTime? NewDateAdded
        {
            get { FillData(); return _newDateAdded; }
            set { SetValue<DateTime?>("new_dateadded", value); _newDateAdded = value; }
        }
        private DateTime? _newDateAdded;

		[CrmProperty(LogicalName = "new_datedeleted")]
        public virtual DateTime? NewDateDeleted
        {
            get { FillData(); return _newDateDeleted; }
            set { SetValue<DateTime?>("new_datedeleted", value); _newDateDeleted = value; }
        }
        private DateTime? _newDateDeleted;

		[CrmProperty(LogicalName = "new_mbusage")]
        public virtual decimal? NewMBUsage
        {
            get { FillData(); return _newMBUsage; }
            set { SetValue<decimal?>("new_mbusage", value); _newMBUsage = value; }
        }
        private decimal? _newMBUsage;

		[CrmProperty(LogicalName = "new_monthtobilldate")]
        public virtual DateTime? NewMonthtoBillDate
        {
            get { FillData(); return _newMonthtoBillDate; }
            set { SetValue<DateTime?>("new_monthtobilldate", value); _newMonthtoBillDate = value; }
        }
        private DateTime? _newMonthtoBillDate;

		[CrmProperty(LogicalName = "new_msusagecost")]
        public virtual decimal? NewMSUsageCost
        {
            get { FillData(); return _newMSUsageCost; }
            set { SetMoney("new_msusagecost", value); _newMSUsageCost = value; }
        }
        private decimal? _newMSUsageCost;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_orderid", IsLookup = true)]
        public virtual Guid? NewOrderId
        {
            get { FillData(); return _newOrderId; }
            set { SetLookup("new_orderid", "salesorder", value); _newOrderId = value; }
        }
        private Guid? _newOrderId;

		[CrmProperty(LogicalName = "new_orderidname")]
        public virtual string NewOrderIdName
        {
            get { FillData(); return _newOrderIdName; }
            set {  _newOrderIdName = value; }
        }
        private string _newOrderIdName;

		[CrmProperty(LogicalName = "new_parenthierachy")]
        public virtual string NewParentHierachy
        {
            get { FillData(); return _newParentHierachy; }
            set { SetValue<string>("new_parenthierachy", value); _newParentHierachy = value; }
        }
        private string _newParentHierachy;

		[CrmProperty(LogicalName = "new_product")]
        public virtual string NewProduct
        {
            get { FillData(); return _newProduct; }
            set { SetValue<string>("new_product", value); _newProduct = value; }
        }
        private string _newProduct;

		[CrmProperty(LogicalName = "new_productcode")]
        public virtual string NewProductCode
        {
            get { FillData(); return _newProductCode; }
            set { SetValue<string>("new_productcode", value); _newProductCode = value; }
        }
        private string _newProductCode;

		[CrmProperty(LogicalName = "new_reselleraccountid", IsLookup = true)]
        public virtual Guid? NewResellerAccountId
        {
            get { FillData(); return _newResellerAccountId; }
            set { SetLookup("new_reselleraccountid", "account", value); _newResellerAccountId = value; }
        }
        private Guid? _newResellerAccountId;

		[CrmProperty(LogicalName = "new_reselleraccountidname")]
        public virtual string NewResellerAccountIdName
        {
            get { FillData(); return _newResellerAccountIdName; }
            set {  _newResellerAccountIdName = value; }
        }
        private string _newResellerAccountIdName;

		[CrmProperty(LogicalName = "new_reselleraccountidyominame")]
        public virtual string NewResellerAccountIdYomiName
        {
            get { FillData(); return _newResellerAccountIdYomiName; }
            set {  _newResellerAccountIdYomiName = value; }
        }
        private string _newResellerAccountIdYomiName;

		[CrmProperty(LogicalName = "new_resellerlabel")]
        public virtual string NewResellerLabel
        {
            get { FillData(); return _newResellerLabel; }
            set { SetValue<string>("new_resellerlabel", value); _newResellerLabel = value; }
        }
        private string _newResellerLabel;

		[CrmProperty(LogicalName = "new_resellername")]
        public virtual string NewResellerName
        {
            get { FillData(); return _newResellerName; }
            set { SetValue<string>("new_resellername", value); _newResellerName = value; }
        }
        private string _newResellerName;

		[CrmProperty(LogicalName = "new_salescost")]
        public virtual decimal? NewSalesCost
        {
            get { FillData(); return _newSalesCost; }
            set { SetMoney("new_salescost", value); _newSalesCost = value; }
        }
        private decimal? _newSalesCost;

		[CrmProperty(LogicalName = "new_upn")]
        public virtual string NewUPN
        {
            get { FillData(); return _newUPN; }
            set { SetValue<string>("new_upn", value); _newUPN = value; }
        }
        private string _newUPN;

		[CrmProperty(LogicalName = "new_usercount")]
        public virtual int? NewUserCount
        {
            get { FillData(); return _newUserCount; }
            set { SetValue<int?>("new_usercount", value); _newUserCount = value; }
        }
        private int? _newUserCount;

		[CrmProperty(LogicalName = "new_userlabel")]
        public virtual string NewUserLabel
        {
            get { FillData(); return _newUserLabel; }
            set { SetValue<string>("new_userlabel", value); _newUserLabel = value; }
        }
        private string _newUserLabel;

		[CrmProperty(LogicalName = "new_username")]
        public virtual string NewUserName
        {
            get { FillData(); return _newUserName; }
            set { SetValue<string>("new_username", value); _newUserName = value; }
        }
        private string _newUserName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_devicetype", PrimaryKey = "new_devicetypeid")]
	public partial class NewDevicetype : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_devicetype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewDeviceShortCode = "new_deviceshortcode";
			public const string NewDevicetypeId = "new_devicetypeid";
			public const string NewName = "new_name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewDevicetypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_deviceshortcode")]
        public virtual string NewDeviceShortCode
        {
            get { FillData(); return _newDeviceShortCode; }
            set { SetValue<string>("new_deviceshortcode", value); _newDeviceShortCode = value; }
        }
        private string _newDeviceShortCode;

		[CrmProperty(LogicalName = "new_devicetypeid")]
        public virtual Guid NewDevicetypeId
        {
            get { FillData(); return _newDevicetypeId; }
            set {  _newDevicetypeId = value; }
        }
        private Guid _newDevicetypeId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_domain", PrimaryKey = "new_domainid")]
	public partial class NewDomain : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_domain";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAnniversaryDate = "new_anniversarydate";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewCostPrice = "new_costprice";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewDomainId = "new_domainid";
			public const string NewName = "new_name";
			public const string NewOrderTemplate = "new_ordertemplate";
			public const string NewOrderTemplateName = "new_ordertemplatename";
			public const string NewProduct = "new_product";
			public const string NewProductName = "new_productname";
			public const string NewSupplierId = "new_supplierid";
			public const string NewSupplierIdName = "new_supplieridname";
			public const string NewSupplierIdYomiName = "new_supplieridyominame";
			public const string NewSupplierReference = "new_supplierreference";
			public const string NewZoneRecords = "new_zonerecords";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewDomainId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_anniversarydate")]
        public virtual DateTime? NewAnniversaryDate
        {
            get { FillData(); return _newAnniversaryDate; }
            set { SetValue<DateTime?>("new_anniversarydate", value); _newAnniversaryDate = value; }
        }
        private DateTime? _newAnniversaryDate;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_costprice")]
        public virtual decimal? NewCostPrice
        {
            get { FillData(); return _newCostPrice; }
            set { SetMoney("new_costprice", value); _newCostPrice = value; }
        }
        private decimal? _newCostPrice;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_domainid")]
        public virtual Guid NewDomainId
        {
            get { FillData(); return _newDomainId; }
            set {  _newDomainId = value; }
        }
        private Guid _newDomainId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_ordertemplate", IsLookup = true)]
        public virtual Guid? NewOrderTemplate
        {
            get { FillData(); return _newOrderTemplate; }
            set { SetLookup("new_ordertemplate", "salesorder", value); _newOrderTemplate = value; }
        }
        private Guid? _newOrderTemplate;

		[CrmProperty(LogicalName = "new_ordertemplatename")]
        public virtual string NewOrderTemplateName
        {
            get { FillData(); return _newOrderTemplateName; }
            set {  _newOrderTemplateName = value; }
        }
        private string _newOrderTemplateName;

		[CrmProperty(LogicalName = "new_product", IsLookup = true)]
        public virtual Guid? NewProduct
        {
            get { FillData(); return _newProduct; }
            set { SetLookup("new_product", "product", value); _newProduct = value; }
        }
        private Guid? _newProduct;

		[CrmProperty(LogicalName = "new_productname")]
        public virtual string NewProductName
        {
            get { FillData(); return _newProductName; }
            set {  _newProductName = value; }
        }
        private string _newProductName;

		[CrmProperty(LogicalName = "new_supplierid", IsLookup = true)]
        public virtual Guid? NewSupplierId
        {
            get { FillData(); return _newSupplierId; }
            set { SetLookup("new_supplierid", "account", value); _newSupplierId = value; }
        }
        private Guid? _newSupplierId;

		[CrmProperty(LogicalName = "new_supplieridname")]
        public virtual string NewSupplierIdName
        {
            get { FillData(); return _newSupplierIdName; }
            set {  _newSupplierIdName = value; }
        }
        private string _newSupplierIdName;

		[CrmProperty(LogicalName = "new_supplieridyominame")]
        public virtual string NewSupplierIdYomiName
        {
            get { FillData(); return _newSupplierIdYomiName; }
            set {  _newSupplierIdYomiName = value; }
        }
        private string _newSupplierIdYomiName;

		[CrmProperty(LogicalName = "new_supplierreference")]
        public virtual string NewSupplierReference
        {
            get { FillData(); return _newSupplierReference; }
            set { SetValue<string>("new_supplierreference", value); _newSupplierReference = value; }
        }
        private string _newSupplierReference;

		[CrmProperty(LogicalName = "new_zonerecords")]
        public virtual string NewZoneRecords
        {
            get { FillData(); return _newZoneRecords; }
            set { SetValue<string>("new_zonerecords", value); _newZoneRecords = value; }
        }
        private string _newZoneRecords;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_fromcallingregion", PrimaryKey = "new_fromcallingregionid")]
	public partial class NewFromcallingregion : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_fromcallingregion";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewFromcallingregionId = "new_fromcallingregionid";
			public const string NewName = "new_name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewFromcallingregionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_fromcallingregionid")]
        public virtual Guid NewFromcallingregionId
        {
            get { FillData(); return _newFromcallingregionId; }
            set {  _newFromcallingregionId = value; }
        }
        private Guid _newFromcallingregionId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_hostedservice", PrimaryKey = "new_hostedserviceid")]
	public partial class NewHostedservice : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_hostedservice";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewHostedserviceId = "new_hostedserviceid";
			public const string NewName = "new_name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewHostedserviceId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_hostedserviceid")]
        public virtual Guid NewHostedserviceId
        {
            get { FillData(); return _newHostedserviceId; }
            set {  _newHostedserviceId = value; }
        }
        private Guid _newHostedserviceId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_incident", PrimaryKey = "new_incidentid")]
	public partial class NewIncident : CrmEntity
	{
		public class Enums
		{
			public enum NewPriority 
			{
				[CrmPicklist(DisplayName = "P1", Value = 100000000)]P1 = 100000000,
				[CrmPicklist(DisplayName = "P2", Value = 100000001)]P2 = 100000001,
				[CrmPicklist(DisplayName = "P3", Value = 100000002)]P3 = 100000002,
				[CrmPicklist(DisplayName = "P4", Value = 100000003)]P4 = 100000003,
				[CrmPicklist(DisplayName = "P5", Value = 100000004)]P5 = 100000004,
				[CrmPicklist(DisplayName = "P6", Value = 100000005)]P6 = 100000005,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Resolved", Value = 100000001)]Resolved = 100000001,
				[CrmPicklist(DisplayName = "Cancelled", Value = 100000000)]Cancelled = 100000000,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_incident";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCaseId = "new_caseid";
			public const string NewCaseIdName = "new_caseidname";
			public const string NewDuration = "new_duration";
			public const string NewEffectedService = "new_effectedservice";
			public const string NewEventSymptoms = "new_eventsymptoms";
			public const string NewFollowUp = "new_followup";
			public const string NewIncidentId = "new_incidentid";
			public const string NewIssue = "new_issue";
			public const string NewName = "new_name";
			public const string NewPriority = "new_priority";
			public const string NewPriorityName = "new_priorityname";
			public const string NewResolution = "new_resolution";
			public const string NewResolutionDate = "new_resolutiondate";
			public const string NewStartDate = "new_startdate";
			public const string NewUpdate1 = "new_update1";
			public const string NewUpdate10 = "new_update10";
			public const string NewUpdate10Time = "new_update10time";
			public const string NewUpdate1Time = "new_update1time";
			public const string NewUpdate2 = "new_update2";
			public const string NewUpdate2Time = "new_update2time";
			public const string NewUpdate3 = "new_update3";
			public const string NewUpdate3Time = "new_update3time";
			public const string NewUpdate4 = "new_update4";
			public const string NewUpdate4Time = "new_update4time";
			public const string NewUpdate5 = "new_update5";
			public const string NewUpdate5Time = "new_update5time";
			public const string NewUpdate6 = "new_update6";
			public const string NewUpdate6Time = "new_update6time";
			public const string NewUpdate7 = "new_update7";
			public const string NewUpdate7Time = "new_update7time";
			public const string NewUpdate8 = "new_update8";
			public const string NewUpdate8Time = "new_update8time";
			public const string NewUpdate9 = "new_update9";
			public const string NewUpdate9Time = "new_update9time";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewIncidentId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_caseid", IsLookup = true)]
        public virtual Guid? NewCaseId
        {
            get { FillData(); return _newCaseId; }
            set { SetLookup("new_caseid", "incident", value); _newCaseId = value; }
        }
        private Guid? _newCaseId;

		[CrmProperty(LogicalName = "new_caseidname")]
        public virtual string NewCaseIdName
        {
            get { FillData(); return _newCaseIdName; }
            set {  _newCaseIdName = value; }
        }
        private string _newCaseIdName;

		[CrmProperty(LogicalName = "new_duration")]
        public virtual int? NewDuration
        {
            get { FillData(); return _newDuration; }
            set { SetValue<int?>("new_duration", value); _newDuration = value; }
        }
        private int? _newDuration;

		[CrmProperty(LogicalName = "new_effectedservice")]
        public virtual string NewEffectedService
        {
            get { FillData(); return _newEffectedService; }
            set { SetValue<string>("new_effectedservice", value); _newEffectedService = value; }
        }
        private string _newEffectedService;

		[CrmProperty(LogicalName = "new_eventsymptoms")]
        public virtual string NewEventSymptoms
        {
            get { FillData(); return _newEventSymptoms; }
            set { SetValue<string>("new_eventsymptoms", value); _newEventSymptoms = value; }
        }
        private string _newEventSymptoms;

		[CrmProperty(LogicalName = "new_followup")]
        public virtual string NewFollowUp
        {
            get { FillData(); return _newFollowUp; }
            set { SetValue<string>("new_followup", value); _newFollowUp = value; }
        }
        private string _newFollowUp;

		[CrmProperty(LogicalName = "new_incidentid")]
        public virtual Guid NewIncidentId
        {
            get { FillData(); return _newIncidentId; }
            set {  _newIncidentId = value; }
        }
        private Guid _newIncidentId;

		[CrmProperty(LogicalName = "new_issue")]
        public virtual string NewIssue
        {
            get { FillData(); return _newIssue; }
            set { SetValue<string>("new_issue", value); _newIssue = value; }
        }
        private string _newIssue;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_priority")]
        public virtual Enums.NewPriority? NewPriority
        {
            get { FillData(); return _newPriority; }
            set { SetPicklist("new_priority", (int?)value); _newPriority = value; }
        }
        private Enums.NewPriority? _newPriority;

		[CrmProperty(LogicalName = "new_priorityname")]
        public virtual string NewPriorityName
        {
            get { FillData(); return _newPriorityName; }
            set {  _newPriorityName = value; }
        }
        private string _newPriorityName;

		[CrmProperty(LogicalName = "new_resolution")]
        public virtual string NewResolution
        {
            get { FillData(); return _newResolution; }
            set { SetValue<string>("new_resolution", value); _newResolution = value; }
        }
        private string _newResolution;

		[CrmProperty(LogicalName = "new_resolutiondate")]
        public virtual DateTime? NewResolutionDate
        {
            get { FillData(); return _newResolutionDate; }
            set { SetValue<DateTime?>("new_resolutiondate", value); _newResolutionDate = value; }
        }
        private DateTime? _newResolutionDate;

		[CrmProperty(LogicalName = "new_startdate")]
        public virtual DateTime? NewStartDate
        {
            get { FillData(); return _newStartDate; }
            set { SetValue<DateTime?>("new_startdate", value); _newStartDate = value; }
        }
        private DateTime? _newStartDate;

		[CrmProperty(LogicalName = "new_update1")]
        public virtual string NewUpdate1
        {
            get { FillData(); return _newUpdate1; }
            set { SetValue<string>("new_update1", value); _newUpdate1 = value; }
        }
        private string _newUpdate1;

		[CrmProperty(LogicalName = "new_update10")]
        public virtual string NewUpdate10
        {
            get { FillData(); return _newUpdate10; }
            set { SetValue<string>("new_update10", value); _newUpdate10 = value; }
        }
        private string _newUpdate10;

		[CrmProperty(LogicalName = "new_update10time")]
        public virtual DateTime? NewUpdate10Time
        {
            get { FillData(); return _newUpdate10Time; }
            set { SetValue<DateTime?>("new_update10time", value); _newUpdate10Time = value; }
        }
        private DateTime? _newUpdate10Time;

		[CrmProperty(LogicalName = "new_update1time")]
        public virtual DateTime? NewUpdate1Time
        {
            get { FillData(); return _newUpdate1Time; }
            set { SetValue<DateTime?>("new_update1time", value); _newUpdate1Time = value; }
        }
        private DateTime? _newUpdate1Time;

		[CrmProperty(LogicalName = "new_update2")]
        public virtual string NewUpdate2
        {
            get { FillData(); return _newUpdate2; }
            set { SetValue<string>("new_update2", value); _newUpdate2 = value; }
        }
        private string _newUpdate2;

		[CrmProperty(LogicalName = "new_update2time")]
        public virtual DateTime? NewUpdate2Time
        {
            get { FillData(); return _newUpdate2Time; }
            set { SetValue<DateTime?>("new_update2time", value); _newUpdate2Time = value; }
        }
        private DateTime? _newUpdate2Time;

		[CrmProperty(LogicalName = "new_update3")]
        public virtual string NewUpdate3
        {
            get { FillData(); return _newUpdate3; }
            set { SetValue<string>("new_update3", value); _newUpdate3 = value; }
        }
        private string _newUpdate3;

		[CrmProperty(LogicalName = "new_update3time")]
        public virtual DateTime? NewUpdate3Time
        {
            get { FillData(); return _newUpdate3Time; }
            set { SetValue<DateTime?>("new_update3time", value); _newUpdate3Time = value; }
        }
        private DateTime? _newUpdate3Time;

		[CrmProperty(LogicalName = "new_update4")]
        public virtual string NewUpdate4
        {
            get { FillData(); return _newUpdate4; }
            set { SetValue<string>("new_update4", value); _newUpdate4 = value; }
        }
        private string _newUpdate4;

		[CrmProperty(LogicalName = "new_update4time")]
        public virtual DateTime? NewUpdate4Time
        {
            get { FillData(); return _newUpdate4Time; }
            set { SetValue<DateTime?>("new_update4time", value); _newUpdate4Time = value; }
        }
        private DateTime? _newUpdate4Time;

		[CrmProperty(LogicalName = "new_update5")]
        public virtual string NewUpdate5
        {
            get { FillData(); return _newUpdate5; }
            set { SetValue<string>("new_update5", value); _newUpdate5 = value; }
        }
        private string _newUpdate5;

		[CrmProperty(LogicalName = "new_update5time")]
        public virtual DateTime? NewUpdate5Time
        {
            get { FillData(); return _newUpdate5Time; }
            set { SetValue<DateTime?>("new_update5time", value); _newUpdate5Time = value; }
        }
        private DateTime? _newUpdate5Time;

		[CrmProperty(LogicalName = "new_update6")]
        public virtual string NewUpdate6
        {
            get { FillData(); return _newUpdate6; }
            set { SetValue<string>("new_update6", value); _newUpdate6 = value; }
        }
        private string _newUpdate6;

		[CrmProperty(LogicalName = "new_update6time")]
        public virtual DateTime? NewUpdate6Time
        {
            get { FillData(); return _newUpdate6Time; }
            set { SetValue<DateTime?>("new_update6time", value); _newUpdate6Time = value; }
        }
        private DateTime? _newUpdate6Time;

		[CrmProperty(LogicalName = "new_update7")]
        public virtual string NewUpdate7
        {
            get { FillData(); return _newUpdate7; }
            set { SetValue<string>("new_update7", value); _newUpdate7 = value; }
        }
        private string _newUpdate7;

		[CrmProperty(LogicalName = "new_update7time")]
        public virtual DateTime? NewUpdate7Time
        {
            get { FillData(); return _newUpdate7Time; }
            set { SetValue<DateTime?>("new_update7time", value); _newUpdate7Time = value; }
        }
        private DateTime? _newUpdate7Time;

		[CrmProperty(LogicalName = "new_update8")]
        public virtual string NewUpdate8
        {
            get { FillData(); return _newUpdate8; }
            set { SetValue<string>("new_update8", value); _newUpdate8 = value; }
        }
        private string _newUpdate8;

		[CrmProperty(LogicalName = "new_update8time")]
        public virtual DateTime? NewUpdate8Time
        {
            get { FillData(); return _newUpdate8Time; }
            set { SetValue<DateTime?>("new_update8time", value); _newUpdate8Time = value; }
        }
        private DateTime? _newUpdate8Time;

		[CrmProperty(LogicalName = "new_update9")]
        public virtual string NewUpdate9
        {
            get { FillData(); return _newUpdate9; }
            set { SetValue<string>("new_update9", value); _newUpdate9 = value; }
        }
        private string _newUpdate9;

		[CrmProperty(LogicalName = "new_update9time")]
        public virtual DateTime? NewUpdate9Time
        {
            get { FillData(); return _newUpdate9Time; }
            set { SetValue<DateTime?>("new_update9time", value); _newUpdate9Time = value; }
        }
        private DateTime? _newUpdate9Time;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_ipaddress", PrimaryKey = "new_ipaddressid")]
	public partial class NewIpaddress : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_ipaddress";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAvailable = "new_available";
			public const string NewAvailableName = "new_availablename";
			public const string NewIpaddressId = "new_ipaddressid";
			public const string NewName = "new_name";
			public const string NewNetwork = "new_network";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewIpaddressId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_available")]
        public virtual bool? NewAvailable
        {
            get { FillData(); return _newAvailable; }
            set { SetValue<bool?>("new_available", value); _newAvailable = value; }
        }
        private bool? _newAvailable;

		[CrmProperty(LogicalName = "new_availablename")]
        public virtual string NewAvailableName
        {
            get { FillData(); return _newAvailableName; }
            set {  _newAvailableName = value; }
        }
        private string _newAvailableName;

		[CrmProperty(LogicalName = "new_ipaddressid")]
        public virtual Guid NewIpaddressId
        {
            get { FillData(); return _newIpaddressId; }
            set {  _newIpaddressId = value; }
        }
        private Guid _newIpaddressId;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_network")]
        public virtual string NewNetwork
        {
            get { FillData(); return _newNetwork; }
            set { SetValue<string>("new_network", value); _newNetwork = value; }
        }
        private string _newNetwork;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_new_billingrecord_salesorderdetail_nn", PrimaryKey = "new_new_billingrecord_salesorderdetail_nnid")]
	public partial class NewNewBillingrecordSalesorderdetailNn : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "new_new_billingrecord_salesorderdetail_nn";
			
			public const string NewBillingrecordid = "new_billingrecordid";
			public const string NewNewBillingrecordSalesorderdetailNnId = "new_new_billingrecord_salesorderdetail_nnid";
			public const string Salesorderdetailid = "salesorderdetailid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewNewBillingrecordSalesorderdetailNnId; }
		}

		[CrmProperty(LogicalName = "new_billingrecordid")]
        public virtual Guid? NewBillingrecordid
        {
            get { FillData(); return _newBillingrecordid; }
            set {  _newBillingrecordid = value; }
        }
        private Guid? _newBillingrecordid;

		[CrmProperty(LogicalName = "new_new_billingrecord_salesorderdetail_nnid")]
        public virtual Guid NewNewBillingrecordSalesorderdetailNnId
        {
            get { FillData(); return _newNewBillingrecordSalesorderdetailNnId; }
            set {  _newNewBillingrecordSalesorderdetailNnId = value; }
        }
        private Guid _newNewBillingrecordSalesorderdetailNnId;

		[CrmProperty(LogicalName = "salesorderdetailid")]
        public virtual Guid? Salesorderdetailid
        {
            get { FillData(); return _salesorderdetailid; }
            set {  _salesorderdetailid = value; }
        }
        private Guid? _salesorderdetailid;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_orderitems", PrimaryKey = "new_orderitemsid")]
	public partial class NewOrderitems : CrmEntity
	{
		public class Enums
		{
			public enum NewAssetType 
			{
				[CrmPicklist(DisplayName = "Internal Asset", Value = 100000000)]InternalAsset = 100000000,
				[CrmPicklist(DisplayName = "Customer Asset", Value = 100000001)]CustomerAsset = 100000001,
				[CrmPicklist(DisplayName = "Consumables", Value = 100000003)]Consumables = 100000003,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_orderitems";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAssetType = "new_assettype";
			public const string NewAssettypeName = "new_assettypename";
			public const string NewBackOrder = "new_backorder";
			public const string NewBackorderName = "new_backordername";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewBuyPricetotal = "new_buypricetotal";
			public const string NewCustomerQuotedtotal = "new_customerquotedtotal";
			public const string NewDateordered = "new_dateordered";
			public const string NewDeviceType = "new_devicetype";
			public const string NewDeviceTypeName = "new_devicetypename";
			public const string NewExpectedatMHA = "new_expectedatmha";
			public const string NewName = "new_name";
			public const string NewOnChargeCustomer = "new_onchargecustomer";
			public const string NewOnchargecustomerName = "new_onchargecustomername";
			public const string NewOrderitemsId = "new_orderitemsid";
			public const string NewPurchaseOrderId = "new_purchaseorderid";
			public const string NewPurchaseOrderIdName = "new_purchaseorderidname";
			public const string NewQuantity = "new_quantity";
			public const string NewReceivedatMHA = "new_receivedatmha";
			public const string NewSerialNumbers = "new_serialnumbers";
			public const string NewVendorCode = "new_vendorcode";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string NewVendorInv = "new_vendorinv";
			public const string NewVendorOrder = "new_vendororder";
			public const string NewWarrantyPeriod = "new_warrantyperiod";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewOrderitemsId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_assettype")]
        public virtual Enums.NewAssetType? NewAssetType
        {
            get { FillData(); return _newAssetType; }
            set { SetPicklist("new_assettype", (int?)value); _newAssetType = value; }
        }
        private Enums.NewAssetType? _newAssetType;

		[CrmProperty(LogicalName = "new_assettypename")]
        public virtual string NewAssettypeName
        {
            get { FillData(); return _newAssettypeName; }
            set {  _newAssettypeName = value; }
        }
        private string _newAssettypeName;

		[CrmProperty(LogicalName = "new_backorder")]
        public virtual bool? NewBackOrder
        {
            get { FillData(); return _newBackOrder; }
            set { SetValue<bool?>("new_backorder", value); _newBackOrder = value; }
        }
        private bool? _newBackOrder;

		[CrmProperty(LogicalName = "new_backordername")]
        public virtual string NewBackorderName
        {
            get { FillData(); return _newBackorderName; }
            set {  _newBackorderName = value; }
        }
        private string _newBackorderName;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_buypricetotal")]
        public virtual decimal? NewBuyPricetotal
        {
            get { FillData(); return _newBuyPricetotal; }
            set { SetMoney("new_buypricetotal", value); _newBuyPricetotal = value; }
        }
        private decimal? _newBuyPricetotal;

		[CrmProperty(LogicalName = "new_customerquotedtotal")]
        public virtual string NewCustomerQuotedtotal
        {
            get { FillData(); return _newCustomerQuotedtotal; }
            set { SetValue<string>("new_customerquotedtotal", value); _newCustomerQuotedtotal = value; }
        }
        private string _newCustomerQuotedtotal;

		[CrmProperty(LogicalName = "new_dateordered")]
        public virtual DateTime? NewDateordered
        {
            get { FillData(); return _newDateordered; }
            set { SetValue<DateTime?>("new_dateordered", value); _newDateordered = value; }
        }
        private DateTime? _newDateordered;

		[CrmProperty(LogicalName = "new_devicetype", IsLookup = true)]
        public virtual Guid? NewDeviceType
        {
            get { FillData(); return _newDeviceType; }
            set { SetLookup("new_devicetype", "new_devicetype", value); _newDeviceType = value; }
        }
        private Guid? _newDeviceType;

		[CrmProperty(LogicalName = "new_devicetypename")]
        public virtual string NewDeviceTypeName
        {
            get { FillData(); return _newDeviceTypeName; }
            set {  _newDeviceTypeName = value; }
        }
        private string _newDeviceTypeName;

		[CrmProperty(LogicalName = "new_expectedatmha")]
        public virtual DateTime? NewExpectedatMHA
        {
            get { FillData(); return _newExpectedatMHA; }
            set { SetValue<DateTime?>("new_expectedatmha", value); _newExpectedatMHA = value; }
        }
        private DateTime? _newExpectedatMHA;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_onchargecustomer")]
        public virtual bool? NewOnChargeCustomer
        {
            get { FillData(); return _newOnChargeCustomer; }
            set { SetValue<bool?>("new_onchargecustomer", value); _newOnChargeCustomer = value; }
        }
        private bool? _newOnChargeCustomer;

		[CrmProperty(LogicalName = "new_onchargecustomername")]
        public virtual string NewOnchargecustomerName
        {
            get { FillData(); return _newOnchargecustomerName; }
            set {  _newOnchargecustomerName = value; }
        }
        private string _newOnchargecustomerName;

		[CrmProperty(LogicalName = "new_orderitemsid")]
        public virtual Guid NewOrderitemsId
        {
            get { FillData(); return _newOrderitemsId; }
            set {  _newOrderitemsId = value; }
        }
        private Guid _newOrderitemsId;

		[CrmProperty(LogicalName = "new_purchaseorderid", IsLookup = true)]
        public virtual Guid? NewPurchaseOrderId
        {
            get { FillData(); return _newPurchaseOrderId; }
            set { SetLookup("new_purchaseorderid", "new_purchaseorder", value); _newPurchaseOrderId = value; }
        }
        private Guid? _newPurchaseOrderId;

		[CrmProperty(LogicalName = "new_purchaseorderidname")]
        public virtual string NewPurchaseOrderIdName
        {
            get { FillData(); return _newPurchaseOrderIdName; }
            set {  _newPurchaseOrderIdName = value; }
        }
        private string _newPurchaseOrderIdName;

		[CrmProperty(LogicalName = "new_quantity")]
        public virtual int? NewQuantity
        {
            get { FillData(); return _newQuantity; }
            set { SetValue<int?>("new_quantity", value); _newQuantity = value; }
        }
        private int? _newQuantity;

		[CrmProperty(LogicalName = "new_receivedatmha")]
        public virtual DateTime? NewReceivedatMHA
        {
            get { FillData(); return _newReceivedatMHA; }
            set { SetValue<DateTime?>("new_receivedatmha", value); _newReceivedatMHA = value; }
        }
        private DateTime? _newReceivedatMHA;

		[CrmProperty(LogicalName = "new_serialnumbers")]
        public virtual string NewSerialNumbers
        {
            get { FillData(); return _newSerialNumbers; }
            set { SetValue<string>("new_serialnumbers", value); _newSerialNumbers = value; }
        }
        private string _newSerialNumbers;

		[CrmProperty(LogicalName = "new_vendorcode")]
        public virtual string NewVendorCode
        {
            get { FillData(); return _newVendorCode; }
            set { SetValue<string>("new_vendorcode", value); _newVendorCode = value; }
        }
        private string _newVendorCode;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "new_vendorinv")]
        public virtual string NewVendorInv
        {
            get { FillData(); return _newVendorInv; }
            set { SetValue<string>("new_vendorinv", value); _newVendorInv = value; }
        }
        private string _newVendorInv;

		[CrmProperty(LogicalName = "new_vendororder")]
        public virtual string NewVendorOrder
        {
            get { FillData(); return _newVendorOrder; }
            set { SetValue<string>("new_vendororder", value); _newVendorOrder = value; }
        }
        private string _newVendorOrder;

		[CrmProperty(LogicalName = "new_warrantyperiod")]
        public virtual string NewWarrantyPeriod
        {
            get { FillData(); return _newWarrantyPeriod; }
            set { SetValue<string>("new_warrantyperiod", value); _newWarrantyPeriod = value; }
        }
        private string _newWarrantyPeriod;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_orderquote", PrimaryKey = "new_orderquoteid")]
	public partial class NewOrderquote : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = ".", Value = 100000001)]_ = 100000001,
				[CrmPicklist(DisplayName = "Accept", Value = 1)]Accept = 1,
				[CrmPicklist(DisplayName = "Reject", Value = 100000000)]Reject = 100000000,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_orderquote";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewOrdered = "new_ordered";
			public const string NewOrderedName = "new_orderedname";
			public const string NewOrderquoteId = "new_orderquoteid";
			public const string NewProductCode = "new_productcode";
			public const string NewPurchaseOrderId = "new_purchaseorderid";
			public const string NewPurchaseOrderIdName = "new_purchaseorderidname";
			public const string NewQuantity = "new_quantity";
			public const string NewQuote = "new_quote";
			public const string NewTotalPriceexclGST = "new_totalpriceexclgst";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewOrderquoteId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_ordered")]
        public virtual bool? NewOrdered
        {
            get { FillData(); return _newOrdered; }
            set { SetValue<bool?>("new_ordered", value); _newOrdered = value; }
        }
        private bool? _newOrdered;

		[CrmProperty(LogicalName = "new_orderedname")]
        public virtual string NewOrderedName
        {
            get { FillData(); return _newOrderedName; }
            set {  _newOrderedName = value; }
        }
        private string _newOrderedName;

		[CrmProperty(LogicalName = "new_orderquoteid")]
        public virtual Guid NewOrderquoteId
        {
            get { FillData(); return _newOrderquoteId; }
            set {  _newOrderquoteId = value; }
        }
        private Guid _newOrderquoteId;

		[CrmProperty(LogicalName = "new_productcode")]
        public virtual string NewProductCode
        {
            get { FillData(); return _newProductCode; }
            set { SetValue<string>("new_productcode", value); _newProductCode = value; }
        }
        private string _newProductCode;

		[CrmProperty(LogicalName = "new_purchaseorderid", IsLookup = true)]
        public virtual Guid? NewPurchaseOrderId
        {
            get { FillData(); return _newPurchaseOrderId; }
            set { SetLookup("new_purchaseorderid", "new_purchaseorder", value); _newPurchaseOrderId = value; }
        }
        private Guid? _newPurchaseOrderId;

		[CrmProperty(LogicalName = "new_purchaseorderidname")]
        public virtual string NewPurchaseOrderIdName
        {
            get { FillData(); return _newPurchaseOrderIdName; }
            set {  _newPurchaseOrderIdName = value; }
        }
        private string _newPurchaseOrderIdName;

		[CrmProperty(LogicalName = "new_quantity")]
        public virtual int? NewQuantity
        {
            get { FillData(); return _newQuantity; }
            set { SetValue<int?>("new_quantity", value); _newQuantity = value; }
        }
        private int? _newQuantity;

		[CrmProperty(LogicalName = "new_quote")]
        public virtual string NewQuote
        {
            get { FillData(); return _newQuote; }
            set { SetValue<string>("new_quote", value); _newQuote = value; }
        }
        private string _newQuote;

		[CrmProperty(LogicalName = "new_totalpriceexclgst")]
        public virtual decimal? NewTotalPriceexclGST
        {
            get { FillData(); return _newTotalPriceexclGST; }
            set { SetMoney("new_totalpriceexclgst", value); _newTotalPriceexclGST = value; }
        }
        private decimal? _newTotalPriceexclGST;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phonegateway", PrimaryKey = "new_phonegatewayid")]
	public partial class NewPhonegateway : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phonegateway";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewGatewayAddress = "new_gatewayaddress";
			public const string NewName = "new_name";
			public const string NewPhonegatewayId = "new_phonegatewayid";
			public const string NewRelPhoneGatewayId = "new_rel_phonegatewayid";
			public const string NewRelPhoneGatewayIdName = "new_rel_phonegatewayidname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhonegatewayId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_gatewayaddress")]
        public virtual string NewGatewayAddress
        {
            get { FillData(); return _newGatewayAddress; }
            set { SetValue<string>("new_gatewayaddress", value); _newGatewayAddress = value; }
        }
        private string _newGatewayAddress;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_phonegatewayid")]
        public virtual Guid NewPhonegatewayId
        {
            get { FillData(); return _newPhonegatewayId; }
            set {  _newPhonegatewayId = value; }
        }
        private Guid _newPhonegatewayId;

		[CrmProperty(LogicalName = "new_rel_phonegatewayid", IsLookup = true)]
        public virtual Guid? NewRelPhoneGatewayId
        {
            get { FillData(); return _newRelPhoneGatewayId; }
            set { SetLookup("new_rel_phonegatewayid", "new_phonetrunk", value); _newRelPhoneGatewayId = value; }
        }
        private Guid? _newRelPhoneGatewayId;

		[CrmProperty(LogicalName = "new_rel_phonegatewayidname")]
        public virtual string NewRelPhoneGatewayIdName
        {
            get { FillData(); return _newRelPhoneGatewayIdName; }
            set {  _newRelPhoneGatewayIdName = value; }
        }
        private string _newRelPhoneGatewayIdName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phonenormalizationrule", PrimaryKey = "new_phonenormalizationruleid")]
	public partial class NewPhonenormalizationrule : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phonenormalizationrule";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewOrder = "new_order";
			public const string NewPatterntomatch = "new_patterntomatch";
			public const string NewPhonenormalizationruleId = "new_phonenormalizationruleid";
			public const string NewTranslationRule = "new_translationrule";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhonenormalizationruleId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_order")]
        public virtual int? NewOrder
        {
            get { FillData(); return _newOrder; }
            set { SetValue<int?>("new_order", value); _newOrder = value; }
        }
        private int? _newOrder;

		[CrmProperty(LogicalName = "new_patterntomatch")]
        public virtual string NewPatterntomatch
        {
            get { FillData(); return _newPatterntomatch; }
            set { SetValue<string>("new_patterntomatch", value); _newPatterntomatch = value; }
        }
        private string _newPatterntomatch;

		[CrmProperty(LogicalName = "new_phonenormalizationruleid")]
        public virtual Guid NewPhonenormalizationruleId
        {
            get { FillData(); return _newPhonenormalizationruleId; }
            set {  _newPhonenormalizationruleId = value; }
        }
        private Guid _newPhonenormalizationruleId;

		[CrmProperty(LogicalName = "new_translationrule")]
        public virtual string NewTranslationRule
        {
            get { FillData(); return _newTranslationRule; }
            set { SetValue<string>("new_translationrule", value); _newTranslationRule = value; }
        }
        private string _newTranslationRule;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phonenumber", PrimaryKey = "new_phonenumberid")]
	public partial class NewPhonenumber : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phonenumber";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAccountId = "new_accountid";
			public const string NewAccountIdName = "new_accountidname";
			public const string NewAccountIdYomiName = "new_accountidyominame";
			public const string NewAssociatedNumbersId = "new_associatednumbersid";
			public const string NewAssociatedNumbersIdName = "new_associatednumbersidname";
			public const string NewAssociatedPhoneNumbersId = "new_associatedphonenumbersid";
			public const string NewAssociatedPhoneNumbersIdName = "new_associatedphonenumbersidname";
			public const string NewCallingAreaId = "new_callingareaid";
			public const string NewCallingAreaIdName = "new_callingareaidname";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewDisplayName = "new_displayname";
			public const string NewFromCallingRegionId = "new_fromcallingregionid";
			public const string NewFromCallingRegionIdName = "new_fromcallingregionidname";
			public const string NewLocalCallingRegionId = "new_localcallingregionid";
			public const string NewLocalCallingRegionIdName = "new_localcallingregionidname";
			public const string NewNumber = "new_number";
			public const string NewNumberBlockId = "new_numberblockid";
			public const string NewNumberBlockIdName = "new_numberblockidname";
			public const string NewNumberTypeId = "new_numbertypeid";
			public const string NewNumberTypeIdName = "new_numbertypeidname";
			public const string NewPhoneExtension = "new_phoneextension";
			public const string NewPhonenumberId = "new_phonenumberid";
			public const string NewPhoneTrunkId = "new_phonetrunkid";
			public const string NewPhoneTrunkIdName = "new_phonetrunkidname";
			public const string NewPilotNumber = "new_pilotnumber";
			public const string NewPilotnumberName = "new_pilotnumbername";
			public const string NewServiceName = "new_servicename";
			public const string NewSIPURI = "new_sipuri";
			public const string NewSiteLocationId = "new_sitelocationid";
			public const string NewSiteLocationIdName = "new_sitelocationidname";
			public const string NewTrunkFailForwardNumber = "new_trunkfailforwardnumber";
			public const string NewUMEnabled = "new_umenabled";
			public const string NewUmenabledName = "new_umenabledname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhonenumberId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_accountid", IsLookup = true)]
        public virtual Guid? NewAccountId
        {
            get { FillData(); return _newAccountId; }
            set { SetLookup("new_accountid", "account", value); _newAccountId = value; }
        }
        private Guid? _newAccountId;

		[CrmProperty(LogicalName = "new_accountidname")]
        public virtual string NewAccountIdName
        {
            get { FillData(); return _newAccountIdName; }
            set {  _newAccountIdName = value; }
        }
        private string _newAccountIdName;

		[CrmProperty(LogicalName = "new_accountidyominame")]
        public virtual string NewAccountIdYomiName
        {
            get { FillData(); return _newAccountIdYomiName; }
            set {  _newAccountIdYomiName = value; }
        }
        private string _newAccountIdYomiName;

		[CrmProperty(LogicalName = "new_associatednumbersid", IsLookup = true)]
        public virtual Guid? NewAssociatedNumbersId
        {
            get { FillData(); return _newAssociatedNumbersId; }
            set { SetLookup("new_associatednumbersid", "new_phonenumber", value); _newAssociatedNumbersId = value; }
        }
        private Guid? _newAssociatedNumbersId;

		[CrmProperty(LogicalName = "new_associatednumbersidname")]
        public virtual string NewAssociatedNumbersIdName
        {
            get { FillData(); return _newAssociatedNumbersIdName; }
            set {  _newAssociatedNumbersIdName = value; }
        }
        private string _newAssociatedNumbersIdName;

		[CrmProperty(LogicalName = "new_associatedphonenumbersid", IsLookup = true)]
        public virtual Guid? NewAssociatedPhoneNumbersId
        {
            get { FillData(); return _newAssociatedPhoneNumbersId; }
            set { SetLookup("new_associatedphonenumbersid", "new_phoneoption", value); _newAssociatedPhoneNumbersId = value; }
        }
        private Guid? _newAssociatedPhoneNumbersId;

		[CrmProperty(LogicalName = "new_associatedphonenumbersidname")]
        public virtual string NewAssociatedPhoneNumbersIdName
        {
            get { FillData(); return _newAssociatedPhoneNumbersIdName; }
            set {  _newAssociatedPhoneNumbersIdName = value; }
        }
        private string _newAssociatedPhoneNumbersIdName;

		[CrmProperty(LogicalName = "new_callingareaid", IsLookup = true)]
        public virtual Guid? NewCallingAreaId
        {
            get { FillData(); return _newCallingAreaId; }
            set { SetLookup("new_callingareaid", "new_callingarea", value); _newCallingAreaId = value; }
        }
        private Guid? _newCallingAreaId;

		[CrmProperty(LogicalName = "new_callingareaidname")]
        public virtual string NewCallingAreaIdName
        {
            get { FillData(); return _newCallingAreaIdName; }
            set {  _newCallingAreaIdName = value; }
        }
        private string _newCallingAreaIdName;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_displayname")]
        public virtual string NewDisplayName
        {
            get { FillData(); return _newDisplayName; }
            set { SetValue<string>("new_displayname", value); _newDisplayName = value; }
        }
        private string _newDisplayName;

		[CrmProperty(LogicalName = "new_fromcallingregionid", IsLookup = true)]
        public virtual Guid? NewFromCallingRegionId
        {
            get { FillData(); return _newFromCallingRegionId; }
            set { SetLookup("new_fromcallingregionid", "new_fromcallingregion", value); _newFromCallingRegionId = value; }
        }
        private Guid? _newFromCallingRegionId;

		[CrmProperty(LogicalName = "new_fromcallingregionidname")]
        public virtual string NewFromCallingRegionIdName
        {
            get { FillData(); return _newFromCallingRegionIdName; }
            set {  _newFromCallingRegionIdName = value; }
        }
        private string _newFromCallingRegionIdName;

		[CrmProperty(LogicalName = "new_localcallingregionid", IsLookup = true)]
        public virtual Guid? NewLocalCallingRegionId
        {
            get { FillData(); return _newLocalCallingRegionId; }
            set { SetLookup("new_localcallingregionid", "new_callingregion", value); _newLocalCallingRegionId = value; }
        }
        private Guid? _newLocalCallingRegionId;

		[CrmProperty(LogicalName = "new_localcallingregionidname")]
        public virtual string NewLocalCallingRegionIdName
        {
            get { FillData(); return _newLocalCallingRegionIdName; }
            set {  _newLocalCallingRegionIdName = value; }
        }
        private string _newLocalCallingRegionIdName;

		[CrmProperty(LogicalName = "new_number")]
        public virtual string NewNumber
        {
            get { FillData(); return _newNumber; }
            set { SetValue<string>("new_number", value); _newNumber = value; }
        }
        private string _newNumber;

		[CrmProperty(LogicalName = "new_numberblockid", IsLookup = true)]
        public virtual Guid? NewNumberBlockId
        {
            get { FillData(); return _newNumberBlockId; }
            set { SetLookup("new_numberblockid", "new_phonenumberblock", value); _newNumberBlockId = value; }
        }
        private Guid? _newNumberBlockId;

		[CrmProperty(LogicalName = "new_numberblockidname")]
        public virtual string NewNumberBlockIdName
        {
            get { FillData(); return _newNumberBlockIdName; }
            set {  _newNumberBlockIdName = value; }
        }
        private string _newNumberBlockIdName;

		[CrmProperty(LogicalName = "new_numbertypeid", IsLookup = true)]
        public virtual Guid? NewNumberTypeId
        {
            get { FillData(); return _newNumberTypeId; }
            set { SetLookup("new_numbertypeid", "new_phonenumbertype", value); _newNumberTypeId = value; }
        }
        private Guid? _newNumberTypeId;

		[CrmProperty(LogicalName = "new_numbertypeidname")]
        public virtual string NewNumberTypeIdName
        {
            get { FillData(); return _newNumberTypeIdName; }
            set {  _newNumberTypeIdName = value; }
        }
        private string _newNumberTypeIdName;

		[CrmProperty(LogicalName = "new_phoneextension")]
        public virtual string NewPhoneExtension
        {
            get { FillData(); return _newPhoneExtension; }
            set { SetValue<string>("new_phoneextension", value); _newPhoneExtension = value; }
        }
        private string _newPhoneExtension;

		[CrmProperty(LogicalName = "new_phonenumberid")]
        public virtual Guid NewPhonenumberId
        {
            get { FillData(); return _newPhonenumberId; }
            set {  _newPhonenumberId = value; }
        }
        private Guid _newPhonenumberId;

		[CrmProperty(LogicalName = "new_phonetrunkid", IsLookup = true)]
        public virtual Guid? NewPhoneTrunkId
        {
            get { FillData(); return _newPhoneTrunkId; }
            set { SetLookup("new_phonetrunkid", "new_phonetrunk", value); _newPhoneTrunkId = value; }
        }
        private Guid? _newPhoneTrunkId;

		[CrmProperty(LogicalName = "new_phonetrunkidname")]
        public virtual string NewPhoneTrunkIdName
        {
            get { FillData(); return _newPhoneTrunkIdName; }
            set {  _newPhoneTrunkIdName = value; }
        }
        private string _newPhoneTrunkIdName;

		[CrmProperty(LogicalName = "new_pilotnumber")]
        public virtual bool? NewPilotNumber
        {
            get { FillData(); return _newPilotNumber; }
            set { SetValue<bool?>("new_pilotnumber", value); _newPilotNumber = value; }
        }
        private bool? _newPilotNumber;

		[CrmProperty(LogicalName = "new_pilotnumbername")]
        public virtual string NewPilotnumberName
        {
            get { FillData(); return _newPilotnumberName; }
            set {  _newPilotnumberName = value; }
        }
        private string _newPilotnumberName;

		[CrmProperty(LogicalName = "new_servicename")]
        public virtual string NewServiceName
        {
            get { FillData(); return _newServiceName; }
            set { SetValue<string>("new_servicename", value); _newServiceName = value; }
        }
        private string _newServiceName;

		[CrmProperty(LogicalName = "new_sipuri")]
        public virtual string NewSIPURI
        {
            get { FillData(); return _newSIPURI; }
            set { SetValue<string>("new_sipuri", value); _newSIPURI = value; }
        }
        private string _newSIPURI;

		[CrmProperty(LogicalName = "new_sitelocationid", IsLookup = true)]
        public virtual Guid? NewSiteLocationId
        {
            get { FillData(); return _newSiteLocationId; }
            set { SetLookup("new_sitelocationid", "new_sitelocation", value); _newSiteLocationId = value; }
        }
        private Guid? _newSiteLocationId;

		[CrmProperty(LogicalName = "new_sitelocationidname")]
        public virtual string NewSiteLocationIdName
        {
            get { FillData(); return _newSiteLocationIdName; }
            set {  _newSiteLocationIdName = value; }
        }
        private string _newSiteLocationIdName;

		[CrmProperty(LogicalName = "new_trunkfailforwardnumber")]
        public virtual string NewTrunkFailForwardNumber
        {
            get { FillData(); return _newTrunkFailForwardNumber; }
            set { SetValue<string>("new_trunkfailforwardnumber", value); _newTrunkFailForwardNumber = value; }
        }
        private string _newTrunkFailForwardNumber;

		[CrmProperty(LogicalName = "new_umenabled")]
        public virtual bool? NewUMEnabled
        {
            get { FillData(); return _newUMEnabled; }
            set { SetValue<bool?>("new_umenabled", value); _newUMEnabled = value; }
        }
        private bool? _newUMEnabled;

		[CrmProperty(LogicalName = "new_umenabledname")]
        public virtual string NewUmenabledName
        {
            get { FillData(); return _newUmenabledName; }
            set {  _newUmenabledName = value; }
        }
        private string _newUmenabledName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phonenumberblock", PrimaryKey = "new_phonenumberblockid")]
	public partial class NewPhonenumberblock : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phonenumberblock";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewPhonenumberblockId = "new_phonenumberblockid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhonenumberblockId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_phonenumberblockid")]
        public virtual Guid NewPhonenumberblockId
        {
            get { FillData(); return _newPhonenumberblockId; }
            set {  _newPhonenumberblockId = value; }
        }
        private Guid _newPhonenumberblockId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phonenumbertype", PrimaryKey = "new_phonenumbertypeid")]
	public partial class NewPhonenumbertype : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phonenumbertype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewPhonenumbertypeId = "new_phonenumbertypeid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhonenumbertypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_phonenumbertypeid")]
        public virtual Guid NewPhonenumbertypeId
        {
            get { FillData(); return _newPhonenumbertypeId; }
            set {  _newPhonenumbertypeId = value; }
        }
        private Guid _newPhonenumbertypeId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phoneoption", PrimaryKey = "new_phoneoptionid")]
	public partial class NewPhoneoption : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phoneoption";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAssociatedOptionsId = "new_associatedoptionsid";
			public const string NewAssociatedOptionsIdName = "new_associatedoptionsidname";
			public const string NewAssociatedPhoneOptionsId = "new_associatedphoneoptionsid";
			public const string NewAssociatedPhoneOptionsIdName = "new_associatedphoneoptionsidname";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewName = "new_name";
			public const string NewPhoneoptionId = "new_phoneoptionid";
			public const string NewPhoneOptionTypeId = "new_phoneoptiontypeid";
			public const string NewPhoneOptionTypeIdName = "new_phoneoptiontypeidname";
			public const string NewSiteLocation = "new_sitelocation";
			public const string NewSiteLocationName = "new_sitelocationname";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhoneoptionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_associatedoptionsid", IsLookup = true)]
        public virtual Guid? NewAssociatedOptionsId
        {
            get { FillData(); return _newAssociatedOptionsId; }
            set { SetLookup("new_associatedoptionsid", "new_phoneoption", value); _newAssociatedOptionsId = value; }
        }
        private Guid? _newAssociatedOptionsId;

		[CrmProperty(LogicalName = "new_associatedoptionsidname")]
        public virtual string NewAssociatedOptionsIdName
        {
            get { FillData(); return _newAssociatedOptionsIdName; }
            set {  _newAssociatedOptionsIdName = value; }
        }
        private string _newAssociatedOptionsIdName;

		[CrmProperty(LogicalName = "new_associatedphoneoptionsid", IsLookup = true)]
        public virtual Guid? NewAssociatedPhoneOptionsId
        {
            get { FillData(); return _newAssociatedPhoneOptionsId; }
            set { SetLookup("new_associatedphoneoptionsid", "new_phonenumber", value); _newAssociatedPhoneOptionsId = value; }
        }
        private Guid? _newAssociatedPhoneOptionsId;

		[CrmProperty(LogicalName = "new_associatedphoneoptionsidname")]
        public virtual string NewAssociatedPhoneOptionsIdName
        {
            get { FillData(); return _newAssociatedPhoneOptionsIdName; }
            set {  _newAssociatedPhoneOptionsIdName = value; }
        }
        private string _newAssociatedPhoneOptionsIdName;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_phoneoptionid")]
        public virtual Guid NewPhoneoptionId
        {
            get { FillData(); return _newPhoneoptionId; }
            set {  _newPhoneoptionId = value; }
        }
        private Guid _newPhoneoptionId;

		[CrmProperty(LogicalName = "new_phoneoptiontypeid", IsLookup = true)]
        public virtual Guid? NewPhoneOptionTypeId
        {
            get { FillData(); return _newPhoneOptionTypeId; }
            set { SetLookup("new_phoneoptiontypeid", "new_phoneoptiontype", value); _newPhoneOptionTypeId = value; }
        }
        private Guid? _newPhoneOptionTypeId;

		[CrmProperty(LogicalName = "new_phoneoptiontypeidname")]
        public virtual string NewPhoneOptionTypeIdName
        {
            get { FillData(); return _newPhoneOptionTypeIdName; }
            set {  _newPhoneOptionTypeIdName = value; }
        }
        private string _newPhoneOptionTypeIdName;

		[CrmProperty(LogicalName = "new_sitelocation", IsLookup = true)]
        public virtual Guid? NewSiteLocation
        {
            get { FillData(); return _newSiteLocation; }
            set { SetLookup("new_sitelocation", "new_sitelocation", value); _newSiteLocation = value; }
        }
        private Guid? _newSiteLocation;

		[CrmProperty(LogicalName = "new_sitelocationname")]
        public virtual string NewSiteLocationName
        {
            get { FillData(); return _newSiteLocationName; }
            set {  _newSiteLocationName = value; }
        }
        private string _newSiteLocationName;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phoneoptiontype", PrimaryKey = "new_phoneoptiontypeid")]
	public partial class NewPhoneoptiontype : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phoneoptiontype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewPhoneoptiontypeId = "new_phoneoptiontypeid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhoneoptiontypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_phoneoptiontypeid")]
        public virtual Guid NewPhoneoptiontypeId
        {
            get { FillData(); return _newPhoneoptiontypeId; }
            set {  _newPhoneoptiontypeId = value; }
        }
        private Guid _newPhoneoptiontypeId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_phonetrunk", PrimaryKey = "new_phonetrunkid")]
	public partial class NewPhonetrunk : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_phonetrunk";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewLyncGateway = "new_lyncgateway";
			public const string NewName = "new_name";
			public const string NewPhonetrunkId = "new_phonetrunkid";
			public const string NewTrunkVendorId = "new_trunkvendorid";
			public const string NewTrunkVendorIdName = "new_trunkvendoridname";
			public const string NewTrunkVendorIdYomiName = "new_trunkvendoridyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPhonetrunkId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_lyncgateway")]
        public virtual string NewLyncGateway
        {
            get { FillData(); return _newLyncGateway; }
            set { SetValue<string>("new_lyncgateway", value); _newLyncGateway = value; }
        }
        private string _newLyncGateway;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_phonetrunkid")]
        public virtual Guid NewPhonetrunkId
        {
            get { FillData(); return _newPhonetrunkId; }
            set {  _newPhonetrunkId = value; }
        }
        private Guid _newPhonetrunkId;

		[CrmProperty(LogicalName = "new_trunkvendorid", IsLookup = true)]
        public virtual Guid? NewTrunkVendorId
        {
            get { FillData(); return _newTrunkVendorId; }
            set { SetLookup("new_trunkvendorid", "account", value); _newTrunkVendorId = value; }
        }
        private Guid? _newTrunkVendorId;

		[CrmProperty(LogicalName = "new_trunkvendoridname")]
        public virtual string NewTrunkVendorIdName
        {
            get { FillData(); return _newTrunkVendorIdName; }
            set {  _newTrunkVendorIdName = value; }
        }
        private string _newTrunkVendorIdName;

		[CrmProperty(LogicalName = "new_trunkvendoridyominame")]
        public virtual string NewTrunkVendorIdYomiName
        {
            get { FillData(); return _newTrunkVendorIdYomiName; }
            set {  _newTrunkVendorIdYomiName = value; }
        }
        private string _newTrunkVendorIdYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_priority", PrimaryKey = "new_priorityid")]
	public partial class NewPriority : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_priority";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewDescription = "new_description";
			public const string NewName = "new_name";
			public const string NewPriorityId = "new_priorityid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPriorityId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_description")]
        public virtual string NewDescription
        {
            get { FillData(); return _newDescription; }
            set { SetValue<string>("new_description", value); _newDescription = value; }
        }
        private string _newDescription;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_priorityid")]
        public virtual Guid NewPriorityId
        {
            get { FillData(); return _newPriorityId; }
            set {  _newPriorityId = value; }
        }
        private Guid _newPriorityId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_provisioningactivity", PrimaryKey = "activityid")]
	public partial class NewProvisioningactivity : CrmEntity
	{
		public class Enums
		{
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Scheduled", Value = 4)]Scheduled = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_provisioningactivity";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BCC = "bcc";
			public const string CC = "cc";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customers = "customers";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Partners = "partners";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "bcc")]
        public virtual object BCC
        {
            get { FillData(); return _bCC; }
            set {  _bCC = value; }
        }
        private object _bCC;

		[CrmProperty(LogicalName = "cc")]
        public virtual object CC
        {
            get { FillData(); return _cC; }
            set {  _cC = value; }
        }
        private object _cC;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customers")]
        public virtual object Customers
        {
            get { FillData(); return _customers; }
            set {  _customers = value; }
        }
        private object _customers;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "optionalattendees")]
        public virtual object OptionalAttendees
        {
            get { FillData(); return _optionalAttendees; }
            set {  _optionalAttendees = value; }
        }
        private object _optionalAttendees;

		[CrmProperty(LogicalName = "organizer")]
        public virtual object Organizer
        {
            get { FillData(); return _organizer; }
            set {  _organizer = value; }
        }
        private object _organizer;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "partners")]
        public virtual object Partners
        {
            get { FillData(); return _partners; }
            set {  _partners = value; }
        }
        private object _partners;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set { SetValue<string>("regardingobjectidname", value); _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set { SetValue<string>("regardingobjectidyominame", value); _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "requiredattendees")]
        public virtual object RequiredAttendees
        {
            get { FillData(); return _requiredAttendees; }
            set {  _requiredAttendees = value; }
        }
        private object _requiredAttendees;

		[CrmProperty(LogicalName = "resources")]
        public virtual object Resources
        {
            get { FillData(); return _resources; }
            set {  _resources = value; }
        }
        private object _resources;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesid")]
        public virtual Guid? SeriesId
        {
            get { FillData(); return _seriesId; }
            set {  _seriesId = value; }
        }
        private Guid? _seriesId;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidname")]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_purchaseorder", PrimaryKey = "new_purchaseorderid")]
	public partial class NewPurchaseorder : CrmEntity
	{
		public class Enums
		{
			public enum NewAcceptReject 
			{
				[CrmPicklist(DisplayName = "Accept", Value = 100000000)]Accept = 100000000,
				[CrmPicklist(DisplayName = "Reject", Value = 100000001)]Reject = 100000001,
			}		
			public enum NewOrderStatus 
			{
				[CrmPicklist(DisplayName = "Requested", Value = 100000002)]Requested = 100000002,
				[CrmPicklist(DisplayName = "Submitted for Approval", Value = 100000003)]SubmittedForApproval = 100000003,
				[CrmPicklist(DisplayName = "Approved", Value = 100000000)]Approved = 100000000,
				[CrmPicklist(DisplayName = "Rejected", Value = 100000001)]Rejected = 100000001,
				[CrmPicklist(DisplayName = "Ordered", Value = 100000004)]Ordered = 100000004,
				[CrmPicklist(DisplayName = "Back Ordered", Value = 100000005)]BackOrdered = 100000005,
				[CrmPicklist(DisplayName = "Arrived", Value = 100000007)]Arrived = 100000007,
				[CrmPicklist(DisplayName = "Completed/Delivered", Value = 100000006)]CompletedDelivered = 100000006,
			}		
			public enum NewPaymentMethod 
			{
				[CrmPicklist(DisplayName = "Direct Credit", Value = 100000003)]DirectCredit = 100000003,
				[CrmPicklist(DisplayName = "Direct Debit", Value = 100000002)]DirectDebit = 100000002,
				[CrmPicklist(DisplayName = "On Account", Value = 100000001)]OnAccount = 100000001,
				[CrmPicklist(DisplayName = "Personal Expense", Value = 100000000)]PersonalExpense = 100000000,
				[CrmPicklist(DisplayName = "Visa", Value = 100000004)]Visa = 100000004,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_purchaseorder";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAcceptReject = "new_acceptreject";
			public const string NewAcceptrejectName = "new_acceptrejectname";
			public const string NewApprovalDate = "new_approvaldate";
			public const string NewApprovalNo = "new_approvalno";
			public const string NewApproverId = "new_approverid";
			public const string NewApproverIdName = "new_approveridname";
			public const string NewApproverIdYomiName = "new_approveridyominame";
			public const string NewCourierCompany = "new_couriercompany";
			public const string NewCourierCompanyName = "new_couriercompanyname";
			public const string NewCourierCompanyYomiName = "new_couriercompanyyominame";
			public const string NewCustomerApproverId = "new_customerapproverid";
			public const string NewCustomerApproverIdName = "new_customerapproveridname";
			public const string NewCustomerApproverIdYomiName = "new_customerapproveridyominame";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewCustomerPONumber = "new_customerponumber";
			public const string NewDeliveredtoCustomer = "new_deliveredtocustomer";
			public const string NewDeliveryAddress = "new_deliveryaddress";
			public const string NewExpectedDelivery = "new_expecteddelivery";
			public const string NewLeaseVendor = "new_leasevendor";
			public const string NewLeaseVendorContact = "new_leasevendorcontact";
			public const string NewLeaseVendorContactName = "new_leasevendorcontactname";
			public const string NewLeaseVendorContactYomiName = "new_leasevendorcontactyominame";
			public const string NewMHAPONyumberauto = "new_mhaponyumberauto";
			public const string NewName = "new_name";
			public const string NewOrderStatus = "new_orderstatus";
			public const string NewOrderstatusName = "new_orderstatusname";
			public const string NewPaymentMethod = "new_paymentmethod";
			public const string NewPaymentmethodName = "new_paymentmethodname";
			public const string NewPONotes = "new_ponotes";
			public const string NewPurchaseorderId = "new_purchaseorderid";
			public const string NewRegardingCaseId = "new_regardingcaseid";
			public const string NewRegardingCaseIdName = "new_regardingcaseidname";
			public const string NewTrackingNumber = "new_trackingnumber";
			public const string NewVendor = "new_vendor";
			public const string NewVendorInvoice = "new_vendorinvoice";
			public const string NewVendorName = "new_vendorname";
			public const string NewVendorOrderNumber = "new_vendorordernumber";
			public const string NewVendorYomiName = "new_vendoryominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewPurchaseorderId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_acceptreject")]
        public virtual Enums.NewAcceptReject? NewAcceptReject
        {
            get { FillData(); return _newAcceptReject; }
            set { SetPicklist("new_acceptreject", (int?)value); _newAcceptReject = value; }
        }
        private Enums.NewAcceptReject? _newAcceptReject;

		[CrmProperty(LogicalName = "new_acceptrejectname")]
        public virtual string NewAcceptrejectName
        {
            get { FillData(); return _newAcceptrejectName; }
            set {  _newAcceptrejectName = value; }
        }
        private string _newAcceptrejectName;

		[CrmProperty(LogicalName = "new_approvaldate")]
        public virtual DateTime? NewApprovalDate
        {
            get { FillData(); return _newApprovalDate; }
            set { SetValue<DateTime?>("new_approvaldate", value); _newApprovalDate = value; }
        }
        private DateTime? _newApprovalDate;

		[CrmProperty(LogicalName = "new_approvalno")]
        public virtual string NewApprovalNo
        {
            get { FillData(); return _newApprovalNo; }
            set { SetValue<string>("new_approvalno", value); _newApprovalNo = value; }
        }
        private string _newApprovalNo;

		[CrmProperty(LogicalName = "new_approverid", IsLookup = true)]
        public virtual Guid? NewApproverId
        {
            get { FillData(); return _newApproverId; }
            set { SetLookup("new_approverid", "systemuser", value); _newApproverId = value; }
        }
        private Guid? _newApproverId;

		[CrmProperty(LogicalName = "new_approveridname")]
        public virtual string NewApproverIdName
        {
            get { FillData(); return _newApproverIdName; }
            set {  _newApproverIdName = value; }
        }
        private string _newApproverIdName;

		[CrmProperty(LogicalName = "new_approveridyominame")]
        public virtual string NewApproverIdYomiName
        {
            get { FillData(); return _newApproverIdYomiName; }
            set {  _newApproverIdYomiName = value; }
        }
        private string _newApproverIdYomiName;

		[CrmProperty(LogicalName = "new_couriercompany", IsLookup = true)]
        public virtual Guid? NewCourierCompany
        {
            get { FillData(); return _newCourierCompany; }
            set { SetLookup("new_couriercompany", "account", value); _newCourierCompany = value; }
        }
        private Guid? _newCourierCompany;

		[CrmProperty(LogicalName = "new_couriercompanyname")]
        public virtual string NewCourierCompanyName
        {
            get { FillData(); return _newCourierCompanyName; }
            set {  _newCourierCompanyName = value; }
        }
        private string _newCourierCompanyName;

		[CrmProperty(LogicalName = "new_couriercompanyyominame")]
        public virtual string NewCourierCompanyYomiName
        {
            get { FillData(); return _newCourierCompanyYomiName; }
            set {  _newCourierCompanyYomiName = value; }
        }
        private string _newCourierCompanyYomiName;

		[CrmProperty(LogicalName = "new_customerapproverid", IsLookup = true)]
        public virtual Guid? NewCustomerApproverId
        {
            get { FillData(); return _newCustomerApproverId; }
            set { SetLookup("new_customerapproverid", "contact", value); _newCustomerApproverId = value; }
        }
        private Guid? _newCustomerApproverId;

		[CrmProperty(LogicalName = "new_customerapproveridname")]
        public virtual string NewCustomerApproverIdName
        {
            get { FillData(); return _newCustomerApproverIdName; }
            set {  _newCustomerApproverIdName = value; }
        }
        private string _newCustomerApproverIdName;

		[CrmProperty(LogicalName = "new_customerapproveridyominame")]
        public virtual string NewCustomerApproverIdYomiName
        {
            get { FillData(); return _newCustomerApproverIdYomiName; }
            set {  _newCustomerApproverIdYomiName = value; }
        }
        private string _newCustomerApproverIdYomiName;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_customerponumber")]
        public virtual string NewCustomerPONumber
        {
            get { FillData(); return _newCustomerPONumber; }
            set { SetValue<string>("new_customerponumber", value); _newCustomerPONumber = value; }
        }
        private string _newCustomerPONumber;

		[CrmProperty(LogicalName = "new_deliveredtocustomer")]
        public virtual DateTime? NewDeliveredtoCustomer
        {
            get { FillData(); return _newDeliveredtoCustomer; }
            set { SetValue<DateTime?>("new_deliveredtocustomer", value); _newDeliveredtoCustomer = value; }
        }
        private DateTime? _newDeliveredtoCustomer;

		[CrmProperty(LogicalName = "new_deliveryaddress")]
        public virtual string NewDeliveryAddress
        {
            get { FillData(); return _newDeliveryAddress; }
            set { SetValue<string>("new_deliveryaddress", value); _newDeliveryAddress = value; }
        }
        private string _newDeliveryAddress;

		[CrmProperty(LogicalName = "new_expecteddelivery")]
        public virtual DateTime? NewExpectedDelivery
        {
            get { FillData(); return _newExpectedDelivery; }
            set { SetValue<DateTime?>("new_expecteddelivery", value); _newExpectedDelivery = value; }
        }
        private DateTime? _newExpectedDelivery;

		[CrmProperty(LogicalName = "new_leasevendor")]
        public virtual string NewLeaseVendor
        {
            get { FillData(); return _newLeaseVendor; }
            set { SetValue<string>("new_leasevendor", value); _newLeaseVendor = value; }
        }
        private string _newLeaseVendor;

		[CrmProperty(LogicalName = "new_leasevendorcontact", IsLookup = true)]
        public virtual Guid? NewLeaseVendorContact
        {
            get { FillData(); return _newLeaseVendorContact; }
            set { SetLookup("new_leasevendorcontact", "contact", value); _newLeaseVendorContact = value; }
        }
        private Guid? _newLeaseVendorContact;

		[CrmProperty(LogicalName = "new_leasevendorcontactname")]
        public virtual string NewLeaseVendorContactName
        {
            get { FillData(); return _newLeaseVendorContactName; }
            set {  _newLeaseVendorContactName = value; }
        }
        private string _newLeaseVendorContactName;

		[CrmProperty(LogicalName = "new_leasevendorcontactyominame")]
        public virtual string NewLeaseVendorContactYomiName
        {
            get { FillData(); return _newLeaseVendorContactYomiName; }
            set {  _newLeaseVendorContactYomiName = value; }
        }
        private string _newLeaseVendorContactYomiName;

		[CrmProperty(LogicalName = "new_mhaponyumberauto")]
        public virtual string NewMHAPONyumberauto
        {
            get { FillData(); return _newMHAPONyumberauto; }
            set { SetValue<string>("new_mhaponyumberauto", value); _newMHAPONyumberauto = value; }
        }
        private string _newMHAPONyumberauto;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_orderstatus")]
        public virtual Enums.NewOrderStatus? NewOrderStatus
        {
            get { FillData(); return _newOrderStatus; }
            set { SetPicklist("new_orderstatus", (int?)value); _newOrderStatus = value; }
        }
        private Enums.NewOrderStatus? _newOrderStatus;

		[CrmProperty(LogicalName = "new_orderstatusname")]
        public virtual string NewOrderstatusName
        {
            get { FillData(); return _newOrderstatusName; }
            set {  _newOrderstatusName = value; }
        }
        private string _newOrderstatusName;

		[CrmProperty(LogicalName = "new_paymentmethod")]
        public virtual Enums.NewPaymentMethod? NewPaymentMethod
        {
            get { FillData(); return _newPaymentMethod; }
            set { SetPicklist("new_paymentmethod", (int?)value); _newPaymentMethod = value; }
        }
        private Enums.NewPaymentMethod? _newPaymentMethod;

		[CrmProperty(LogicalName = "new_paymentmethodname")]
        public virtual string NewPaymentmethodName
        {
            get { FillData(); return _newPaymentmethodName; }
            set {  _newPaymentmethodName = value; }
        }
        private string _newPaymentmethodName;

		[CrmProperty(LogicalName = "new_ponotes")]
        public virtual string NewPONotes
        {
            get { FillData(); return _newPONotes; }
            set { SetValue<string>("new_ponotes", value); _newPONotes = value; }
        }
        private string _newPONotes;

		[CrmProperty(LogicalName = "new_purchaseorderid")]
        public virtual Guid NewPurchaseorderId
        {
            get { FillData(); return _newPurchaseorderId; }
            set {  _newPurchaseorderId = value; }
        }
        private Guid _newPurchaseorderId;

		[CrmProperty(LogicalName = "new_regardingcaseid", IsLookup = true)]
        public virtual Guid? NewRegardingCaseId
        {
            get { FillData(); return _newRegardingCaseId; }
            set { SetLookup("new_regardingcaseid", "incident", value); _newRegardingCaseId = value; }
        }
        private Guid? _newRegardingCaseId;

		[CrmProperty(LogicalName = "new_regardingcaseidname")]
        public virtual string NewRegardingCaseIdName
        {
            get { FillData(); return _newRegardingCaseIdName; }
            set {  _newRegardingCaseIdName = value; }
        }
        private string _newRegardingCaseIdName;

		[CrmProperty(LogicalName = "new_trackingnumber")]
        public virtual string NewTrackingNumber
        {
            get { FillData(); return _newTrackingNumber; }
            set { SetValue<string>("new_trackingnumber", value); _newTrackingNumber = value; }
        }
        private string _newTrackingNumber;

		[CrmProperty(LogicalName = "new_vendor", IsLookup = true)]
        public virtual Guid? NewVendor
        {
            get { FillData(); return _newVendor; }
            set { SetLookup("new_vendor", "account", value); _newVendor = value; }
        }
        private Guid? _newVendor;

		[CrmProperty(LogicalName = "new_vendorinvoice")]
        public virtual string NewVendorInvoice
        {
            get { FillData(); return _newVendorInvoice; }
            set { SetValue<string>("new_vendorinvoice", value); _newVendorInvoice = value; }
        }
        private string _newVendorInvoice;

		[CrmProperty(LogicalName = "new_vendorname")]
        public virtual string NewVendorName
        {
            get { FillData(); return _newVendorName; }
            set {  _newVendorName = value; }
        }
        private string _newVendorName;

		[CrmProperty(LogicalName = "new_vendorordernumber")]
        public virtual string NewVendorOrderNumber
        {
            get { FillData(); return _newVendorOrderNumber; }
            set { SetValue<string>("new_vendorordernumber", value); _newVendorOrderNumber = value; }
        }
        private string _newVendorOrderNumber;

		[CrmProperty(LogicalName = "new_vendoryominame")]
        public virtual string NewVendorYomiName
        {
            get { FillData(); return _newVendorYomiName; }
            set {  _newVendorYomiName = value; }
        }
        private string _newVendorYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_rel_new_phonenumber_new_phonenumber", PrimaryKey = "new_rel_new_phonenumber_new_phonenumberid")]
	public partial class NewRelNewPhonenumberNewPhonenumber : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "new_rel_new_phonenumber_new_phonenumber";
			
			public const string NewPhonenumberidOne = "new_phonenumberidone";
			public const string NewPhonenumberidTwo = "new_phonenumberidtwo";
			public const string NewRelNewPhonenumberNewPhonenumberId = "new_rel_new_phonenumber_new_phonenumberid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewRelNewPhonenumberNewPhonenumberId; }
		}

		[CrmProperty(LogicalName = "new_phonenumberidone")]
        public virtual Guid? NewPhonenumberidOne
        {
            get { FillData(); return _newPhonenumberidOne; }
            set {  _newPhonenumberidOne = value; }
        }
        private Guid? _newPhonenumberidOne;

		[CrmProperty(LogicalName = "new_phonenumberidtwo")]
        public virtual Guid? NewPhonenumberidTwo
        {
            get { FillData(); return _newPhonenumberidTwo; }
            set {  _newPhonenumberidTwo = value; }
        }
        private Guid? _newPhonenumberidTwo;

		[CrmProperty(LogicalName = "new_rel_new_phonenumber_new_phonenumberid")]
        public virtual Guid NewRelNewPhonenumberNewPhonenumberId
        {
            get { FillData(); return _newRelNewPhonenumberNewPhonenumberId; }
            set {  _newRelNewPhonenumberNewPhonenumberId = value; }
        }
        private Guid _newRelNewPhonenumberNewPhonenumberId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_rel_new_phoneoption_new_phonenumber", PrimaryKey = "new_rel_new_phoneoption_new_phonenumberid")]
	public partial class NewRelNewPhoneoptionNewPhonenumber : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "new_rel_new_phoneoption_new_phonenumber";
			
			public const string NewPhonenumberid = "new_phonenumberid";
			public const string NewPhoneoptionid = "new_phoneoptionid";
			public const string NewRelNewPhoneoptionNewPhonenumberId = "new_rel_new_phoneoption_new_phonenumberid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewRelNewPhoneoptionNewPhonenumberId; }
		}

		[CrmProperty(LogicalName = "new_phonenumberid")]
        public virtual Guid? NewPhonenumberid
        {
            get { FillData(); return _newPhonenumberid; }
            set {  _newPhonenumberid = value; }
        }
        private Guid? _newPhonenumberid;

		[CrmProperty(LogicalName = "new_phoneoptionid")]
        public virtual Guid? NewPhoneoptionid
        {
            get { FillData(); return _newPhoneoptionid; }
            set {  _newPhoneoptionid = value; }
        }
        private Guid? _newPhoneoptionid;

		[CrmProperty(LogicalName = "new_rel_new_phoneoption_new_phonenumberid")]
        public virtual Guid NewRelNewPhoneoptionNewPhonenumberId
        {
            get { FillData(); return _newRelNewPhoneoptionNewPhonenumberId; }
            set {  _newRelNewPhoneoptionNewPhonenumberId = value; }
        }
        private Guid _newRelNewPhoneoptionNewPhonenumberId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_rel_new_phoneoption_new_phoneoption", PrimaryKey = "new_rel_new_phoneoption_new_phoneoptionid")]
	public partial class NewRelNewPhoneoptionNewPhoneoption : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "new_rel_new_phoneoption_new_phoneoption";
			
			public const string NewPhoneoptionidOne = "new_phoneoptionidone";
			public const string NewPhoneoptionidTwo = "new_phoneoptionidtwo";
			public const string NewRelNewPhoneoptionNewPhoneoptionId = "new_rel_new_phoneoption_new_phoneoptionid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewRelNewPhoneoptionNewPhoneoptionId; }
		}

		[CrmProperty(LogicalName = "new_phoneoptionidone")]
        public virtual Guid? NewPhoneoptionidOne
        {
            get { FillData(); return _newPhoneoptionidOne; }
            set {  _newPhoneoptionidOne = value; }
        }
        private Guid? _newPhoneoptionidOne;

		[CrmProperty(LogicalName = "new_phoneoptionidtwo")]
        public virtual Guid? NewPhoneoptionidTwo
        {
            get { FillData(); return _newPhoneoptionidTwo; }
            set {  _newPhoneoptionidTwo = value; }
        }
        private Guid? _newPhoneoptionidTwo;

		[CrmProperty(LogicalName = "new_rel_new_phoneoption_new_phoneoptionid")]
        public virtual Guid NewRelNewPhoneoptionNewPhoneoptionId
        {
            get { FillData(); return _newRelNewPhoneoptionNewPhoneoptionId; }
            set {  _newRelNewPhoneoptionNewPhoneoptionId = value; }
        }
        private Guid _newRelNewPhoneoptionNewPhoneoptionId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_relnn_new_callingregion_new_callingarea", PrimaryKey = "new_relnn_new_callingregion_new_callingareaid")]
	public partial class NewRelnnNewCallingregionNewCallingarea : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "new_relnn_new_callingregion_new_callingarea";
			
			public const string NewCallingareaid = "new_callingareaid";
			public const string NewCallingregionid = "new_callingregionid";
			public const string NewRelnnNewCallingregionNewCallingareaId = "new_relnn_new_callingregion_new_callingareaid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewRelnnNewCallingregionNewCallingareaId; }
		}

		[CrmProperty(LogicalName = "new_callingareaid")]
        public virtual Guid? NewCallingareaid
        {
            get { FillData(); return _newCallingareaid; }
            set {  _newCallingareaid = value; }
        }
        private Guid? _newCallingareaid;

		[CrmProperty(LogicalName = "new_callingregionid")]
        public virtual Guid? NewCallingregionid
        {
            get { FillData(); return _newCallingregionid; }
            set {  _newCallingregionid = value; }
        }
        private Guid? _newCallingregionid;

		[CrmProperty(LogicalName = "new_relnn_new_callingregion_new_callingareaid")]
        public virtual Guid NewRelnnNewCallingregionNewCallingareaId
        {
            get { FillData(); return _newRelnnNewCallingregionNewCallingareaId; }
            set {  _newRelnnNewCallingregionNewCallingareaId = value; }
        }
        private Guid _newRelnnNewCallingregionNewCallingareaId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_relnn_phonetrunk_phonegateway", PrimaryKey = "new_relnn_phonetrunk_phonegatewayid")]
	public partial class NewRelnnPhonetrunkPhonegateway : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "new_relnn_phonetrunk_phonegateway";
			
			public const string NewPhonegatewayid = "new_phonegatewayid";
			public const string NewPhonetrunkid = "new_phonetrunkid";
			public const string NewRelnnPhonetrunkPhonegatewayId = "new_relnn_phonetrunk_phonegatewayid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewRelnnPhonetrunkPhonegatewayId; }
		}

		[CrmProperty(LogicalName = "new_phonegatewayid")]
        public virtual Guid? NewPhonegatewayid
        {
            get { FillData(); return _newPhonegatewayid; }
            set {  _newPhonegatewayid = value; }
        }
        private Guid? _newPhonegatewayid;

		[CrmProperty(LogicalName = "new_phonetrunkid")]
        public virtual Guid? NewPhonetrunkid
        {
            get { FillData(); return _newPhonetrunkid; }
            set {  _newPhonetrunkid = value; }
        }
        private Guid? _newPhonetrunkid;

		[CrmProperty(LogicalName = "new_relnn_phonetrunk_phonegatewayid")]
        public virtual Guid NewRelnnPhonetrunkPhonegatewayId
        {
            get { FillData(); return _newRelnnPhonetrunkPhonegatewayId; }
            set {  _newRelnnPhonetrunkPhonegatewayId = value; }
        }
        private Guid _newRelnnPhonetrunkPhonegatewayId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_resellers", PrimaryKey = "new_resellersid")]
	public partial class NewResellers : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_resellers";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAccountId = "new_accountid";
			public const string NewAccountIdName = "new_accountidname";
			public const string NewAccountIdYomiName = "new_accountidyominame";
			public const string NewConsolidatedInvoices = "new_consolidatedinvoices";
			public const string NewConsolidatedinvoicesName = "new_consolidatedinvoicesname";
			public const string NewConsolidatedInvoies = "new_consolidatedinvoies";
			public const string NewConsolidatedinvoiesName = "new_consolidatedinvoiesname";
			public const string NewDefaultPriceListId = "new_defaultpricelistid";
			public const string NewDefaultPriceListIdName = "new_defaultpricelistidname";
			public const string NewInvoiceTopLevel = "new_invoicetoplevel";
			public const string NewInvoicetoplevelName = "new_invoicetoplevelname";
			public const string NewName = "new_name";
			public const string NewResellersId = "new_resellersid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewResellersId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_accountid", IsLookup = true)]
        public virtual Guid? NewAccountId
        {
            get { FillData(); return _newAccountId; }
            set { SetLookup("new_accountid", "account", value); _newAccountId = value; }
        }
        private Guid? _newAccountId;

		[CrmProperty(LogicalName = "new_accountidname")]
        public virtual string NewAccountIdName
        {
            get { FillData(); return _newAccountIdName; }
            set {  _newAccountIdName = value; }
        }
        private string _newAccountIdName;

		[CrmProperty(LogicalName = "new_accountidyominame")]
        public virtual string NewAccountIdYomiName
        {
            get { FillData(); return _newAccountIdYomiName; }
            set {  _newAccountIdYomiName = value; }
        }
        private string _newAccountIdYomiName;

		[CrmProperty(LogicalName = "new_consolidatedinvoices")]
        public virtual bool? NewConsolidatedInvoices
        {
            get { FillData(); return _newConsolidatedInvoices; }
            set { SetValue<bool?>("new_consolidatedinvoices", value); _newConsolidatedInvoices = value; }
        }
        private bool? _newConsolidatedInvoices;

		[CrmProperty(LogicalName = "new_consolidatedinvoicesname")]
        public virtual string NewConsolidatedinvoicesName
        {
            get { FillData(); return _newConsolidatedinvoicesName; }
            set {  _newConsolidatedinvoicesName = value; }
        }
        private string _newConsolidatedinvoicesName;

		[CrmProperty(LogicalName = "new_consolidatedinvoies")]
        public virtual bool? NewConsolidatedInvoies
        {
            get { FillData(); return _newConsolidatedInvoies; }
            set { SetValue<bool?>("new_consolidatedinvoies", value); _newConsolidatedInvoies = value; }
        }
        private bool? _newConsolidatedInvoies;

		[CrmProperty(LogicalName = "new_consolidatedinvoiesname")]
        public virtual string NewConsolidatedinvoiesName
        {
            get { FillData(); return _newConsolidatedinvoiesName; }
            set {  _newConsolidatedinvoiesName = value; }
        }
        private string _newConsolidatedinvoiesName;

		[CrmProperty(LogicalName = "new_defaultpricelistid", IsLookup = true)]
        public virtual Guid? NewDefaultPriceListId
        {
            get { FillData(); return _newDefaultPriceListId; }
            set { SetLookup("new_defaultpricelistid", "pricelevel", value); _newDefaultPriceListId = value; }
        }
        private Guid? _newDefaultPriceListId;

		[CrmProperty(LogicalName = "new_defaultpricelistidname")]
        public virtual string NewDefaultPriceListIdName
        {
            get { FillData(); return _newDefaultPriceListIdName; }
            set {  _newDefaultPriceListIdName = value; }
        }
        private string _newDefaultPriceListIdName;

		[CrmProperty(LogicalName = "new_invoicetoplevel")]
        public virtual bool? NewInvoiceTopLevel
        {
            get { FillData(); return _newInvoiceTopLevel; }
            set { SetValue<bool?>("new_invoicetoplevel", value); _newInvoiceTopLevel = value; }
        }
        private bool? _newInvoiceTopLevel;

		[CrmProperty(LogicalName = "new_invoicetoplevelname")]
        public virtual string NewInvoicetoplevelName
        {
            get { FillData(); return _newInvoicetoplevelName; }
            set {  _newInvoicetoplevelName = value; }
        }
        private string _newInvoicetoplevelName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_resellersid")]
        public virtual Guid NewResellersId
        {
            get { FillData(); return _newResellersId; }
            set {  _newResellersId = value; }
        }
        private Guid _newResellersId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_rma", PrimaryKey = "new_rmaid")]
	public partial class NewRma : CrmEntity
	{
		public class Enums
		{
			public enum NewReturnMethod 
			{
				[CrmPicklist(DisplayName = "Customer direct to vendor", Value = 100000000)]CustomerDirectToVendor = 100000000,
				[CrmPicklist(DisplayName = "MHA courier to vendor", Value = 100000001)]MHACourierToVendor = 100000001,
				[CrmPicklist(DisplayName = "MHA hand deliver to vendor", Value = 100000002)]MHAHandDeliverToVendor = 100000002,
			}		
			public enum NewRMAStatus 
			{
				[CrmPicklist(DisplayName = "Awaiting Customer RMA Form", Value = 100000000)]AwaitingCustomerRMAForm = 100000000,
				[CrmPicklist(DisplayName = "Awaiting Customer Goods", Value = 100000001)]AwaitingCustomerGoods = 100000001,
				[CrmPicklist(DisplayName = "Sent to Vendor/Awaiting Return", Value = 100000002)]SentToVendorAwaitingReturn = 100000002,
				[CrmPicklist(DisplayName = "Complete/Returned to Customer", Value = 100000003)]CompleteReturnedToCustomer = 100000003,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_rma";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewCourierCompany = "new_couriercompany";
			public const string NewCourierCompanyName = "new_couriercompanyname";
			public const string NewCourierCompanyYomiName = "new_couriercompanyyominame";
			public const string NewCustomerContact = "new_customercontact";
			public const string NewCustomerContactName = "new_customercontactname";
			public const string NewCustomerContactYomiName = "new_customercontactyominame";
			public const string NewDeliveredtoCustomer = "new_deliveredtocustomer";
			public const string NewExpectedatMHA = "new_expectedatmha";
			public const string NewMHARMANumber = "new_mharmanumber";
			public const string NewName = "new_name";
			public const string NewOrderItem = "new_orderitem";
			public const string NewOrderItemName = "new_orderitemname";
			public const string NewReason = "new_reason";
			public const string NewReplacementSerial = "new_replacementserial";
			public const string NewReplacementVendorProduct = "new_replacementvendorproduct";
			public const string NewReplacementWarranty = "new_replacementwarranty";
			public const string NewReturnCourierCompany = "new_returncouriercompany";
			public const string NewReturnCourierCompanyName = "new_returncouriercompanyname";
			public const string NewReturnCourierCompanyYomiName = "new_returncouriercompanyyominame";
			public const string NewReturnDate = "new_returndate";
			public const string NewReturnedSerialNumber = "new_returnedserialnumber";
			public const string NewReturnMethod = "new_returnmethod";
			public const string NewReturnmethodName = "new_returnmethodname";
			public const string NewReturnTracking = "new_returntracking";
			public const string NewRmaId = "new_rmaid";
			public const string NewRMAStatus = "new_rmastatus";
			public const string NewRmastatusName = "new_rmastatusname";
			public const string NewTracking = "new_tracking";
			public const string NewVendorRMA = "new_vendorrma";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewRmaId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_couriercompany", IsLookup = true)]
        public virtual Guid? NewCourierCompany
        {
            get { FillData(); return _newCourierCompany; }
            set { SetLookup("new_couriercompany", "account", value); _newCourierCompany = value; }
        }
        private Guid? _newCourierCompany;

		[CrmProperty(LogicalName = "new_couriercompanyname")]
        public virtual string NewCourierCompanyName
        {
            get { FillData(); return _newCourierCompanyName; }
            set {  _newCourierCompanyName = value; }
        }
        private string _newCourierCompanyName;

		[CrmProperty(LogicalName = "new_couriercompanyyominame")]
        public virtual string NewCourierCompanyYomiName
        {
            get { FillData(); return _newCourierCompanyYomiName; }
            set {  _newCourierCompanyYomiName = value; }
        }
        private string _newCourierCompanyYomiName;

		[CrmProperty(LogicalName = "new_customercontact", IsLookup = true)]
        public virtual Guid? NewCustomerContact
        {
            get { FillData(); return _newCustomerContact; }
            set { SetLookup("new_customercontact", "contact", value); _newCustomerContact = value; }
        }
        private Guid? _newCustomerContact;

		[CrmProperty(LogicalName = "new_customercontactname")]
        public virtual string NewCustomerContactName
        {
            get { FillData(); return _newCustomerContactName; }
            set {  _newCustomerContactName = value; }
        }
        private string _newCustomerContactName;

		[CrmProperty(LogicalName = "new_customercontactyominame")]
        public virtual string NewCustomerContactYomiName
        {
            get { FillData(); return _newCustomerContactYomiName; }
            set {  _newCustomerContactYomiName = value; }
        }
        private string _newCustomerContactYomiName;

		[CrmProperty(LogicalName = "new_deliveredtocustomer")]
        public virtual DateTime? NewDeliveredtoCustomer
        {
            get { FillData(); return _newDeliveredtoCustomer; }
            set { SetValue<DateTime?>("new_deliveredtocustomer", value); _newDeliveredtoCustomer = value; }
        }
        private DateTime? _newDeliveredtoCustomer;

		[CrmProperty(LogicalName = "new_expectedatmha")]
        public virtual DateTime? NewExpectedatMHA
        {
            get { FillData(); return _newExpectedatMHA; }
            set { SetValue<DateTime?>("new_expectedatmha", value); _newExpectedatMHA = value; }
        }
        private DateTime? _newExpectedatMHA;

		[CrmProperty(LogicalName = "new_mharmanumber")]
        public virtual string NewMHARMANumber
        {
            get { FillData(); return _newMHARMANumber; }
            set { SetValue<string>("new_mharmanumber", value); _newMHARMANumber = value; }
        }
        private string _newMHARMANumber;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_orderitem", IsLookup = true)]
        public virtual Guid? NewOrderItem
        {
            get { FillData(); return _newOrderItem; }
            set { SetLookup("new_orderitem", "new_orderitems", value); _newOrderItem = value; }
        }
        private Guid? _newOrderItem;

		[CrmProperty(LogicalName = "new_orderitemname")]
        public virtual string NewOrderItemName
        {
            get { FillData(); return _newOrderItemName; }
            set {  _newOrderItemName = value; }
        }
        private string _newOrderItemName;

		[CrmProperty(LogicalName = "new_reason")]
        public virtual string NewReason
        {
            get { FillData(); return _newReason; }
            set { SetValue<string>("new_reason", value); _newReason = value; }
        }
        private string _newReason;

		[CrmProperty(LogicalName = "new_replacementserial")]
        public virtual string NewReplacementSerial
        {
            get { FillData(); return _newReplacementSerial; }
            set { SetValue<string>("new_replacementserial", value); _newReplacementSerial = value; }
        }
        private string _newReplacementSerial;

		[CrmProperty(LogicalName = "new_replacementvendorproduct")]
        public virtual string NewReplacementVendorProduct
        {
            get { FillData(); return _newReplacementVendorProduct; }
            set { SetValue<string>("new_replacementvendorproduct", value); _newReplacementVendorProduct = value; }
        }
        private string _newReplacementVendorProduct;

		[CrmProperty(LogicalName = "new_replacementwarranty")]
        public virtual string NewReplacementWarranty
        {
            get { FillData(); return _newReplacementWarranty; }
            set { SetValue<string>("new_replacementwarranty", value); _newReplacementWarranty = value; }
        }
        private string _newReplacementWarranty;

		[CrmProperty(LogicalName = "new_returncouriercompany", IsLookup = true)]
        public virtual Guid? NewReturnCourierCompany
        {
            get { FillData(); return _newReturnCourierCompany; }
            set { SetLookup("new_returncouriercompany", "account", value); _newReturnCourierCompany = value; }
        }
        private Guid? _newReturnCourierCompany;

		[CrmProperty(LogicalName = "new_returncouriercompanyname")]
        public virtual string NewReturnCourierCompanyName
        {
            get { FillData(); return _newReturnCourierCompanyName; }
            set {  _newReturnCourierCompanyName = value; }
        }
        private string _newReturnCourierCompanyName;

		[CrmProperty(LogicalName = "new_returncouriercompanyyominame")]
        public virtual string NewReturnCourierCompanyYomiName
        {
            get { FillData(); return _newReturnCourierCompanyYomiName; }
            set {  _newReturnCourierCompanyYomiName = value; }
        }
        private string _newReturnCourierCompanyYomiName;

		[CrmProperty(LogicalName = "new_returndate")]
        public virtual DateTime? NewReturnDate
        {
            get { FillData(); return _newReturnDate; }
            set { SetValue<DateTime?>("new_returndate", value); _newReturnDate = value; }
        }
        private DateTime? _newReturnDate;

		[CrmProperty(LogicalName = "new_returnedserialnumber")]
        public virtual string NewReturnedSerialNumber
        {
            get { FillData(); return _newReturnedSerialNumber; }
            set { SetValue<string>("new_returnedserialnumber", value); _newReturnedSerialNumber = value; }
        }
        private string _newReturnedSerialNumber;

		[CrmProperty(LogicalName = "new_returnmethod")]
        public virtual Enums.NewReturnMethod? NewReturnMethod
        {
            get { FillData(); return _newReturnMethod; }
            set { SetPicklist("new_returnmethod", (int?)value); _newReturnMethod = value; }
        }
        private Enums.NewReturnMethod? _newReturnMethod;

		[CrmProperty(LogicalName = "new_returnmethodname")]
        public virtual string NewReturnmethodName
        {
            get { FillData(); return _newReturnmethodName; }
            set {  _newReturnmethodName = value; }
        }
        private string _newReturnmethodName;

		[CrmProperty(LogicalName = "new_returntracking")]
        public virtual string NewReturnTracking
        {
            get { FillData(); return _newReturnTracking; }
            set { SetValue<string>("new_returntracking", value); _newReturnTracking = value; }
        }
        private string _newReturnTracking;

		[CrmProperty(LogicalName = "new_rmaid")]
        public virtual Guid NewRmaId
        {
            get { FillData(); return _newRmaId; }
            set {  _newRmaId = value; }
        }
        private Guid _newRmaId;

		[CrmProperty(LogicalName = "new_rmastatus")]
        public virtual Enums.NewRMAStatus? NewRMAStatus
        {
            get { FillData(); return _newRMAStatus; }
            set { SetPicklist("new_rmastatus", (int?)value); _newRMAStatus = value; }
        }
        private Enums.NewRMAStatus? _newRMAStatus;

		[CrmProperty(LogicalName = "new_rmastatusname")]
        public virtual string NewRmastatusName
        {
            get { FillData(); return _newRmastatusName; }
            set {  _newRmastatusName = value; }
        }
        private string _newRmastatusName;

		[CrmProperty(LogicalName = "new_tracking")]
        public virtual string NewTracking
        {
            get { FillData(); return _newTracking; }
            set { SetValue<string>("new_tracking", value); _newTracking = value; }
        }
        private string _newTracking;

		[CrmProperty(LogicalName = "new_vendorrma")]
        public virtual string NewVendorRMA
        {
            get { FillData(); return _newVendorRMA; }
            set { SetValue<string>("new_vendorrma", value); _newVendorRMA = value; }
        }
        private string _newVendorRMA;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_sitecontact", PrimaryKey = "new_sitecontactid")]
	public partial class NewSitecontact : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_sitecontact";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewCustomer = "new_customer";
			public const string NewCustomerName = "new_customername";
			public const string NewCustomerYomiName = "new_customeryominame";
			public const string NewLocationId = "new_locationid";
			public const string NewLocationIdName = "new_locationidname";
			public const string NewName = "new_name";
			public const string NewPosition = "new_position";
			public const string NewPositionName = "new_positionname";
			public const string NewRole = "new_role";
			public const string NewRoleName = "new_rolename";
			public const string NewSitecontactId = "new_sitecontactid";
			public const string NewSupportProcess = "new_supportprocess";
			public const string NewSupportProcessName = "new_supportprocessname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewSitecontactId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_customer", IsLookup = true)]
        public virtual Guid? NewCustomer
        {
            get { FillData(); return _newCustomer; }
            set { SetLookup("new_customer", "account", value); _newCustomer = value; }
        }
        private Guid? _newCustomer;

		[CrmProperty(LogicalName = "new_customername")]
        public virtual string NewCustomerName
        {
            get { FillData(); return _newCustomerName; }
            set {  _newCustomerName = value; }
        }
        private string _newCustomerName;

		[CrmProperty(LogicalName = "new_customeryominame")]
        public virtual string NewCustomerYomiName
        {
            get { FillData(); return _newCustomerYomiName; }
            set {  _newCustomerYomiName = value; }
        }
        private string _newCustomerYomiName;

		[CrmProperty(LogicalName = "new_locationid", IsLookup = true)]
        public virtual Guid? NewLocationId
        {
            get { FillData(); return _newLocationId; }
            set { SetLookup("new_locationid", "new_sitelocation", value); _newLocationId = value; }
        }
        private Guid? _newLocationId;

		[CrmProperty(LogicalName = "new_locationidname")]
        public virtual string NewLocationIdName
        {
            get { FillData(); return _newLocationIdName; }
            set {  _newLocationIdName = value; }
        }
        private string _newLocationIdName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_position", IsLookup = true)]
        public virtual Guid? NewPosition
        {
            get { FillData(); return _newPosition; }
            set { SetLookup("new_position", "new_sitecontactposition", value); _newPosition = value; }
        }
        private Guid? _newPosition;

		[CrmProperty(LogicalName = "new_positionname")]
        public virtual string NewPositionName
        {
            get { FillData(); return _newPositionName; }
            set {  _newPositionName = value; }
        }
        private string _newPositionName;

		[CrmProperty(LogicalName = "new_role", IsLookup = true)]
        public virtual Guid? NewRole
        {
            get { FillData(); return _newRole; }
            set { SetLookup("new_role", "new_sitecontactrole", value); _newRole = value; }
        }
        private Guid? _newRole;

		[CrmProperty(LogicalName = "new_rolename")]
        public virtual string NewRoleName
        {
            get { FillData(); return _newRoleName; }
            set {  _newRoleName = value; }
        }
        private string _newRoleName;

		[CrmProperty(LogicalName = "new_sitecontactid")]
        public virtual Guid NewSitecontactId
        {
            get { FillData(); return _newSitecontactId; }
            set {  _newSitecontactId = value; }
        }
        private Guid _newSitecontactId;

		[CrmProperty(LogicalName = "new_supportprocess", IsLookup = true)]
        public virtual Guid? NewSupportProcess
        {
            get { FillData(); return _newSupportProcess; }
            set { SetLookup("new_supportprocess", "new_supportprocess", value); _newSupportProcess = value; }
        }
        private Guid? _newSupportProcess;

		[CrmProperty(LogicalName = "new_supportprocessname")]
        public virtual string NewSupportProcessName
        {
            get { FillData(); return _newSupportProcessName; }
            set {  _newSupportProcessName = value; }
        }
        private string _newSupportProcessName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_sitecontactposition", PrimaryKey = "new_sitecontactpositionid")]
	public partial class NewSitecontactposition : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_sitecontactposition";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewSitecontactpositionId = "new_sitecontactpositionid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewSitecontactpositionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_sitecontactpositionid")]
        public virtual Guid NewSitecontactpositionId
        {
            get { FillData(); return _newSitecontactpositionId; }
            set {  _newSitecontactpositionId = value; }
        }
        private Guid _newSitecontactpositionId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_sitecontactrole", PrimaryKey = "new_sitecontactroleid")]
	public partial class NewSitecontactrole : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_sitecontactrole";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewSitecontactroleId = "new_sitecontactroleid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewSitecontactroleId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_sitecontactroleid")]
        public virtual Guid NewSitecontactroleId
        {
            get { FillData(); return _newSitecontactroleId; }
            set {  _newSitecontactroleId = value; }
        }
        private Guid _newSitecontactroleId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_sitelocation", PrimaryKey = "new_sitelocationid")]
	public partial class NewSitelocation : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_sitelocation";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAddress1 = "new_address1";
			public const string NewAddress2 = "new_address2";
			public const string NewAddress3 = "new_address3";
			public const string NewCity = "new_city";
			public const string NewCountry = "new_country";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewName = "new_name";
			public const string NewPhone = "new_phone";
			public const string NewPostcode = "new_postcode";
			public const string NewSiteContactId = "new_sitecontactid";
			public const string NewSiteContactIdName = "new_sitecontactidname";
			public const string NewSiteContactIdYomiName = "new_sitecontactidyominame";
			public const string NewSitelocationId = "new_sitelocationid";
			public const string NewSiteName = "new_sitename";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewSitelocationId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_address1")]
        public virtual string NewAddress1
        {
            get { FillData(); return _newAddress1; }
            set { SetValue<string>("new_address1", value); _newAddress1 = value; }
        }
        private string _newAddress1;

		[CrmProperty(LogicalName = "new_address2")]
        public virtual string NewAddress2
        {
            get { FillData(); return _newAddress2; }
            set { SetValue<string>("new_address2", value); _newAddress2 = value; }
        }
        private string _newAddress2;

		[CrmProperty(LogicalName = "new_address3")]
        public virtual string NewAddress3
        {
            get { FillData(); return _newAddress3; }
            set { SetValue<string>("new_address3", value); _newAddress3 = value; }
        }
        private string _newAddress3;

		[CrmProperty(LogicalName = "new_city")]
        public virtual string NewCity
        {
            get { FillData(); return _newCity; }
            set { SetValue<string>("new_city", value); _newCity = value; }
        }
        private string _newCity;

		[CrmProperty(LogicalName = "new_country")]
        public virtual string NewCountry
        {
            get { FillData(); return _newCountry; }
            set { SetValue<string>("new_country", value); _newCountry = value; }
        }
        private string _newCountry;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_phone")]
        public virtual string NewPhone
        {
            get { FillData(); return _newPhone; }
            set { SetValue<string>("new_phone", value); _newPhone = value; }
        }
        private string _newPhone;

		[CrmProperty(LogicalName = "new_postcode")]
        public virtual string NewPostcode
        {
            get { FillData(); return _newPostcode; }
            set { SetValue<string>("new_postcode", value); _newPostcode = value; }
        }
        private string _newPostcode;

		[CrmProperty(LogicalName = "new_sitecontactid", IsLookup = true)]
        public virtual Guid? NewSiteContactId
        {
            get { FillData(); return _newSiteContactId; }
            set { SetLookup("new_sitecontactid", "contact", value); _newSiteContactId = value; }
        }
        private Guid? _newSiteContactId;

		[CrmProperty(LogicalName = "new_sitecontactidname")]
        public virtual string NewSiteContactIdName
        {
            get { FillData(); return _newSiteContactIdName; }
            set {  _newSiteContactIdName = value; }
        }
        private string _newSiteContactIdName;

		[CrmProperty(LogicalName = "new_sitecontactidyominame")]
        public virtual string NewSiteContactIdYomiName
        {
            get { FillData(); return _newSiteContactIdYomiName; }
            set {  _newSiteContactIdYomiName = value; }
        }
        private string _newSiteContactIdYomiName;

		[CrmProperty(LogicalName = "new_sitelocationid")]
        public virtual Guid NewSitelocationId
        {
            get { FillData(); return _newSitelocationId; }
            set {  _newSitelocationId = value; }
        }
        private Guid _newSitelocationId;

		[CrmProperty(LogicalName = "new_sitename")]
        public virtual string NewSiteName
        {
            get { FillData(); return _newSiteName; }
            set { SetValue<string>("new_sitename", value); _newSiteName = value; }
        }
        private string _newSiteName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_softwareoption", PrimaryKey = "new_softwareoptionid")]
	public partial class NewSoftwareoption : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_softwareoption";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewName = "new_name";
			public const string NewSoftwareoptionId = "new_softwareoptionid";
			public const string NewSoftwareOptionsId = "new_softwareoptionsid";
			public const string NewSoftwareOptionsIdName = "new_softwareoptionsidname";
			public const string NewSoftwareOptionTypeId = "new_softwareoptiontypeid";
			public const string NewSoftwareOptionTypeIdName = "new_softwareoptiontypeidname";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string NewVendorReference = "new_vendorreference";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewSoftwareoptionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_softwareoptionid")]
        public virtual Guid NewSoftwareoptionId
        {
            get { FillData(); return _newSoftwareoptionId; }
            set {  _newSoftwareoptionId = value; }
        }
        private Guid _newSoftwareoptionId;

		[CrmProperty(LogicalName = "new_softwareoptionsid", IsLookup = true)]
        public virtual Guid? NewSoftwareOptionsId
        {
            get { FillData(); return _newSoftwareOptionsId; }
            set { SetLookup("new_softwareoptionsid", "new_virtualserver", value); _newSoftwareOptionsId = value; }
        }
        private Guid? _newSoftwareOptionsId;

		[CrmProperty(LogicalName = "new_softwareoptionsidname")]
        public virtual string NewSoftwareOptionsIdName
        {
            get { FillData(); return _newSoftwareOptionsIdName; }
            set {  _newSoftwareOptionsIdName = value; }
        }
        private string _newSoftwareOptionsIdName;

		[CrmProperty(LogicalName = "new_softwareoptiontypeid", IsLookup = true)]
        public virtual Guid? NewSoftwareOptionTypeId
        {
            get { FillData(); return _newSoftwareOptionTypeId; }
            set { SetLookup("new_softwareoptiontypeid", "new_softwareoptiontype", value); _newSoftwareOptionTypeId = value; }
        }
        private Guid? _newSoftwareOptionTypeId;

		[CrmProperty(LogicalName = "new_softwareoptiontypeidname")]
        public virtual string NewSoftwareOptionTypeIdName
        {
            get { FillData(); return _newSoftwareOptionTypeIdName; }
            set {  _newSoftwareOptionTypeIdName = value; }
        }
        private string _newSoftwareOptionTypeIdName;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "new_vendorreference")]
        public virtual string NewVendorReference
        {
            get { FillData(); return _newVendorReference; }
            set { SetValue<string>("new_vendorreference", value); _newVendorReference = value; }
        }
        private string _newVendorReference;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_softwareoptiontype", PrimaryKey = "new_softwareoptiontypeid")]
	public partial class NewSoftwareoptiontype : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_softwareoptiontype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewSoftwareoptiontypeId = "new_softwareoptiontypeid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewSoftwareoptiontypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_softwareoptiontypeid")]
        public virtual Guid NewSoftwareoptiontypeId
        {
            get { FillData(); return _newSoftwareoptiontypeId; }
            set {  _newSoftwareoptiontypeId = value; }
        }
        private Guid _newSoftwareoptiontypeId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_supportprocess", PrimaryKey = "new_supportprocessid")]
	public partial class NewSupportprocess : CrmEntity
	{
		public class Enums
		{
			public enum NewChargeableWorkNeedsApprovalBy 
			{
				[CrmPicklist(DisplayName = "Site Managers Only", Value = 100000000)]SiteManagersOnly = 100000000,
				[CrmPicklist(DisplayName = "Support Admin & Site Managers Only", Value = 100000001)]SupportAdminSiteManagersOnly = 100000001,
				[CrmPicklist(DisplayName = "Authorisers Only", Value = 100000002)]AuthorisersOnly = 100000002,
				[CrmPicklist(DisplayName = "Any Staff", Value = 100000003)]AnyStaff = 100000003,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_supportprocess";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewApprovalRequiredoverhrs = "new_approvalrequiredoverhrs";
			public const string NewChargeableWorkNeedsApprovalBy = "new_chargeableworkneedsapprovalby";
			public const string NewChargeableworkneedsapprovalbyName = "new_chargeableworkneedsapprovalbyname";
			public const string NewCustomer = "new_customer";
			public const string NewCustomerName = "new_customername";
			public const string NewCustomerYomiName = "new_customeryominame";
			public const string NewName = "new_name";
			public const string NewPurchaseOrderRequired = "new_purchaseorderrequired";
			public const string NewPurchaseorderrequiredName = "new_purchaseorderrequiredname";
			public const string NewSiteLocation = "new_sitelocation";
			public const string NewSiteLocationName = "new_sitelocationname";
			public const string NewSupportprocessId = "new_supportprocessid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewSupportprocessId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_approvalrequiredoverhrs")]
        public virtual decimal? NewApprovalRequiredoverhrs
        {
            get { FillData(); return _newApprovalRequiredoverhrs; }
            set { SetValue<decimal?>("new_approvalrequiredoverhrs", value); _newApprovalRequiredoverhrs = value; }
        }
        private decimal? _newApprovalRequiredoverhrs;

		[CrmProperty(LogicalName = "new_chargeableworkneedsapprovalby")]
        public virtual Enums.NewChargeableWorkNeedsApprovalBy? NewChargeableWorkNeedsApprovalBy
        {
            get { FillData(); return _newChargeableWorkNeedsApprovalBy; }
            set { SetPicklist("new_chargeableworkneedsapprovalby", (int?)value); _newChargeableWorkNeedsApprovalBy = value; }
        }
        private Enums.NewChargeableWorkNeedsApprovalBy? _newChargeableWorkNeedsApprovalBy;

		[CrmProperty(LogicalName = "new_chargeableworkneedsapprovalbyname")]
        public virtual string NewChargeableworkneedsapprovalbyName
        {
            get { FillData(); return _newChargeableworkneedsapprovalbyName; }
            set {  _newChargeableworkneedsapprovalbyName = value; }
        }
        private string _newChargeableworkneedsapprovalbyName;

		[CrmProperty(LogicalName = "new_customer", IsLookup = true)]
        public virtual Guid? NewCustomer
        {
            get { FillData(); return _newCustomer; }
            set { SetLookup("new_customer", "account", value); _newCustomer = value; }
        }
        private Guid? _newCustomer;

		[CrmProperty(LogicalName = "new_customername")]
        public virtual string NewCustomerName
        {
            get { FillData(); return _newCustomerName; }
            set {  _newCustomerName = value; }
        }
        private string _newCustomerName;

		[CrmProperty(LogicalName = "new_customeryominame")]
        public virtual string NewCustomerYomiName
        {
            get { FillData(); return _newCustomerYomiName; }
            set {  _newCustomerYomiName = value; }
        }
        private string _newCustomerYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_purchaseorderrequired")]
        public virtual bool? NewPurchaseOrderRequired
        {
            get { FillData(); return _newPurchaseOrderRequired; }
            set { SetValue<bool?>("new_purchaseorderrequired", value); _newPurchaseOrderRequired = value; }
        }
        private bool? _newPurchaseOrderRequired;

		[CrmProperty(LogicalName = "new_purchaseorderrequiredname")]
        public virtual string NewPurchaseorderrequiredName
        {
            get { FillData(); return _newPurchaseorderrequiredName; }
            set {  _newPurchaseorderrequiredName = value; }
        }
        private string _newPurchaseorderrequiredName;

		[CrmProperty(LogicalName = "new_sitelocation", IsLookup = true)]
        public virtual Guid? NewSiteLocation
        {
            get { FillData(); return _newSiteLocation; }
            set { SetLookup("new_sitelocation", "new_sitelocation", value); _newSiteLocation = value; }
        }
        private Guid? _newSiteLocation;

		[CrmProperty(LogicalName = "new_sitelocationname")]
        public virtual string NewSiteLocationName
        {
            get { FillData(); return _newSiteLocationName; }
            set {  _newSiteLocationName = value; }
        }
        private string _newSiteLocationName;

		[CrmProperty(LogicalName = "new_supportprocessid")]
        public virtual Guid NewSupportprocessId
        {
            get { FillData(); return _newSupportprocessId; }
            set {  _newSupportprocessId = value; }
        }
        private Guid _newSupportprocessId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_tocallingregion", PrimaryKey = "new_tocallingregionid")]
	public partial class NewTocallingregion : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_tocallingregion";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewTocallingregionId = "new_tocallingregionid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewTocallingregionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_tocallingregionid")]
        public virtual Guid NewTocallingregionId
        {
            get { FillData(); return _newTocallingregionId; }
            set {  _newTocallingregionId = value; }
        }
        private Guid _newTocallingregionId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_virtualserver", PrimaryKey = "new_virtualserverid")]
	public partial class NewVirtualserver : CrmEntity
	{
		public class Enums
		{
			public enum NewOperatingSystem 
			{
				[CrmPicklist(DisplayName = "Windows 7", Value = 100000000)]Windows7 = 100000000,
				[CrmPicklist(DisplayName = "Windows 8", Value = 100000008)]Windows8 = 100000008,
				[CrmPicklist(DisplayName = "Windows 2008 Server", Value = 100000001)]Windows2008Server = 100000001,
				[CrmPicklist(DisplayName = "Windows 2008 Server R2", Value = 100000002)]Windows2008ServerR2 = 100000002,
				[CrmPicklist(DisplayName = "Windows 2003 Server", Value = 100000003)]Windows2003Server = 100000003,
				[CrmPicklist(DisplayName = "Windows 2003 Server R2", Value = 100000004)]Windows2003ServerR2 = 100000004,
				[CrmPicklist(DisplayName = "Unix", Value = 100000005)]Unix = 100000005,
				[CrmPicklist(DisplayName = "Linux", Value = 100000006)]Linux = 100000006,
				[CrmPicklist(DisplayName = "Free BSD", Value = 100000007)]FreeBSD = 100000007,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_virtualserver";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAdminPassword = "new_adminpassword";
			public const string NewAdminUsername = "new_adminusername";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewDiskSpace = "new_diskspace";
			public const string NewGoLiveDate = "new_golivedate";
			public const string NewLANIP = "new_lanip";
			public const string NewMemoryAssigned = "new_memoryassigned";
			public const string NewMemoryBillingRecordId = "new_memorybillingrecordid";
			public const string NewMemoryBillingRecordIdName = "new_memorybillingrecordidname";
			public const string NewName = "new_name";
			public const string NewOperatingSystem = "new_operatingsystem";
			public const string NewOperatingsystemName = "new_operatingsystemname";
			public const string NewPrivateIPId = "new_privateipid";
			public const string NewPrivateIPIdName = "new_privateipidname";
			public const string NewProcessorBillingRecordId = "new_processorbillingrecordid";
			public const string NewProcessorBillingRecordIdName = "new_processorbillingrecordidname";
			public const string NewProcessorcount = "new_processorcount";
			public const string NewPublicIPId = "new_publicipid";
			public const string NewPublicIPIdName = "new_publicipidname";
			public const string NewStorageBillingRecordId = "new_storagebillingrecordid";
			public const string NewStorageBillingRecordIdName = "new_storagebillingrecordidname";
			public const string NewVirtualserverId = "new_virtualserverid";
			public const string NewVLANId = "new_vlanid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewVirtualserverId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_adminpassword")]
        public virtual string NewAdminPassword
        {
            get { FillData(); return _newAdminPassword; }
            set { SetValue<string>("new_adminpassword", value); _newAdminPassword = value; }
        }
        private string _newAdminPassword;

		[CrmProperty(LogicalName = "new_adminusername")]
        public virtual string NewAdminUsername
        {
            get { FillData(); return _newAdminUsername; }
            set { SetValue<string>("new_adminusername", value); _newAdminUsername = value; }
        }
        private string _newAdminUsername;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_diskspace")]
        public virtual decimal? NewDiskSpace
        {
            get { FillData(); return _newDiskSpace; }
            set { SetValue<decimal?>("new_diskspace", value); _newDiskSpace = value; }
        }
        private decimal? _newDiskSpace;

		[CrmProperty(LogicalName = "new_golivedate")]
        public virtual DateTime? NewGoLiveDate
        {
            get { FillData(); return _newGoLiveDate; }
            set { SetValue<DateTime?>("new_golivedate", value); _newGoLiveDate = value; }
        }
        private DateTime? _newGoLiveDate;

		[CrmProperty(LogicalName = "new_lanip")]
        public virtual string NewLANIP
        {
            get { FillData(); return _newLANIP; }
            set { SetValue<string>("new_lanip", value); _newLANIP = value; }
        }
        private string _newLANIP;

		[CrmProperty(LogicalName = "new_memoryassigned")]
        public virtual decimal? NewMemoryAssigned
        {
            get { FillData(); return _newMemoryAssigned; }
            set { SetValue<decimal?>("new_memoryassigned", value); _newMemoryAssigned = value; }
        }
        private decimal? _newMemoryAssigned;

		[CrmProperty(LogicalName = "new_memorybillingrecordid", IsLookup = true)]
        public virtual Guid? NewMemoryBillingRecordId
        {
            get { FillData(); return _newMemoryBillingRecordId; }
            set { SetLookup("new_memorybillingrecordid", "new_billingrecord", value); _newMemoryBillingRecordId = value; }
        }
        private Guid? _newMemoryBillingRecordId;

		[CrmProperty(LogicalName = "new_memorybillingrecordidname")]
        public virtual string NewMemoryBillingRecordIdName
        {
            get { FillData(); return _newMemoryBillingRecordIdName; }
            set {  _newMemoryBillingRecordIdName = value; }
        }
        private string _newMemoryBillingRecordIdName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_operatingsystem")]
        public virtual Enums.NewOperatingSystem? NewOperatingSystem
        {
            get { FillData(); return _newOperatingSystem; }
            set { SetPicklist("new_operatingsystem", (int?)value); _newOperatingSystem = value; }
        }
        private Enums.NewOperatingSystem? _newOperatingSystem;

		[CrmProperty(LogicalName = "new_operatingsystemname")]
        public virtual string NewOperatingsystemName
        {
            get { FillData(); return _newOperatingsystemName; }
            set {  _newOperatingsystemName = value; }
        }
        private string _newOperatingsystemName;

		[CrmProperty(LogicalName = "new_privateipid", IsLookup = true)]
        public virtual Guid? NewPrivateIPId
        {
            get { FillData(); return _newPrivateIPId; }
            set { SetLookup("new_privateipid", "new_ipaddress", value); _newPrivateIPId = value; }
        }
        private Guid? _newPrivateIPId;

		[CrmProperty(LogicalName = "new_privateipidname")]
        public virtual string NewPrivateIPIdName
        {
            get { FillData(); return _newPrivateIPIdName; }
            set {  _newPrivateIPIdName = value; }
        }
        private string _newPrivateIPIdName;

		[CrmProperty(LogicalName = "new_processorbillingrecordid", IsLookup = true)]
        public virtual Guid? NewProcessorBillingRecordId
        {
            get { FillData(); return _newProcessorBillingRecordId; }
            set { SetLookup("new_processorbillingrecordid", "new_billingrecord", value); _newProcessorBillingRecordId = value; }
        }
        private Guid? _newProcessorBillingRecordId;

		[CrmProperty(LogicalName = "new_processorbillingrecordidname")]
        public virtual string NewProcessorBillingRecordIdName
        {
            get { FillData(); return _newProcessorBillingRecordIdName; }
            set {  _newProcessorBillingRecordIdName = value; }
        }
        private string _newProcessorBillingRecordIdName;

		[CrmProperty(LogicalName = "new_processorcount")]
        public virtual decimal? NewProcessorcount
        {
            get { FillData(); return _newProcessorcount; }
            set { SetValue<decimal?>("new_processorcount", value); _newProcessorcount = value; }
        }
        private decimal? _newProcessorcount;

		[CrmProperty(LogicalName = "new_publicipid", IsLookup = true)]
        public virtual Guid? NewPublicIPId
        {
            get { FillData(); return _newPublicIPId; }
            set { SetLookup("new_publicipid", "new_ipaddress", value); _newPublicIPId = value; }
        }
        private Guid? _newPublicIPId;

		[CrmProperty(LogicalName = "new_publicipidname")]
        public virtual string NewPublicIPIdName
        {
            get { FillData(); return _newPublicIPIdName; }
            set {  _newPublicIPIdName = value; }
        }
        private string _newPublicIPIdName;

		[CrmProperty(LogicalName = "new_storagebillingrecordid", IsLookup = true)]
        public virtual Guid? NewStorageBillingRecordId
        {
            get { FillData(); return _newStorageBillingRecordId; }
            set { SetLookup("new_storagebillingrecordid", "new_billingrecord", value); _newStorageBillingRecordId = value; }
        }
        private Guid? _newStorageBillingRecordId;

		[CrmProperty(LogicalName = "new_storagebillingrecordidname")]
        public virtual string NewStorageBillingRecordIdName
        {
            get { FillData(); return _newStorageBillingRecordIdName; }
            set {  _newStorageBillingRecordIdName = value; }
        }
        private string _newStorageBillingRecordIdName;

		[CrmProperty(LogicalName = "new_virtualserverid")]
        public virtual Guid NewVirtualserverId
        {
            get { FillData(); return _newVirtualserverId; }
            set {  _newVirtualserverId = value; }
        }
        private Guid _newVirtualserverId;

		[CrmProperty(LogicalName = "new_vlanid")]
        public virtual string NewVLANId
        {
            get { FillData(); return _newVLANId; }
            set { SetValue<string>("new_vlanid", value); _newVLANId = value; }
        }
        private string _newVLANId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_wanconnection", PrimaryKey = "new_wanconnectionid")]
	public partial class NewWanconnection : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Installed", Value = 1)]Installed = 1,
				[CrmPicklist(DisplayName = "Ordered", Value = 100000000)]Ordered = 100000000,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_wanconnection";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewAssetUtilised = "new_assetutilised";
			public const string NewAssetUtilisedName = "new_assetutilisedname";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewConnectionPassword = "new_connectionpassword";
			public const string NewConnectionTermMonths = "new_connectiontermmonths";
			public const string NewConnectionTypeId = "new_connectiontypeid";
			public const string NewConnectionTypeIdName = "new_connectiontypeidname";
			public const string NewConnectionUsername = "new_connectionusername";
			public const string NewContractEndDate = "new_contractenddate";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewDataBillingRecordId = "new_databillingrecordid";
			public const string NewDataBillingRecordIdName = "new_databillingrecordidname";
			public const string NewDownloadSpeed = "new_downloadspeed";
			public const string NewInstallationDate = "new_installationdate";
			public const string NewInstallerId = "new_installerid";
			public const string NewInstallerIdName = "new_installeridname";
			public const string NewInstallerIdYomiName = "new_installeridyominame";
			public const string NewLiveDate = "new_livedate";
			public const string NewMonthlyBandwidth = "new_monthlybandwidth";
			public const string NewName = "new_name";
			public const string NewPublicIP = "new_publicip";
			public const string NewRFSDate = "new_rfsdate";
			public const string NewRouterConfig = "new_routerconfig";
			public const string NewRouterEnablePassword = "new_routerenablepassword";
			public const string NewRouterIP = "new_routerip";
			public const string NewRouterMake = "new_routermake";
			public const string NewRouterModel = "new_routermodel";
			public const string NewRouterPassword = "new_routerpassword";
			public const string NewRouterUsername = "new_routerusername";
			public const string NewSiteLocationId = "new_sitelocationid";
			public const string NewSiteLocationIdName = "new_sitelocationidname";
			public const string NewSNMPString = "new_snmpstring";
			public const string NewUploadSpeed = "new_uploadspeed";
			public const string NewVendorId = "new_vendorid";
			public const string NewVendorIdName = "new_vendoridname";
			public const string NewVendorIdYomiName = "new_vendoridyominame";
			public const string NewVendorReference = "new_vendorreference";
			public const string NewWanconnectionId = "new_wanconnectionid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewWanconnectionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_assetutilised", IsLookup = true)]
        public virtual Guid? NewAssetUtilised
        {
            get { FillData(); return _newAssetUtilised; }
            set { SetLookup("new_assetutilised", "new_assetregister", value); _newAssetUtilised = value; }
        }
        private Guid? _newAssetUtilised;

		[CrmProperty(LogicalName = "new_assetutilisedname")]
        public virtual string NewAssetUtilisedName
        {
            get { FillData(); return _newAssetUtilisedName; }
            set {  _newAssetUtilisedName = value; }
        }
        private string _newAssetUtilisedName;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_connectionpassword")]
        public virtual string NewConnectionPassword
        {
            get { FillData(); return _newConnectionPassword; }
            set { SetValue<string>("new_connectionpassword", value); _newConnectionPassword = value; }
        }
        private string _newConnectionPassword;

		[CrmProperty(LogicalName = "new_connectiontermmonths")]
        public virtual decimal? NewConnectionTermMonths
        {
            get { FillData(); return _newConnectionTermMonths; }
            set { SetValue<decimal?>("new_connectiontermmonths", value); _newConnectionTermMonths = value; }
        }
        private decimal? _newConnectionTermMonths;

		[CrmProperty(LogicalName = "new_connectiontypeid", IsLookup = true)]
        public virtual Guid? NewConnectionTypeId
        {
            get { FillData(); return _newConnectionTypeId; }
            set { SetLookup("new_connectiontypeid", "new_wanconnectiontype", value); _newConnectionTypeId = value; }
        }
        private Guid? _newConnectionTypeId;

		[CrmProperty(LogicalName = "new_connectiontypeidname")]
        public virtual string NewConnectionTypeIdName
        {
            get { FillData(); return _newConnectionTypeIdName; }
            set {  _newConnectionTypeIdName = value; }
        }
        private string _newConnectionTypeIdName;

		[CrmProperty(LogicalName = "new_connectionusername")]
        public virtual string NewConnectionUsername
        {
            get { FillData(); return _newConnectionUsername; }
            set { SetValue<string>("new_connectionusername", value); _newConnectionUsername = value; }
        }
        private string _newConnectionUsername;

		[CrmProperty(LogicalName = "new_contractenddate")]
        public virtual DateTime? NewContractEndDate
        {
            get { FillData(); return _newContractEndDate; }
            set { SetValue<DateTime?>("new_contractenddate", value); _newContractEndDate = value; }
        }
        private DateTime? _newContractEndDate;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_databillingrecordid", IsLookup = true)]
        public virtual Guid? NewDataBillingRecordId
        {
            get { FillData(); return _newDataBillingRecordId; }
            set { SetLookup("new_databillingrecordid", "new_billingrecord", value); _newDataBillingRecordId = value; }
        }
        private Guid? _newDataBillingRecordId;

		[CrmProperty(LogicalName = "new_databillingrecordidname")]
        public virtual string NewDataBillingRecordIdName
        {
            get { FillData(); return _newDataBillingRecordIdName; }
            set {  _newDataBillingRecordIdName = value; }
        }
        private string _newDataBillingRecordIdName;

		[CrmProperty(LogicalName = "new_downloadspeed")]
        public virtual string NewDownloadSpeed
        {
            get { FillData(); return _newDownloadSpeed; }
            set { SetValue<string>("new_downloadspeed", value); _newDownloadSpeed = value; }
        }
        private string _newDownloadSpeed;

		[CrmProperty(LogicalName = "new_installationdate")]
        public virtual DateTime? NewInstallationDate
        {
            get { FillData(); return _newInstallationDate; }
            set { SetValue<DateTime?>("new_installationdate", value); _newInstallationDate = value; }
        }
        private DateTime? _newInstallationDate;

		[CrmProperty(LogicalName = "new_installerid", IsLookup = true)]
        public virtual Guid? NewInstallerId
        {
            get { FillData(); return _newInstallerId; }
            set { SetLookup("new_installerid", "contact", value); _newInstallerId = value; }
        }
        private Guid? _newInstallerId;

		[CrmProperty(LogicalName = "new_installeridname")]
        public virtual string NewInstallerIdName
        {
            get { FillData(); return _newInstallerIdName; }
            set {  _newInstallerIdName = value; }
        }
        private string _newInstallerIdName;

		[CrmProperty(LogicalName = "new_installeridyominame")]
        public virtual string NewInstallerIdYomiName
        {
            get { FillData(); return _newInstallerIdYomiName; }
            set {  _newInstallerIdYomiName = value; }
        }
        private string _newInstallerIdYomiName;

		[CrmProperty(LogicalName = "new_livedate")]
        public virtual DateTime? NewLiveDate
        {
            get { FillData(); return _newLiveDate; }
            set { SetValue<DateTime?>("new_livedate", value); _newLiveDate = value; }
        }
        private DateTime? _newLiveDate;

		[CrmProperty(LogicalName = "new_monthlybandwidth")]
        public virtual int? NewMonthlyBandwidth
        {
            get { FillData(); return _newMonthlyBandwidth; }
            set { SetValue<int?>("new_monthlybandwidth", value); _newMonthlyBandwidth = value; }
        }
        private int? _newMonthlyBandwidth;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_publicip")]
        public virtual string NewPublicIP
        {
            get { FillData(); return _newPublicIP; }
            set { SetValue<string>("new_publicip", value); _newPublicIP = value; }
        }
        private string _newPublicIP;

		[CrmProperty(LogicalName = "new_rfsdate")]
        public virtual DateTime? NewRFSDate
        {
            get { FillData(); return _newRFSDate; }
            set { SetValue<DateTime?>("new_rfsdate", value); _newRFSDate = value; }
        }
        private DateTime? _newRFSDate;

		[CrmProperty(LogicalName = "new_routerconfig")]
        public virtual string NewRouterConfig
        {
            get { FillData(); return _newRouterConfig; }
            set { SetValue<string>("new_routerconfig", value); _newRouterConfig = value; }
        }
        private string _newRouterConfig;

		[CrmProperty(LogicalName = "new_routerenablepassword")]
        public virtual string NewRouterEnablePassword
        {
            get { FillData(); return _newRouterEnablePassword; }
            set { SetValue<string>("new_routerenablepassword", value); _newRouterEnablePassword = value; }
        }
        private string _newRouterEnablePassword;

		[CrmProperty(LogicalName = "new_routerip")]
        public virtual string NewRouterIP
        {
            get { FillData(); return _newRouterIP; }
            set { SetValue<string>("new_routerip", value); _newRouterIP = value; }
        }
        private string _newRouterIP;

		[CrmProperty(LogicalName = "new_routermake")]
        public virtual string NewRouterMake
        {
            get { FillData(); return _newRouterMake; }
            set { SetValue<string>("new_routermake", value); _newRouterMake = value; }
        }
        private string _newRouterMake;

		[CrmProperty(LogicalName = "new_routermodel")]
        public virtual string NewRouterModel
        {
            get { FillData(); return _newRouterModel; }
            set { SetValue<string>("new_routermodel", value); _newRouterModel = value; }
        }
        private string _newRouterModel;

		[CrmProperty(LogicalName = "new_routerpassword")]
        public virtual string NewRouterPassword
        {
            get { FillData(); return _newRouterPassword; }
            set { SetValue<string>("new_routerpassword", value); _newRouterPassword = value; }
        }
        private string _newRouterPassword;

		[CrmProperty(LogicalName = "new_routerusername")]
        public virtual string NewRouterUsername
        {
            get { FillData(); return _newRouterUsername; }
            set { SetValue<string>("new_routerusername", value); _newRouterUsername = value; }
        }
        private string _newRouterUsername;

		[CrmProperty(LogicalName = "new_sitelocationid", IsLookup = true)]
        public virtual Guid? NewSiteLocationId
        {
            get { FillData(); return _newSiteLocationId; }
            set { SetLookup("new_sitelocationid", "new_sitelocation", value); _newSiteLocationId = value; }
        }
        private Guid? _newSiteLocationId;

		[CrmProperty(LogicalName = "new_sitelocationidname")]
        public virtual string NewSiteLocationIdName
        {
            get { FillData(); return _newSiteLocationIdName; }
            set {  _newSiteLocationIdName = value; }
        }
        private string _newSiteLocationIdName;

		[CrmProperty(LogicalName = "new_snmpstring")]
        public virtual string NewSNMPString
        {
            get { FillData(); return _newSNMPString; }
            set { SetValue<string>("new_snmpstring", value); _newSNMPString = value; }
        }
        private string _newSNMPString;

		[CrmProperty(LogicalName = "new_uploadspeed")]
        public virtual string NewUploadSpeed
        {
            get { FillData(); return _newUploadSpeed; }
            set { SetValue<string>("new_uploadspeed", value); _newUploadSpeed = value; }
        }
        private string _newUploadSpeed;

		[CrmProperty(LogicalName = "new_vendorid", IsLookup = true)]
        public virtual Guid? NewVendorId
        {
            get { FillData(); return _newVendorId; }
            set { SetLookup("new_vendorid", "account", value); _newVendorId = value; }
        }
        private Guid? _newVendorId;

		[CrmProperty(LogicalName = "new_vendoridname")]
        public virtual string NewVendorIdName
        {
            get { FillData(); return _newVendorIdName; }
            set {  _newVendorIdName = value; }
        }
        private string _newVendorIdName;

		[CrmProperty(LogicalName = "new_vendoridyominame")]
        public virtual string NewVendorIdYomiName
        {
            get { FillData(); return _newVendorIdYomiName; }
            set {  _newVendorIdYomiName = value; }
        }
        private string _newVendorIdYomiName;

		[CrmProperty(LogicalName = "new_vendorreference")]
        public virtual string NewVendorReference
        {
            get { FillData(); return _newVendorReference; }
            set { SetValue<string>("new_vendorreference", value); _newVendorReference = value; }
        }
        private string _newVendorReference;

		[CrmProperty(LogicalName = "new_wanconnectionid")]
        public virtual Guid NewWanconnectionId
        {
            get { FillData(); return _newWanconnectionId; }
            set {  _newWanconnectionId = value; }
        }
        private Guid _newWanconnectionId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_wanconnectiontype", PrimaryKey = "new_wanconnectiontypeid")]
	public partial class NewWanconnectiontype : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_wanconnectiontype";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewName = "new_name";
			public const string NewWanconnectiontypeId = "new_wanconnectiontypeid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewWanconnectiontypeId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_wanconnectiontypeid")]
        public virtual Guid NewWanconnectiontypeId
        {
            get { FillData(); return _newWanconnectiontypeId; }
            set {  _newWanconnectiontypeId = value; }
        }
        private Guid _newWanconnectiontypeId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "new_website", PrimaryKey = "new_websiteid")]
	public partial class NewWebsite : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "new_website";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string NewCustomerId = "new_customerid";
			public const string NewCustomerIdName = "new_customeridname";
			public const string NewCustomerIdYomiName = "new_customeridyominame";
			public const string NewIPAddress = "new_ipaddress";
			public const string NewIPAddressId = "new_ipaddressid";
			public const string NewIPAddressIdName = "new_ipaddressidname";
			public const string NewMaintainedbyId = "new_maintainedbyid";
			public const string NewMaintainedbyIdName = "new_maintainedbyidname";
			public const string NewMaintainedbyIdYomiName = "new_maintainedbyidyominame";
			public const string NewName = "new_name";
			public const string NewPrimaryURL = "new_primaryurl";
			public const string NewWebsiteId = "new_websiteid";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return NewWebsiteId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "new_customerid", IsLookup = true)]
        public virtual Guid? NewCustomerId
        {
            get { FillData(); return _newCustomerId; }
            set { SetLookup("new_customerid", "account", value); _newCustomerId = value; }
        }
        private Guid? _newCustomerId;

		[CrmProperty(LogicalName = "new_customeridname")]
        public virtual string NewCustomerIdName
        {
            get { FillData(); return _newCustomerIdName; }
            set {  _newCustomerIdName = value; }
        }
        private string _newCustomerIdName;

		[CrmProperty(LogicalName = "new_customeridyominame")]
        public virtual string NewCustomerIdYomiName
        {
            get { FillData(); return _newCustomerIdYomiName; }
            set {  _newCustomerIdYomiName = value; }
        }
        private string _newCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_ipaddress")]
        public virtual string NewIPAddress
        {
            get { FillData(); return _newIPAddress; }
            set { SetValue<string>("new_ipaddress", value); _newIPAddress = value; }
        }
        private string _newIPAddress;

		[CrmProperty(LogicalName = "new_ipaddressid", IsLookup = true)]
        public virtual Guid? NewIPAddressId
        {
            get { FillData(); return _newIPAddressId; }
            set { SetLookup("new_ipaddressid", "new_ipaddress", value); _newIPAddressId = value; }
        }
        private Guid? _newIPAddressId;

		[CrmProperty(LogicalName = "new_ipaddressidname")]
        public virtual string NewIPAddressIdName
        {
            get { FillData(); return _newIPAddressIdName; }
            set {  _newIPAddressIdName = value; }
        }
        private string _newIPAddressIdName;

		[CrmProperty(LogicalName = "new_maintainedbyid", IsLookup = true)]
        public virtual Guid? NewMaintainedbyId
        {
            get { FillData(); return _newMaintainedbyId; }
            set { SetLookup("new_maintainedbyid", "account", value); _newMaintainedbyId = value; }
        }
        private Guid? _newMaintainedbyId;

		[CrmProperty(LogicalName = "new_maintainedbyidname")]
        public virtual string NewMaintainedbyIdName
        {
            get { FillData(); return _newMaintainedbyIdName; }
            set {  _newMaintainedbyIdName = value; }
        }
        private string _newMaintainedbyIdName;

		[CrmProperty(LogicalName = "new_maintainedbyidyominame")]
        public virtual string NewMaintainedbyIdYomiName
        {
            get { FillData(); return _newMaintainedbyIdYomiName; }
            set {  _newMaintainedbyIdYomiName = value; }
        }
        private string _newMaintainedbyIdYomiName;

		[CrmProperty(LogicalName = "new_name")]
        public virtual string NewName
        {
            get { FillData(); return _newName; }
            set { SetValue<string>("new_name", value); _newName = value; }
        }
        private string _newName;

		[CrmProperty(LogicalName = "new_primaryurl")]
        public virtual string NewPrimaryURL
        {
            get { FillData(); return _newPrimaryURL; }
            set { SetValue<string>("new_primaryurl", value); _newPrimaryURL = value; }
        }
        private string _newPrimaryURL;

		[CrmProperty(LogicalName = "new_websiteid")]
        public virtual Guid NewWebsiteId
        {
            get { FillData(); return _newWebsiteId; }
            set {  _newWebsiteId = value; }
        }
        private Guid _newWebsiteId;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "opportunity", PrimaryKey = "opportunityid")]
	public partial class Opportunity : CrmEntity
	{
		public class Enums
		{
			public enum BudgetStatus 
			{
				[CrmPicklist(DisplayName = "No Committed Budget")]NoCommittedBudget = 0,
				[CrmPicklist(DisplayName = "May Buy", Value = 1)]MayBuy = 1,
				[CrmPicklist(DisplayName = "Can Buy", Value = 2)]CanBuy = 2,
				[CrmPicklist(DisplayName = "Will Buy", Value = 3)]WillBuy = 3,
			}		
			public enum InitialCommunication 
			{
				[CrmPicklist(DisplayName = "Contacted")]Contacted = 0,
				[CrmPicklist(DisplayName = "Not Contacted", Value = 1)]NotContacted = 1,
			}		
			public enum MSAAllocatedtoPartner 
			{
				[CrmPicklist(DisplayName = "Yes", Value = 1)]Yes = 1,
				[CrmPicklist(DisplayName = "No", Value = 2)]No = 2,
			}		
			public enum Need 
			{
				[CrmPicklist(DisplayName = "Must have")]MustHave = 0,
				[CrmPicklist(DisplayName = "Should have", Value = 1)]ShouldHave = 1,
				[CrmPicklist(DisplayName = "Good to have", Value = 2)]GoodToHave = 2,
				[CrmPicklist(DisplayName = "No need", Value = 3)]NoNeed = 3,
			}		
			public enum OpportunityRatingCode 
			{
				[CrmPicklist(DisplayName = "Hot", Value = 1)]Hot = 1,
				[CrmPicklist(DisplayName = "Warm", Value = 2)]Warm = 2,
				[CrmPicklist(DisplayName = "Cold", Value = 3)]Cold = 3,
			}		
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum PurchaseProcess 
			{
				[CrmPicklist(DisplayName = "Individual")]Individual = 0,
				[CrmPicklist(DisplayName = "Committee", Value = 1)]Committee = 1,
				[CrmPicklist(DisplayName = "Unknown", Value = 2)]Unknown = 2,
			}		
			public enum PurchaseTimeframe 
			{
				[CrmPicklist(DisplayName = "Immediate")]Immediate = 0,
				[CrmPicklist(DisplayName = "This Quarter", Value = 1)]ThisQuarter = 1,
				[CrmPicklist(DisplayName = "Next Quarter", Value = 2)]NextQuarter = 2,
				[CrmPicklist(DisplayName = "This Year", Value = 3)]ThisYear = 3,
				[CrmPicklist(DisplayName = "Unknown", Value = 4)]Unknown = 4,
			}		
			public enum SalesStage 
			{
				[CrmPicklist(DisplayName = "Qualify")]Qualify = 0,
				[CrmPicklist(DisplayName = "Develop", Value = 1)]Develop = 1,
				[CrmPicklist(DisplayName = "Propose", Value = 2)]Propose = 2,
				[CrmPicklist(DisplayName = "Close", Value = 3)]Close = 3,
			}		
			public enum SalesStageCode 
			{
				[CrmPicklist(DisplayName = "Future call back", Value = 1)]FutureCallBack = 1,
				[CrmPicklist(DisplayName = "1st visit arranged", Value = 100000000)]_1stVisitArranged = 100000000,
				[CrmPicklist(DisplayName = "Preparing proposal", Value = 100000002)]PreparingProposal = 100000002,
				[CrmPicklist(DisplayName = "Proposal delivered", Value = 100000003)]ProposalDelivered = 100000003,
				[CrmPicklist(DisplayName = "Scoping", Value = 100000004)]Scoping = 100000004,
				[CrmPicklist(DisplayName = "Final proposal delivered", Value = 100000005)]FinalProposalDelivered = 100000005,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Won", Value = 1)]Won = 1,
				[CrmPicklist(DisplayName = "Lost", Value = 2)]Lost = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Product set doesn't match needs", Value = 100000001)]ProductSetDoesntMatchNeeds = 100000001,
				[CrmPicklist(DisplayName = "Too slow responding", Value = 100000000)]TooSlowResponding = 100000000,
				[CrmPicklist(DisplayName = "In Progress", Value = 1)]InProgress = 1,
				[CrmPicklist(DisplayName = "On Hold", Value = 2)]OnHold = 2,
				[CrmPicklist(DisplayName = "Open for Bidding", Value = 200000)]OpenForBidding = 200000,
				[CrmPicklist(DisplayName = "Won", Value = 3)]Won = 3,
				[CrmPicklist(DisplayName = "Canceled", Value = 4)]Canceled = 4,
				[CrmPicklist(DisplayName = "Out-Sold", Value = 5)]OutSold = 5,
			}		
			public enum TimeLine 
			{
				[CrmPicklist(DisplayName = "Immediate")]Immediate = 0,
				[CrmPicklist(DisplayName = "This Quarter", Value = 1)]ThisQuarter = 1,
				[CrmPicklist(DisplayName = "Next Quarter", Value = 2)]NextQuarter = 2,
				[CrmPicklist(DisplayName = "This Year", Value = 3)]ThisYear = 3,
				[CrmPicklist(DisplayName = "Not known", Value = 4)]NotKnown = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "opportunity";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string ActualCloseDate = "actualclosedate";
			public const string ActualValue = "actualvalue";
			public const string AdxCreatedByIPAddress = "adx_createdbyipaddress";
			public const string AdxCreatedByUsername = "adx_createdbyusername";
			public const string AdxModifiedByIPAddress = "adx_modifiedbyipaddress";
			public const string AdxModifiedByUsername = "adx_modifiedbyusername";
			public const string BudgetAmount = "budgetamount";
			public const string BudgetStatus = "budgetstatus";
			public const string BudgetTypeName = "budgettypename";
			public const string CampaignId = "campaignid";
			public const string CampaignIdName = "campaignidname";
			public const string CaptureProposalFeedback = "captureproposalfeedback";
			public const string CaptureProposalFeedbackName = "captureproposalfeedbackname";
			public const string CloseProbability = "closeprobability";
			public const string CompleteFinalProposal = "completefinalproposal";
			public const string CompleteFinalProposalName = "completefinalproposalname";
			public const string CompleteInternalReview = "completeinternalreview";
			public const string CompleteInternalReviewName = "completeinternalreviewname";
			public const string ConfirmInterest = "confirminterest";
			public const string ConfirmInterestName = "confirminterestname";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CurrentSituation = "currentsituation";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string CustomerNeed = "customerneed";
			public const string CustomerPainPoints = "customerpainpoints";
			public const string DecisionMaker = "decisionmaker";
			public const string DecisionMakerName = "decisionmakername";
			public const string Description = "description";
			public const string DevelopProposal = "developproposal";
			public const string DevelopProposalName = "developproposalname";
			public const string DiscountAmount = "discountamount";
			public const string DiscountPercentage = "discountpercentage";
			public const string EstimatedCloseDate = "estimatedclosedate";
			public const string EstimatedValue = "estimatedvalue";
			public const string EvaluateFit = "evaluatefit";
			public const string EvaluateFitName = "evaluatefitname";
			public const string ExchangeRate = "exchangerate";
			public const string FileDebrief = "filedebrief";
			public const string FileDeBriefName = "filedebriefname";
			public const string FinalDecisionDate = "finaldecisiondate";
			public const string FreightAmount = "freightamount";
			public const string IdentifyCompetitors = "identifycompetitors";
			public const string IdentifyCompetitorsName = "identifycompetitorsname";
			public const string IdentifyCustomerContacts = "identifycustomercontacts";
			public const string IdentifyCustomerContactsName = "identifycustomercontactsname";
			public const string IdentifyPursuitTeam = "identifypursuitteam";
			public const string IdentifyPursuitTeamName = "identifypursuitteamname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InitialCommunication = "initialcommunication";
			public const string InitialCommunicationName = "initialcommunicationname";
			public const string IsPrivate = "isprivate";
			public const string IsPrivateName = "isprivatename";
			public const string IsRevenueSystemCalculated = "isrevenuesystemcalculated";
			public const string IsRevenueSystemCalculatedName = "isrevenuesystemcalculatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSAAllocatedtoPartner = "msa_allocatedtopartner";
			public const string MsaAllocatedtopartnerName = "msa_allocatedtopartnername";
			public const string MsaAllowBidding = "msa_allowbidding";
			public const string MsaAllowbiddingName = "msa_allowbiddingname";
			public const string MsaPartnerid = "msa_partnerid";
			public const string MsaPartneridName = "msa_partneridname";
			public const string MsaPartneridYomiName = "msa_partneridyominame";
			public const string MsaPartneroppid = "msa_partneroppid";
			public const string MsaPartneroppidName = "msa_partneroppidname";
			public const string MsaPartneroppidYomiName = "msa_partneroppidyominame";
			public const string Name = "name";
			public const string Need = "need";
			public const string NeedName = "needname";
			public const string NewContactId = "new_contactid";
			public const string NewContactIdName = "new_contactidname";
			public const string NewContactIdYomiName = "new_contactidyominame";
			public const string NewEstimatedASV = "new_estimatedasv";
			public const string NewEstOneOffRevenue = "new_estoneoffrevenue";
			public const string NewFirstMeeting = "new_firstmeeting";
			public const string NewFollowUpDue = "new_followupdue";
			public const string NewLastContact = "new_lastcontact";
			public const string NewNoofUsers = "new_noofusers";
			public const string NewQuoteExpiry = "new_quoteexpiry";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityRatingCode = "opportunityratingcode";
			public const string OpportunityRatingCodeName = "opportunityratingcodename";
			public const string OriginatingLeadId = "originatingleadid";
			public const string OriginatingLeadIdName = "originatingleadidname";
			public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string ParentAccountId = "parentaccountid";
			public const string ParentAccountIdName = "parentaccountidname";
			public const string ParentAccountIdYomiName = "parentaccountidyominame";
			public const string ParentContactId = "parentcontactid";
			public const string ParentContactIdName = "parentcontactidname";
			public const string ParentContactIdYomiName = "parentcontactidyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PresentFinalProposal = "presentfinalproposal";
			public const string PresentFinalProposalName = "presentfinalproposalname";
			public const string PresentProposal = "presentproposal";
			public const string PresentProposalName = "presentproposalname";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProposedSolution = "proposedsolution";
			public const string PurchaseProcess = "purchaseprocess";
			public const string PurchaseProcessName = "purchaseprocessname";
			public const string PurchaseTimeframe = "purchasetimeframe";
			public const string PurchaseTimeframeName = "purchasetimeframename";
			public const string PursuitDecision = "pursuitdecision";
			public const string PursuitDecisionName = "pursuitdecisionname";
			public const string QualificationComments = "qualificationcomments";
			public const string QuoteComments = "quotecomments";
			public const string ResolveFeedback = "resolvefeedback";
			public const string ResolveFeedbackName = "resolvefeedbackname";
			public const string SalesStage = "salesstage";
			public const string SalesStageCode = "salesstagecode";
			public const string SalesStageCodeName = "salesstagecodename";
			public const string SalesStageName = "salesstagename";
			public const string ScheduleFollowupProspect = "schedulefollowup_prospect";
			public const string ScheduleFollowupQualify = "schedulefollowup_qualify";
			public const string ScheduleProposalMeeting = "scheduleproposalmeeting";
			public const string SendThankYouNote = "sendthankyounote";
			public const string SendThankYouNoteName = "sendthankyounotename";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string StepId = "stepid";
			public const string StepName = "stepname";
			public const string TimeLine = "timeline";
			public const string TimelineName = "timelinename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalAmount = "totalamount";
			public const string TotalAmountLessFreight = "totalamountlessfreight";
			public const string TotalDiscountAmount = "totaldiscountamount";
			public const string TotalLineItemAmount = "totallineitemamount";
			public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
			public const string TotalTax = "totaltax";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return OpportunityId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "actualclosedate")]
        public virtual DateTime? ActualCloseDate
        {
            get { FillData(); return _actualCloseDate; }
            set { SetValue<DateTime?>("actualclosedate", value); _actualCloseDate = value; }
        }
        private DateTime? _actualCloseDate;

		[CrmProperty(LogicalName = "actualvalue")]
        public virtual decimal? ActualValue
        {
            get { FillData(); return _actualValue; }
            set { SetMoney("actualvalue", value); _actualValue = value; }
        }
        private decimal? _actualValue;

		[CrmProperty(LogicalName = "adx_createdbyipaddress")]
        public virtual string AdxCreatedByIPAddress
        {
            get { FillData(); return _adxCreatedByIPAddress; }
            set { SetValue<string>("adx_createdbyipaddress", value); _adxCreatedByIPAddress = value; }
        }
        private string _adxCreatedByIPAddress;

		[CrmProperty(LogicalName = "adx_createdbyusername")]
        public virtual string AdxCreatedByUsername
        {
            get { FillData(); return _adxCreatedByUsername; }
            set { SetValue<string>("adx_createdbyusername", value); _adxCreatedByUsername = value; }
        }
        private string _adxCreatedByUsername;

		[CrmProperty(LogicalName = "adx_modifiedbyipaddress")]
        public virtual string AdxModifiedByIPAddress
        {
            get { FillData(); return _adxModifiedByIPAddress; }
            set { SetValue<string>("adx_modifiedbyipaddress", value); _adxModifiedByIPAddress = value; }
        }
        private string _adxModifiedByIPAddress;

		[CrmProperty(LogicalName = "adx_modifiedbyusername")]
        public virtual string AdxModifiedByUsername
        {
            get { FillData(); return _adxModifiedByUsername; }
            set { SetValue<string>("adx_modifiedbyusername", value); _adxModifiedByUsername = value; }
        }
        private string _adxModifiedByUsername;

		[CrmProperty(LogicalName = "budgetamount")]
        public virtual decimal? BudgetAmount
        {
            get { FillData(); return _budgetAmount; }
            set { SetMoney("budgetamount", value); _budgetAmount = value; }
        }
        private decimal? _budgetAmount;

		[CrmProperty(LogicalName = "budgetstatus")]
        public virtual Enums.BudgetStatus? BudgetStatus
        {
            get { FillData(); return _budgetStatus; }
            set { SetPicklist("budgetstatus", (int?)value); _budgetStatus = value; }
        }
        private Enums.BudgetStatus? _budgetStatus;

		[CrmProperty(LogicalName = "budgettypename")]
        public virtual string BudgetTypeName
        {
            get { FillData(); return _budgetTypeName; }
            set {  _budgetTypeName = value; }
        }
        private string _budgetTypeName;

		[CrmProperty(LogicalName = "campaignid", IsLookup = true)]
        public virtual Guid? CampaignId
        {
            get { FillData(); return _campaignId; }
            set { SetLookup("campaignid", "campaign", value); _campaignId = value; }
        }
        private Guid? _campaignId;

		[CrmProperty(LogicalName = "campaignidname")]
        public virtual string CampaignIdName
        {
            get { FillData(); return _campaignIdName; }
            set {  _campaignIdName = value; }
        }
        private string _campaignIdName;

		[CrmProperty(LogicalName = "captureproposalfeedback")]
        public virtual bool? CaptureProposalFeedback
        {
            get { FillData(); return _captureProposalFeedback; }
            set { SetValue<bool?>("captureproposalfeedback", value); _captureProposalFeedback = value; }
        }
        private bool? _captureProposalFeedback;

		[CrmProperty(LogicalName = "captureproposalfeedbackname")]
        public virtual string CaptureProposalFeedbackName
        {
            get { FillData(); return _captureProposalFeedbackName; }
            set {  _captureProposalFeedbackName = value; }
        }
        private string _captureProposalFeedbackName;

		[CrmProperty(LogicalName = "closeprobability")]
        public virtual int? CloseProbability
        {
            get { FillData(); return _closeProbability; }
            set { SetValue<int?>("closeprobability", value); _closeProbability = value; }
        }
        private int? _closeProbability;

		[CrmProperty(LogicalName = "completefinalproposal")]
        public virtual bool? CompleteFinalProposal
        {
            get { FillData(); return _completeFinalProposal; }
            set { SetValue<bool?>("completefinalproposal", value); _completeFinalProposal = value; }
        }
        private bool? _completeFinalProposal;

		[CrmProperty(LogicalName = "completefinalproposalname")]
        public virtual string CompleteFinalProposalName
        {
            get { FillData(); return _completeFinalProposalName; }
            set {  _completeFinalProposalName = value; }
        }
        private string _completeFinalProposalName;

		[CrmProperty(LogicalName = "completeinternalreview")]
        public virtual bool? CompleteInternalReview
        {
            get { FillData(); return _completeInternalReview; }
            set { SetValue<bool?>("completeinternalreview", value); _completeInternalReview = value; }
        }
        private bool? _completeInternalReview;

		[CrmProperty(LogicalName = "completeinternalreviewname")]
        public virtual string CompleteInternalReviewName
        {
            get { FillData(); return _completeInternalReviewName; }
            set {  _completeInternalReviewName = value; }
        }
        private string _completeInternalReviewName;

		[CrmProperty(LogicalName = "confirminterest")]
        public virtual bool? ConfirmInterest
        {
            get { FillData(); return _confirmInterest; }
            set { SetValue<bool?>("confirminterest", value); _confirmInterest = value; }
        }
        private bool? _confirmInterest;

		[CrmProperty(LogicalName = "confirminterestname")]
        public virtual string ConfirmInterestName
        {
            get { FillData(); return _confirmInterestName; }
            set {  _confirmInterestName = value; }
        }
        private string _confirmInterestName;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidname")]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contactidyominame")]
        public virtual string ContactIdYomiName
        {
            get { FillData(); return _contactIdYomiName; }
            set {  _contactIdYomiName = value; }
        }
        private string _contactIdYomiName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "currentsituation")]
        public virtual string CurrentSituation
        {
            get { FillData(); return _currentSituation; }
            set { SetValue<string>("currentsituation", value); _currentSituation = value; }
        }
        private string _currentSituation;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "customerneed")]
        public virtual string CustomerNeed
        {
            get { FillData(); return _customerNeed; }
            set { SetValue<string>("customerneed", value); _customerNeed = value; }
        }
        private string _customerNeed;

		[CrmProperty(LogicalName = "customerpainpoints")]
        public virtual string CustomerPainPoints
        {
            get { FillData(); return _customerPainPoints; }
            set { SetValue<string>("customerpainpoints", value); _customerPainPoints = value; }
        }
        private string _customerPainPoints;

		[CrmProperty(LogicalName = "decisionmaker")]
        public virtual bool? DecisionMaker
        {
            get { FillData(); return _decisionMaker; }
            set { SetValue<bool?>("decisionmaker", value); _decisionMaker = value; }
        }
        private bool? _decisionMaker;

		[CrmProperty(LogicalName = "decisionmakername")]
        public virtual string DecisionMakerName
        {
            get { FillData(); return _decisionMakerName; }
            set {  _decisionMakerName = value; }
        }
        private string _decisionMakerName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "developproposal")]
        public virtual bool? DevelopProposal
        {
            get { FillData(); return _developProposal; }
            set { SetValue<bool?>("developproposal", value); _developProposal = value; }
        }
        private bool? _developProposal;

		[CrmProperty(LogicalName = "developproposalname")]
        public virtual string DevelopProposalName
        {
            get { FillData(); return _developProposalName; }
            set {  _developProposalName = value; }
        }
        private string _developProposalName;

		[CrmProperty(LogicalName = "discountamount")]
        public virtual decimal? DiscountAmount
        {
            get { FillData(); return _discountAmount; }
            set { SetMoney("discountamount", value); _discountAmount = value; }
        }
        private decimal? _discountAmount;

		[CrmProperty(LogicalName = "discountpercentage")]
        public virtual decimal? DiscountPercentage
        {
            get { FillData(); return _discountPercentage; }
            set { SetValue<decimal?>("discountpercentage", value); _discountPercentage = value; }
        }
        private decimal? _discountPercentage;

		[CrmProperty(LogicalName = "estimatedclosedate")]
        public virtual DateTime? EstimatedCloseDate
        {
            get { FillData(); return _estimatedCloseDate; }
            set { SetValue<DateTime?>("estimatedclosedate", value); _estimatedCloseDate = value; }
        }
        private DateTime? _estimatedCloseDate;

		[CrmProperty(LogicalName = "estimatedvalue")]
        public virtual decimal? EstimatedValue
        {
            get { FillData(); return _estimatedValue; }
            set { SetMoney("estimatedvalue", value); _estimatedValue = value; }
        }
        private decimal? _estimatedValue;

		[CrmProperty(LogicalName = "evaluatefit")]
        public virtual bool? EvaluateFit
        {
            get { FillData(); return _evaluateFit; }
            set { SetValue<bool?>("evaluatefit", value); _evaluateFit = value; }
        }
        private bool? _evaluateFit;

		[CrmProperty(LogicalName = "evaluatefitname")]
        public virtual string EvaluateFitName
        {
            get { FillData(); return _evaluateFitName; }
            set {  _evaluateFitName = value; }
        }
        private string _evaluateFitName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "filedebrief")]
        public virtual bool? FileDebrief
        {
            get { FillData(); return _fileDebrief; }
            set { SetValue<bool?>("filedebrief", value); _fileDebrief = value; }
        }
        private bool? _fileDebrief;

		[CrmProperty(LogicalName = "filedebriefname")]
        public virtual string FileDeBriefName
        {
            get { FillData(); return _fileDeBriefName; }
            set {  _fileDeBriefName = value; }
        }
        private string _fileDeBriefName;

		[CrmProperty(LogicalName = "finaldecisiondate")]
        public virtual DateTime? FinalDecisionDate
        {
            get { FillData(); return _finalDecisionDate; }
            set { SetValue<DateTime?>("finaldecisiondate", value); _finalDecisionDate = value; }
        }
        private DateTime? _finalDecisionDate;

		[CrmProperty(LogicalName = "freightamount")]
        public virtual decimal? FreightAmount
        {
            get { FillData(); return _freightAmount; }
            set { SetMoney("freightamount", value); _freightAmount = value; }
        }
        private decimal? _freightAmount;

		[CrmProperty(LogicalName = "identifycompetitors")]
        public virtual bool? IdentifyCompetitors
        {
            get { FillData(); return _identifyCompetitors; }
            set { SetValue<bool?>("identifycompetitors", value); _identifyCompetitors = value; }
        }
        private bool? _identifyCompetitors;

		[CrmProperty(LogicalName = "identifycompetitorsname")]
        public virtual string IdentifyCompetitorsName
        {
            get { FillData(); return _identifyCompetitorsName; }
            set {  _identifyCompetitorsName = value; }
        }
        private string _identifyCompetitorsName;

		[CrmProperty(LogicalName = "identifycustomercontacts")]
        public virtual bool? IdentifyCustomerContacts
        {
            get { FillData(); return _identifyCustomerContacts; }
            set { SetValue<bool?>("identifycustomercontacts", value); _identifyCustomerContacts = value; }
        }
        private bool? _identifyCustomerContacts;

		[CrmProperty(LogicalName = "identifycustomercontactsname")]
        public virtual string IdentifyCustomerContactsName
        {
            get { FillData(); return _identifyCustomerContactsName; }
            set {  _identifyCustomerContactsName = value; }
        }
        private string _identifyCustomerContactsName;

		[CrmProperty(LogicalName = "identifypursuitteam")]
        public virtual bool? IdentifyPursuitTeam
        {
            get { FillData(); return _identifyPursuitTeam; }
            set { SetValue<bool?>("identifypursuitteam", value); _identifyPursuitTeam = value; }
        }
        private bool? _identifyPursuitTeam;

		[CrmProperty(LogicalName = "identifypursuitteamname")]
        public virtual string IdentifyPursuitTeamName
        {
            get { FillData(); return _identifyPursuitTeamName; }
            set {  _identifyPursuitTeamName = value; }
        }
        private string _identifyPursuitTeamName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "initialcommunication")]
        public virtual Enums.InitialCommunication? InitialCommunication
        {
            get { FillData(); return _initialCommunication; }
            set { SetPicklist("initialcommunication", (int?)value); _initialCommunication = value; }
        }
        private Enums.InitialCommunication? _initialCommunication;

		[CrmProperty(LogicalName = "initialcommunicationname")]
        public virtual string InitialCommunicationName
        {
            get { FillData(); return _initialCommunicationName; }
            set {  _initialCommunicationName = value; }
        }
        private string _initialCommunicationName;

		[CrmProperty(LogicalName = "isprivate")]
        public virtual bool? IsPrivate
        {
            get { FillData(); return _isPrivate; }
            set {  _isPrivate = value; }
        }
        private bool? _isPrivate;

		[CrmProperty(LogicalName = "isprivatename")]
        public virtual string IsPrivateName
        {
            get { FillData(); return _isPrivateName; }
            set {  _isPrivateName = value; }
        }
        private string _isPrivateName;

		[CrmProperty(LogicalName = "isrevenuesystemcalculated")]
        public virtual bool? IsRevenueSystemCalculated
        {
            get { FillData(); return _isRevenueSystemCalculated; }
            set { SetValue<bool?>("isrevenuesystemcalculated", value); _isRevenueSystemCalculated = value; }
        }
        private bool? _isRevenueSystemCalculated;

		[CrmProperty(LogicalName = "isrevenuesystemcalculatedname")]
        public virtual string IsRevenueSystemCalculatedName
        {
            get { FillData(); return _isRevenueSystemCalculatedName; }
            set {  _isRevenueSystemCalculatedName = value; }
        }
        private string _isRevenueSystemCalculatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "msa_allocatedtopartner")]
        public virtual Enums.MSAAllocatedtoPartner? MSAAllocatedtoPartner
        {
            get { FillData(); return _mSAAllocatedtoPartner; }
            set { SetPicklist("msa_allocatedtopartner", (int?)value); _mSAAllocatedtoPartner = value; }
        }
        private Enums.MSAAllocatedtoPartner? _mSAAllocatedtoPartner;

		[CrmProperty(LogicalName = "msa_allocatedtopartnername")]
        public virtual string MsaAllocatedtopartnerName
        {
            get { FillData(); return _msaAllocatedtopartnerName; }
            set {  _msaAllocatedtopartnerName = value; }
        }
        private string _msaAllocatedtopartnerName;

		[CrmProperty(LogicalName = "msa_allowbidding")]
        public virtual bool? MsaAllowBidding
        {
            get { FillData(); return _msaAllowBidding; }
            set { SetValue<bool?>("msa_allowbidding", value); _msaAllowBidding = value; }
        }
        private bool? _msaAllowBidding;

		[CrmProperty(LogicalName = "msa_allowbiddingname")]
        public virtual string MsaAllowbiddingName
        {
            get { FillData(); return _msaAllowbiddingName; }
            set {  _msaAllowbiddingName = value; }
        }
        private string _msaAllowbiddingName;

		[CrmProperty(LogicalName = "msa_partnerid", IsLookup = true)]
        public virtual Guid? MsaPartnerid
        {
            get { FillData(); return _msaPartnerid; }
            set { SetLookup("msa_partnerid", "account", value); _msaPartnerid = value; }
        }
        private Guid? _msaPartnerid;

		[CrmProperty(LogicalName = "msa_partneridname")]
        public virtual string MsaPartneridName
        {
            get { FillData(); return _msaPartneridName; }
            set {  _msaPartneridName = value; }
        }
        private string _msaPartneridName;

		[CrmProperty(LogicalName = "msa_partneridyominame")]
        public virtual string MsaPartneridYomiName
        {
            get { FillData(); return _msaPartneridYomiName; }
            set {  _msaPartneridYomiName = value; }
        }
        private string _msaPartneridYomiName;

		[CrmProperty(LogicalName = "msa_partneroppid", IsLookup = true)]
        public virtual Guid? MsaPartneroppid
        {
            get { FillData(); return _msaPartneroppid; }
            set { SetLookup("msa_partneroppid", "contact", value); _msaPartneroppid = value; }
        }
        private Guid? _msaPartneroppid;

		[CrmProperty(LogicalName = "msa_partneroppidname")]
        public virtual string MsaPartneroppidName
        {
            get { FillData(); return _msaPartneroppidName; }
            set {  _msaPartneroppidName = value; }
        }
        private string _msaPartneroppidName;

		[CrmProperty(LogicalName = "msa_partneroppidyominame")]
        public virtual string MsaPartneroppidYomiName
        {
            get { FillData(); return _msaPartneroppidYomiName; }
            set {  _msaPartneroppidYomiName = value; }
        }
        private string _msaPartneroppidYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "need")]
        public virtual Enums.Need? Need
        {
            get { FillData(); return _need; }
            set { SetPicklist("need", (int?)value); _need = value; }
        }
        private Enums.Need? _need;

		[CrmProperty(LogicalName = "needname")]
        public virtual string NeedName
        {
            get { FillData(); return _needName; }
            set {  _needName = value; }
        }
        private string _needName;

		[CrmProperty(LogicalName = "new_contactid", IsLookup = true)]
        public virtual Guid? NewContactId
        {
            get { FillData(); return _newContactId; }
            set { SetLookup("new_contactid", "contact", value); _newContactId = value; }
        }
        private Guid? _newContactId;

		[CrmProperty(LogicalName = "new_contactidname")]
        public virtual string NewContactIdName
        {
            get { FillData(); return _newContactIdName; }
            set {  _newContactIdName = value; }
        }
        private string _newContactIdName;

		[CrmProperty(LogicalName = "new_contactidyominame")]
        public virtual string NewContactIdYomiName
        {
            get { FillData(); return _newContactIdYomiName; }
            set {  _newContactIdYomiName = value; }
        }
        private string _newContactIdYomiName;

		[CrmProperty(LogicalName = "new_estimatedasv")]
        public virtual decimal? NewEstimatedASV
        {
            get { FillData(); return _newEstimatedASV; }
            set { SetMoney("new_estimatedasv", value); _newEstimatedASV = value; }
        }
        private decimal? _newEstimatedASV;

		[CrmProperty(LogicalName = "new_estoneoffrevenue")]
        public virtual decimal? NewEstOneOffRevenue
        {
            get { FillData(); return _newEstOneOffRevenue; }
            set { SetMoney("new_estoneoffrevenue", value); _newEstOneOffRevenue = value; }
        }
        private decimal? _newEstOneOffRevenue;

		[CrmProperty(LogicalName = "new_firstmeeting")]
        public virtual DateTime? NewFirstMeeting
        {
            get { FillData(); return _newFirstMeeting; }
            set { SetValue<DateTime?>("new_firstmeeting", value); _newFirstMeeting = value; }
        }
        private DateTime? _newFirstMeeting;

		[CrmProperty(LogicalName = "new_followupdue")]
        public virtual DateTime? NewFollowUpDue
        {
            get { FillData(); return _newFollowUpDue; }
            set { SetValue<DateTime?>("new_followupdue", value); _newFollowUpDue = value; }
        }
        private DateTime? _newFollowUpDue;

		[CrmProperty(LogicalName = "new_lastcontact")]
        public virtual DateTime? NewLastContact
        {
            get { FillData(); return _newLastContact; }
            set { SetValue<DateTime?>("new_lastcontact", value); _newLastContact = value; }
        }
        private DateTime? _newLastContact;

		[CrmProperty(LogicalName = "new_noofusers")]
        public virtual int? NewNoofUsers
        {
            get { FillData(); return _newNoofUsers; }
            set { SetValue<int?>("new_noofusers", value); _newNoofUsers = value; }
        }
        private int? _newNoofUsers;

		[CrmProperty(LogicalName = "new_quoteexpiry")]
        public virtual DateTime? NewQuoteExpiry
        {
            get { FillData(); return _newQuoteExpiry; }
            set { SetValue<DateTime?>("new_quoteexpiry", value); _newQuoteExpiry = value; }
        }
        private DateTime? _newQuoteExpiry;

		[CrmProperty(LogicalName = "opportunityid")]
        public virtual Guid OpportunityId
        {
            get { FillData(); return _opportunityId; }
            set {  _opportunityId = value; }
        }
        private Guid _opportunityId;

		[CrmProperty(LogicalName = "opportunityratingcode")]
        public virtual Enums.OpportunityRatingCode? OpportunityRatingCode
        {
            get { FillData(); return _opportunityRatingCode; }
            set { SetPicklist("opportunityratingcode", (int?)value); _opportunityRatingCode = value; }
        }
        private Enums.OpportunityRatingCode? _opportunityRatingCode;

		[CrmProperty(LogicalName = "opportunityratingcodename")]
        public virtual string OpportunityRatingCodeName
        {
            get { FillData(); return _opportunityRatingCodeName; }
            set {  _opportunityRatingCodeName = value; }
        }
        private string _opportunityRatingCodeName;

		[CrmProperty(LogicalName = "originatingleadid", IsLookup = true)]
        public virtual Guid? OriginatingLeadId
        {
            get { FillData(); return _originatingLeadId; }
            set { SetLookup("originatingleadid", "lead", value); _originatingLeadId = value; }
        }
        private Guid? _originatingLeadId;

		[CrmProperty(LogicalName = "originatingleadidname")]
        public virtual string OriginatingLeadIdName
        {
            get { FillData(); return _originatingLeadIdName; }
            set {  _originatingLeadIdName = value; }
        }
        private string _originatingLeadIdName;

		[CrmProperty(LogicalName = "originatingleadidyominame")]
        public virtual string OriginatingLeadIdYomiName
        {
            get { FillData(); return _originatingLeadIdYomiName; }
            set {  _originatingLeadIdYomiName = value; }
        }
        private string _originatingLeadIdYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "parentaccountid", IsLookup = true)]
        public virtual Guid? ParentAccountId
        {
            get { FillData(); return _parentAccountId; }
            set { SetLookup("parentaccountid", "account", value); _parentAccountId = value; }
        }
        private Guid? _parentAccountId;

		[CrmProperty(LogicalName = "parentaccountidname")]
        public virtual string ParentAccountIdName
        {
            get { FillData(); return _parentAccountIdName; }
            set {  _parentAccountIdName = value; }
        }
        private string _parentAccountIdName;

		[CrmProperty(LogicalName = "parentaccountidyominame")]
        public virtual string ParentAccountIdYomiName
        {
            get { FillData(); return _parentAccountIdYomiName; }
            set {  _parentAccountIdYomiName = value; }
        }
        private string _parentAccountIdYomiName;

		[CrmProperty(LogicalName = "parentcontactid", IsLookup = true)]
        public virtual Guid? ParentContactId
        {
            get { FillData(); return _parentContactId; }
            set { SetLookup("parentcontactid", "contact", value); _parentContactId = value; }
        }
        private Guid? _parentContactId;

		[CrmProperty(LogicalName = "parentcontactidname")]
        public virtual string ParentContactIdName
        {
            get { FillData(); return _parentContactIdName; }
            set {  _parentContactIdName = value; }
        }
        private string _parentContactIdName;

		[CrmProperty(LogicalName = "parentcontactidyominame")]
        public virtual string ParentContactIdYomiName
        {
            get { FillData(); return _parentContactIdYomiName; }
            set {  _parentContactIdYomiName = value; }
        }
        private string _parentContactIdYomiName;

		[CrmProperty(LogicalName = "participatesinworkflow")]
        public virtual bool? ParticipatesInWorkflow
        {
            get { FillData(); return _participatesInWorkflow; }
            set { SetValue<bool?>("participatesinworkflow", value); _participatesInWorkflow = value; }
        }
        private bool? _participatesInWorkflow;

		[CrmProperty(LogicalName = "participatesinworkflowname")]
        public virtual string ParticipatesInWorkflowName
        {
            get { FillData(); return _participatesInWorkflowName; }
            set {  _participatesInWorkflowName = value; }
        }
        private string _participatesInWorkflowName;

		[CrmProperty(LogicalName = "presentfinalproposal")]
        public virtual bool? PresentFinalProposal
        {
            get { FillData(); return _presentFinalProposal; }
            set { SetValue<bool?>("presentfinalproposal", value); _presentFinalProposal = value; }
        }
        private bool? _presentFinalProposal;

		[CrmProperty(LogicalName = "presentfinalproposalname")]
        public virtual string PresentFinalProposalName
        {
            get { FillData(); return _presentFinalProposalName; }
            set {  _presentFinalProposalName = value; }
        }
        private string _presentFinalProposalName;

		[CrmProperty(LogicalName = "presentproposal")]
        public virtual bool? PresentProposal
        {
            get { FillData(); return _presentProposal; }
            set { SetValue<bool?>("presentproposal", value); _presentProposal = value; }
        }
        private bool? _presentProposal;

		[CrmProperty(LogicalName = "presentproposalname")]
        public virtual string PresentProposalName
        {
            get { FillData(); return _presentProposalName; }
            set {  _presentProposalName = value; }
        }
        private string _presentProposalName;

		[CrmProperty(LogicalName = "pricelevelid", IsLookup = true)]
        public virtual Guid? PriceLevelId
        {
            get { FillData(); return _priceLevelId; }
            set { SetLookup("pricelevelid", "pricelevel", value); _priceLevelId = value; }
        }
        private Guid? _priceLevelId;

		[CrmProperty(LogicalName = "pricelevelidname")]
        public virtual string PriceLevelIdName
        {
            get { FillData(); return _priceLevelIdName; }
            set {  _priceLevelIdName = value; }
        }
        private string _priceLevelIdName;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "proposedsolution")]
        public virtual string ProposedSolution
        {
            get { FillData(); return _proposedSolution; }
            set { SetValue<string>("proposedsolution", value); _proposedSolution = value; }
        }
        private string _proposedSolution;

		[CrmProperty(LogicalName = "purchaseprocess")]
        public virtual Enums.PurchaseProcess? PurchaseProcess
        {
            get { FillData(); return _purchaseProcess; }
            set { SetPicklist("purchaseprocess", (int?)value); _purchaseProcess = value; }
        }
        private Enums.PurchaseProcess? _purchaseProcess;

		[CrmProperty(LogicalName = "purchaseprocessname")]
        public virtual string PurchaseProcessName
        {
            get { FillData(); return _purchaseProcessName; }
            set {  _purchaseProcessName = value; }
        }
        private string _purchaseProcessName;

		[CrmProperty(LogicalName = "purchasetimeframe")]
        public virtual Enums.PurchaseTimeframe? PurchaseTimeframe
        {
            get { FillData(); return _purchaseTimeframe; }
            set { SetPicklist("purchasetimeframe", (int?)value); _purchaseTimeframe = value; }
        }
        private Enums.PurchaseTimeframe? _purchaseTimeframe;

		[CrmProperty(LogicalName = "purchasetimeframename")]
        public virtual string PurchaseTimeframeName
        {
            get { FillData(); return _purchaseTimeframeName; }
            set {  _purchaseTimeframeName = value; }
        }
        private string _purchaseTimeframeName;

		[CrmProperty(LogicalName = "pursuitdecision")]
        public virtual bool? PursuitDecision
        {
            get { FillData(); return _pursuitDecision; }
            set { SetValue<bool?>("pursuitdecision", value); _pursuitDecision = value; }
        }
        private bool? _pursuitDecision;

		[CrmProperty(LogicalName = "pursuitdecisionname")]
        public virtual string PursuitDecisionName
        {
            get { FillData(); return _pursuitDecisionName; }
            set {  _pursuitDecisionName = value; }
        }
        private string _pursuitDecisionName;

		[CrmProperty(LogicalName = "qualificationcomments")]
        public virtual string QualificationComments
        {
            get { FillData(); return _qualificationComments; }
            set { SetValue<string>("qualificationcomments", value); _qualificationComments = value; }
        }
        private string _qualificationComments;

		[CrmProperty(LogicalName = "quotecomments")]
        public virtual string QuoteComments
        {
            get { FillData(); return _quoteComments; }
            set { SetValue<string>("quotecomments", value); _quoteComments = value; }
        }
        private string _quoteComments;

		[CrmProperty(LogicalName = "resolvefeedback")]
        public virtual bool? ResolveFeedback
        {
            get { FillData(); return _resolveFeedback; }
            set { SetValue<bool?>("resolvefeedback", value); _resolveFeedback = value; }
        }
        private bool? _resolveFeedback;

		[CrmProperty(LogicalName = "resolvefeedbackname")]
        public virtual string ResolveFeedbackName
        {
            get { FillData(); return _resolveFeedbackName; }
            set {  _resolveFeedbackName = value; }
        }
        private string _resolveFeedbackName;

		[CrmProperty(LogicalName = "salesstage")]
        public virtual Enums.SalesStage? SalesStage
        {
            get { FillData(); return _salesStage; }
            set { SetPicklist("salesstage", (int?)value); _salesStage = value; }
        }
        private Enums.SalesStage? _salesStage;

		[CrmProperty(LogicalName = "salesstagecode")]
        public virtual Enums.SalesStageCode? SalesStageCode
        {
            get { FillData(); return _salesStageCode; }
            set { SetPicklist("salesstagecode", (int?)value); _salesStageCode = value; }
        }
        private Enums.SalesStageCode? _salesStageCode;

		[CrmProperty(LogicalName = "salesstagecodename")]
        public virtual string SalesStageCodeName
        {
            get { FillData(); return _salesStageCodeName; }
            set {  _salesStageCodeName = value; }
        }
        private string _salesStageCodeName;

		[CrmProperty(LogicalName = "salesstagename")]
        public virtual string SalesStageName
        {
            get { FillData(); return _salesStageName; }
            set {  _salesStageName = value; }
        }
        private string _salesStageName;

		[CrmProperty(LogicalName = "schedulefollowup_prospect")]
        public virtual DateTime? ScheduleFollowupProspect
        {
            get { FillData(); return _scheduleFollowupProspect; }
            set { SetValue<DateTime?>("schedulefollowup_prospect", value); _scheduleFollowupProspect = value; }
        }
        private DateTime? _scheduleFollowupProspect;

		[CrmProperty(LogicalName = "schedulefollowup_qualify")]
        public virtual DateTime? ScheduleFollowupQualify
        {
            get { FillData(); return _scheduleFollowupQualify; }
            set { SetValue<DateTime?>("schedulefollowup_qualify", value); _scheduleFollowupQualify = value; }
        }
        private DateTime? _scheduleFollowupQualify;

		[CrmProperty(LogicalName = "scheduleproposalmeeting")]
        public virtual DateTime? ScheduleProposalMeeting
        {
            get { FillData(); return _scheduleProposalMeeting; }
            set { SetValue<DateTime?>("scheduleproposalmeeting", value); _scheduleProposalMeeting = value; }
        }
        private DateTime? _scheduleProposalMeeting;

		[CrmProperty(LogicalName = "sendthankyounote")]
        public virtual bool? SendThankYouNote
        {
            get { FillData(); return _sendThankYouNote; }
            set { SetValue<bool?>("sendthankyounote", value); _sendThankYouNote = value; }
        }
        private bool? _sendThankYouNote;

		[CrmProperty(LogicalName = "sendthankyounotename")]
        public virtual string SendThankYouNoteName
        {
            get { FillData(); return _sendThankYouNoteName; }
            set {  _sendThankYouNoteName = value; }
        }
        private string _sendThankYouNoteName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "stepid")]
        public virtual Guid? StepId
        {
            get { FillData(); return _stepId; }
            set { SetValue<Guid?>("stepid", value); _stepId = value; }
        }
        private Guid? _stepId;

		[CrmProperty(LogicalName = "stepname")]
        public virtual string StepName
        {
            get { FillData(); return _stepName; }
            set { SetValue<string>("stepname", value); _stepName = value; }
        }
        private string _stepName;

		[CrmProperty(LogicalName = "timeline")]
        public virtual Enums.TimeLine? TimeLine
        {
            get { FillData(); return _timeLine; }
            set { SetPicklist("timeline", (int?)value); _timeLine = value; }
        }
        private Enums.TimeLine? _timeLine;

		[CrmProperty(LogicalName = "timelinename")]
        public virtual string TimelineName
        {
            get { FillData(); return _timelineName; }
            set {  _timelineName = value; }
        }
        private string _timelineName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "totalamount")]
        public virtual decimal? TotalAmount
        {
            get { FillData(); return _totalAmount; }
            set {  _totalAmount = value; }
        }
        private decimal? _totalAmount;

		[CrmProperty(LogicalName = "totalamountlessfreight")]
        public virtual decimal? TotalAmountLessFreight
        {
            get { FillData(); return _totalAmountLessFreight; }
            set {  _totalAmountLessFreight = value; }
        }
        private decimal? _totalAmountLessFreight;

		[CrmProperty(LogicalName = "totaldiscountamount")]
        public virtual decimal? TotalDiscountAmount
        {
            get { FillData(); return _totalDiscountAmount; }
            set {  _totalDiscountAmount = value; }
        }
        private decimal? _totalDiscountAmount;

		[CrmProperty(LogicalName = "totallineitemamount")]
        public virtual decimal? TotalLineItemAmount
        {
            get { FillData(); return _totalLineItemAmount; }
            set {  _totalLineItemAmount = value; }
        }
        private decimal? _totalLineItemAmount;

		[CrmProperty(LogicalName = "totallineitemdiscountamount")]
        public virtual decimal? TotalLineItemDiscountAmount
        {
            get { FillData(); return _totalLineItemDiscountAmount; }
            set {  _totalLineItemDiscountAmount = value; }
        }
        private decimal? _totalLineItemDiscountAmount;

		[CrmProperty(LogicalName = "totaltax")]
        public virtual decimal? TotalTax
        {
            get { FillData(); return _totalTax; }
            set {  _totalTax = value; }
        }
        private decimal? _totalTax;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "opportunityclose", PrimaryKey = "activityid")]
	public partial class OpportunityClose : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "opportunityclose";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualRevenue = "actualrevenue";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CompetitorId = "competitorid";
			public const string CompetitorIdName = "competitoridname";
			public const string CompetitorIdYomiName = "competitoridyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityIdName = "opportunityidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualrevenue")]
        public virtual decimal? ActualRevenue
        {
            get { FillData(); return _actualRevenue; }
            set { SetMoney("actualrevenue", value); _actualRevenue = value; }
        }
        private decimal? _actualRevenue;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "competitorid", IsLookup = true)]
        public virtual Guid? CompetitorId
        {
            get { FillData(); return _competitorId; }
            set { SetLookup("competitorid", "competitor", value); _competitorId = value; }
        }
        private Guid? _competitorId;

		[CrmProperty(LogicalName = "competitoridname")]
        public virtual string CompetitorIdName
        {
            get { FillData(); return _competitorIdName; }
            set {  _competitorIdName = value; }
        }
        private string _competitorIdName;

		[CrmProperty(LogicalName = "competitoridyominame")]
        public virtual string CompetitorIdYomiName
        {
            get { FillData(); return _competitorIdYomiName; }
            set {  _competitorIdYomiName = value; }
        }
        private string _competitorIdYomiName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "opportunityid", IsLookup = true)]
        public virtual Guid? OpportunityId
        {
            get { FillData(); return _opportunityId; }
            set { SetLookup("opportunityid", "opportunity", value); _opportunityId = value; }
        }
        private Guid? _opportunityId;

		[CrmProperty(LogicalName = "opportunityidname")]
        public virtual string OpportunityIdName
        {
            get { FillData(); return _opportunityIdName; }
            set {  _opportunityIdName = value; }
        }
        private string _opportunityIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "opportunityproduct", PrimaryKey = "opportunityproductid")]
	public partial class OpportunityProduct : CrmEntity
	{
		public class Enums
		{
			public enum OpportunityStateCode 
			{
			}		
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "opportunityproduct";
			
			public const string BaseAmount = "baseamount";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExtendedAmount = "extendedamount";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsPriceOverridden = "ispriceoverridden";
			public const string IsPriceOverriddenName = "ispriceoverriddenname";
			public const string IsProductOverridden = "isproductoverridden";
			public const string IsProductOverriddenName = "isproductoverriddenname";
			public const string LineItemNumber = "lineitemnumber";
			public const string ManualDiscountAmount = "manualdiscountamount";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityIdName = "opportunityidname";
			public const string OpportunityProductId = "opportunityproductid";
			public const string OpportunityStateCode = "opportunitystatecode";
			public const string OpportunityStateCodeName = "opportunitystatecodename";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string PricePerUnit = "priceperunit";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string ProductDescription = "productdescription";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string Quantity = "quantity";
			public const string Tax = "tax";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UoMId = "uomid";
			public const string UoMIdName = "uomidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string VolumeDiscountAmount = "volumediscountamount";
		}

		public override Guid PrimaryKey
		{
			get { return OpportunityProductId; }
		}

		[CrmProperty(LogicalName = "baseamount")]
        public virtual decimal? BaseAmount
        {
            get { FillData(); return _baseAmount; }
            set {  _baseAmount = value; }
        }
        private decimal? _baseAmount;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "extendedamount")]
        public virtual decimal? ExtendedAmount
        {
            get { FillData(); return _extendedAmount; }
            set {  _extendedAmount = value; }
        }
        private decimal? _extendedAmount;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "ispriceoverridden")]
        public virtual bool? IsPriceOverridden
        {
            get { FillData(); return _isPriceOverridden; }
            set { SetValue<bool?>("ispriceoverridden", value); _isPriceOverridden = value; }
        }
        private bool? _isPriceOverridden;

		[CrmProperty(LogicalName = "ispriceoverriddenname")]
        public virtual string IsPriceOverriddenName
        {
            get { FillData(); return _isPriceOverriddenName; }
            set {  _isPriceOverriddenName = value; }
        }
        private string _isPriceOverriddenName;

		[CrmProperty(LogicalName = "isproductoverridden")]
        public virtual bool? IsProductOverridden
        {
            get { FillData(); return _isProductOverridden; }
            set { SetValue<bool?>("isproductoverridden", value); _isProductOverridden = value; }
        }
        private bool? _isProductOverridden;

		[CrmProperty(LogicalName = "isproductoverriddenname")]
        public virtual string IsProductOverriddenName
        {
            get { FillData(); return _isProductOverriddenName; }
            set {  _isProductOverriddenName = value; }
        }
        private string _isProductOverriddenName;

		[CrmProperty(LogicalName = "lineitemnumber")]
        public virtual int? LineItemNumber
        {
            get { FillData(); return _lineItemNumber; }
            set { SetValue<int?>("lineitemnumber", value); _lineItemNumber = value; }
        }
        private int? _lineItemNumber;

		[CrmProperty(LogicalName = "manualdiscountamount")]
        public virtual decimal? ManualDiscountAmount
        {
            get { FillData(); return _manualDiscountAmount; }
            set { SetMoney("manualdiscountamount", value); _manualDiscountAmount = value; }
        }
        private decimal? _manualDiscountAmount;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "opportunityid", IsLookup = true)]
        public virtual Guid? OpportunityId
        {
            get { FillData(); return _opportunityId; }
            set { SetLookup("opportunityid", "opportunity", value); _opportunityId = value; }
        }
        private Guid? _opportunityId;

		[CrmProperty(LogicalName = "opportunityidname")]
        public virtual string OpportunityIdName
        {
            get { FillData(); return _opportunityIdName; }
            set {  _opportunityIdName = value; }
        }
        private string _opportunityIdName;

		[CrmProperty(LogicalName = "opportunityproductid")]
        public virtual Guid OpportunityProductId
        {
            get { FillData(); return _opportunityProductId; }
            set {  _opportunityProductId = value; }
        }
        private Guid _opportunityProductId;

		[CrmProperty(LogicalName = "opportunitystatecode")]
        public virtual Enums.OpportunityStateCode? OpportunityStateCode
        {
            get { FillData(); return _opportunityStateCode; }
            set {  _opportunityStateCode = value; }
        }
        private Enums.OpportunityStateCode? _opportunityStateCode;

		[CrmProperty(LogicalName = "opportunitystatecodename")]
        public virtual string OpportunityStateCodeName
        {
            get { FillData(); return _opportunityStateCodeName; }
            set {  _opportunityStateCodeName = value; }
        }
        private string _opportunityStateCodeName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owningbusinessunit")]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owninguser")]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "priceperunit")]
        public virtual decimal? PricePerUnit
        {
            get { FillData(); return _pricePerUnit; }
            set { SetMoney("priceperunit", value); _pricePerUnit = value; }
        }
        private decimal? _pricePerUnit;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "productdescription")]
        public virtual string ProductDescription
        {
            get { FillData(); return _productDescription; }
            set { SetValue<string>("productdescription", value); _productDescription = value; }
        }
        private string _productDescription;

		[CrmProperty(LogicalName = "productid", IsLookup = true)]
        public virtual Guid? ProductId
        {
            get { FillData(); return _productId; }
            set { SetLookup("productid", "product", value); _productId = value; }
        }
        private Guid? _productId;

		[CrmProperty(LogicalName = "productidname")]
        public virtual string ProductIdName
        {
            get { FillData(); return _productIdName; }
            set {  _productIdName = value; }
        }
        private string _productIdName;

		[CrmProperty(LogicalName = "quantity")]
        public virtual decimal? Quantity
        {
            get { FillData(); return _quantity; }
            set { SetValue<decimal?>("quantity", value); _quantity = value; }
        }
        private decimal? _quantity;

		[CrmProperty(LogicalName = "tax")]
        public virtual decimal? Tax
        {
            get { FillData(); return _tax; }
            set { SetMoney("tax", value); _tax = value; }
        }
        private decimal? _tax;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "uomid", IsLookup = true)]
        public virtual Guid? UoMId
        {
            get { FillData(); return _uoMId; }
            set { SetLookup("uomid", "uom", value); _uoMId = value; }
        }
        private Guid? _uoMId;

		[CrmProperty(LogicalName = "uomidname")]
        public virtual string UoMIdName
        {
            get { FillData(); return _uoMIdName; }
            set {  _uoMIdName = value; }
        }
        private string _uoMIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "volumediscountamount")]
        public virtual decimal? VolumeDiscountAmount
        {
            get { FillData(); return _volumeDiscountAmount; }
            set {  _volumeDiscountAmount = value; }
        }
        private decimal? _volumeDiscountAmount;

	}
	[CrmEntity(LogicalName = "orderclose", PrimaryKey = "activityid")]
	public partial class OrderClose : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "orderclose";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrderNumber = "ordernumber";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Revision = "revision";
			public const string SalesOrderId = "salesorderid";
			public const string SalesOrderIdName = "salesorderidname";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "ordernumber")]
        public virtual string OrderNumber
        {
            get { FillData(); return _orderNumber; }
            set { SetValue<string>("ordernumber", value); _orderNumber = value; }
        }
        private string _orderNumber;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "revision")]
        public virtual int? Revision
        {
            get { FillData(); return _revision; }
            set { SetValue<int?>("revision", value); _revision = value; }
        }
        private int? _revision;

		[CrmProperty(LogicalName = "salesorderid", IsLookup = true)]
        public virtual Guid? SalesOrderId
        {
            get { FillData(); return _salesOrderId; }
            set { SetLookup("salesorderid", "salesorder", value); _salesOrderId = value; }
        }
        private Guid? _salesOrderId;

		[CrmProperty(LogicalName = "salesorderidname")]
        public virtual string SalesOrderIdName
        {
            get { FillData(); return _salesOrderIdName; }
            set {  _salesOrderIdName = value; }
        }
        private string _salesOrderIdName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "organization", PrimaryKey = "organizationid")]
	public partial class Organization : CrmEntity
	{
		public class Enums
		{
			public enum CurrencyDisplayOption 
			{
				[CrmPicklist(DisplayName = "Currency symbol")]CurrencySymbol = 0,
				[CrmPicklist(DisplayName = "Currency code", Value = 1)]CurrencyCode = 1,
			}		
			public enum CurrencyFormatCode 
			{
				[CrmPicklist(DisplayName = "$123")]_123 = 0,
				[CrmPicklist(DisplayName = "123$", Value = 1)]_123_2 = 1,
				[CrmPicklist(DisplayName = "$ 123", Value = 2)]_123_3 = 2,
				[CrmPicklist(DisplayName = "123 $", Value = 3)]_123_4 = 3,
			}		
			public enum DateFormatCode 
			{
			}		
			public enum DefaultRecurrenceEndRangeType 
			{
				[CrmPicklist(DisplayName = "No End Date", Value = 1)]NoEndDate = 1,
				[CrmPicklist(DisplayName = "Number of Occurrences", Value = 2)]NumberOfOccurrences = 2,
				[CrmPicklist(DisplayName = "End By Date", Value = 3)]EndByDate = 3,
			}		
			public enum FiscalPeriodFormatPeriod 
			{
				[CrmPicklist(DisplayName = "Quarter {0}", Value = 1)]Quarter0 = 1,
				[CrmPicklist(DisplayName = "Q{0}", Value = 2)]Q0 = 2,
				[CrmPicklist(DisplayName = "P{0}", Value = 3)]P0 = 3,
				[CrmPicklist(DisplayName = "Month {0}", Value = 4)]Month0 = 4,
				[CrmPicklist(DisplayName = "M{0}", Value = 5)]M0 = 5,
				[CrmPicklist(DisplayName = "Semester {0}", Value = 6)]Semester0 = 6,
				[CrmPicklist(DisplayName = "Month Name", Value = 7)]MonthName = 7,
			}		
			public enum FiscalYearFormatPrefix 
			{
				[CrmPicklist(DisplayName = "FY", Value = 1)]FY = 1,
				[CrmPicklist(Value = 2)]Empty = 2,
			}		
			public enum FiscalYearFormatSuffix 
			{
				[CrmPicklist(DisplayName = "FY", Value = 1)]FY = 1,
				[CrmPicklist(DisplayName = " Fiscal Year", Value = 2)]_FiscalYear = 2,
				[CrmPicklist(Value = 3)]Empty = 3,
			}		
			public enum FiscalYearFormatYear 
			{
				[CrmPicklist(DisplayName = "YYYY", Value = 1)]YYYY = 1,
				[CrmPicklist(DisplayName = "YY", Value = 2)]YY = 2,
				[CrmPicklist(DisplayName = "GGYY", Value = 3)]GGYY = 3,
			}		
			public enum FullNameConventionCode 
			{
				[CrmPicklist(DisplayName = "Last Name, First Name")]LastNameFirstName = 0,
				[CrmPicklist(DisplayName = "First Name", Value = 1)]FirstName = 1,
				[CrmPicklist(DisplayName = "Last Name, First Name, Middle Initial", Value = 2)]LastNameFirstNameMiddleInitial = 2,
				[CrmPicklist(DisplayName = "First Name, Middle Initial, Last Name", Value = 3)]FirstNameMiddleInitialLastName = 3,
				[CrmPicklist(DisplayName = "Last Name, First Name, Middle Name", Value = 4)]LastNameFirstNameMiddleName = 4,
				[CrmPicklist(DisplayName = "First Name, Middle Name, Last Name", Value = 5)]FirstNameMiddleNameLastName = 5,
				[CrmPicklist(DisplayName = "Last Name, space, First Name", Value = 6)]LastNameSpaceFirstName = 6,
				[CrmPicklist(DisplayName = "Last Name, no space, First Name", Value = 7)]LastNameNoSpaceFirstName = 7,
			}		
			public enum ISVIntegrationCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Web", Value = 1)]Web = 1,
				[CrmPicklist(DisplayName = "Outlook Workstation Client", Value = 2)]OutlookWorkstationClient = 2,
				[CrmPicklist(DisplayName = "Web; Outlook Workstation Client", Value = 3)]WebOutlookWorkstationClient = 3,
				[CrmPicklist(DisplayName = "Outlook Laptop Client", Value = 4)]OutlookLaptopClient = 4,
				[CrmPicklist(DisplayName = "Web; Outlook Laptop Client", Value = 5)]WebOutlookLaptopClient = 5,
				[CrmPicklist(DisplayName = "Outlook", Value = 6)]Outlook = 6,
				[CrmPicklist(DisplayName = "All", Value = 7)]All = 7,
			}		
			public enum NegativeFormatCode 
			{
				[CrmPicklist(DisplayName = "Brackets")]Brackets = 0,
				[CrmPicklist(DisplayName = "Dash", Value = 1)]Dash = 1,
				[CrmPicklist(DisplayName = "Dash plus Space", Value = 2)]DashPlusSpace = 2,
				[CrmPicklist(DisplayName = "Trailing Dash", Value = 3)]TrailingDash = 3,
				[CrmPicklist(DisplayName = "Space plus Trailing Dash", Value = 4)]SpacePlusTrailingDash = 4,
			}		
			public enum ReportScriptErrors 
			{
				[CrmPicklist(DisplayName = "No preference for sending an error report to Microsoft about Microsoft Dynamics CRM")]NoPreferenceForSendingAnErrorReportToMicrosoftAboutMicrosoftDynamicsCRM = 0,
				[CrmPicklist(DisplayName = "Ask me for permission to send an error report to Microsoft", Value = 1)]AskMeForPermissionToSendAnErrorReportToMicrosoft = 1,
				[CrmPicklist(DisplayName = "Automatically send an error report to Microsoft without asking me for permission", Value = 2)]AutomaticallySendAnErrorReportToMicrosoftWithoutAskingMeForPermission = 2,
				[CrmPicklist(DisplayName = "Never send an error report to Microsoft about Microsoft Dynamics CRM", Value = 3)]NeverSendAnErrorReportToMicrosoftAboutMicrosoftDynamicsCRM = 3,
			}		
			public enum TimeFormatCode 
			{
			}		
			public enum WeekStartDayCode 
			{
			}		
			public enum YammerPostMethod 
			{
				[CrmPicklist(DisplayName = "Public")]__Public = 0,
				[CrmPicklist(DisplayName = "Private", Value = 1)]__Private = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "organization";
			
			public const string AcknowledgementTemplateId = "acknowledgementtemplateid";
			public const string AcknowledgementTemplateIdName = "acknowledgementtemplateidname";
			public const string AllowAddressBookSyncs = "allowaddressbooksyncs";
			public const string AllowAutoResponseCreation = "allowautoresponsecreation";
			public const string AllowAutoUnsubscribe = "allowautounsubscribe";
			public const string AllowAutoUnsubscribeAcknowledgement = "allowautounsubscribeacknowledgement";
			public const string AllowClientMessageBarAd = "allowclientmessagebarad";
			public const string AllowEntityOnlyAudit = "allowentityonlyaudit";
			public const string AllowMarketingEmailExecution = "allowmarketingemailexecution";
			public const string AllowOfflineScheduledSyncs = "allowofflinescheduledsyncs";
			public const string AllowOutlookScheduledSyncs = "allowoutlookscheduledsyncs";
			public const string AllowUnresolvedPartiesOnEmailSend = "allowunresolvedpartiesonemailsend";
			public const string AllowUserFormModePreference = "allowuserformmodepreference";
			public const string AllowWebExcelExport = "allowwebexcelexport";
			public const string AMDesignator = "amdesignator";
			public const string BaseCurrencyId = "basecurrencyid";
			public const string BaseCurrencyIdName = "basecurrencyidname";
			public const string BaseCurrencyPrecision = "basecurrencyprecision";
			public const string BaseCurrencySymbol = "basecurrencysymbol";
			public const string BaseISOCurrencyCode = "baseisocurrencycode";
			public const string BlockedAttachments = "blockedattachments";
			public const string BulkOperationPrefix = "bulkoperationprefix";
			public const string BusinessClosureCalendarId = "businessclosurecalendarid";
			public const string CalendarType = "calendartype";
			public const string CampaignPrefix = "campaignprefix";
			public const string CasePrefix = "caseprefix";
			public const string ContractPrefix = "contractprefix";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CurrencyDecimalPrecision = "currencydecimalprecision";
			public const string CurrencyDisplayOption = "currencydisplayoption";
			public const string CurrencyFormatCode = "currencyformatcode";
			public const string CurrencyFormatCodeName = "currencyformatcodename";
			public const string CurrencySymbol = "currencysymbol";
			public const string CurrentBulkOperationNumber = "currentbulkoperationnumber";
			public const string CurrentCampaignNumber = "currentcampaignnumber";
			public const string CurrentCaseNumber = "currentcasenumber";
			public const string CurrentContractNumber = "currentcontractnumber";
			public const string CurrentImportSequenceNumber = "currentimportsequencenumber";
			public const string CurrentInvoiceNumber = "currentinvoicenumber";
			public const string CurrentKbNumber = "currentkbnumber";
			public const string CurrentOrderNumber = "currentordernumber";
			public const string CurrentParsedTableNumber = "currentparsedtablenumber";
			public const string CurrentQuoteNumber = "currentquotenumber";
			public const string DateFormatCode = "dateformatcode";
			public const string DateFormatCodeName = "dateformatcodename";
			public const string DateFormatString = "dateformatstring";
			public const string DateSeparator = "dateseparator";
			public const string DecimalSymbol = "decimalsymbol";
			public const string DefaultCountryCode = "defaultcountrycode";
			public const string DefaultRecurrenceEndRangeType = "defaultrecurrenceendrangetype";
			public const string DefaultRecurrenceEndRangeTypeName = "defaultrecurrenceendrangetypename";
			public const string DisabledReason = "disabledreason";
			public const string EmailSendPollingPeriod = "emailsendpollingperiod";
			public const string EnableBingMapsIntegration = "enablebingmapsintegration";
			public const string EnablePricingOnCreate = "enablepricingoncreate";
			public const string EnableSmartMatching = "enablesmartmatching";
			public const string ExpireSubscriptionsInDays = "expiresubscriptionsindays";
			public const string FeatureSet = "featureset";
			public const string FiscalCalendarStart = "fiscalcalendarstart";
			public const string FiscalPeriodFormat = "fiscalperiodformat";
			public const string FiscalPeriodFormatPeriod = "fiscalperiodformatperiod";
			public const string FiscalPeriodFormatPeriodName = "fiscalperiodformatperiodname";
			public const string FiscalPeriodType = "fiscalperiodtype";
			public const string FiscalSettingsUpdated = "fiscalsettingsupdated";
			public const string FiscalSettingsUpdatedName = "fiscalsettingsupdatedname";
			public const string FiscalYearDisplayCode = "fiscalyeardisplaycode";
			public const string FiscalYearFormat = "fiscalyearformat";
			public const string FiscalYearFormatPrefix = "fiscalyearformatprefix";
			public const string FiscalYearFormatPrefixName = "fiscalyearformatprefixname";
			public const string FiscalYearFormatSuffix = "fiscalyearformatsuffix";
			public const string FiscalYearFormatSuffixName = "fiscalyearformatsuffixname";
			public const string FiscalYearFormatYear = "fiscalyearformatyear";
			public const string FiscalYearFormatYearName = "fiscalyearformatyearname";
			public const string FiscalYearPeriodConnect = "fiscalyearperiodconnect";
			public const string FullNameConventionCode = "fullnameconventioncode";
			public const string FullNameConventionCodeName = "fullnameconventioncodename";
			public const string FutureExpansionWindow = "futureexpansionwindow";
			public const string GetStartedPaneContentEnabled = "getstartedpanecontentenabled";
			public const string GoalRollupExpiryTime = "goalrollupexpirytime";
			public const string GoalRollupFrequency = "goalrollupfrequency";
			public const string GrantAccessToNetworkService = "grantaccesstonetworkservice";
			public const string HashDeltaSubjectCount = "hashdeltasubjectcount";
			public const string HashFilterKeywords = "hashfilterkeywords";
			public const string HashMaxCount = "hashmaxcount";
			public const string HashMinAddressCount = "hashminaddresscount";
			public const string IgnoreInternalEmail = "ignoreinternalemail";
			public const string InitialVersion = "initialversion";
			public const string IntegrationUserId = "integrationuserid";
			public const string InvoicePrefix = "invoiceprefix";
			public const string IsAppMode = "isappmode";
			public const string IsAuditEnabled = "isauditenabled";
			public const string IsDefaultCountryCodeCheckEnabled = "isdefaultcountrycodecheckenabled";
			public const string IsDisabled = "isdisabled";
			public const string IsDisabledName = "isdisabledname";
			public const string IsDuplicateDetectionEnabled = "isduplicatedetectionenabled";
			public const string IsDuplicateDetectionEnabledForImport = "isduplicatedetectionenabledforimport";
			public const string IsDuplicateDetectionEnabledForOfflineSync = "isduplicatedetectionenabledforofflinesync";
			public const string IsDuplicateDetectionEnabledForOnlineCreateUpdate = "isduplicatedetectionenabledforonlinecreateupdate";
			public const string IsFiscalPeriodMonthBased = "isfiscalperiodmonthbased";
			public const string IsPresenceEnabled = "ispresenceenabled";
			public const string IsPresenceEnabledName = "ispresenceenabledname";
			public const string IsSOPIntegrationEnabled = "issopintegrationenabled";
			public const string IsUserAccessAuditEnabled = "isuseraccessauditenabled";
			public const string ISVIntegrationCode = "isvintegrationcode";
			public const string KbPrefix = "kbprefix";
			public const string LanguageCode = "languagecode";
			public const string LanguageCodeName = "languagecodename";
			public const string LocaleId = "localeid";
			public const string LongDateFormatCode = "longdateformatcode";
			public const string MaxAppointmentDurationDays = "maxappointmentdurationdays";
			public const string MaximumTrackingNumber = "maximumtrackingnumber";
			public const string MaxRecordsForExportToExcel = "maxrecordsforexporttoexcel";
			public const string MaxRecordsForLookupFilters = "maxrecordsforlookupfilters";
			public const string MaxUploadFileSize = "maxuploadfilesize";
			public const string MetadataSyncLastTimeOfNeverExpiredDeletedObjects = "metadatasynclasttimeofneverexpireddeletedobjects";
			public const string MetadataSyncTimestamp = "metadatasynctimestamp";
			public const string MinAddressBookSyncInterval = "minaddressbooksyncinterval";
			public const string MinOfflineSyncInterval = "minofflinesyncinterval";
			public const string MinOutlookSyncInterval = "minoutlooksyncinterval";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string NegativeCurrencyFormatCode = "negativecurrencyformatcode";
			public const string NegativeFormatCode = "negativeformatcode";
			public const string NegativeFormatCodeName = "negativeformatcodename";
			public const string NextCustomObjectTypeCode = "nextcustomobjecttypecode";
			public const string NextTrackingNumber = "nexttrackingnumber";
			public const string NumberFormat = "numberformat";
			public const string NumberGroupFormat = "numbergroupformat";
			public const string NumberSeparator = "numberseparator";
			public const string OrderPrefix = "orderprefix";
			public const string OrganizationId = "organizationid";
			public const string OrgDbOrgSettings = "orgdborgsettings";
			public const string ParsedTableColumnPrefix = "parsedtablecolumnprefix";
			public const string ParsedTablePrefix = "parsedtableprefix";
			public const string PastExpansionWindow = "pastexpansionwindow";
			public const string Picture = "picture";
			public const string PinpointLanguageCode = "pinpointlanguagecode";
			public const string PMDesignator = "pmdesignator";
			public const string PricingDecimalPrecision = "pricingdecimalprecision";
			public const string PrivilegeUserGroupId = "privilegeusergroupid";
			public const string PrivReportingGroupId = "privreportinggroupid";
			public const string PrivReportingGroupName = "privreportinggroupname";
			public const string QuickFindRecordLimitEnabled = "quickfindrecordlimitenabled";
			public const string QuotePrefix = "quoteprefix";
			public const string RecurrenceDefaultNumberOfOccurrences = "recurrencedefaultnumberofoccurrences";
			public const string RecurrenceExpansionJobBatchInterval = "recurrenceexpansionjobbatchinterval";
			public const string RecurrenceExpansionJobBatchSize = "recurrenceexpansionjobbatchsize";
			public const string RecurrenceExpansionSynchCreateMax = "recurrenceexpansionsynchcreatemax";
			public const string ReferenceSiteMapXml = "referencesitemapxml";
			public const string RenderSecureIFrameForEmail = "rendersecureiframeforemail";
			public const string ReportingGroupId = "reportinggroupid";
			public const string ReportingGroupName = "reportinggroupname";
			public const string ReportScriptErrors = "reportscripterrors";
			public const string ReportScriptErrorsName = "reportscripterrorsname";
			public const string RequireApprovalForQueueEmail = "requireapprovalforqueueemail";
			public const string RequireApprovalForUserEmail = "requireapprovalforuseremail";
			public const string SampleDataImportId = "sampledataimportid";
			public const string SchemaNamePrefix = "schemanameprefix";
			public const string ShareToPreviousOwnerOnAssign = "sharetopreviousowneronassign";
			public const string ShowWeekNumber = "showweeknumber";
			public const string ShowWeekNumberName = "showweeknumbername";
			public const string SiteMapXml = "sitemapxml";
			public const string SortId = "sortid";
			public const string SqlAccessGroupId = "sqlaccessgroupid";
			public const string SqlAccessGroupName = "sqlaccessgroupname";
			public const string SQMEnabled = "sqmenabled";
			public const string SupportUserId = "supportuserid";
			public const string SystemUserId = "systemuserid";
			public const string TagMaxAggressiveCycles = "tagmaxaggressivecycles";
			public const string TagPollingPeriod = "tagpollingperiod";
			public const string TimeFormatCode = "timeformatcode";
			public const string TimeFormatCodeName = "timeformatcodename";
			public const string TimeFormatString = "timeformatstring";
			public const string TimeSeparator = "timeseparator";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TokenExpiry = "tokenexpiry";
			public const string TokenKey = "tokenkey";
			public const string TrackingPrefix = "trackingprefix";
			public const string TrackingTokenIdBase = "trackingtokenidbase";
			public const string TrackingTokenIdDigits = "trackingtokeniddigits";
			public const string UniqueSpecifierLength = "uniquespecifierlength";
			public const string UserAccessAuditingInterval = "useraccessauditinginterval";
			public const string UseReadForm = "usereadform";
			public const string UserGroupId = "usergroupid";
			public const string UseSkypeProtocol = "useskypeprotocol";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string V3CalloutConfigHash = "v3calloutconfighash";
			public const string VersionNumber = "versionnumber";
			public const string WeekStartDayCode = "weekstartdaycode";
			public const string WeekStartDayCodeName = "weekstartdaycodename";
			public const string YammerGroupId = "yammergroupid";
			public const string YammerNetworkPermalink = "yammernetworkpermalink";
			public const string YammerOAuthAccessTokenExpired = "yammeroauthaccesstokenexpired";
			public const string YammerPostMethod = "yammerpostmethod";
			public const string YearStartWeekCode = "yearstartweekcode";
		}

		public override Guid PrimaryKey
		{
			get { return OrganizationId; }
		}

		[CrmProperty(LogicalName = "acknowledgementtemplateid", IsLookup = true)]
        public virtual Guid? AcknowledgementTemplateId
        {
            get { FillData(); return _acknowledgementTemplateId; }
            set { SetLookup("acknowledgementtemplateid", "template", value); _acknowledgementTemplateId = value; }
        }
        private Guid? _acknowledgementTemplateId;

		[CrmProperty(LogicalName = "acknowledgementtemplateidname")]
        public virtual string AcknowledgementTemplateIdName
        {
            get { FillData(); return _acknowledgementTemplateIdName; }
            set {  _acknowledgementTemplateIdName = value; }
        }
        private string _acknowledgementTemplateIdName;

		[CrmProperty(LogicalName = "allowaddressbooksyncs")]
        public virtual bool? AllowAddressBookSyncs
        {
            get { FillData(); return _allowAddressBookSyncs; }
            set { SetValue<bool?>("allowaddressbooksyncs", value); _allowAddressBookSyncs = value; }
        }
        private bool? _allowAddressBookSyncs;

		[CrmProperty(LogicalName = "allowautoresponsecreation")]
        public virtual bool? AllowAutoResponseCreation
        {
            get { FillData(); return _allowAutoResponseCreation; }
            set { SetValue<bool?>("allowautoresponsecreation", value); _allowAutoResponseCreation = value; }
        }
        private bool? _allowAutoResponseCreation;

		[CrmProperty(LogicalName = "allowautounsubscribe")]
        public virtual bool? AllowAutoUnsubscribe
        {
            get { FillData(); return _allowAutoUnsubscribe; }
            set { SetValue<bool?>("allowautounsubscribe", value); _allowAutoUnsubscribe = value; }
        }
        private bool? _allowAutoUnsubscribe;

		[CrmProperty(LogicalName = "allowautounsubscribeacknowledgement")]
        public virtual bool? AllowAutoUnsubscribeAcknowledgement
        {
            get { FillData(); return _allowAutoUnsubscribeAcknowledgement; }
            set { SetValue<bool?>("allowautounsubscribeacknowledgement", value); _allowAutoUnsubscribeAcknowledgement = value; }
        }
        private bool? _allowAutoUnsubscribeAcknowledgement;

		[CrmProperty(LogicalName = "allowclientmessagebarad")]
        public virtual bool? AllowClientMessageBarAd
        {
            get { FillData(); return _allowClientMessageBarAd; }
            set { SetValue<bool?>("allowclientmessagebarad", value); _allowClientMessageBarAd = value; }
        }
        private bool? _allowClientMessageBarAd;

		[CrmProperty(LogicalName = "allowentityonlyaudit")]
        public virtual bool? AllowEntityOnlyAudit
        {
            get { FillData(); return _allowEntityOnlyAudit; }
            set {  _allowEntityOnlyAudit = value; }
        }
        private bool? _allowEntityOnlyAudit;

		[CrmProperty(LogicalName = "allowmarketingemailexecution")]
        public virtual bool? AllowMarketingEmailExecution
        {
            get { FillData(); return _allowMarketingEmailExecution; }
            set { SetValue<bool?>("allowmarketingemailexecution", value); _allowMarketingEmailExecution = value; }
        }
        private bool? _allowMarketingEmailExecution;

		[CrmProperty(LogicalName = "allowofflinescheduledsyncs")]
        public virtual bool? AllowOfflineScheduledSyncs
        {
            get { FillData(); return _allowOfflineScheduledSyncs; }
            set { SetValue<bool?>("allowofflinescheduledsyncs", value); _allowOfflineScheduledSyncs = value; }
        }
        private bool? _allowOfflineScheduledSyncs;

		[CrmProperty(LogicalName = "allowoutlookscheduledsyncs")]
        public virtual bool? AllowOutlookScheduledSyncs
        {
            get { FillData(); return _allowOutlookScheduledSyncs; }
            set { SetValue<bool?>("allowoutlookscheduledsyncs", value); _allowOutlookScheduledSyncs = value; }
        }
        private bool? _allowOutlookScheduledSyncs;

		[CrmProperty(LogicalName = "allowunresolvedpartiesonemailsend")]
        public virtual bool? AllowUnresolvedPartiesOnEmailSend
        {
            get { FillData(); return _allowUnresolvedPartiesOnEmailSend; }
            set { SetValue<bool?>("allowunresolvedpartiesonemailsend", value); _allowUnresolvedPartiesOnEmailSend = value; }
        }
        private bool? _allowUnresolvedPartiesOnEmailSend;

		[CrmProperty(LogicalName = "allowuserformmodepreference")]
        public virtual bool? AllowUserFormModePreference
        {
            get { FillData(); return _allowUserFormModePreference; }
            set { SetValue<bool?>("allowuserformmodepreference", value); _allowUserFormModePreference = value; }
        }
        private bool? _allowUserFormModePreference;

		[CrmProperty(LogicalName = "allowwebexcelexport")]
        public virtual bool? AllowWebExcelExport
        {
            get { FillData(); return _allowWebExcelExport; }
            set { SetValue<bool?>("allowwebexcelexport", value); _allowWebExcelExport = value; }
        }
        private bool? _allowWebExcelExport;

		[CrmProperty(LogicalName = "amdesignator")]
        public virtual string AMDesignator
        {
            get { FillData(); return _aMDesignator; }
            set { SetValue<string>("amdesignator", value); _aMDesignator = value; }
        }
        private string _aMDesignator;

		[CrmProperty(LogicalName = "basecurrencyid", IsLookup = true)]
        public virtual Guid? BaseCurrencyId
        {
            get { FillData(); return _baseCurrencyId; }
            set {  _baseCurrencyId = value; }
        }
        private Guid? _baseCurrencyId;

		[CrmProperty(LogicalName = "basecurrencyidname")]
        public virtual string BaseCurrencyIdName
        {
            get { FillData(); return _baseCurrencyIdName; }
            set {  _baseCurrencyIdName = value; }
        }
        private string _baseCurrencyIdName;

		[CrmProperty(LogicalName = "basecurrencyprecision")]
        public virtual int? BaseCurrencyPrecision
        {
            get { FillData(); return _baseCurrencyPrecision; }
            set {  _baseCurrencyPrecision = value; }
        }
        private int? _baseCurrencyPrecision;

		[CrmProperty(LogicalName = "basecurrencysymbol")]
        public virtual string BaseCurrencySymbol
        {
            get { FillData(); return _baseCurrencySymbol; }
            set {  _baseCurrencySymbol = value; }
        }
        private string _baseCurrencySymbol;

		[CrmProperty(LogicalName = "baseisocurrencycode")]
        public virtual string BaseISOCurrencyCode
        {
            get { FillData(); return _baseISOCurrencyCode; }
            set {  _baseISOCurrencyCode = value; }
        }
        private string _baseISOCurrencyCode;

		[CrmProperty(LogicalName = "blockedattachments")]
        public virtual string BlockedAttachments
        {
            get { FillData(); return _blockedAttachments; }
            set { SetValue<string>("blockedattachments", value); _blockedAttachments = value; }
        }
        private string _blockedAttachments;

		[CrmProperty(LogicalName = "bulkoperationprefix")]
        public virtual string BulkOperationPrefix
        {
            get { FillData(); return _bulkOperationPrefix; }
            set { SetValue<string>("bulkoperationprefix", value); _bulkOperationPrefix = value; }
        }
        private string _bulkOperationPrefix;

		[CrmProperty(LogicalName = "businessclosurecalendarid")]
        public virtual Guid? BusinessClosureCalendarId
        {
            get { FillData(); return _businessClosureCalendarId; }
            set {  _businessClosureCalendarId = value; }
        }
        private Guid? _businessClosureCalendarId;

		[CrmProperty(LogicalName = "calendartype")]
        public virtual int? CalendarType
        {
            get { FillData(); return _calendarType; }
            set { SetValue<int?>("calendartype", value); _calendarType = value; }
        }
        private int? _calendarType;

		[CrmProperty(LogicalName = "campaignprefix")]
        public virtual string CampaignPrefix
        {
            get { FillData(); return _campaignPrefix; }
            set { SetValue<string>("campaignprefix", value); _campaignPrefix = value; }
        }
        private string _campaignPrefix;

		[CrmProperty(LogicalName = "caseprefix")]
        public virtual string CasePrefix
        {
            get { FillData(); return _casePrefix; }
            set { SetValue<string>("caseprefix", value); _casePrefix = value; }
        }
        private string _casePrefix;

		[CrmProperty(LogicalName = "contractprefix")]
        public virtual string ContractPrefix
        {
            get { FillData(); return _contractPrefix; }
            set { SetValue<string>("contractprefix", value); _contractPrefix = value; }
        }
        private string _contractPrefix;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "currencydecimalprecision")]
        public virtual int? CurrencyDecimalPrecision
        {
            get { FillData(); return _currencyDecimalPrecision; }
            set { SetValue<int?>("currencydecimalprecision", value); _currencyDecimalPrecision = value; }
        }
        private int? _currencyDecimalPrecision;

		[CrmProperty(LogicalName = "currencydisplayoption")]
        public virtual Enums.CurrencyDisplayOption? CurrencyDisplayOption
        {
            get { FillData(); return _currencyDisplayOption; }
            set { SetPicklist("currencydisplayoption", (int?)value); _currencyDisplayOption = value; }
        }
        private Enums.CurrencyDisplayOption? _currencyDisplayOption;

		[CrmProperty(LogicalName = "currencyformatcode")]
        public virtual Enums.CurrencyFormatCode? CurrencyFormatCode
        {
            get { FillData(); return _currencyFormatCode; }
            set { SetPicklist("currencyformatcode", (int?)value); _currencyFormatCode = value; }
        }
        private Enums.CurrencyFormatCode? _currencyFormatCode;

		[CrmProperty(LogicalName = "currencyformatcodename")]
        public virtual string CurrencyFormatCodeName
        {
            get { FillData(); return _currencyFormatCodeName; }
            set {  _currencyFormatCodeName = value; }
        }
        private string _currencyFormatCodeName;

		[CrmProperty(LogicalName = "currencysymbol")]
        public virtual string CurrencySymbol
        {
            get { FillData(); return _currencySymbol; }
            set { SetValue<string>("currencysymbol", value); _currencySymbol = value; }
        }
        private string _currencySymbol;

		[CrmProperty(LogicalName = "currentbulkoperationnumber")]
        public virtual int? CurrentBulkOperationNumber
        {
            get { FillData(); return _currentBulkOperationNumber; }
            set { SetValue<int?>("currentbulkoperationnumber", value); _currentBulkOperationNumber = value; }
        }
        private int? _currentBulkOperationNumber;

		[CrmProperty(LogicalName = "currentcampaignnumber")]
        public virtual int? CurrentCampaignNumber
        {
            get { FillData(); return _currentCampaignNumber; }
            set { SetValue<int?>("currentcampaignnumber", value); _currentCampaignNumber = value; }
        }
        private int? _currentCampaignNumber;

		[CrmProperty(LogicalName = "currentcasenumber")]
        public virtual int? CurrentCaseNumber
        {
            get { FillData(); return _currentCaseNumber; }
            set { SetValue<int?>("currentcasenumber", value); _currentCaseNumber = value; }
        }
        private int? _currentCaseNumber;

		[CrmProperty(LogicalName = "currentcontractnumber")]
        public virtual int? CurrentContractNumber
        {
            get { FillData(); return _currentContractNumber; }
            set { SetValue<int?>("currentcontractnumber", value); _currentContractNumber = value; }
        }
        private int? _currentContractNumber;

		[CrmProperty(LogicalName = "currentimportsequencenumber")]
        public virtual int? CurrentImportSequenceNumber
        {
            get { FillData(); return _currentImportSequenceNumber; }
            set {  _currentImportSequenceNumber = value; }
        }
        private int? _currentImportSequenceNumber;

		[CrmProperty(LogicalName = "currentinvoicenumber")]
        public virtual int? CurrentInvoiceNumber
        {
            get { FillData(); return _currentInvoiceNumber; }
            set { SetValue<int?>("currentinvoicenumber", value); _currentInvoiceNumber = value; }
        }
        private int? _currentInvoiceNumber;

		[CrmProperty(LogicalName = "currentkbnumber")]
        public virtual int? CurrentKbNumber
        {
            get { FillData(); return _currentKbNumber; }
            set { SetValue<int?>("currentkbnumber", value); _currentKbNumber = value; }
        }
        private int? _currentKbNumber;

		[CrmProperty(LogicalName = "currentordernumber")]
        public virtual int? CurrentOrderNumber
        {
            get { FillData(); return _currentOrderNumber; }
            set { SetValue<int?>("currentordernumber", value); _currentOrderNumber = value; }
        }
        private int? _currentOrderNumber;

		[CrmProperty(LogicalName = "currentparsedtablenumber")]
        public virtual int? CurrentParsedTableNumber
        {
            get { FillData(); return _currentParsedTableNumber; }
            set {  _currentParsedTableNumber = value; }
        }
        private int? _currentParsedTableNumber;

		[CrmProperty(LogicalName = "currentquotenumber")]
        public virtual int? CurrentQuoteNumber
        {
            get { FillData(); return _currentQuoteNumber; }
            set { SetValue<int?>("currentquotenumber", value); _currentQuoteNumber = value; }
        }
        private int? _currentQuoteNumber;

		[CrmProperty(LogicalName = "dateformatcode")]
        public virtual Enums.DateFormatCode? DateFormatCode
        {
            get { FillData(); return _dateFormatCode; }
            set { SetPicklist("dateformatcode", (int?)value); _dateFormatCode = value; }
        }
        private Enums.DateFormatCode? _dateFormatCode;

		[CrmProperty(LogicalName = "dateformatcodename")]
        public virtual string DateFormatCodeName
        {
            get { FillData(); return _dateFormatCodeName; }
            set {  _dateFormatCodeName = value; }
        }
        private string _dateFormatCodeName;

		[CrmProperty(LogicalName = "dateformatstring")]
        public virtual string DateFormatString
        {
            get { FillData(); return _dateFormatString; }
            set { SetValue<string>("dateformatstring", value); _dateFormatString = value; }
        }
        private string _dateFormatString;

		[CrmProperty(LogicalName = "dateseparator")]
        public virtual string DateSeparator
        {
            get { FillData(); return _dateSeparator; }
            set { SetValue<string>("dateseparator", value); _dateSeparator = value; }
        }
        private string _dateSeparator;

		[CrmProperty(LogicalName = "decimalsymbol")]
        public virtual string DecimalSymbol
        {
            get { FillData(); return _decimalSymbol; }
            set { SetValue<string>("decimalsymbol", value); _decimalSymbol = value; }
        }
        private string _decimalSymbol;

		[CrmProperty(LogicalName = "defaultcountrycode")]
        public virtual string DefaultCountryCode
        {
            get { FillData(); return _defaultCountryCode; }
            set { SetValue<string>("defaultcountrycode", value); _defaultCountryCode = value; }
        }
        private string _defaultCountryCode;

		[CrmProperty(LogicalName = "defaultrecurrenceendrangetype")]
        public virtual Enums.DefaultRecurrenceEndRangeType? DefaultRecurrenceEndRangeType
        {
            get { FillData(); return _defaultRecurrenceEndRangeType; }
            set { SetPicklist("defaultrecurrenceendrangetype", (int?)value); _defaultRecurrenceEndRangeType = value; }
        }
        private Enums.DefaultRecurrenceEndRangeType? _defaultRecurrenceEndRangeType;

		[CrmProperty(LogicalName = "defaultrecurrenceendrangetypename")]
        public virtual string DefaultRecurrenceEndRangeTypeName
        {
            get { FillData(); return _defaultRecurrenceEndRangeTypeName; }
            set { SetValue<string>("defaultrecurrenceendrangetypename", value); _defaultRecurrenceEndRangeTypeName = value; }
        }
        private string _defaultRecurrenceEndRangeTypeName;

		[CrmProperty(LogicalName = "disabledreason")]
        public virtual string DisabledReason
        {
            get { FillData(); return _disabledReason; }
            set {  _disabledReason = value; }
        }
        private string _disabledReason;

		[CrmProperty(LogicalName = "emailsendpollingperiod")]
        public virtual int? EmailSendPollingPeriod
        {
            get { FillData(); return _emailSendPollingPeriod; }
            set { SetValue<int?>("emailsendpollingperiod", value); _emailSendPollingPeriod = value; }
        }
        private int? _emailSendPollingPeriod;

		[CrmProperty(LogicalName = "enablebingmapsintegration")]
        public virtual bool? EnableBingMapsIntegration
        {
            get { FillData(); return _enableBingMapsIntegration; }
            set { SetValue<bool?>("enablebingmapsintegration", value); _enableBingMapsIntegration = value; }
        }
        private bool? _enableBingMapsIntegration;

		[CrmProperty(LogicalName = "enablepricingoncreate")]
        public virtual bool? EnablePricingOnCreate
        {
            get { FillData(); return _enablePricingOnCreate; }
            set { SetValue<bool?>("enablepricingoncreate", value); _enablePricingOnCreate = value; }
        }
        private bool? _enablePricingOnCreate;

		[CrmProperty(LogicalName = "enablesmartmatching")]
        public virtual bool? EnableSmartMatching
        {
            get { FillData(); return _enableSmartMatching; }
            set { SetValue<bool?>("enablesmartmatching", value); _enableSmartMatching = value; }
        }
        private bool? _enableSmartMatching;

		[CrmProperty(LogicalName = "expiresubscriptionsindays")]
        public virtual int? ExpireSubscriptionsInDays
        {
            get { FillData(); return _expireSubscriptionsInDays; }
            set { SetValue<int?>("expiresubscriptionsindays", value); _expireSubscriptionsInDays = value; }
        }
        private int? _expireSubscriptionsInDays;

		[CrmProperty(LogicalName = "featureset")]
        public virtual string FeatureSet
        {
            get { FillData(); return _featureSet; }
            set { SetValue<string>("featureset", value); _featureSet = value; }
        }
        private string _featureSet;

		[CrmProperty(LogicalName = "fiscalcalendarstart")]
        public virtual DateTime? FiscalCalendarStart
        {
            get { FillData(); return _fiscalCalendarStart; }
            set { SetValue<DateTime?>("fiscalcalendarstart", value); _fiscalCalendarStart = value; }
        }
        private DateTime? _fiscalCalendarStart;

		[CrmProperty(LogicalName = "fiscalperiodformat")]
        public virtual string FiscalPeriodFormat
        {
            get { FillData(); return _fiscalPeriodFormat; }
            set { SetValue<string>("fiscalperiodformat", value); _fiscalPeriodFormat = value; }
        }
        private string _fiscalPeriodFormat;

		[CrmProperty(LogicalName = "fiscalperiodformatperiod")]
        public virtual Enums.FiscalPeriodFormatPeriod? FiscalPeriodFormatPeriod
        {
            get { FillData(); return _fiscalPeriodFormatPeriod; }
            set { SetPicklist("fiscalperiodformatperiod", (int?)value); _fiscalPeriodFormatPeriod = value; }
        }
        private Enums.FiscalPeriodFormatPeriod? _fiscalPeriodFormatPeriod;

		[CrmProperty(LogicalName = "fiscalperiodformatperiodname")]
        public virtual string FiscalPeriodFormatPeriodName
        {
            get { FillData(); return _fiscalPeriodFormatPeriodName; }
            set {  _fiscalPeriodFormatPeriodName = value; }
        }
        private string _fiscalPeriodFormatPeriodName;

		[CrmProperty(LogicalName = "fiscalperiodtype")]
        public virtual int? FiscalPeriodType
        {
            get { FillData(); return _fiscalPeriodType; }
            set { SetValue<int?>("fiscalperiodtype", value); _fiscalPeriodType = value; }
        }
        private int? _fiscalPeriodType;

		[CrmProperty(LogicalName = "fiscalsettingsupdated")]
        public virtual bool? FiscalSettingsUpdated
        {
            get { FillData(); return _fiscalSettingsUpdated; }
            set {  _fiscalSettingsUpdated = value; }
        }
        private bool? _fiscalSettingsUpdated;

		[CrmProperty(LogicalName = "fiscalsettingsupdatedname")]
        public virtual string FiscalSettingsUpdatedName
        {
            get { FillData(); return _fiscalSettingsUpdatedName; }
            set {  _fiscalSettingsUpdatedName = value; }
        }
        private string _fiscalSettingsUpdatedName;

		[CrmProperty(LogicalName = "fiscalyeardisplaycode")]
        public virtual int? FiscalYearDisplayCode
        {
            get { FillData(); return _fiscalYearDisplayCode; }
            set { SetValue<int?>("fiscalyeardisplaycode", value); _fiscalYearDisplayCode = value; }
        }
        private int? _fiscalYearDisplayCode;

		[CrmProperty(LogicalName = "fiscalyearformat")]
        public virtual string FiscalYearFormat
        {
            get { FillData(); return _fiscalYearFormat; }
            set { SetValue<string>("fiscalyearformat", value); _fiscalYearFormat = value; }
        }
        private string _fiscalYearFormat;

		[CrmProperty(LogicalName = "fiscalyearformatprefix")]
        public virtual Enums.FiscalYearFormatPrefix? FiscalYearFormatPrefix
        {
            get { FillData(); return _fiscalYearFormatPrefix; }
            set { SetPicklist("fiscalyearformatprefix", (int?)value); _fiscalYearFormatPrefix = value; }
        }
        private Enums.FiscalYearFormatPrefix? _fiscalYearFormatPrefix;

		[CrmProperty(LogicalName = "fiscalyearformatprefixname")]
        public virtual string FiscalYearFormatPrefixName
        {
            get { FillData(); return _fiscalYearFormatPrefixName; }
            set {  _fiscalYearFormatPrefixName = value; }
        }
        private string _fiscalYearFormatPrefixName;

		[CrmProperty(LogicalName = "fiscalyearformatsuffix")]
        public virtual Enums.FiscalYearFormatSuffix? FiscalYearFormatSuffix
        {
            get { FillData(); return _fiscalYearFormatSuffix; }
            set { SetPicklist("fiscalyearformatsuffix", (int?)value); _fiscalYearFormatSuffix = value; }
        }
        private Enums.FiscalYearFormatSuffix? _fiscalYearFormatSuffix;

		[CrmProperty(LogicalName = "fiscalyearformatsuffixname")]
        public virtual string FiscalYearFormatSuffixName
        {
            get { FillData(); return _fiscalYearFormatSuffixName; }
            set {  _fiscalYearFormatSuffixName = value; }
        }
        private string _fiscalYearFormatSuffixName;

		[CrmProperty(LogicalName = "fiscalyearformatyear")]
        public virtual Enums.FiscalYearFormatYear? FiscalYearFormatYear
        {
            get { FillData(); return _fiscalYearFormatYear; }
            set { SetPicklist("fiscalyearformatyear", (int?)value); _fiscalYearFormatYear = value; }
        }
        private Enums.FiscalYearFormatYear? _fiscalYearFormatYear;

		[CrmProperty(LogicalName = "fiscalyearformatyearname")]
        public virtual string FiscalYearFormatYearName
        {
            get { FillData(); return _fiscalYearFormatYearName; }
            set {  _fiscalYearFormatYearName = value; }
        }
        private string _fiscalYearFormatYearName;

		[CrmProperty(LogicalName = "fiscalyearperiodconnect")]
        public virtual string FiscalYearPeriodConnect
        {
            get { FillData(); return _fiscalYearPeriodConnect; }
            set { SetValue<string>("fiscalyearperiodconnect", value); _fiscalYearPeriodConnect = value; }
        }
        private string _fiscalYearPeriodConnect;

		[CrmProperty(LogicalName = "fullnameconventioncode")]
        public virtual Enums.FullNameConventionCode? FullNameConventionCode
        {
            get { FillData(); return _fullNameConventionCode; }
            set { SetPicklist("fullnameconventioncode", (int?)value); _fullNameConventionCode = value; }
        }
        private Enums.FullNameConventionCode? _fullNameConventionCode;

		[CrmProperty(LogicalName = "fullnameconventioncodename")]
        public virtual string FullNameConventionCodeName
        {
            get { FillData(); return _fullNameConventionCodeName; }
            set {  _fullNameConventionCodeName = value; }
        }
        private string _fullNameConventionCodeName;

		[CrmProperty(LogicalName = "futureexpansionwindow")]
        public virtual int? FutureExpansionWindow
        {
            get { FillData(); return _futureExpansionWindow; }
            set { SetValue<int?>("futureexpansionwindow", value); _futureExpansionWindow = value; }
        }
        private int? _futureExpansionWindow;

		[CrmProperty(LogicalName = "getstartedpanecontentenabled")]
        public virtual bool? GetStartedPaneContentEnabled
        {
            get { FillData(); return _getStartedPaneContentEnabled; }
            set { SetValue<bool?>("getstartedpanecontentenabled", value); _getStartedPaneContentEnabled = value; }
        }
        private bool? _getStartedPaneContentEnabled;

		[CrmProperty(LogicalName = "goalrollupexpirytime")]
        public virtual int? GoalRollupExpiryTime
        {
            get { FillData(); return _goalRollupExpiryTime; }
            set { SetValue<int?>("goalrollupexpirytime", value); _goalRollupExpiryTime = value; }
        }
        private int? _goalRollupExpiryTime;

		[CrmProperty(LogicalName = "goalrollupfrequency")]
        public virtual int? GoalRollupFrequency
        {
            get { FillData(); return _goalRollupFrequency; }
            set { SetValue<int?>("goalrollupfrequency", value); _goalRollupFrequency = value; }
        }
        private int? _goalRollupFrequency;

		[CrmProperty(LogicalName = "grantaccesstonetworkservice")]
        public virtual bool? GrantAccessToNetworkService
        {
            get { FillData(); return _grantAccessToNetworkService; }
            set {  _grantAccessToNetworkService = value; }
        }
        private bool? _grantAccessToNetworkService;

		[CrmProperty(LogicalName = "hashdeltasubjectcount")]
        public virtual int? HashDeltaSubjectCount
        {
            get { FillData(); return _hashDeltaSubjectCount; }
            set { SetValue<int?>("hashdeltasubjectcount", value); _hashDeltaSubjectCount = value; }
        }
        private int? _hashDeltaSubjectCount;

		[CrmProperty(LogicalName = "hashfilterkeywords")]
        public virtual string HashFilterKeywords
        {
            get { FillData(); return _hashFilterKeywords; }
            set { SetValue<string>("hashfilterkeywords", value); _hashFilterKeywords = value; }
        }
        private string _hashFilterKeywords;

		[CrmProperty(LogicalName = "hashmaxcount")]
        public virtual int? HashMaxCount
        {
            get { FillData(); return _hashMaxCount; }
            set { SetValue<int?>("hashmaxcount", value); _hashMaxCount = value; }
        }
        private int? _hashMaxCount;

		[CrmProperty(LogicalName = "hashminaddresscount")]
        public virtual int? HashMinAddressCount
        {
            get { FillData(); return _hashMinAddressCount; }
            set { SetValue<int?>("hashminaddresscount", value); _hashMinAddressCount = value; }
        }
        private int? _hashMinAddressCount;

		[CrmProperty(LogicalName = "ignoreinternalemail")]
        public virtual bool? IgnoreInternalEmail
        {
            get { FillData(); return _ignoreInternalEmail; }
            set { SetValue<bool?>("ignoreinternalemail", value); _ignoreInternalEmail = value; }
        }
        private bool? _ignoreInternalEmail;

		[CrmProperty(LogicalName = "initialversion")]
        public virtual string InitialVersion
        {
            get { FillData(); return _initialVersion; }
            set {  _initialVersion = value; }
        }
        private string _initialVersion;

		[CrmProperty(LogicalName = "integrationuserid")]
        public virtual Guid? IntegrationUserId
        {
            get { FillData(); return _integrationUserId; }
            set { SetValue<Guid?>("integrationuserid", value); _integrationUserId = value; }
        }
        private Guid? _integrationUserId;

		[CrmProperty(LogicalName = "invoiceprefix")]
        public virtual string InvoicePrefix
        {
            get { FillData(); return _invoicePrefix; }
            set { SetValue<string>("invoiceprefix", value); _invoicePrefix = value; }
        }
        private string _invoicePrefix;

		[CrmProperty(LogicalName = "isappmode")]
        public virtual bool? IsAppMode
        {
            get { FillData(); return _isAppMode; }
            set { SetValue<bool?>("isappmode", value); _isAppMode = value; }
        }
        private bool? _isAppMode;

		[CrmProperty(LogicalName = "isauditenabled")]
        public virtual bool? IsAuditEnabled
        {
            get { FillData(); return _isAuditEnabled; }
            set { SetValue<bool?>("isauditenabled", value); _isAuditEnabled = value; }
        }
        private bool? _isAuditEnabled;

		[CrmProperty(LogicalName = "isdefaultcountrycodecheckenabled")]
        public virtual bool? IsDefaultCountryCodeCheckEnabled
        {
            get { FillData(); return _isDefaultCountryCodeCheckEnabled; }
            set { SetValue<bool?>("isdefaultcountrycodecheckenabled", value); _isDefaultCountryCodeCheckEnabled = value; }
        }
        private bool? _isDefaultCountryCodeCheckEnabled;

		[CrmProperty(LogicalName = "isdisabled")]
        public virtual bool? IsDisabled
        {
            get { FillData(); return _isDisabled; }
            set {  _isDisabled = value; }
        }
        private bool? _isDisabled;

		[CrmProperty(LogicalName = "isdisabledname")]
        public virtual string IsDisabledName
        {
            get { FillData(); return _isDisabledName; }
            set {  _isDisabledName = value; }
        }
        private string _isDisabledName;

		[CrmProperty(LogicalName = "isduplicatedetectionenabled")]
        public virtual bool? IsDuplicateDetectionEnabled
        {
            get { FillData(); return _isDuplicateDetectionEnabled; }
            set { SetValue<bool?>("isduplicatedetectionenabled", value); _isDuplicateDetectionEnabled = value; }
        }
        private bool? _isDuplicateDetectionEnabled;

		[CrmProperty(LogicalName = "isduplicatedetectionenabledforimport")]
        public virtual bool? IsDuplicateDetectionEnabledForImport
        {
            get { FillData(); return _isDuplicateDetectionEnabledForImport; }
            set { SetValue<bool?>("isduplicatedetectionenabledforimport", value); _isDuplicateDetectionEnabledForImport = value; }
        }
        private bool? _isDuplicateDetectionEnabledForImport;

		[CrmProperty(LogicalName = "isduplicatedetectionenabledforofflinesync")]
        public virtual bool? IsDuplicateDetectionEnabledForOfflineSync
        {
            get { FillData(); return _isDuplicateDetectionEnabledForOfflineSync; }
            set { SetValue<bool?>("isduplicatedetectionenabledforofflinesync", value); _isDuplicateDetectionEnabledForOfflineSync = value; }
        }
        private bool? _isDuplicateDetectionEnabledForOfflineSync;

		[CrmProperty(LogicalName = "isduplicatedetectionenabledforonlinecreateupdate")]
        public virtual bool? IsDuplicateDetectionEnabledForOnlineCreateUpdate
        {
            get { FillData(); return _isDuplicateDetectionEnabledForOnlineCreateUpdate; }
            set { SetValue<bool?>("isduplicatedetectionenabledforonlinecreateupdate", value); _isDuplicateDetectionEnabledForOnlineCreateUpdate = value; }
        }
        private bool? _isDuplicateDetectionEnabledForOnlineCreateUpdate;

		[CrmProperty(LogicalName = "isfiscalperiodmonthbased")]
        public virtual bool? IsFiscalPeriodMonthBased
        {
            get { FillData(); return _isFiscalPeriodMonthBased; }
            set { SetValue<bool?>("isfiscalperiodmonthbased", value); _isFiscalPeriodMonthBased = value; }
        }
        private bool? _isFiscalPeriodMonthBased;

		[CrmProperty(LogicalName = "ispresenceenabled")]
        public virtual bool? IsPresenceEnabled
        {
            get { FillData(); return _isPresenceEnabled; }
            set { SetValue<bool?>("ispresenceenabled", value); _isPresenceEnabled = value; }
        }
        private bool? _isPresenceEnabled;

		[CrmProperty(LogicalName = "ispresenceenabledname")]
        public virtual string IsPresenceEnabledName
        {
            get { FillData(); return _isPresenceEnabledName; }
            set { SetValue<string>("ispresenceenabledname", value); _isPresenceEnabledName = value; }
        }
        private string _isPresenceEnabledName;

		[CrmProperty(LogicalName = "issopintegrationenabled")]
        public virtual bool? IsSOPIntegrationEnabled
        {
            get { FillData(); return _isSOPIntegrationEnabled; }
            set { SetValue<bool?>("issopintegrationenabled", value); _isSOPIntegrationEnabled = value; }
        }
        private bool? _isSOPIntegrationEnabled;

		[CrmProperty(LogicalName = "isuseraccessauditenabled")]
        public virtual bool? IsUserAccessAuditEnabled
        {
            get { FillData(); return _isUserAccessAuditEnabled; }
            set { SetValue<bool?>("isuseraccessauditenabled", value); _isUserAccessAuditEnabled = value; }
        }
        private bool? _isUserAccessAuditEnabled;

		[CrmProperty(LogicalName = "isvintegrationcode")]
        public virtual Enums.ISVIntegrationCode? ISVIntegrationCode
        {
            get { FillData(); return _iSVIntegrationCode; }
            set { SetPicklist("isvintegrationcode", (int?)value); _iSVIntegrationCode = value; }
        }
        private Enums.ISVIntegrationCode? _iSVIntegrationCode;

		[CrmProperty(LogicalName = "kbprefix")]
        public virtual string KbPrefix
        {
            get { FillData(); return _kbPrefix; }
            set { SetValue<string>("kbprefix", value); _kbPrefix = value; }
        }
        private string _kbPrefix;

		[CrmProperty(LogicalName = "languagecode")]
        public virtual int? LanguageCode
        {
            get { FillData(); return _languageCode; }
            set {  _languageCode = value; }
        }
        private int? _languageCode;

		[CrmProperty(LogicalName = "languagecodename")]
        public virtual string LanguageCodeName
        {
            get { FillData(); return _languageCodeName; }
            set {  _languageCodeName = value; }
        }
        private string _languageCodeName;

		[CrmProperty(LogicalName = "localeid")]
        public virtual int? LocaleId
        {
            get { FillData(); return _localeId; }
            set { SetValue<int?>("localeid", value); _localeId = value; }
        }
        private int? _localeId;

		[CrmProperty(LogicalName = "longdateformatcode")]
        public virtual int? LongDateFormatCode
        {
            get { FillData(); return _longDateFormatCode; }
            set { SetValue<int?>("longdateformatcode", value); _longDateFormatCode = value; }
        }
        private int? _longDateFormatCode;

		[CrmProperty(LogicalName = "maxappointmentdurationdays")]
        public virtual int? MaxAppointmentDurationDays
        {
            get { FillData(); return _maxAppointmentDurationDays; }
            set { SetValue<int?>("maxappointmentdurationdays", value); _maxAppointmentDurationDays = value; }
        }
        private int? _maxAppointmentDurationDays;

		[CrmProperty(LogicalName = "maximumtrackingnumber")]
        public virtual int? MaximumTrackingNumber
        {
            get { FillData(); return _maximumTrackingNumber; }
            set { SetValue<int?>("maximumtrackingnumber", value); _maximumTrackingNumber = value; }
        }
        private int? _maximumTrackingNumber;

		[CrmProperty(LogicalName = "maxrecordsforexporttoexcel")]
        public virtual int? MaxRecordsForExportToExcel
        {
            get { FillData(); return _maxRecordsForExportToExcel; }
            set { SetValue<int?>("maxrecordsforexporttoexcel", value); _maxRecordsForExportToExcel = value; }
        }
        private int? _maxRecordsForExportToExcel;

		[CrmProperty(LogicalName = "maxrecordsforlookupfilters")]
        public virtual int? MaxRecordsForLookupFilters
        {
            get { FillData(); return _maxRecordsForLookupFilters; }
            set { SetValue<int?>("maxrecordsforlookupfilters", value); _maxRecordsForLookupFilters = value; }
        }
        private int? _maxRecordsForLookupFilters;

		[CrmProperty(LogicalName = "maxuploadfilesize")]
        public virtual int? MaxUploadFileSize
        {
            get { FillData(); return _maxUploadFileSize; }
            set { SetValue<int?>("maxuploadfilesize", value); _maxUploadFileSize = value; }
        }
        private int? _maxUploadFileSize;

		[CrmProperty(LogicalName = "metadatasynclasttimeofneverexpireddeletedobjects")]
        public virtual DateTime? MetadataSyncLastTimeOfNeverExpiredDeletedObjects
        {
            get { FillData(); return _metadataSyncLastTimeOfNeverExpiredDeletedObjects; }
            set {  _metadataSyncLastTimeOfNeverExpiredDeletedObjects = value; }
        }
        private DateTime? _metadataSyncLastTimeOfNeverExpiredDeletedObjects;

		[CrmProperty(LogicalName = "metadatasynctimestamp")]
        public virtual int? MetadataSyncTimestamp
        {
            get { FillData(); return _metadataSyncTimestamp; }
            set {  _metadataSyncTimestamp = value; }
        }
        private int? _metadataSyncTimestamp;

		[CrmProperty(LogicalName = "minaddressbooksyncinterval")]
        public virtual int? MinAddressBookSyncInterval
        {
            get { FillData(); return _minAddressBookSyncInterval; }
            set { SetValue<int?>("minaddressbooksyncinterval", value); _minAddressBookSyncInterval = value; }
        }
        private int? _minAddressBookSyncInterval;

		[CrmProperty(LogicalName = "minofflinesyncinterval")]
        public virtual int? MinOfflineSyncInterval
        {
            get { FillData(); return _minOfflineSyncInterval; }
            set { SetValue<int?>("minofflinesyncinterval", value); _minOfflineSyncInterval = value; }
        }
        private int? _minOfflineSyncInterval;

		[CrmProperty(LogicalName = "minoutlooksyncinterval")]
        public virtual int? MinOutlookSyncInterval
        {
            get { FillData(); return _minOutlookSyncInterval; }
            set { SetValue<int?>("minoutlooksyncinterval", value); _minOutlookSyncInterval = value; }
        }
        private int? _minOutlookSyncInterval;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set {  _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "negativecurrencyformatcode")]
        public virtual int? NegativeCurrencyFormatCode
        {
            get { FillData(); return _negativeCurrencyFormatCode; }
            set { SetValue<int?>("negativecurrencyformatcode", value); _negativeCurrencyFormatCode = value; }
        }
        private int? _negativeCurrencyFormatCode;

		[CrmProperty(LogicalName = "negativeformatcode")]
        public virtual Enums.NegativeFormatCode? NegativeFormatCode
        {
            get { FillData(); return _negativeFormatCode; }
            set { SetPicklist("negativeformatcode", (int?)value); _negativeFormatCode = value; }
        }
        private Enums.NegativeFormatCode? _negativeFormatCode;

		[CrmProperty(LogicalName = "negativeformatcodename")]
        public virtual string NegativeFormatCodeName
        {
            get { FillData(); return _negativeFormatCodeName; }
            set {  _negativeFormatCodeName = value; }
        }
        private string _negativeFormatCodeName;

		[CrmProperty(LogicalName = "nextcustomobjecttypecode")]
        public virtual int? NextCustomObjectTypeCode
        {
            get { FillData(); return _nextCustomObjectTypeCode; }
            set {  _nextCustomObjectTypeCode = value; }
        }
        private int? _nextCustomObjectTypeCode;

		[CrmProperty(LogicalName = "nexttrackingnumber")]
        public virtual int? NextTrackingNumber
        {
            get { FillData(); return _nextTrackingNumber; }
            set { SetValue<int?>("nexttrackingnumber", value); _nextTrackingNumber = value; }
        }
        private int? _nextTrackingNumber;

		[CrmProperty(LogicalName = "numberformat")]
        public virtual string NumberFormat
        {
            get { FillData(); return _numberFormat; }
            set { SetValue<string>("numberformat", value); _numberFormat = value; }
        }
        private string _numberFormat;

		[CrmProperty(LogicalName = "numbergroupformat")]
        public virtual string NumberGroupFormat
        {
            get { FillData(); return _numberGroupFormat; }
            set { SetValue<string>("numbergroupformat", value); _numberGroupFormat = value; }
        }
        private string _numberGroupFormat;

		[CrmProperty(LogicalName = "numberseparator")]
        public virtual string NumberSeparator
        {
            get { FillData(); return _numberSeparator; }
            set { SetValue<string>("numberseparator", value); _numberSeparator = value; }
        }
        private string _numberSeparator;

		[CrmProperty(LogicalName = "orderprefix")]
        public virtual string OrderPrefix
        {
            get { FillData(); return _orderPrefix; }
            set { SetValue<string>("orderprefix", value); _orderPrefix = value; }
        }
        private string _orderPrefix;

		[CrmProperty(LogicalName = "organizationid")]
        public virtual Guid OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid _organizationId;

		[CrmProperty(LogicalName = "orgdborgsettings")]
        public virtual string OrgDbOrgSettings
        {
            get { FillData(); return _orgDbOrgSettings; }
            set { SetValue<string>("orgdborgsettings", value); _orgDbOrgSettings = value; }
        }
        private string _orgDbOrgSettings;

		[CrmProperty(LogicalName = "parsedtablecolumnprefix")]
        public virtual string ParsedTableColumnPrefix
        {
            get { FillData(); return _parsedTableColumnPrefix; }
            set {  _parsedTableColumnPrefix = value; }
        }
        private string _parsedTableColumnPrefix;

		[CrmProperty(LogicalName = "parsedtableprefix")]
        public virtual string ParsedTablePrefix
        {
            get { FillData(); return _parsedTablePrefix; }
            set {  _parsedTablePrefix = value; }
        }
        private string _parsedTablePrefix;

		[CrmProperty(LogicalName = "pastexpansionwindow")]
        public virtual int? PastExpansionWindow
        {
            get { FillData(); return _pastExpansionWindow; }
            set { SetValue<int?>("pastexpansionwindow", value); _pastExpansionWindow = value; }
        }
        private int? _pastExpansionWindow;

		[CrmProperty(LogicalName = "picture")]
        public virtual string Picture
        {
            get { FillData(); return _picture; }
            set { SetValue<string>("picture", value); _picture = value; }
        }
        private string _picture;

		[CrmProperty(LogicalName = "pinpointlanguagecode")]
        public virtual int? PinpointLanguageCode
        {
            get { FillData(); return _pinpointLanguageCode; }
            set { SetValue<int?>("pinpointlanguagecode", value); _pinpointLanguageCode = value; }
        }
        private int? _pinpointLanguageCode;

		[CrmProperty(LogicalName = "pmdesignator")]
        public virtual string PMDesignator
        {
            get { FillData(); return _pMDesignator; }
            set { SetValue<string>("pmdesignator", value); _pMDesignator = value; }
        }
        private string _pMDesignator;

		[CrmProperty(LogicalName = "pricingdecimalprecision")]
        public virtual int? PricingDecimalPrecision
        {
            get { FillData(); return _pricingDecimalPrecision; }
            set { SetValue<int?>("pricingdecimalprecision", value); _pricingDecimalPrecision = value; }
        }
        private int? _pricingDecimalPrecision;

		[CrmProperty(LogicalName = "privilegeusergroupid")]
        public virtual Guid? PrivilegeUserGroupId
        {
            get { FillData(); return _privilegeUserGroupId; }
            set { SetValue<Guid?>("privilegeusergroupid", value); _privilegeUserGroupId = value; }
        }
        private Guid? _privilegeUserGroupId;

		[CrmProperty(LogicalName = "privreportinggroupid")]
        public virtual Guid? PrivReportingGroupId
        {
            get { FillData(); return _privReportingGroupId; }
            set { SetValue<Guid?>("privreportinggroupid", value); _privReportingGroupId = value; }
        }
        private Guid? _privReportingGroupId;

		[CrmProperty(LogicalName = "privreportinggroupname")]
        public virtual string PrivReportingGroupName
        {
            get { FillData(); return _privReportingGroupName; }
            set { SetValue<string>("privreportinggroupname", value); _privReportingGroupName = value; }
        }
        private string _privReportingGroupName;

		[CrmProperty(LogicalName = "quickfindrecordlimitenabled")]
        public virtual bool? QuickFindRecordLimitEnabled
        {
            get { FillData(); return _quickFindRecordLimitEnabled; }
            set { SetValue<bool?>("quickfindrecordlimitenabled", value); _quickFindRecordLimitEnabled = value; }
        }
        private bool? _quickFindRecordLimitEnabled;

		[CrmProperty(LogicalName = "quoteprefix")]
        public virtual string QuotePrefix
        {
            get { FillData(); return _quotePrefix; }
            set { SetValue<string>("quoteprefix", value); _quotePrefix = value; }
        }
        private string _quotePrefix;

		[CrmProperty(LogicalName = "recurrencedefaultnumberofoccurrences")]
        public virtual int? RecurrenceDefaultNumberOfOccurrences
        {
            get { FillData(); return _recurrenceDefaultNumberOfOccurrences; }
            set { SetValue<int?>("recurrencedefaultnumberofoccurrences", value); _recurrenceDefaultNumberOfOccurrences = value; }
        }
        private int? _recurrenceDefaultNumberOfOccurrences;

		[CrmProperty(LogicalName = "recurrenceexpansionjobbatchinterval")]
        public virtual int? RecurrenceExpansionJobBatchInterval
        {
            get { FillData(); return _recurrenceExpansionJobBatchInterval; }
            set { SetValue<int?>("recurrenceexpansionjobbatchinterval", value); _recurrenceExpansionJobBatchInterval = value; }
        }
        private int? _recurrenceExpansionJobBatchInterval;

		[CrmProperty(LogicalName = "recurrenceexpansionjobbatchsize")]
        public virtual int? RecurrenceExpansionJobBatchSize
        {
            get { FillData(); return _recurrenceExpansionJobBatchSize; }
            set { SetValue<int?>("recurrenceexpansionjobbatchsize", value); _recurrenceExpansionJobBatchSize = value; }
        }
        private int? _recurrenceExpansionJobBatchSize;

		[CrmProperty(LogicalName = "recurrenceexpansionsynchcreatemax")]
        public virtual int? RecurrenceExpansionSynchCreateMax
        {
            get { FillData(); return _recurrenceExpansionSynchCreateMax; }
            set { SetValue<int?>("recurrenceexpansionsynchcreatemax", value); _recurrenceExpansionSynchCreateMax = value; }
        }
        private int? _recurrenceExpansionSynchCreateMax;

		[CrmProperty(LogicalName = "referencesitemapxml")]
        public virtual string ReferenceSiteMapXml
        {
            get { FillData(); return _referenceSiteMapXml; }
            set { SetValue<string>("referencesitemapxml", value); _referenceSiteMapXml = value; }
        }
        private string _referenceSiteMapXml;

		[CrmProperty(LogicalName = "rendersecureiframeforemail")]
        public virtual bool? RenderSecureIFrameForEmail
        {
            get { FillData(); return _renderSecureIFrameForEmail; }
            set { SetValue<bool?>("rendersecureiframeforemail", value); _renderSecureIFrameForEmail = value; }
        }
        private bool? _renderSecureIFrameForEmail;

		[CrmProperty(LogicalName = "reportinggroupid")]
        public virtual Guid? ReportingGroupId
        {
            get { FillData(); return _reportingGroupId; }
            set { SetValue<Guid?>("reportinggroupid", value); _reportingGroupId = value; }
        }
        private Guid? _reportingGroupId;

		[CrmProperty(LogicalName = "reportinggroupname")]
        public virtual string ReportingGroupName
        {
            get { FillData(); return _reportingGroupName; }
            set { SetValue<string>("reportinggroupname", value); _reportingGroupName = value; }
        }
        private string _reportingGroupName;

		[CrmProperty(LogicalName = "reportscripterrors")]
        public virtual Enums.ReportScriptErrors? ReportScriptErrors
        {
            get { FillData(); return _reportScriptErrors; }
            set { SetPicklist("reportscripterrors", (int?)value); _reportScriptErrors = value; }
        }
        private Enums.ReportScriptErrors? _reportScriptErrors;

		[CrmProperty(LogicalName = "reportscripterrorsname")]
        public virtual string ReportScriptErrorsName
        {
            get { FillData(); return _reportScriptErrorsName; }
            set {  _reportScriptErrorsName = value; }
        }
        private string _reportScriptErrorsName;

		[CrmProperty(LogicalName = "requireapprovalforqueueemail")]
        public virtual bool? RequireApprovalForQueueEmail
        {
            get { FillData(); return _requireApprovalForQueueEmail; }
            set { SetValue<bool?>("requireapprovalforqueueemail", value); _requireApprovalForQueueEmail = value; }
        }
        private bool? _requireApprovalForQueueEmail;

		[CrmProperty(LogicalName = "requireapprovalforuseremail")]
        public virtual bool? RequireApprovalForUserEmail
        {
            get { FillData(); return _requireApprovalForUserEmail; }
            set { SetValue<bool?>("requireapprovalforuseremail", value); _requireApprovalForUserEmail = value; }
        }
        private bool? _requireApprovalForUserEmail;

		[CrmProperty(LogicalName = "sampledataimportid")]
        public virtual Guid? SampleDataImportId
        {
            get { FillData(); return _sampleDataImportId; }
            set { SetValue<Guid?>("sampledataimportid", value); _sampleDataImportId = value; }
        }
        private Guid? _sampleDataImportId;

		[CrmProperty(LogicalName = "schemanameprefix")]
        public virtual string SchemaNamePrefix
        {
            get { FillData(); return _schemaNamePrefix; }
            set { SetValue<string>("schemanameprefix", value); _schemaNamePrefix = value; }
        }
        private string _schemaNamePrefix;

		[CrmProperty(LogicalName = "sharetopreviousowneronassign")]
        public virtual bool? ShareToPreviousOwnerOnAssign
        {
            get { FillData(); return _shareToPreviousOwnerOnAssign; }
            set { SetValue<bool?>("sharetopreviousowneronassign", value); _shareToPreviousOwnerOnAssign = value; }
        }
        private bool? _shareToPreviousOwnerOnAssign;

		[CrmProperty(LogicalName = "showweeknumber")]
        public virtual bool? ShowWeekNumber
        {
            get { FillData(); return _showWeekNumber; }
            set { SetValue<bool?>("showweeknumber", value); _showWeekNumber = value; }
        }
        private bool? _showWeekNumber;

		[CrmProperty(LogicalName = "showweeknumbername")]
        public virtual string ShowWeekNumberName
        {
            get { FillData(); return _showWeekNumberName; }
            set {  _showWeekNumberName = value; }
        }
        private string _showWeekNumberName;

		[CrmProperty(LogicalName = "sitemapxml")]
        public virtual string SiteMapXml
        {
            get { FillData(); return _siteMapXml; }
            set { SetValue<string>("sitemapxml", value); _siteMapXml = value; }
        }
        private string _siteMapXml;

		[CrmProperty(LogicalName = "sortid")]
        public virtual int? SortId
        {
            get { FillData(); return _sortId; }
            set { SetValue<int?>("sortid", value); _sortId = value; }
        }
        private int? _sortId;

		[CrmProperty(LogicalName = "sqlaccessgroupid")]
        public virtual Guid? SqlAccessGroupId
        {
            get { FillData(); return _sqlAccessGroupId; }
            set { SetValue<Guid?>("sqlaccessgroupid", value); _sqlAccessGroupId = value; }
        }
        private Guid? _sqlAccessGroupId;

		[CrmProperty(LogicalName = "sqlaccessgroupname")]
        public virtual string SqlAccessGroupName
        {
            get { FillData(); return _sqlAccessGroupName; }
            set { SetValue<string>("sqlaccessgroupname", value); _sqlAccessGroupName = value; }
        }
        private string _sqlAccessGroupName;

		[CrmProperty(LogicalName = "sqmenabled")]
        public virtual bool? SQMEnabled
        {
            get { FillData(); return _sQMEnabled; }
            set { SetValue<bool?>("sqmenabled", value); _sQMEnabled = value; }
        }
        private bool? _sQMEnabled;

		[CrmProperty(LogicalName = "supportuserid")]
        public virtual Guid? SupportUserId
        {
            get { FillData(); return _supportUserId; }
            set {  _supportUserId = value; }
        }
        private Guid? _supportUserId;

		[CrmProperty(LogicalName = "systemuserid")]
        public virtual Guid? SystemUserId
        {
            get { FillData(); return _systemUserId; }
            set { SetValue<Guid?>("systemuserid", value); _systemUserId = value; }
        }
        private Guid? _systemUserId;

		[CrmProperty(LogicalName = "tagmaxaggressivecycles")]
        public virtual int? TagMaxAggressiveCycles
        {
            get { FillData(); return _tagMaxAggressiveCycles; }
            set { SetValue<int?>("tagmaxaggressivecycles", value); _tagMaxAggressiveCycles = value; }
        }
        private int? _tagMaxAggressiveCycles;

		[CrmProperty(LogicalName = "tagpollingperiod")]
        public virtual int? TagPollingPeriod
        {
            get { FillData(); return _tagPollingPeriod; }
            set { SetValue<int?>("tagpollingperiod", value); _tagPollingPeriod = value; }
        }
        private int? _tagPollingPeriod;

		[CrmProperty(LogicalName = "timeformatcode")]
        public virtual Enums.TimeFormatCode? TimeFormatCode
        {
            get { FillData(); return _timeFormatCode; }
            set { SetPicklist("timeformatcode", (int?)value); _timeFormatCode = value; }
        }
        private Enums.TimeFormatCode? _timeFormatCode;

		[CrmProperty(LogicalName = "timeformatcodename")]
        public virtual string TimeFormatCodeName
        {
            get { FillData(); return _timeFormatCodeName; }
            set {  _timeFormatCodeName = value; }
        }
        private string _timeFormatCodeName;

		[CrmProperty(LogicalName = "timeformatstring")]
        public virtual string TimeFormatString
        {
            get { FillData(); return _timeFormatString; }
            set { SetValue<string>("timeformatstring", value); _timeFormatString = value; }
        }
        private string _timeFormatString;

		[CrmProperty(LogicalName = "timeseparator")]
        public virtual string TimeSeparator
        {
            get { FillData(); return _timeSeparator; }
            set { SetValue<string>("timeseparator", value); _timeSeparator = value; }
        }
        private string _timeSeparator;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "tokenexpiry")]
        public virtual int? TokenExpiry
        {
            get { FillData(); return _tokenExpiry; }
            set { SetValue<int?>("tokenexpiry", value); _tokenExpiry = value; }
        }
        private int? _tokenExpiry;

		[CrmProperty(LogicalName = "tokenkey")]
        public virtual string TokenKey
        {
            get { FillData(); return _tokenKey; }
            set { SetValue<string>("tokenkey", value); _tokenKey = value; }
        }
        private string _tokenKey;

		[CrmProperty(LogicalName = "trackingprefix")]
        public virtual string TrackingPrefix
        {
            get { FillData(); return _trackingPrefix; }
            set { SetValue<string>("trackingprefix", value); _trackingPrefix = value; }
        }
        private string _trackingPrefix;

		[CrmProperty(LogicalName = "trackingtokenidbase")]
        public virtual int? TrackingTokenIdBase
        {
            get { FillData(); return _trackingTokenIdBase; }
            set { SetValue<int?>("trackingtokenidbase", value); _trackingTokenIdBase = value; }
        }
        private int? _trackingTokenIdBase;

		[CrmProperty(LogicalName = "trackingtokeniddigits")]
        public virtual int? TrackingTokenIdDigits
        {
            get { FillData(); return _trackingTokenIdDigits; }
            set { SetValue<int?>("trackingtokeniddigits", value); _trackingTokenIdDigits = value; }
        }
        private int? _trackingTokenIdDigits;

		[CrmProperty(LogicalName = "uniquespecifierlength")]
        public virtual int? UniqueSpecifierLength
        {
            get { FillData(); return _uniqueSpecifierLength; }
            set { SetValue<int?>("uniquespecifierlength", value); _uniqueSpecifierLength = value; }
        }
        private int? _uniqueSpecifierLength;

		[CrmProperty(LogicalName = "useraccessauditinginterval")]
        public virtual int? UserAccessAuditingInterval
        {
            get { FillData(); return _userAccessAuditingInterval; }
            set { SetValue<int?>("useraccessauditinginterval", value); _userAccessAuditingInterval = value; }
        }
        private int? _userAccessAuditingInterval;

		[CrmProperty(LogicalName = "usereadform")]
        public virtual bool? UseReadForm
        {
            get { FillData(); return _useReadForm; }
            set { SetValue<bool?>("usereadform", value); _useReadForm = value; }
        }
        private bool? _useReadForm;

		[CrmProperty(LogicalName = "usergroupid")]
        public virtual Guid? UserGroupId
        {
            get { FillData(); return _userGroupId; }
            set { SetValue<Guid?>("usergroupid", value); _userGroupId = value; }
        }
        private Guid? _userGroupId;

		[CrmProperty(LogicalName = "useskypeprotocol")]
        public virtual bool? UseSkypeProtocol
        {
            get { FillData(); return _useSkypeProtocol; }
            set { SetValue<bool?>("useskypeprotocol", value); _useSkypeProtocol = value; }
        }
        private bool? _useSkypeProtocol;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "v3calloutconfighash")]
        public virtual string V3CalloutConfigHash
        {
            get { FillData(); return _v3CalloutConfigHash; }
            set {  _v3CalloutConfigHash = value; }
        }
        private string _v3CalloutConfigHash;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "weekstartdaycode")]
        public virtual Enums.WeekStartDayCode? WeekStartDayCode
        {
            get { FillData(); return _weekStartDayCode; }
            set { SetPicklist("weekstartdaycode", (int?)value); _weekStartDayCode = value; }
        }
        private Enums.WeekStartDayCode? _weekStartDayCode;

		[CrmProperty(LogicalName = "weekstartdaycodename")]
        public virtual string WeekStartDayCodeName
        {
            get { FillData(); return _weekStartDayCodeName; }
            set {  _weekStartDayCodeName = value; }
        }
        private string _weekStartDayCodeName;

		[CrmProperty(LogicalName = "yammergroupid")]
        public virtual int? YammerGroupId
        {
            get { FillData(); return _yammerGroupId; }
            set {  _yammerGroupId = value; }
        }
        private int? _yammerGroupId;

		[CrmProperty(LogicalName = "yammernetworkpermalink")]
        public virtual string YammerNetworkPermalink
        {
            get { FillData(); return _yammerNetworkPermalink; }
            set {  _yammerNetworkPermalink = value; }
        }
        private string _yammerNetworkPermalink;

		[CrmProperty(LogicalName = "yammeroauthaccesstokenexpired")]
        public virtual bool? YammerOAuthAccessTokenExpired
        {
            get { FillData(); return _yammerOAuthAccessTokenExpired; }
            set {  _yammerOAuthAccessTokenExpired = value; }
        }
        private bool? _yammerOAuthAccessTokenExpired;

		[CrmProperty(LogicalName = "yammerpostmethod")]
        public virtual Enums.YammerPostMethod? YammerPostMethod
        {
            get { FillData(); return _yammerPostMethod; }
            set {  _yammerPostMethod = value; }
        }
        private Enums.YammerPostMethod? _yammerPostMethod;

		[CrmProperty(LogicalName = "yearstartweekcode")]
        public virtual int? YearStartWeekCode
        {
            get { FillData(); return _yearStartWeekCode; }
            set { SetValue<int?>("yearstartweekcode", value); _yearStartWeekCode = value; }
        }
        private int? _yearStartWeekCode;

	}
	[CrmEntity(LogicalName = "phonecall", PrimaryKey = "activityid")]
	public partial class PhoneCall : CrmEntity
	{
		public class Enums
		{
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Made", Value = 2)]Made = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Received", Value = 4)]Received = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "phonecall";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DirectionCode = "directioncode";
			public const string DirectionCodeName = "directioncodename";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LeftVoiceMail = "leftvoicemail";
			public const string LeftVoiceMailName = "leftvoicemailname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillableTime = "new_billabletime";
			public const string NewLinktoCustomerPortal = "new_linktocustomerportal";
			public const string NewLinktocustomerportalName = "new_linktocustomerportalname";
			public const string NewTechnicalDetails = "new_technicaldetails";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PhoneNumber = "phonenumber";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "directioncode")]
        public virtual bool? DirectionCode
        {
            get { FillData(); return _directionCode; }
            set { SetValue<bool?>("directioncode", value); _directionCode = value; }
        }
        private bool? _directionCode;

		[CrmProperty(LogicalName = "directioncodename")]
        public virtual string DirectionCodeName
        {
            get { FillData(); return _directionCodeName; }
            set {  _directionCodeName = value; }
        }
        private string _directionCodeName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "leftvoicemail")]
        public virtual bool? LeftVoiceMail
        {
            get { FillData(); return _leftVoiceMail; }
            set { SetValue<bool?>("leftvoicemail", value); _leftVoiceMail = value; }
        }
        private bool? _leftVoiceMail;

		[CrmProperty(LogicalName = "leftvoicemailname")]
        public virtual string LeftVoiceMailName
        {
            get { FillData(); return _leftVoiceMailName; }
            set {  _leftVoiceMailName = value; }
        }
        private string _leftVoiceMailName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billabletime")]
        public virtual int? NewBillableTime
        {
            get { FillData(); return _newBillableTime; }
            set { SetValue<int?>("new_billabletime", value); _newBillableTime = value; }
        }
        private int? _newBillableTime;

		[CrmProperty(LogicalName = "new_linktocustomerportal")]
        public virtual bool? NewLinktoCustomerPortal
        {
            get { FillData(); return _newLinktoCustomerPortal; }
            set { SetValue<bool?>("new_linktocustomerportal", value); _newLinktoCustomerPortal = value; }
        }
        private bool? _newLinktoCustomerPortal;

		[CrmProperty(LogicalName = "new_linktocustomerportalname")]
        public virtual string NewLinktocustomerportalName
        {
            get { FillData(); return _newLinktocustomerportalName; }
            set {  _newLinktocustomerportalName = value; }
        }
        private string _newLinktocustomerportalName;

		[CrmProperty(LogicalName = "new_technicaldetails")]
        public virtual string NewTechnicalDetails
        {
            get { FillData(); return _newTechnicalDetails; }
            set { SetValue<string>("new_technicaldetails", value); _newTechnicalDetails = value; }
        }
        private string _newTechnicalDetails;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "phonenumber")]
        public virtual string PhoneNumber
        {
            get { FillData(); return _phoneNumber; }
            set { SetValue<string>("phonenumber", value); _phoneNumber = value; }
        }
        private string _phoneNumber;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_mailchimpactivity", PrimaryKey = "activityid")]
	public partial class PoMailchimpactivity : CrmEntity
	{
		public class Enums
		{
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum PoMailchimpactivitytype 
			{
				[CrmPicklist(DisplayName = "Sent", Value = 936710000)]Sent = 936710000,
				[CrmPicklist(DisplayName = "Open", Value = 936710001)]Open = 936710001,
				[CrmPicklist(DisplayName = "Click", Value = 936710002)]Click = 936710002,
				[CrmPicklist(DisplayName = "Complaint", Value = 936710003)]Complaint = 936710003,
				[CrmPicklist(DisplayName = "Bounced", Value = 936710004)]Bounced = 936710004,
				[CrmPicklist(DisplayName = "Unsubscribe", Value = 936710005)]Unsubscribe = 936710005,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Scheduled", Value = 4)]Scheduled = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_mailchimpactivity";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BCC = "bcc";
			public const string CC = "cc";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customers = "customers";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Partners = "partners";
			public const string PoClicks = "po_clicks";
			public const string PoMailchimpactivitytype = "po_mailchimpactivitytype";
			public const string PoMailchimpactivitytypeName = "po_mailchimpactivitytypename";
			public const string PoMailchimpcampaignid = "po_mailchimpcampaignid";
			public const string PoMailchimpcampaignidName = "po_mailchimpcampaignidname";
			public const string PoOpen = "po_open";
			public const string PoUrl = "po_url";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "bcc")]
        public virtual object BCC
        {
            get { FillData(); return _bCC; }
            set {  _bCC = value; }
        }
        private object _bCC;

		[CrmProperty(LogicalName = "cc")]
        public virtual object CC
        {
            get { FillData(); return _cC; }
            set {  _cC = value; }
        }
        private object _cC;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customers")]
        public virtual object Customers
        {
            get { FillData(); return _customers; }
            set {  _customers = value; }
        }
        private object _customers;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "optionalattendees")]
        public virtual object OptionalAttendees
        {
            get { FillData(); return _optionalAttendees; }
            set {  _optionalAttendees = value; }
        }
        private object _optionalAttendees;

		[CrmProperty(LogicalName = "organizer")]
        public virtual object Organizer
        {
            get { FillData(); return _organizer; }
            set {  _organizer = value; }
        }
        private object _organizer;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "partners")]
        public virtual object Partners
        {
            get { FillData(); return _partners; }
            set {  _partners = value; }
        }
        private object _partners;

		[CrmProperty(LogicalName = "po_clicks")]
        public virtual int? PoClicks
        {
            get { FillData(); return _poClicks; }
            set { SetValue<int?>("po_clicks", value); _poClicks = value; }
        }
        private int? _poClicks;

		[CrmProperty(LogicalName = "po_mailchimpactivitytype")]
        public virtual Enums.PoMailchimpactivitytype? PoMailchimpactivitytype
        {
            get { FillData(); return _poMailchimpactivitytype; }
            set { SetPicklist("po_mailchimpactivitytype", (int?)value); _poMailchimpactivitytype = value; }
        }
        private Enums.PoMailchimpactivitytype? _poMailchimpactivitytype;

		[CrmProperty(LogicalName = "po_mailchimpactivitytypename")]
        public virtual string PoMailchimpactivitytypeName
        {
            get { FillData(); return _poMailchimpactivitytypeName; }
            set {  _poMailchimpactivitytypeName = value; }
        }
        private string _poMailchimpactivitytypeName;

		[CrmProperty(LogicalName = "po_mailchimpcampaignid", IsLookup = true)]
        public virtual Guid? PoMailchimpcampaignid
        {
            get { FillData(); return _poMailchimpcampaignid; }
            set { SetLookup("po_mailchimpcampaignid", "po_mailchimpcampaign", value); _poMailchimpcampaignid = value; }
        }
        private Guid? _poMailchimpcampaignid;

		[CrmProperty(LogicalName = "po_mailchimpcampaignidname")]
        public virtual string PoMailchimpcampaignidName
        {
            get { FillData(); return _poMailchimpcampaignidName; }
            set {  _poMailchimpcampaignidName = value; }
        }
        private string _poMailchimpcampaignidName;

		[CrmProperty(LogicalName = "po_open")]
        public virtual int? PoOpen
        {
            get { FillData(); return _poOpen; }
            set { SetValue<int?>("po_open", value); _poOpen = value; }
        }
        private int? _poOpen;

		[CrmProperty(LogicalName = "po_url")]
        public virtual string PoUrl
        {
            get { FillData(); return _poUrl; }
            set { SetValue<string>("po_url", value); _poUrl = value; }
        }
        private string _poUrl;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set { SetValue<string>("regardingobjectidname", value); _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set { SetValue<string>("regardingobjectidyominame", value); _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "requiredattendees")]
        public virtual object RequiredAttendees
        {
            get { FillData(); return _requiredAttendees; }
            set {  _requiredAttendees = value; }
        }
        private object _requiredAttendees;

		[CrmProperty(LogicalName = "resources")]
        public virtual object Resources
        {
            get { FillData(); return _resources; }
            set {  _resources = value; }
        }
        private object _resources;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesid")]
        public virtual Guid? SeriesId
        {
            get { FillData(); return _seriesId; }
            set {  _seriesId = value; }
        }
        private Guid? _seriesId;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidname")]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_mailchimpcampaign", PrimaryKey = "po_mailchimpcampaignid")]
	public partial class PoMailchimpcampaign : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_mailchimpcampaign";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoAddgoogleanalyticstracking = "po_addgoogleanalyticstracking";
			public const string PoAddgoogleanalyticstrackingName = "po_addgoogleanalyticstrackingname";
			public const string PoAllowfbcomments = "po_allowfbcomments";
			public const string PoAllowfbcommentsName = "po_allowfbcommentsname";
			public const string PoAuthenticate = "po_authenticate";
			public const string PoAuthenticateName = "po_authenticatename";
			public const string PoBounced = "po_bounced";
			public const string PoCampaignId = "po_campaignid";
			public const string PoCampaignIdName = "po_campaignidname";
			public const string PoCampaignisdirty = "po_campaignisdirty";
			public const string PoCampaignmessage = "po_campaignmessage";
			public const string PoCampaignscheduled = "po_campaignscheduled";
			public const string PoCampaignscheduledate = "po_campaignscheduledate";
			public const string PoCampaignscheduledName = "po_campaignscheduledname";
			public const string PoCampaignscheduling = "po_campaignscheduling";
			public const string PoCampaignschedulingName = "po_campaignschedulingname";
			public const string PoCampaignsending = "po_campaignsending";
			public const string PoCampaignsendingName = "po_campaignsendingname";
			public const string PoCampaignsent = "po_campaignsent";
			public const string PoCampaignsentName = "po_campaignsentname";
			public const string PoCampaignstatus = "po_campaignstatus";
			public const string PoClicks = "po_clicks";
			public const string PoComplaints = "po_complaints";
			public const string PoEcommerce360tracking = "po_ecommerce360tracking";
			public const string PoEcommerce360trackingName = "po_ecommerce360trackingname";
			public const string PoFromeMail = "po_fromemail";
			public const string PoFromName = "po_fromname";
			public const string PoIntegratetofacebook = "po_integratetofacebook";
			public const string PoMailchimpcampaignId = "po_mailchimpcampaignid";
			public const string PoMailchimpCampaignid = "po_mailchimp_campaignid";
			public const string PoMailchimptemplate = "po_mailchimptemplate";
			public const string PoMailchimptemplateid = "po_mailchimptemplateid";
			public const string PoName = "po_name";
			public const string PoOpen = "po_open";
			public const string PoPlaintextemail = "po_plaintextemail";
			public const string PoSend = "po_send";
			public const string PoSendtotwitter = "po_sendtotwitter";
			public const string PoSendtotwitterName = "po_sendtotwittername";
			public const string PoSentdate = "po_sentdate";
			public const string PoSubject = "po_subject";
			public const string PoSuccessfuldeliveries = "po_successfuldeliveries";
			public const string PoSyncdate = "po_syncdate";
			public const string PoSyncedcount = "po_syncedcount";
			public const string PoTitleforcampaigningoogleanalytics = "po_titleforcampaigningoogleanalytics";
			public const string PoTotalclicks = "po_totalclicks";
			public const string PoTotaltimesopened = "po_totaltimesopened";
			public const string PoTrackClick = "po_trackclick";
			public const string PoTrackclickName = "po_trackclickname";
			public const string PoTrackOpens = "po_trackopens";
			public const string PoTrackopensName = "po_trackopensname";
			public const string PoTrackplaintextclicks = "po_trackplaintextclicks";
			public const string PoTrackplaintextclicksName = "po_trackplaintextclicksname";
			public const string PoUnopened = "po_unopened";
			public const string PoUnsubscribers = "po_unsubscribers";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoMailchimpcampaignId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_addgoogleanalyticstracking")]
        public virtual bool? PoAddgoogleanalyticstracking
        {
            get { FillData(); return _poAddgoogleanalyticstracking; }
            set { SetValue<bool?>("po_addgoogleanalyticstracking", value); _poAddgoogleanalyticstracking = value; }
        }
        private bool? _poAddgoogleanalyticstracking;

		[CrmProperty(LogicalName = "po_addgoogleanalyticstrackingname")]
        public virtual string PoAddgoogleanalyticstrackingName
        {
            get { FillData(); return _poAddgoogleanalyticstrackingName; }
            set {  _poAddgoogleanalyticstrackingName = value; }
        }
        private string _poAddgoogleanalyticstrackingName;

		[CrmProperty(LogicalName = "po_allowfbcomments")]
        public virtual bool? PoAllowfbcomments
        {
            get { FillData(); return _poAllowfbcomments; }
            set { SetValue<bool?>("po_allowfbcomments", value); _poAllowfbcomments = value; }
        }
        private bool? _poAllowfbcomments;

		[CrmProperty(LogicalName = "po_allowfbcommentsname")]
        public virtual string PoAllowfbcommentsName
        {
            get { FillData(); return _poAllowfbcommentsName; }
            set {  _poAllowfbcommentsName = value; }
        }
        private string _poAllowfbcommentsName;

		[CrmProperty(LogicalName = "po_authenticate")]
        public virtual bool? PoAuthenticate
        {
            get { FillData(); return _poAuthenticate; }
            set { SetValue<bool?>("po_authenticate", value); _poAuthenticate = value; }
        }
        private bool? _poAuthenticate;

		[CrmProperty(LogicalName = "po_authenticatename")]
        public virtual string PoAuthenticateName
        {
            get { FillData(); return _poAuthenticateName; }
            set {  _poAuthenticateName = value; }
        }
        private string _poAuthenticateName;

		[CrmProperty(LogicalName = "po_bounced")]
        public virtual int? PoBounced
        {
            get { FillData(); return _poBounced; }
            set { SetValue<int?>("po_bounced", value); _poBounced = value; }
        }
        private int? _poBounced;

		[CrmProperty(LogicalName = "po_campaignid", IsLookup = true)]
        public virtual Guid? PoCampaignId
        {
            get { FillData(); return _poCampaignId; }
            set { SetLookup("po_campaignid", "campaign", value); _poCampaignId = value; }
        }
        private Guid? _poCampaignId;

		[CrmProperty(LogicalName = "po_campaignidname")]
        public virtual string PoCampaignIdName
        {
            get { FillData(); return _poCampaignIdName; }
            set {  _poCampaignIdName = value; }
        }
        private string _poCampaignIdName;

		[CrmProperty(LogicalName = "po_campaignisdirty")]
        public virtual string PoCampaignisdirty
        {
            get { FillData(); return _poCampaignisdirty; }
            set { SetValue<string>("po_campaignisdirty", value); _poCampaignisdirty = value; }
        }
        private string _poCampaignisdirty;

		[CrmProperty(LogicalName = "po_campaignmessage")]
        public virtual string PoCampaignmessage
        {
            get { FillData(); return _poCampaignmessage; }
            set { SetValue<string>("po_campaignmessage", value); _poCampaignmessage = value; }
        }
        private string _poCampaignmessage;

		[CrmProperty(LogicalName = "po_campaignscheduled")]
        public virtual bool? PoCampaignscheduled
        {
            get { FillData(); return _poCampaignscheduled; }
            set { SetValue<bool?>("po_campaignscheduled", value); _poCampaignscheduled = value; }
        }
        private bool? _poCampaignscheduled;

		[CrmProperty(LogicalName = "po_campaignscheduledate")]
        public virtual DateTime? PoCampaignscheduledate
        {
            get { FillData(); return _poCampaignscheduledate; }
            set { SetValue<DateTime?>("po_campaignscheduledate", value); _poCampaignscheduledate = value; }
        }
        private DateTime? _poCampaignscheduledate;

		[CrmProperty(LogicalName = "po_campaignscheduledname")]
        public virtual string PoCampaignscheduledName
        {
            get { FillData(); return _poCampaignscheduledName; }
            set {  _poCampaignscheduledName = value; }
        }
        private string _poCampaignscheduledName;

		[CrmProperty(LogicalName = "po_campaignscheduling")]
        public virtual bool? PoCampaignscheduling
        {
            get { FillData(); return _poCampaignscheduling; }
            set { SetValue<bool?>("po_campaignscheduling", value); _poCampaignscheduling = value; }
        }
        private bool? _poCampaignscheduling;

		[CrmProperty(LogicalName = "po_campaignschedulingname")]
        public virtual string PoCampaignschedulingName
        {
            get { FillData(); return _poCampaignschedulingName; }
            set {  _poCampaignschedulingName = value; }
        }
        private string _poCampaignschedulingName;

		[CrmProperty(LogicalName = "po_campaignsending")]
        public virtual bool? PoCampaignsending
        {
            get { FillData(); return _poCampaignsending; }
            set { SetValue<bool?>("po_campaignsending", value); _poCampaignsending = value; }
        }
        private bool? _poCampaignsending;

		[CrmProperty(LogicalName = "po_campaignsendingname")]
        public virtual string PoCampaignsendingName
        {
            get { FillData(); return _poCampaignsendingName; }
            set {  _poCampaignsendingName = value; }
        }
        private string _poCampaignsendingName;

		[CrmProperty(LogicalName = "po_campaignsent")]
        public virtual bool? PoCampaignsent
        {
            get { FillData(); return _poCampaignsent; }
            set { SetValue<bool?>("po_campaignsent", value); _poCampaignsent = value; }
        }
        private bool? _poCampaignsent;

		[CrmProperty(LogicalName = "po_campaignsentname")]
        public virtual string PoCampaignsentName
        {
            get { FillData(); return _poCampaignsentName; }
            set {  _poCampaignsentName = value; }
        }
        private string _poCampaignsentName;

		[CrmProperty(LogicalName = "po_campaignstatus")]
        public virtual string PoCampaignstatus
        {
            get { FillData(); return _poCampaignstatus; }
            set { SetValue<string>("po_campaignstatus", value); _poCampaignstatus = value; }
        }
        private string _poCampaignstatus;

		[CrmProperty(LogicalName = "po_clicks")]
        public virtual int? PoClicks
        {
            get { FillData(); return _poClicks; }
            set { SetValue<int?>("po_clicks", value); _poClicks = value; }
        }
        private int? _poClicks;

		[CrmProperty(LogicalName = "po_complaints")]
        public virtual int? PoComplaints
        {
            get { FillData(); return _poComplaints; }
            set { SetValue<int?>("po_complaints", value); _poComplaints = value; }
        }
        private int? _poComplaints;

		[CrmProperty(LogicalName = "po_ecommerce360tracking")]
        public virtual bool? PoEcommerce360tracking
        {
            get { FillData(); return _poEcommerce360tracking; }
            set { SetValue<bool?>("po_ecommerce360tracking", value); _poEcommerce360tracking = value; }
        }
        private bool? _poEcommerce360tracking;

		[CrmProperty(LogicalName = "po_ecommerce360trackingname")]
        public virtual string PoEcommerce360trackingName
        {
            get { FillData(); return _poEcommerce360trackingName; }
            set {  _poEcommerce360trackingName = value; }
        }
        private string _poEcommerce360trackingName;

		[CrmProperty(LogicalName = "po_fromemail")]
        public virtual string PoFromeMail
        {
            get { FillData(); return _poFromeMail; }
            set { SetValue<string>("po_fromemail", value); _poFromeMail = value; }
        }
        private string _poFromeMail;

		[CrmProperty(LogicalName = "po_fromname")]
        public virtual string PoFromName
        {
            get { FillData(); return _poFromName; }
            set { SetValue<string>("po_fromname", value); _poFromName = value; }
        }
        private string _poFromName;

		[CrmProperty(LogicalName = "po_integratetofacebook")]
        public virtual string PoIntegratetofacebook
        {
            get { FillData(); return _poIntegratetofacebook; }
            set { SetValue<string>("po_integratetofacebook", value); _poIntegratetofacebook = value; }
        }
        private string _poIntegratetofacebook;

		[CrmProperty(LogicalName = "po_mailchimpcampaignid")]
        public virtual Guid PoMailchimpcampaignId
        {
            get { FillData(); return _poMailchimpcampaignId; }
            set {  _poMailchimpcampaignId = value; }
        }
        private Guid _poMailchimpcampaignId;

		[CrmProperty(LogicalName = "po_mailchimp_campaignid")]
        public virtual string PoMailchimpCampaignid
        {
            get { FillData(); return _poMailchimpCampaignid; }
            set { SetValue<string>("po_mailchimp_campaignid", value); _poMailchimpCampaignid = value; }
        }
        private string _poMailchimpCampaignid;

		[CrmProperty(LogicalName = "po_mailchimptemplate")]
        public virtual string PoMailchimptemplate
        {
            get { FillData(); return _poMailchimptemplate; }
            set { SetValue<string>("po_mailchimptemplate", value); _poMailchimptemplate = value; }
        }
        private string _poMailchimptemplate;

		[CrmProperty(LogicalName = "po_mailchimptemplateid")]
        public virtual int? PoMailchimptemplateid
        {
            get { FillData(); return _poMailchimptemplateid; }
            set { SetValue<int?>("po_mailchimptemplateid", value); _poMailchimptemplateid = value; }
        }
        private int? _poMailchimptemplateid;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_open")]
        public virtual int? PoOpen
        {
            get { FillData(); return _poOpen; }
            set { SetValue<int?>("po_open", value); _poOpen = value; }
        }
        private int? _poOpen;

		[CrmProperty(LogicalName = "po_plaintextemail")]
        public virtual string PoPlaintextemail
        {
            get { FillData(); return _poPlaintextemail; }
            set { SetValue<string>("po_plaintextemail", value); _poPlaintextemail = value; }
        }
        private string _poPlaintextemail;

		[CrmProperty(LogicalName = "po_send")]
        public virtual int? PoSend
        {
            get { FillData(); return _poSend; }
            set { SetValue<int?>("po_send", value); _poSend = value; }
        }
        private int? _poSend;

		[CrmProperty(LogicalName = "po_sendtotwitter")]
        public virtual bool? PoSendtotwitter
        {
            get { FillData(); return _poSendtotwitter; }
            set { SetValue<bool?>("po_sendtotwitter", value); _poSendtotwitter = value; }
        }
        private bool? _poSendtotwitter;

		[CrmProperty(LogicalName = "po_sendtotwittername")]
        public virtual string PoSendtotwitterName
        {
            get { FillData(); return _poSendtotwitterName; }
            set {  _poSendtotwitterName = value; }
        }
        private string _poSendtotwitterName;

		[CrmProperty(LogicalName = "po_sentdate")]
        public virtual DateTime? PoSentdate
        {
            get { FillData(); return _poSentdate; }
            set { SetValue<DateTime?>("po_sentdate", value); _poSentdate = value; }
        }
        private DateTime? _poSentdate;

		[CrmProperty(LogicalName = "po_subject")]
        public virtual string PoSubject
        {
            get { FillData(); return _poSubject; }
            set { SetValue<string>("po_subject", value); _poSubject = value; }
        }
        private string _poSubject;

		[CrmProperty(LogicalName = "po_successfuldeliveries")]
        public virtual int? PoSuccessfuldeliveries
        {
            get { FillData(); return _poSuccessfuldeliveries; }
            set { SetValue<int?>("po_successfuldeliveries", value); _poSuccessfuldeliveries = value; }
        }
        private int? _poSuccessfuldeliveries;

		[CrmProperty(LogicalName = "po_syncdate")]
        public virtual DateTime? PoSyncdate
        {
            get { FillData(); return _poSyncdate; }
            set { SetValue<DateTime?>("po_syncdate", value); _poSyncdate = value; }
        }
        private DateTime? _poSyncdate;

		[CrmProperty(LogicalName = "po_syncedcount")]
        public virtual int? PoSyncedcount
        {
            get { FillData(); return _poSyncedcount; }
            set { SetValue<int?>("po_syncedcount", value); _poSyncedcount = value; }
        }
        private int? _poSyncedcount;

		[CrmProperty(LogicalName = "po_titleforcampaigningoogleanalytics")]
        public virtual string PoTitleforcampaigningoogleanalytics
        {
            get { FillData(); return _poTitleforcampaigningoogleanalytics; }
            set { SetValue<string>("po_titleforcampaigningoogleanalytics", value); _poTitleforcampaigningoogleanalytics = value; }
        }
        private string _poTitleforcampaigningoogleanalytics;

		[CrmProperty(LogicalName = "po_totalclicks")]
        public virtual int? PoTotalclicks
        {
            get { FillData(); return _poTotalclicks; }
            set { SetValue<int?>("po_totalclicks", value); _poTotalclicks = value; }
        }
        private int? _poTotalclicks;

		[CrmProperty(LogicalName = "po_totaltimesopened")]
        public virtual int? PoTotaltimesopened
        {
            get { FillData(); return _poTotaltimesopened; }
            set { SetValue<int?>("po_totaltimesopened", value); _poTotaltimesopened = value; }
        }
        private int? _poTotaltimesopened;

		[CrmProperty(LogicalName = "po_trackclick")]
        public virtual bool? PoTrackClick
        {
            get { FillData(); return _poTrackClick; }
            set { SetValue<bool?>("po_trackclick", value); _poTrackClick = value; }
        }
        private bool? _poTrackClick;

		[CrmProperty(LogicalName = "po_trackclickname")]
        public virtual string PoTrackclickName
        {
            get { FillData(); return _poTrackclickName; }
            set {  _poTrackclickName = value; }
        }
        private string _poTrackclickName;

		[CrmProperty(LogicalName = "po_trackopens")]
        public virtual bool? PoTrackOpens
        {
            get { FillData(); return _poTrackOpens; }
            set { SetValue<bool?>("po_trackopens", value); _poTrackOpens = value; }
        }
        private bool? _poTrackOpens;

		[CrmProperty(LogicalName = "po_trackopensname")]
        public virtual string PoTrackopensName
        {
            get { FillData(); return _poTrackopensName; }
            set {  _poTrackopensName = value; }
        }
        private string _poTrackopensName;

		[CrmProperty(LogicalName = "po_trackplaintextclicks")]
        public virtual bool? PoTrackplaintextclicks
        {
            get { FillData(); return _poTrackplaintextclicks; }
            set { SetValue<bool?>("po_trackplaintextclicks", value); _poTrackplaintextclicks = value; }
        }
        private bool? _poTrackplaintextclicks;

		[CrmProperty(LogicalName = "po_trackplaintextclicksname")]
        public virtual string PoTrackplaintextclicksName
        {
            get { FillData(); return _poTrackplaintextclicksName; }
            set {  _poTrackplaintextclicksName = value; }
        }
        private string _poTrackplaintextclicksName;

		[CrmProperty(LogicalName = "po_unopened")]
        public virtual int? PoUnopened
        {
            get { FillData(); return _poUnopened; }
            set { SetValue<int?>("po_unopened", value); _poUnopened = value; }
        }
        private int? _poUnopened;

		[CrmProperty(LogicalName = "po_unsubscribers")]
        public virtual int? PoUnsubscribers
        {
            get { FillData(); return _poUnsubscribers; }
            set { SetValue<int?>("po_unsubscribers", value); _poUnsubscribers = value; }
        }
        private int? _poUnsubscribers;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_mailchimplistsync", PrimaryKey = "po_mailchimplistsyncid")]
	public partial class PoMailchimplistsync : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_mailchimplistsync";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoAddcount = "po_addcount";
			public const string PoErrorcount = "po_errorcount";
			public const string PoMailchimplistsyncId = "po_mailchimplistsyncid";
			public const string PoMarketinglistid = "po_marketinglistid";
			public const string PoMarketinglistidName = "po_marketinglistidname";
			public const string PoName = "po_name";
			public const string PoResult = "po_result";
			public const string PoSyncendtime = "po_syncendtime";
			public const string PoSyncstarttime = "po_syncstarttime";
			public const string PoUpdatecount = "po_updatecount";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoMailchimplistsyncId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_addcount")]
        public virtual int? PoAddcount
        {
            get { FillData(); return _poAddcount; }
            set { SetValue<int?>("po_addcount", value); _poAddcount = value; }
        }
        private int? _poAddcount;

		[CrmProperty(LogicalName = "po_errorcount")]
        public virtual int? PoErrorcount
        {
            get { FillData(); return _poErrorcount; }
            set { SetValue<int?>("po_errorcount", value); _poErrorcount = value; }
        }
        private int? _poErrorcount;

		[CrmProperty(LogicalName = "po_mailchimplistsyncid")]
        public virtual Guid PoMailchimplistsyncId
        {
            get { FillData(); return _poMailchimplistsyncId; }
            set {  _poMailchimplistsyncId = value; }
        }
        private Guid _poMailchimplistsyncId;

		[CrmProperty(LogicalName = "po_marketinglistid", IsLookup = true)]
        public virtual Guid? PoMarketinglistid
        {
            get { FillData(); return _poMarketinglistid; }
            set { SetLookup("po_marketinglistid", "list", value); _poMarketinglistid = value; }
        }
        private Guid? _poMarketinglistid;

		[CrmProperty(LogicalName = "po_marketinglistidname")]
        public virtual string PoMarketinglistidName
        {
            get { FillData(); return _poMarketinglistidName; }
            set {  _poMarketinglistidName = value; }
        }
        private string _poMarketinglistidName;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_result")]
        public virtual string PoResult
        {
            get { FillData(); return _poResult; }
            set { SetValue<string>("po_result", value); _poResult = value; }
        }
        private string _poResult;

		[CrmProperty(LogicalName = "po_syncendtime")]
        public virtual DateTime? PoSyncendtime
        {
            get { FillData(); return _poSyncendtime; }
            set { SetValue<DateTime?>("po_syncendtime", value); _poSyncendtime = value; }
        }
        private DateTime? _poSyncendtime;

		[CrmProperty(LogicalName = "po_syncstarttime")]
        public virtual DateTime? PoSyncstarttime
        {
            get { FillData(); return _poSyncstarttime; }
            set { SetValue<DateTime?>("po_syncstarttime", value); _poSyncstarttime = value; }
        }
        private DateTime? _poSyncstarttime;

		[CrmProperty(LogicalName = "po_updatecount")]
        public virtual int? PoUpdatecount
        {
            get { FillData(); return _poUpdatecount; }
            set { SetValue<int?>("po_updatecount", value); _poUpdatecount = value; }
        }
        private int? _poUpdatecount;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_mailchimpsyncerror", PrimaryKey = "po_mailchimpsyncerrorid")]
	public partial class PoMailchimpsyncerror : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_mailchimpsyncerror";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoCode = "po_code";
			public const string PoEmail = "po_email";
			public const string PoMailchimplistsyncid = "po_mailchimplistsyncid";
			public const string PoMailchimplistsyncidName = "po_mailchimplistsyncidname";
			public const string PoMailchimpsyncerrorId = "po_mailchimpsyncerrorid";
			public const string PoMessage = "po_message";
			public const string PoName = "po_name";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoMailchimpsyncerrorId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_code")]
        public virtual string PoCode
        {
            get { FillData(); return _poCode; }
            set { SetValue<string>("po_code", value); _poCode = value; }
        }
        private string _poCode;

		[CrmProperty(LogicalName = "po_email")]
        public virtual string PoEmail
        {
            get { FillData(); return _poEmail; }
            set { SetValue<string>("po_email", value); _poEmail = value; }
        }
        private string _poEmail;

		[CrmProperty(LogicalName = "po_mailchimplistsyncid", IsLookup = true)]
        public virtual Guid? PoMailchimplistsyncid
        {
            get { FillData(); return _poMailchimplistsyncid; }
            set { SetLookup("po_mailchimplistsyncid", "po_mailchimplistsync", value); _poMailchimplistsyncid = value; }
        }
        private Guid? _poMailchimplistsyncid;

		[CrmProperty(LogicalName = "po_mailchimplistsyncidname")]
        public virtual string PoMailchimplistsyncidName
        {
            get { FillData(); return _poMailchimplistsyncidName; }
            set {  _poMailchimplistsyncidName = value; }
        }
        private string _poMailchimplistsyncidName;

		[CrmProperty(LogicalName = "po_mailchimpsyncerrorid")]
        public virtual Guid PoMailchimpsyncerrorId
        {
            get { FillData(); return _poMailchimpsyncerrorId; }
            set {  _poMailchimpsyncerrorId = value; }
        }
        private Guid _poMailchimpsyncerrorId;

		[CrmProperty(LogicalName = "po_message")]
        public virtual string PoMessage
        {
            get { FillData(); return _poMessage; }
            set { SetValue<string>("po_message", value); _poMessage = value; }
        }
        private string _poMessage;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_mergetags", PrimaryKey = "po_mergetagsid")]
	public partial class PoMergetags : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_mergetags";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoAttributetype = "po_attributetype";
			public const string PoEntitytype = "po_entitytype";
			public const string PoFieldname = "po_fieldname";
			public const string PoMailchimplistid = "po_mailchimplistid";
			public const string PoMergetag = "po_mergetag";
			public const string PoMergetagsId = "po_mergetagsid";
			public const string PoName = "po_name";
			public const string PoSchemaname = "po_schemaname";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoMergetagsId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_attributetype")]
        public virtual string PoAttributetype
        {
            get { FillData(); return _poAttributetype; }
            set { SetValue<string>("po_attributetype", value); _poAttributetype = value; }
        }
        private string _poAttributetype;

		[CrmProperty(LogicalName = "po_entitytype")]
        public virtual string PoEntitytype
        {
            get { FillData(); return _poEntitytype; }
            set { SetValue<string>("po_entitytype", value); _poEntitytype = value; }
        }
        private string _poEntitytype;

		[CrmProperty(LogicalName = "po_fieldname")]
        public virtual string PoFieldname
        {
            get { FillData(); return _poFieldname; }
            set { SetValue<string>("po_fieldname", value); _poFieldname = value; }
        }
        private string _poFieldname;

		[CrmProperty(LogicalName = "po_mailchimplistid")]
        public virtual string PoMailchimplistid
        {
            get { FillData(); return _poMailchimplistid; }
            set { SetValue<string>("po_mailchimplistid", value); _poMailchimplistid = value; }
        }
        private string _poMailchimplistid;

		[CrmProperty(LogicalName = "po_mergetag")]
        public virtual string PoMergetag
        {
            get { FillData(); return _poMergetag; }
            set { SetValue<string>("po_mergetag", value); _poMergetag = value; }
        }
        private string _poMergetag;

		[CrmProperty(LogicalName = "po_mergetagsid")]
        public virtual Guid PoMergetagsId
        {
            get { FillData(); return _poMergetagsId; }
            set {  _poMergetagsId = value; }
        }
        private Guid _poMergetagsId;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_schemaname")]
        public virtual string PoSchemaname
        {
            get { FillData(); return _poSchemaname; }
            set { SetValue<string>("po_schemaname", value); _poSchemaname = value; }
        }
        private string _poSchemaname;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_po_mailchimpcampaign_list", PrimaryKey = "po_po_mailchimpcampaign_listid")]
	public partial class PoPoMailchimpcampaignList : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "po_po_mailchimpcampaign_list";
			
			public const string Listid = "listid";
			public const string PoMailchimpcampaignid = "po_mailchimpcampaignid";
			public const string PoPoMailchimpcampaignListId = "po_po_mailchimpcampaign_listid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoPoMailchimpcampaignListId; }
		}

		[CrmProperty(LogicalName = "listid")]
        public virtual Guid? Listid
        {
            get { FillData(); return _listid; }
            set {  _listid = value; }
        }
        private Guid? _listid;

		[CrmProperty(LogicalName = "po_mailchimpcampaignid")]
        public virtual Guid? PoMailchimpcampaignid
        {
            get { FillData(); return _poMailchimpcampaignid; }
            set {  _poMailchimpcampaignid = value; }
        }
        private Guid? _poMailchimpcampaignid;

		[CrmProperty(LogicalName = "po_po_mailchimpcampaign_listid")]
        public virtual Guid PoPoMailchimpcampaignListId
        {
            get { FillData(); return _poPoMailchimpcampaignListId; }
            set {  _poPoMailchimpcampaignListId = value; }
        }
        private Guid _poPoMailchimpcampaignListId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_powerchimpconfiguration", PrimaryKey = "po_powerchimpconfigurationid")]
	public partial class PoPowerchimpconfiguration : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_powerchimpconfiguration";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoName = "po_name";
			public const string PoPowerchimpconfigurationId = "po_powerchimpconfigurationid";
			public const string PoValue = "po_value";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoPowerchimpconfigurationId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_powerchimpconfigurationid")]
        public virtual Guid PoPowerchimpconfigurationId
        {
            get { FillData(); return _poPowerchimpconfigurationId; }
            set {  _poPowerchimpconfigurationId = value; }
        }
        private Guid _poPowerchimpconfigurationId;

		[CrmProperty(LogicalName = "po_value")]
        public virtual string PoValue
        {
            get { FillData(); return _poValue; }
            set { SetValue<string>("po_value", value); _poValue = value; }
        }
        private string _poValue;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_powerchimplogger", PrimaryKey = "po_powerchimploggerid")]
	public partial class PoPowerchimplogger : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_powerchimplogger";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoLevel = "po_level";
			public const string PoMessage = "po_message";
			public const string PoName = "po_name";
			public const string PoPowerchimploggerId = "po_powerchimploggerid";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoPowerchimploggerId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_level")]
        public virtual string PoLevel
        {
            get { FillData(); return _poLevel; }
            set { SetValue<string>("po_level", value); _poLevel = value; }
        }
        private string _poLevel;

		[CrmProperty(LogicalName = "po_message")]
        public virtual string PoMessage
        {
            get { FillData(); return _poMessage; }
            set { SetValue<string>("po_message", value); _poMessage = value; }
        }
        private string _poMessage;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_powerchimploggerid")]
        public virtual Guid PoPowerchimploggerId
        {
            get { FillData(); return _poPowerchimploggerId; }
            set {  _poPowerchimploggerId = value; }
        }
        private Guid _poPowerchimploggerId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_powersurveyconfiguration", PrimaryKey = "po_powersurveyconfigurationid")]
	public partial class PoPowersurveyconfiguration : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_powersurveyconfiguration";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PoName = "po_name";
			public const string PoPowersurveyconfigurationId = "po_powersurveyconfigurationid";
			public const string PoValue = "po_value";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoPowersurveyconfigurationId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_powersurveyconfigurationid")]
        public virtual Guid PoPowersurveyconfigurationId
        {
            get { FillData(); return _poPowersurveyconfigurationId; }
            set {  _poPowersurveyconfigurationId = value; }
        }
        private Guid _poPowersurveyconfigurationId;

		[CrmProperty(LogicalName = "po_value")]
        public virtual string PoValue
        {
            get { FillData(); return _poValue; }
            set { SetValue<string>("po_value", value); _poValue = value; }
        }
        private string _poValue;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_powersurvey_log", PrimaryKey = "po_powersurvey_logid")]
	public partial class PoPowersurveyLog : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_powersurvey_log";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PoLevel = "po_level";
			public const string PoMessage = "po_message";
			public const string PoName = "po_name";
			public const string PoPowersurveyLogId = "po_powersurvey_logid";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoPowersurveyLogId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "po_level")]
        public virtual string PoLevel
        {
            get { FillData(); return _poLevel; }
            set { SetValue<string>("po_level", value); _poLevel = value; }
        }
        private string _poLevel;

		[CrmProperty(LogicalName = "po_message")]
        public virtual string PoMessage
        {
            get { FillData(); return _poMessage; }
            set { SetValue<string>("po_message", value); _poMessage = value; }
        }
        private string _poMessage;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_powersurvey_logid")]
        public virtual Guid PoPowersurveyLogId
        {
            get { FillData(); return _poPowersurveyLogId; }
            set {  _poPowersurveyLogId = value; }
        }
        private Guid _poPowersurveyLogId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_powersurveymapped", PrimaryKey = "po_powersurveymappedid")]
	public partial class PoPowersurveymapped : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_powersurveymapped";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoEmailaddress = "po_emailaddress";
			public const string PoEntitylogicalname = "po_entitylogicalname";
			public const string PoName = "po_name";
			public const string PoPowersurveymappedId = "po_powersurveymappedid";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoPowersurveymappedId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_emailaddress")]
        public virtual string PoEmailaddress
        {
            get { FillData(); return _poEmailaddress; }
            set { SetValue<string>("po_emailaddress", value); _poEmailaddress = value; }
        }
        private string _poEmailaddress;

		[CrmProperty(LogicalName = "po_entitylogicalname")]
        public virtual string PoEntitylogicalname
        {
            get { FillData(); return _poEntitylogicalname; }
            set { SetValue<string>("po_entitylogicalname", value); _poEntitylogicalname = value; }
        }
        private string _poEntitylogicalname;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_powersurveymappedid")]
        public virtual Guid PoPowersurveymappedId
        {
            get { FillData(); return _poPowersurveymappedId; }
            set {  _poPowersurveymappedId = value; }
        }
        private Guid _poPowersurveymappedId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_satisfactionanswer", PrimaryKey = "po_satisfactionanswerid")]
	public partial class PoSatisfactionanswer : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_satisfactionanswer";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoAnswer = "po_answer";
			public const string PoAnswerdate = "po_answerdate";
			public const string PoAnswerdecimal = "po_answerdecimal";
			public const string PoName = "po_name";
			public const string PoQuestionId = "po_questionid";
			public const string PoQuestionIdName = "po_questionidname";
			public const string PoSatisfactionanswerId = "po_satisfactionanswerid";
			public const string PoSurveyActivityId = "po_surveyactivityid";
			public const string PoSurveyActivityIdName = "po_surveyactivityidname";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoSatisfactionanswerId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_answer")]
        public virtual string PoAnswer
        {
            get { FillData(); return _poAnswer; }
            set { SetValue<string>("po_answer", value); _poAnswer = value; }
        }
        private string _poAnswer;

		[CrmProperty(LogicalName = "po_answerdate")]
        public virtual DateTime? PoAnswerdate
        {
            get { FillData(); return _poAnswerdate; }
            set { SetValue<DateTime?>("po_answerdate", value); _poAnswerdate = value; }
        }
        private DateTime? _poAnswerdate;

		[CrmProperty(LogicalName = "po_answerdecimal")]
        public virtual decimal? PoAnswerdecimal
        {
            get { FillData(); return _poAnswerdecimal; }
            set { SetValue<decimal?>("po_answerdecimal", value); _poAnswerdecimal = value; }
        }
        private decimal? _poAnswerdecimal;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_questionid", IsLookup = true)]
        public virtual Guid? PoQuestionId
        {
            get { FillData(); return _poQuestionId; }
            set { SetLookup("po_questionid", "po_survey_question", value); _poQuestionId = value; }
        }
        private Guid? _poQuestionId;

		[CrmProperty(LogicalName = "po_questionidname")]
        public virtual string PoQuestionIdName
        {
            get { FillData(); return _poQuestionIdName; }
            set {  _poQuestionIdName = value; }
        }
        private string _poQuestionIdName;

		[CrmProperty(LogicalName = "po_satisfactionanswerid")]
        public virtual Guid PoSatisfactionanswerId
        {
            get { FillData(); return _poSatisfactionanswerId; }
            set {  _poSatisfactionanswerId = value; }
        }
        private Guid _poSatisfactionanswerId;

		[CrmProperty(LogicalName = "po_surveyactivityid", IsLookup = true)]
        public virtual Guid? PoSurveyActivityId
        {
            get { FillData(); return _poSurveyActivityId; }
            set { SetLookup("po_surveyactivityid", "po_surveyactivity", value); _poSurveyActivityId = value; }
        }
        private Guid? _poSurveyActivityId;

		[CrmProperty(LogicalName = "po_surveyactivityidname")]
        public virtual string PoSurveyActivityIdName
        {
            get { FillData(); return _poSurveyActivityIdName; }
            set {  _poSurveyActivityIdName = value; }
        }
        private string _poSurveyActivityIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_satisfactionsurvey", PrimaryKey = "po_satisfactionsurveyid")]
	public partial class PoSatisfactionsurvey : CrmEntity
	{
		public class Enums
		{
			public enum PoStyleSheetCSS 
			{
				[CrmPicklist(DisplayName = "Blue (Fix)", Value = 1)]BlueFix = 1,
				[CrmPicklist(DisplayName = "Blue (Resize)", Value = 6)]BlueResize = 6,
				[CrmPicklist(DisplayName = "Gray (Fix)", Value = 2)]GrayFix = 2,
				[CrmPicklist(DisplayName = "Gray (Resize)", Value = 7)]GrayResize = 7,
				[CrmPicklist(DisplayName = "Glitter (Fix)", Value = 3)]GlitterFix = 3,
				[CrmPicklist(DisplayName = "Gitter (Resize)", Value = 8)]GitterResize = 8,
				[CrmPicklist(DisplayName = "Smokey White (Fix)", Value = 4)]SmokeyWhiteFix = 4,
				[CrmPicklist(DisplayName = "Smokey White (Resize)", Value = 9)]SmokeyWhiteResize = 9,
				[CrmPicklist(DisplayName = "Columbia Blue (Fix)", Value = 5)]ColumbiaBlueFix = 5,
				[CrmPicklist(DisplayName = "Columbia Blue (Resize)", Value = 10)]ColumbiaBlueResize = 10,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_satisfactionsurvey";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoCampaignId = "po_campaignid";
			public const string PoCampaignIdName = "po_campaignidname";
			public const string PoCss = "po_css";
			public const string PoEmailSubmitedSurveyTo = "po_emailsubmitedsurveyto";
			public const string PoFooter = "po_footer";
			public const string PoGreetng = "po_greetng";
			public const string PoHeader = "po_header";
			public const string PoImage = "po_image";
			public const string PoLinkToText = "po_linktotext";
			public const string PoLinkToWebsite = "po_linktowebsite";
			public const string PoName = "po_name";
			public const string PoNext = "po_next";
			public const string PoParagraph = "po_paragraph";
			public const string PoPrior = "po_prior";
			public const string PoQuestionperpage = "po_questionperpage";
			public const string PoSatisfactionsurveyId = "po_satisfactionsurveyid";
			public const string PoStyleSheetCSS = "po_stylesheetcss";
			public const string PoStylesheetcssName = "po_stylesheetcssname";
			public const string PoSubheader = "po_subheader";
			public const string PoSubmit = "po_submit";
			public const string PoSurveycompleted = "po_surveycompleted";
			public const string PoSurveyLink = "po_surveylink";
			public const string PoSurveytaken = "po_surveytaken";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoSatisfactionsurveyId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_campaignid", IsLookup = true)]
        public virtual Guid? PoCampaignId
        {
            get { FillData(); return _poCampaignId; }
            set { SetLookup("po_campaignid", "campaign", value); _poCampaignId = value; }
        }
        private Guid? _poCampaignId;

		[CrmProperty(LogicalName = "po_campaignidname")]
        public virtual string PoCampaignIdName
        {
            get { FillData(); return _poCampaignIdName; }
            set {  _poCampaignIdName = value; }
        }
        private string _poCampaignIdName;

		[CrmProperty(LogicalName = "po_css")]
        public virtual string PoCss
        {
            get { FillData(); return _poCss; }
            set { SetValue<string>("po_css", value); _poCss = value; }
        }
        private string _poCss;

		[CrmProperty(LogicalName = "po_emailsubmitedsurveyto")]
        public virtual string PoEmailSubmitedSurveyTo
        {
            get { FillData(); return _poEmailSubmitedSurveyTo; }
            set { SetValue<string>("po_emailsubmitedsurveyto", value); _poEmailSubmitedSurveyTo = value; }
        }
        private string _poEmailSubmitedSurveyTo;

		[CrmProperty(LogicalName = "po_footer")]
        public virtual string PoFooter
        {
            get { FillData(); return _poFooter; }
            set { SetValue<string>("po_footer", value); _poFooter = value; }
        }
        private string _poFooter;

		[CrmProperty(LogicalName = "po_greetng")]
        public virtual string PoGreetng
        {
            get { FillData(); return _poGreetng; }
            set { SetValue<string>("po_greetng", value); _poGreetng = value; }
        }
        private string _poGreetng;

		[CrmProperty(LogicalName = "po_header")]
        public virtual string PoHeader
        {
            get { FillData(); return _poHeader; }
            set { SetValue<string>("po_header", value); _poHeader = value; }
        }
        private string _poHeader;

		[CrmProperty(LogicalName = "po_image")]
        public virtual string PoImage
        {
            get { FillData(); return _poImage; }
            set { SetValue<string>("po_image", value); _poImage = value; }
        }
        private string _poImage;

		[CrmProperty(LogicalName = "po_linktotext")]
        public virtual string PoLinkToText
        {
            get { FillData(); return _poLinkToText; }
            set { SetValue<string>("po_linktotext", value); _poLinkToText = value; }
        }
        private string _poLinkToText;

		[CrmProperty(LogicalName = "po_linktowebsite")]
        public virtual string PoLinkToWebsite
        {
            get { FillData(); return _poLinkToWebsite; }
            set { SetValue<string>("po_linktowebsite", value); _poLinkToWebsite = value; }
        }
        private string _poLinkToWebsite;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_next")]
        public virtual string PoNext
        {
            get { FillData(); return _poNext; }
            set { SetValue<string>("po_next", value); _poNext = value; }
        }
        private string _poNext;

		[CrmProperty(LogicalName = "po_paragraph")]
        public virtual string PoParagraph
        {
            get { FillData(); return _poParagraph; }
            set { SetValue<string>("po_paragraph", value); _poParagraph = value; }
        }
        private string _poParagraph;

		[CrmProperty(LogicalName = "po_prior")]
        public virtual string PoPrior
        {
            get { FillData(); return _poPrior; }
            set { SetValue<string>("po_prior", value); _poPrior = value; }
        }
        private string _poPrior;

		[CrmProperty(LogicalName = "po_questionperpage")]
        public virtual int? PoQuestionperpage
        {
            get { FillData(); return _poQuestionperpage; }
            set { SetValue<int?>("po_questionperpage", value); _poQuestionperpage = value; }
        }
        private int? _poQuestionperpage;

		[CrmProperty(LogicalName = "po_satisfactionsurveyid")]
        public virtual Guid PoSatisfactionsurveyId
        {
            get { FillData(); return _poSatisfactionsurveyId; }
            set {  _poSatisfactionsurveyId = value; }
        }
        private Guid _poSatisfactionsurveyId;

		[CrmProperty(LogicalName = "po_stylesheetcss")]
        public virtual Enums.PoStyleSheetCSS? PoStyleSheetCSS
        {
            get { FillData(); return _poStyleSheetCSS; }
            set { SetPicklist("po_stylesheetcss", (int?)value); _poStyleSheetCSS = value; }
        }
        private Enums.PoStyleSheetCSS? _poStyleSheetCSS;

		[CrmProperty(LogicalName = "po_stylesheetcssname")]
        public virtual string PoStylesheetcssName
        {
            get { FillData(); return _poStylesheetcssName; }
            set {  _poStylesheetcssName = value; }
        }
        private string _poStylesheetcssName;

		[CrmProperty(LogicalName = "po_subheader")]
        public virtual string PoSubheader
        {
            get { FillData(); return _poSubheader; }
            set { SetValue<string>("po_subheader", value); _poSubheader = value; }
        }
        private string _poSubheader;

		[CrmProperty(LogicalName = "po_submit")]
        public virtual string PoSubmit
        {
            get { FillData(); return _poSubmit; }
            set { SetValue<string>("po_submit", value); _poSubmit = value; }
        }
        private string _poSubmit;

		[CrmProperty(LogicalName = "po_surveycompleted")]
        public virtual string PoSurveycompleted
        {
            get { FillData(); return _poSurveycompleted; }
            set { SetValue<string>("po_surveycompleted", value); _poSurveycompleted = value; }
        }
        private string _poSurveycompleted;

		[CrmProperty(LogicalName = "po_surveylink")]
        public virtual string PoSurveyLink
        {
            get { FillData(); return _poSurveyLink; }
            set { SetValue<string>("po_surveylink", value); _poSurveyLink = value; }
        }
        private string _poSurveyLink;

		[CrmProperty(LogicalName = "po_surveytaken")]
        public virtual string PoSurveytaken
        {
            get { FillData(); return _poSurveytaken; }
            set { SetValue<string>("po_surveytaken", value); _poSurveytaken = value; }
        }
        private string _poSurveytaken;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_surveyactivity", PrimaryKey = "activityid")]
	public partial class PoSurveyactivity : CrmEntity
	{
		public class Enums
		{
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Unable to Deliver", Value = 936710000)]UnableToDeliver = 936710000,
				[CrmPicklist(DisplayName = "Scheduled", Value = 4)]Scheduled = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_surveyactivity";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BCC = "bcc";
			public const string CC = "cc";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customers = "customers";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LeftVoiceMail = "leftvoicemail";
			public const string LeftVoiceMailName = "leftvoicemailname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Partners = "partners";
			public const string PoProcessed = "po_processed";
			public const string PoProcessedName = "po_processedname";
			public const string PoResponseQuestionAnswer = "po_responsequestionanswer";
			public const string PoSurveycompleted = "po_surveycompleted";
			public const string PoSurveyId = "po_surveyid";
			public const string PoSurveyIdName = "po_surveyidname";
			public const string PoSurveysent = "po_surveysent";
			public const string PoToemail = "po_toemail";
			public const string PoToname = "po_toname";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "bcc")]
        public virtual object BCC
        {
            get { FillData(); return _bCC; }
            set {  _bCC = value; }
        }
        private object _bCC;

		[CrmProperty(LogicalName = "cc")]
        public virtual object CC
        {
            get { FillData(); return _cC; }
            set {  _cC = value; }
        }
        private object _cC;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customers")]
        public virtual object Customers
        {
            get { FillData(); return _customers; }
            set {  _customers = value; }
        }
        private object _customers;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "ismapiprivate")]
        public virtual bool? IsMapiPrivate
        {
            get { FillData(); return _isMapiPrivate; }
            set { SetValue<bool?>("ismapiprivate", value); _isMapiPrivate = value; }
        }
        private bool? _isMapiPrivate;

		[CrmProperty(LogicalName = "ismapiprivatename")]
        public virtual string IsMapiPrivateName
        {
            get { FillData(); return _isMapiPrivateName; }
            set {  _isMapiPrivateName = value; }
        }
        private string _isMapiPrivateName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "leftvoicemail")]
        public virtual bool? LeftVoiceMail
        {
            get { FillData(); return _leftVoiceMail; }
            set { SetValue<bool?>("leftvoicemail", value); _leftVoiceMail = value; }
        }
        private bool? _leftVoiceMail;

		[CrmProperty(LogicalName = "leftvoicemailname")]
        public virtual string LeftVoiceMailName
        {
            get { FillData(); return _leftVoiceMailName; }
            set {  _leftVoiceMailName = value; }
        }
        private string _leftVoiceMailName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "optionalattendees")]
        public virtual object OptionalAttendees
        {
            get { FillData(); return _optionalAttendees; }
            set {  _optionalAttendees = value; }
        }
        private object _optionalAttendees;

		[CrmProperty(LogicalName = "organizer")]
        public virtual object Organizer
        {
            get { FillData(); return _organizer; }
            set {  _organizer = value; }
        }
        private object _organizer;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "partners")]
        public virtual object Partners
        {
            get { FillData(); return _partners; }
            set {  _partners = value; }
        }
        private object _partners;

		[CrmProperty(LogicalName = "po_processed")]
        public virtual bool? PoProcessed
        {
            get { FillData(); return _poProcessed; }
            set { SetValue<bool?>("po_processed", value); _poProcessed = value; }
        }
        private bool? _poProcessed;

		[CrmProperty(LogicalName = "po_processedname")]
        public virtual string PoProcessedName
        {
            get { FillData(); return _poProcessedName; }
            set {  _poProcessedName = value; }
        }
        private string _poProcessedName;

		[CrmProperty(LogicalName = "po_responsequestionanswer")]
        public virtual string PoResponseQuestionAnswer
        {
            get { FillData(); return _poResponseQuestionAnswer; }
            set { SetValue<string>("po_responsequestionanswer", value); _poResponseQuestionAnswer = value; }
        }
        private string _poResponseQuestionAnswer;

		[CrmProperty(LogicalName = "po_surveycompleted")]
        public virtual DateTime? PoSurveycompleted
        {
            get { FillData(); return _poSurveycompleted; }
            set { SetValue<DateTime?>("po_surveycompleted", value); _poSurveycompleted = value; }
        }
        private DateTime? _poSurveycompleted;

		[CrmProperty(LogicalName = "po_surveyid", IsLookup = true)]
        public virtual Guid? PoSurveyId
        {
            get { FillData(); return _poSurveyId; }
            set { SetLookup("po_surveyid", "po_satisfactionsurvey", value); _poSurveyId = value; }
        }
        private Guid? _poSurveyId;

		[CrmProperty(LogicalName = "po_surveyidname")]
        public virtual string PoSurveyIdName
        {
            get { FillData(); return _poSurveyIdName; }
            set {  _poSurveyIdName = value; }
        }
        private string _poSurveyIdName;

		[CrmProperty(LogicalName = "po_surveysent")]
        public virtual DateTime? PoSurveysent
        {
            get { FillData(); return _poSurveysent; }
            set { SetValue<DateTime?>("po_surveysent", value); _poSurveysent = value; }
        }
        private DateTime? _poSurveysent;

		[CrmProperty(LogicalName = "po_toemail")]
        public virtual string PoToemail
        {
            get { FillData(); return _poToemail; }
            set { SetValue<string>("po_toemail", value); _poToemail = value; }
        }
        private string _poToemail;

		[CrmProperty(LogicalName = "po_toname")]
        public virtual string PoToname
        {
            get { FillData(); return _poToname; }
            set { SetValue<string>("po_toname", value); _poToname = value; }
        }
        private string _poToname;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set { SetValue<string>("regardingobjectidname", value); _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set { SetValue<string>("regardingobjectidyominame", value); _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "requiredattendees")]
        public virtual object RequiredAttendees
        {
            get { FillData(); return _requiredAttendees; }
            set {  _requiredAttendees = value; }
        }
        private object _requiredAttendees;

		[CrmProperty(LogicalName = "resources")]
        public virtual object Resources
        {
            get { FillData(); return _resources; }
            set {  _resources = value; }
        }
        private object _resources;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesid")]
        public virtual Guid? SeriesId
        {
            get { FillData(); return _seriesId; }
            set {  _seriesId = value; }
        }
        private Guid? _seriesId;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidname")]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_surveyquestion", PrimaryKey = "po_surveyquestionid")]
	public partial class PoSurveyquestion : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_surveyquestion";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoDisplayorder = "po_displayorder";
			public const string PoName = "po_name";
			public const string PoQuestionId = "po_questionid";
			public const string PoQuestionIdName = "po_questionidname";
			public const string PoSatisfactionSurveyId = "po_satisfactionsurveyid";
			public const string PoSatisfactionSurveyIdName = "po_satisfactionsurveyidname";
			public const string PoSurveyquestionId = "po_surveyquestionid";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoSurveyquestionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_displayorder")]
        public virtual int? PoDisplayorder
        {
            get { FillData(); return _poDisplayorder; }
            set { SetValue<int?>("po_displayorder", value); _poDisplayorder = value; }
        }
        private int? _poDisplayorder;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_questionid", IsLookup = true)]
        public virtual Guid? PoQuestionId
        {
            get { FillData(); return _poQuestionId; }
            set { SetLookup("po_questionid", "po_survey_question", value); _poQuestionId = value; }
        }
        private Guid? _poQuestionId;

		[CrmProperty(LogicalName = "po_questionidname")]
        public virtual string PoQuestionIdName
        {
            get { FillData(); return _poQuestionIdName; }
            set {  _poQuestionIdName = value; }
        }
        private string _poQuestionIdName;

		[CrmProperty(LogicalName = "po_satisfactionsurveyid", IsLookup = true)]
        public virtual Guid? PoSatisfactionSurveyId
        {
            get { FillData(); return _poSatisfactionSurveyId; }
            set { SetLookup("po_satisfactionsurveyid", "po_satisfactionsurvey", value); _poSatisfactionSurveyId = value; }
        }
        private Guid? _poSatisfactionSurveyId;

		[CrmProperty(LogicalName = "po_satisfactionsurveyidname")]
        public virtual string PoSatisfactionSurveyIdName
        {
            get { FillData(); return _poSatisfactionSurveyIdName; }
            set {  _poSatisfactionSurveyIdName = value; }
        }
        private string _poSatisfactionSurveyIdName;

		[CrmProperty(LogicalName = "po_surveyquestionid")]
        public virtual Guid PoSurveyquestionId
        {
            get { FillData(); return _poSurveyquestionId; }
            set {  _poSurveyquestionId = value; }
        }
        private Guid _poSurveyquestionId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "po_survey_question", PrimaryKey = "po_survey_questionid")]
	public partial class PoSurveyQuestion : CrmEntity
	{
		public class Enums
		{
			public enum PoDisplay 
			{
				[CrmPicklist(DisplayName = "Top", Value = 1)]Top = 1,
			}		
			public enum PoType 
			{
				[CrmPicklist(DisplayName = "Check Box", Value = 3)]CheckBox = 3,
				[CrmPicklist(DisplayName = "Clock Time", Value = 9)]ClockTime = 9,
				[CrmPicklist(DisplayName = "Date", Value = 8)]Date = 8,
				[CrmPicklist(DisplayName = "Dollar", Value = 12)]Dollar = 12,
				[CrmPicklist(DisplayName = "Dropdown list", Value = 7)]DropdownList = 7,
				[CrmPicklist(DisplayName = "Multiline Textbox", Value = 4)]MultilineTextbox = 4,
				[CrmPicklist(DisplayName = "Multiple Check Box", Value = 5)]MultipleCheckBox = 5,
				[CrmPicklist(DisplayName = "Numeric", Value = 11)]Numeric = 11,
				[CrmPicklist(DisplayName = "Radio button", Value = 2)]RadioButton = 2,
				[CrmPicklist(DisplayName = "Rating 1-10", Value = 1)]Rating110 = 1,
				[CrmPicklist(DisplayName = "Stop Watch Time", Value = 10)]StopWatchTime = 10,
				[CrmPicklist(DisplayName = "Text Box", Value = 6)]TextBox = 6,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "po_survey_question";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PoCheckboxOff = "po_checkbox_off";
			public const string PoCheckboxOn = "po_checkbox_on";
			public const string PoChoices = "po_choices";
			public const string PoDisplay = "po_display";
			public const string PoDisplayName = "po_displayname";
			public const string PoFootnote = "po_footnote";
			public const string PoHighnumberdescription = "po_highnumberdescription";
			public const string PoLownumberdescription = "po_lownumberdescription";
			public const string PoNa = "po_na";
			public const string PoName = "po_name";
			public const string PoNaName = "po_naname";
			public const string PoQuestion = "po_question";
			public const string PoRequired = "po_required";
			public const string PoRequiredName = "po_requiredname";
			public const string PoSurveyQuestionId = "po_survey_questionid";
			public const string PoType = "po_type";
			public const string PoTypeName = "po_typename";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PoSurveyQuestionId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "po_checkbox_off")]
        public virtual string PoCheckboxOff
        {
            get { FillData(); return _poCheckboxOff; }
            set { SetValue<string>("po_checkbox_off", value); _poCheckboxOff = value; }
        }
        private string _poCheckboxOff;

		[CrmProperty(LogicalName = "po_checkbox_on")]
        public virtual string PoCheckboxOn
        {
            get { FillData(); return _poCheckboxOn; }
            set { SetValue<string>("po_checkbox_on", value); _poCheckboxOn = value; }
        }
        private string _poCheckboxOn;

		[CrmProperty(LogicalName = "po_choices")]
        public virtual string PoChoices
        {
            get { FillData(); return _poChoices; }
            set { SetValue<string>("po_choices", value); _poChoices = value; }
        }
        private string _poChoices;

		[CrmProperty(LogicalName = "po_display")]
        public virtual Enums.PoDisplay? PoDisplay
        {
            get { FillData(); return _poDisplay; }
            set { SetPicklist("po_display", (int?)value); _poDisplay = value; }
        }
        private Enums.PoDisplay? _poDisplay;

		[CrmProperty(LogicalName = "po_displayname")]
        public virtual string PoDisplayName
        {
            get { FillData(); return _poDisplayName; }
            set {  _poDisplayName = value; }
        }
        private string _poDisplayName;

		[CrmProperty(LogicalName = "po_footnote")]
        public virtual string PoFootnote
        {
            get { FillData(); return _poFootnote; }
            set { SetValue<string>("po_footnote", value); _poFootnote = value; }
        }
        private string _poFootnote;

		[CrmProperty(LogicalName = "po_highnumberdescription")]
        public virtual string PoHighnumberdescription
        {
            get { FillData(); return _poHighnumberdescription; }
            set { SetValue<string>("po_highnumberdescription", value); _poHighnumberdescription = value; }
        }
        private string _poHighnumberdescription;

		[CrmProperty(LogicalName = "po_lownumberdescription")]
        public virtual string PoLownumberdescription
        {
            get { FillData(); return _poLownumberdescription; }
            set { SetValue<string>("po_lownumberdescription", value); _poLownumberdescription = value; }
        }
        private string _poLownumberdescription;

		[CrmProperty(LogicalName = "po_na")]
        public virtual bool? PoNa
        {
            get { FillData(); return _poNa; }
            set { SetValue<bool?>("po_na", value); _poNa = value; }
        }
        private bool? _poNa;

		[CrmProperty(LogicalName = "po_name")]
        public virtual string PoName
        {
            get { FillData(); return _poName; }
            set { SetValue<string>("po_name", value); _poName = value; }
        }
        private string _poName;

		[CrmProperty(LogicalName = "po_naname")]
        public virtual string PoNaName
        {
            get { FillData(); return _poNaName; }
            set {  _poNaName = value; }
        }
        private string _poNaName;

		[CrmProperty(LogicalName = "po_question")]
        public virtual string PoQuestion
        {
            get { FillData(); return _poQuestion; }
            set { SetValue<string>("po_question", value); _poQuestion = value; }
        }
        private string _poQuestion;

		[CrmProperty(LogicalName = "po_required")]
        public virtual bool? PoRequired
        {
            get { FillData(); return _poRequired; }
            set { SetValue<bool?>("po_required", value); _poRequired = value; }
        }
        private bool? _poRequired;

		[CrmProperty(LogicalName = "po_requiredname")]
        public virtual string PoRequiredName
        {
            get { FillData(); return _poRequiredName; }
            set {  _poRequiredName = value; }
        }
        private string _poRequiredName;

		[CrmProperty(LogicalName = "po_survey_questionid")]
        public virtual Guid PoSurveyQuestionId
        {
            get { FillData(); return _poSurveyQuestionId; }
            set {  _poSurveyQuestionId = value; }
        }
        private Guid _poSurveyQuestionId;

		[CrmProperty(LogicalName = "po_type")]
        public virtual Enums.PoType? PoType
        {
            get { FillData(); return _poType; }
            set { SetPicklist("po_type", (int?)value); _poType = value; }
        }
        private Enums.PoType? _poType;

		[CrmProperty(LogicalName = "po_typename")]
        public virtual string PoTypeName
        {
            get { FillData(); return _poTypeName; }
            set {  _poTypeName = value; }
        }
        private string _poTypeName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_duplicatecheck", PrimaryKey = "powf_duplicatecheckid")]
	public partial class PowfDuplicatecheck : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_duplicatecheck";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PowfDuplicatecheckId = "powf_duplicatecheckid";
			public const string PowfName = "powf_name";
			public const string PowfWebFormId = "powf_webformid";
			public const string PowfWebFormIdName = "powf_webformidname";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PowfDuplicatecheckId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "powf_duplicatecheckid")]
        public virtual Guid PowfDuplicatecheckId
        {
            get { FillData(); return _powfDuplicatecheckId; }
            set {  _powfDuplicatecheckId = value; }
        }
        private Guid _powfDuplicatecheckId;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "powf_webformid", IsLookup = true)]
        public virtual Guid? PowfWebFormId
        {
            get { FillData(); return _powfWebFormId; }
            set { SetLookup("powf_webformid", "powf_webform", value); _powfWebFormId = value; }
        }
        private Guid? _powfWebFormId;

		[CrmProperty(LogicalName = "powf_webformidname")]
        public virtual string PowfWebFormIdName
        {
            get { FillData(); return _powfWebFormIdName; }
            set {  _powfWebFormIdName = value; }
        }
        private string _powfWebFormIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_duplicatecheckfield", PrimaryKey = "powf_duplicatecheckfieldid")]
	public partial class PowfDuplicatecheckfield : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_duplicatecheckfield";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PowfDuplicateCheck = "powf_duplicatecheck";
			public const string PowfDuplicatecheckfieldId = "powf_duplicatecheckfieldid";
			public const string PowfDuplicateCheckName = "powf_duplicatecheckname";
			public const string PowfFormFieldId = "powf_formfieldid";
			public const string PowfFormFieldIdName = "powf_formfieldidname";
			public const string PowfMapToEntityField = "powf_maptoentityfield";
			public const string PowfName = "powf_name";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PowfDuplicatecheckfieldId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "powf_duplicatecheck", IsLookup = true)]
        public virtual Guid? PowfDuplicateCheck
        {
            get { FillData(); return _powfDuplicateCheck; }
            set { SetLookup("powf_duplicatecheck", "powf_duplicatecheck", value); _powfDuplicateCheck = value; }
        }
        private Guid? _powfDuplicateCheck;

		[CrmProperty(LogicalName = "powf_duplicatecheckfieldid")]
        public virtual Guid PowfDuplicatecheckfieldId
        {
            get { FillData(); return _powfDuplicatecheckfieldId; }
            set {  _powfDuplicatecheckfieldId = value; }
        }
        private Guid _powfDuplicatecheckfieldId;

		[CrmProperty(LogicalName = "powf_duplicatecheckname")]
        public virtual string PowfDuplicateCheckName
        {
            get { FillData(); return _powfDuplicateCheckName; }
            set {  _powfDuplicateCheckName = value; }
        }
        private string _powfDuplicateCheckName;

		[CrmProperty(LogicalName = "powf_formfieldid", IsLookup = true)]
        public virtual Guid? PowfFormFieldId
        {
            get { FillData(); return _powfFormFieldId; }
            set { SetLookup("powf_formfieldid", "powf_formfield", value); _powfFormFieldId = value; }
        }
        private Guid? _powfFormFieldId;

		[CrmProperty(LogicalName = "powf_formfieldidname")]
        public virtual string PowfFormFieldIdName
        {
            get { FillData(); return _powfFormFieldIdName; }
            set {  _powfFormFieldIdName = value; }
        }
        private string _powfFormFieldIdName;

		[CrmProperty(LogicalName = "powf_maptoentityfield")]
        public virtual string PowfMapToEntityField
        {
            get { FillData(); return _powfMapToEntityField; }
            set { SetValue<string>("powf_maptoentityfield", value); _powfMapToEntityField = value; }
        }
        private string _powfMapToEntityField;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_formfield", PrimaryKey = "powf_formfieldid")]
	public partial class PowfFormfield : CrmEntity
	{
		public class Enums
		{
			public enum PowfType 
			{
				[CrmPicklist(DisplayName = "Text", Value = 311060000)]Text = 311060000,
				[CrmPicklist(DisplayName = "Multiple Text", Value = 311060001)]MultipleText = 311060001,
				[CrmPicklist(DisplayName = "Drop Down List", Value = 311060002)]DropDownList = 311060002,
				[CrmPicklist(DisplayName = "Radio Button", Value = 311060003)]RadioButton = 311060003,
				[CrmPicklist(DisplayName = "Check Box", Value = 311060004)]CheckBox = 311060004,
				[CrmPicklist(DisplayName = "Multiple Checkbox", Value = 311060005)]MultipleCheckbox = 311060005,
				[CrmPicklist(DisplayName = "Date", Value = 311060006)]Date = 311060006,
				[CrmPicklist(DisplayName = "Phone Number", Value = 311060007)]PhoneNumber = 311060007,
				[CrmPicklist(DisplayName = "Zip Code", Value = 311060008)]ZipCode = 311060008,
				[CrmPicklist(DisplayName = "E-Mail Address", Value = 311060009)]EMailAddress = 311060009,
				[CrmPicklist(DisplayName = "Hidden", Value = 311060010)]Hidden = 311060010,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_formfield";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PowfDefaultValue = "powf_defaultvalue";
			public const string PowfDisplayorder = "powf_displayorder";
			public const string PowfFormfieldId = "powf_formfieldid";
			public const string PowfLength = "powf_length";
			public const string PowfMaptoentityfield = "powf_maptoentityfield";
			public const string PowfName = "powf_name";
			public const string PowfOptions = "powf_options";
			public const string PowfRequired = "powf_required";
			public const string PowfRequiredName = "powf_requiredname";
			public const string PowfSearch = "powf_search";
			public const string PowfSearchName = "powf_searchname";
			public const string PowfSeparator = "powf_separator";
			public const string PowfSynctostaging = "powf_synctostaging";
			public const string PowfTooltip = "powf_tooltip";
			public const string PowfType = "powf_type";
			public const string PowfTypeName = "powf_typename";
			public const string PowfWebform = "powf_webform";
			public const string PowfWebformName = "powf_webformname";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PowfFormfieldId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "powf_defaultvalue")]
        public virtual string PowfDefaultValue
        {
            get { FillData(); return _powfDefaultValue; }
            set { SetValue<string>("powf_defaultvalue", value); _powfDefaultValue = value; }
        }
        private string _powfDefaultValue;

		[CrmProperty(LogicalName = "powf_displayorder")]
        public virtual int? PowfDisplayorder
        {
            get { FillData(); return _powfDisplayorder; }
            set { SetValue<int?>("powf_displayorder", value); _powfDisplayorder = value; }
        }
        private int? _powfDisplayorder;

		[CrmProperty(LogicalName = "powf_formfieldid")]
        public virtual Guid PowfFormfieldId
        {
            get { FillData(); return _powfFormfieldId; }
            set {  _powfFormfieldId = value; }
        }
        private Guid _powfFormfieldId;

		[CrmProperty(LogicalName = "powf_length")]
        public virtual int? PowfLength
        {
            get { FillData(); return _powfLength; }
            set { SetValue<int?>("powf_length", value); _powfLength = value; }
        }
        private int? _powfLength;

		[CrmProperty(LogicalName = "powf_maptoentityfield")]
        public virtual string PowfMaptoentityfield
        {
            get { FillData(); return _powfMaptoentityfield; }
            set { SetValue<string>("powf_maptoentityfield", value); _powfMaptoentityfield = value; }
        }
        private string _powfMaptoentityfield;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "powf_options")]
        public virtual string PowfOptions
        {
            get { FillData(); return _powfOptions; }
            set { SetValue<string>("powf_options", value); _powfOptions = value; }
        }
        private string _powfOptions;

		[CrmProperty(LogicalName = "powf_required")]
        public virtual bool? PowfRequired
        {
            get { FillData(); return _powfRequired; }
            set { SetValue<bool?>("powf_required", value); _powfRequired = value; }
        }
        private bool? _powfRequired;

		[CrmProperty(LogicalName = "powf_requiredname")]
        public virtual string PowfRequiredName
        {
            get { FillData(); return _powfRequiredName; }
            set {  _powfRequiredName = value; }
        }
        private string _powfRequiredName;

		[CrmProperty(LogicalName = "powf_search")]
        public virtual bool? PowfSearch
        {
            get { FillData(); return _powfSearch; }
            set { SetValue<bool?>("powf_search", value); _powfSearch = value; }
        }
        private bool? _powfSearch;

		[CrmProperty(LogicalName = "powf_searchname")]
        public virtual string PowfSearchName
        {
            get { FillData(); return _powfSearchName; }
            set {  _powfSearchName = value; }
        }
        private string _powfSearchName;

		[CrmProperty(LogicalName = "powf_separator")]
        public virtual string PowfSeparator
        {
            get { FillData(); return _powfSeparator; }
            set { SetValue<string>("powf_separator", value); _powfSeparator = value; }
        }
        private string _powfSeparator;

		[CrmProperty(LogicalName = "powf_synctostaging")]
        public virtual string PowfSynctostaging
        {
            get { FillData(); return _powfSynctostaging; }
            set { SetValue<string>("powf_synctostaging", value); _powfSynctostaging = value; }
        }
        private string _powfSynctostaging;

		[CrmProperty(LogicalName = "powf_tooltip")]
        public virtual string PowfTooltip
        {
            get { FillData(); return _powfTooltip; }
            set { SetValue<string>("powf_tooltip", value); _powfTooltip = value; }
        }
        private string _powfTooltip;

		[CrmProperty(LogicalName = "powf_type")]
        public virtual Enums.PowfType? PowfType
        {
            get { FillData(); return _powfType; }
            set { SetPicklist("powf_type", (int?)value); _powfType = value; }
        }
        private Enums.PowfType? _powfType;

		[CrmProperty(LogicalName = "powf_typename")]
        public virtual string PowfTypeName
        {
            get { FillData(); return _powfTypeName; }
            set {  _powfTypeName = value; }
        }
        private string _powfTypeName;

		[CrmProperty(LogicalName = "powf_webform", IsLookup = true)]
        public virtual Guid? PowfWebform
        {
            get { FillData(); return _powfWebform; }
            set { SetLookup("powf_webform", "powf_webform", value); _powfWebform = value; }
        }
        private Guid? _powfWebform;

		[CrmProperty(LogicalName = "powf_webformname")]
        public virtual string PowfWebformName
        {
            get { FillData(); return _powfWebformName; }
            set {  _powfWebformName = value; }
        }
        private string _powfWebformName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_powerwebformconfiguration", PrimaryKey = "powf_powerwebformconfigurationid")]
	public partial class PowfPowerwebformconfiguration : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_powerwebformconfiguration";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PowfName = "powf_name";
			public const string PowfPowerwebformconfigurationId = "powf_powerwebformconfigurationid";
			public const string PowfValue = "powf_value";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PowfPowerwebformconfigurationId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "powf_powerwebformconfigurationid")]
        public virtual Guid PowfPowerwebformconfigurationId
        {
            get { FillData(); return _powfPowerwebformconfigurationId; }
            set {  _powfPowerwebformconfigurationId = value; }
        }
        private Guid _powfPowerwebformconfigurationId;

		[CrmProperty(LogicalName = "powf_value")]
        public virtual string PowfValue
        {
            get { FillData(); return _powfValue; }
            set { SetValue<string>("powf_value", value); _powfValue = value; }
        }
        private string _powfValue;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_powerwebform_log", PrimaryKey = "powf_powerwebform_logid")]
	public partial class PowfPowerwebformLog : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_powerwebform_log";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PowfLevel = "powf_level";
			public const string PowfMessage = "powf_message";
			public const string PowfName = "powf_name";
			public const string PowfPowerwebformLogId = "powf_powerwebform_logid";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PowfPowerwebformLogId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "powf_level")]
        public virtual string PowfLevel
        {
            get { FillData(); return _powfLevel; }
            set { SetValue<string>("powf_level", value); _powfLevel = value; }
        }
        private string _powfLevel;

		[CrmProperty(LogicalName = "powf_message")]
        public virtual string PowfMessage
        {
            get { FillData(); return _powfMessage; }
            set { SetValue<string>("powf_message", value); _powfMessage = value; }
        }
        private string _powfMessage;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "powf_powerwebform_logid")]
        public virtual Guid PowfPowerwebformLogId
        {
            get { FillData(); return _powfPowerwebformLogId; }
            set {  _powfPowerwebformLogId = value; }
        }
        private Guid _powfPowerwebformLogId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_webform", PrimaryKey = "powf_webformid")]
	public partial class PowfWebform : CrmEntity
	{
		public class Enums
		{
			public enum PowfLabelposition 
			{
				[CrmPicklist(DisplayName = "Top", Value = 311060000)]Top = 311060000,
				[CrmPicklist(DisplayName = "Left", Value = 311060001)]Left = 311060001,
			}		
			public enum PowfRedirectMode 
			{
				[CrmPicklist(DisplayName = "Auto", Value = 311060000)]Auto = 311060000,
				[CrmPicklist(DisplayName = "Link", Value = 311060001)]Link = 311060001,
				[CrmPicklist(DisplayName = "Button", Value = 311060002)]Button = 311060002,
			}		
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_webform";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PowfCampaignid = "powf_campaignid";
			public const string PowfCampaignidName = "powf_campaignidname";
			public const string PowfCreateentity = "powf_createentity";
			public const string PowfCss = "powf_css";
			public const string PowfLabelposition = "powf_labelposition";
			public const string PowfLabelpositionName = "powf_labelpositionname";
			public const string PowfLinkButtonText = "powf_linkbuttontext";
			public const string PowfName = "powf_name";
			public const string PowfNotifyemail = "powf_notifyemail";
			public const string PowfRedirectMode = "powf_redirectmode";
			public const string PowfRedirectmodeName = "powf_redirectmodename";
			public const string PowfRedirectURL = "powf_redirecturl";
			public const string PowfRequirecaptcha = "powf_requirecaptcha";
			public const string PowfRequirecaptchaName = "powf_requirecaptchaname";
			public const string PowfSubmitButtonText = "powf_submitbuttontext";
			public const string PowfSubmitmessage = "powf_submitmessage";
			public const string PowfSynctostaging = "powf_synctostaging";
			public const string PowfWebformId = "powf_webformid";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PowfWebformId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "powf_campaignid", IsLookup = true)]
        public virtual Guid? PowfCampaignid
        {
            get { FillData(); return _powfCampaignid; }
            set { SetLookup("powf_campaignid", "campaign", value); _powfCampaignid = value; }
        }
        private Guid? _powfCampaignid;

		[CrmProperty(LogicalName = "powf_campaignidname")]
        public virtual string PowfCampaignidName
        {
            get { FillData(); return _powfCampaignidName; }
            set {  _powfCampaignidName = value; }
        }
        private string _powfCampaignidName;

		[CrmProperty(LogicalName = "powf_createentity")]
        public virtual string PowfCreateentity
        {
            get { FillData(); return _powfCreateentity; }
            set { SetValue<string>("powf_createentity", value); _powfCreateentity = value; }
        }
        private string _powfCreateentity;

		[CrmProperty(LogicalName = "powf_css")]
        public virtual string PowfCss
        {
            get { FillData(); return _powfCss; }
            set { SetValue<string>("powf_css", value); _powfCss = value; }
        }
        private string _powfCss;

		[CrmProperty(LogicalName = "powf_labelposition")]
        public virtual Enums.PowfLabelposition? PowfLabelposition
        {
            get { FillData(); return _powfLabelposition; }
            set { SetPicklist("powf_labelposition", (int?)value); _powfLabelposition = value; }
        }
        private Enums.PowfLabelposition? _powfLabelposition;

		[CrmProperty(LogicalName = "powf_labelpositionname")]
        public virtual string PowfLabelpositionName
        {
            get { FillData(); return _powfLabelpositionName; }
            set {  _powfLabelpositionName = value; }
        }
        private string _powfLabelpositionName;

		[CrmProperty(LogicalName = "powf_linkbuttontext")]
        public virtual string PowfLinkButtonText
        {
            get { FillData(); return _powfLinkButtonText; }
            set { SetValue<string>("powf_linkbuttontext", value); _powfLinkButtonText = value; }
        }
        private string _powfLinkButtonText;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "powf_notifyemail")]
        public virtual string PowfNotifyemail
        {
            get { FillData(); return _powfNotifyemail; }
            set { SetValue<string>("powf_notifyemail", value); _powfNotifyemail = value; }
        }
        private string _powfNotifyemail;

		[CrmProperty(LogicalName = "powf_redirectmode")]
        public virtual Enums.PowfRedirectMode? PowfRedirectMode
        {
            get { FillData(); return _powfRedirectMode; }
            set { SetPicklist("powf_redirectmode", (int?)value); _powfRedirectMode = value; }
        }
        private Enums.PowfRedirectMode? _powfRedirectMode;

		[CrmProperty(LogicalName = "powf_redirectmodename")]
        public virtual string PowfRedirectmodeName
        {
            get { FillData(); return _powfRedirectmodeName; }
            set {  _powfRedirectmodeName = value; }
        }
        private string _powfRedirectmodeName;

		[CrmProperty(LogicalName = "powf_redirecturl")]
        public virtual string PowfRedirectURL
        {
            get { FillData(); return _powfRedirectURL; }
            set { SetValue<string>("powf_redirecturl", value); _powfRedirectURL = value; }
        }
        private string _powfRedirectURL;

		[CrmProperty(LogicalName = "powf_requirecaptcha")]
        public virtual bool? PowfRequirecaptcha
        {
            get { FillData(); return _powfRequirecaptcha; }
            set { SetValue<bool?>("powf_requirecaptcha", value); _powfRequirecaptcha = value; }
        }
        private bool? _powfRequirecaptcha;

		[CrmProperty(LogicalName = "powf_requirecaptchaname")]
        public virtual string PowfRequirecaptchaName
        {
            get { FillData(); return _powfRequirecaptchaName; }
            set {  _powfRequirecaptchaName = value; }
        }
        private string _powfRequirecaptchaName;

		[CrmProperty(LogicalName = "powf_submitbuttontext")]
        public virtual string PowfSubmitButtonText
        {
            get { FillData(); return _powfSubmitButtonText; }
            set { SetValue<string>("powf_submitbuttontext", value); _powfSubmitButtonText = value; }
        }
        private string _powfSubmitButtonText;

		[CrmProperty(LogicalName = "powf_submitmessage")]
        public virtual string PowfSubmitmessage
        {
            get { FillData(); return _powfSubmitmessage; }
            set { SetValue<string>("powf_submitmessage", value); _powfSubmitmessage = value; }
        }
        private string _powfSubmitmessage;

		[CrmProperty(LogicalName = "powf_synctostaging")]
        public virtual string PowfSynctostaging
        {
            get { FillData(); return _powfSynctostaging; }
            set { SetValue<string>("powf_synctostaging", value); _powfSynctostaging = value; }
        }
        private string _powfSynctostaging;

		[CrmProperty(LogicalName = "powf_webformid")]
        public virtual Guid PowfWebformId
        {
            get { FillData(); return _powfWebformId; }
            set {  _powfWebformId = value; }
        }
        private Guid _powfWebformId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_webformactivity", PrimaryKey = "activityid")]
	public partial class PowfWebformactivity : CrmEntity
	{
		public class Enums
		{
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
				[CrmPicklist(DisplayName = "Scheduled", Value = 4)]Scheduled = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_webformactivity";
			
			public const string __To = "to";
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string BCC = "bcc";
			public const string CC = "cc";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customers = "customers";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LeftVoiceMail = "leftvoicemail";
			public const string LeftVoiceMailName = "leftvoicemailname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string Partners = "partners";
			public const string PowfName = "powf_name";
			public const string PowfWebform = "powf_webform";
			public const string PowfWebformName = "powf_webformname";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "to")]
        public virtual object __To
        {
            get { FillData(); return ___to; }
            set {  ___to = value; }
        }
        private object ___to;

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "bcc")]
        public virtual object BCC
        {
            get { FillData(); return _bCC; }
            set {  _bCC = value; }
        }
        private object _bCC;

		[CrmProperty(LogicalName = "cc")]
        public virtual object CC
        {
            get { FillData(); return _cC; }
            set {  _cC = value; }
        }
        private object _cC;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customers")]
        public virtual object Customers
        {
            get { FillData(); return _customers; }
            set {  _customers = value; }
        }
        private object _customers;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "from")]
        public virtual object From
        {
            get { FillData(); return _from; }
            set {  _from = value; }
        }
        private object _from;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "ismapiprivate")]
        public virtual bool? IsMapiPrivate
        {
            get { FillData(); return _isMapiPrivate; }
            set { SetValue<bool?>("ismapiprivate", value); _isMapiPrivate = value; }
        }
        private bool? _isMapiPrivate;

		[CrmProperty(LogicalName = "ismapiprivatename")]
        public virtual string IsMapiPrivateName
        {
            get { FillData(); return _isMapiPrivateName; }
            set {  _isMapiPrivateName = value; }
        }
        private string _isMapiPrivateName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "leftvoicemail")]
        public virtual bool? LeftVoiceMail
        {
            get { FillData(); return _leftVoiceMail; }
            set { SetValue<bool?>("leftvoicemail", value); _leftVoiceMail = value; }
        }
        private bool? _leftVoiceMail;

		[CrmProperty(LogicalName = "leftvoicemailname")]
        public virtual string LeftVoiceMailName
        {
            get { FillData(); return _leftVoiceMailName; }
            set {  _leftVoiceMailName = value; }
        }
        private string _leftVoiceMailName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "optionalattendees")]
        public virtual object OptionalAttendees
        {
            get { FillData(); return _optionalAttendees; }
            set {  _optionalAttendees = value; }
        }
        private object _optionalAttendees;

		[CrmProperty(LogicalName = "organizer")]
        public virtual object Organizer
        {
            get { FillData(); return _organizer; }
            set {  _organizer = value; }
        }
        private object _organizer;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "partners")]
        public virtual object Partners
        {
            get { FillData(); return _partners; }
            set {  _partners = value; }
        }
        private object _partners;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "powf_webform", IsLookup = true)]
        public virtual Guid? PowfWebform
        {
            get { FillData(); return _powfWebform; }
            set { SetLookup("powf_webform", "powf_webform", value); _powfWebform = value; }
        }
        private Guid? _powfWebform;

		[CrmProperty(LogicalName = "powf_webformname")]
        public virtual string PowfWebformName
        {
            get { FillData(); return _powfWebformName; }
            set {  _powfWebformName = value; }
        }
        private string _powfWebformName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set { SetValue<string>("regardingobjectidname", value); _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set { SetValue<string>("regardingobjectidyominame", value); _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "requiredattendees")]
        public virtual object RequiredAttendees
        {
            get { FillData(); return _requiredAttendees; }
            set {  _requiredAttendees = value; }
        }
        private object _requiredAttendees;

		[CrmProperty(LogicalName = "resources")]
        public virtual object Resources
        {
            get { FillData(); return _resources; }
            set {  _resources = value; }
        }
        private object _resources;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesid")]
        public virtual Guid? SeriesId
        {
            get { FillData(); return _seriesId; }
            set {  _seriesId = value; }
        }
        private Guid? _seriesId;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidname")]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "powf_webformactivitydetail", PrimaryKey = "powf_webformactivitydetailid")]
	public partial class PowfWebformactivitydetail : CrmEntity
	{
		public class Enums
		{
			public enum Statecode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum Statuscode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "powf_webformactivitydetail";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PowfFormfieldid = "powf_formfieldid";
			public const string PowfFormfieldidName = "powf_formfieldidname";
			public const string PowfName = "powf_name";
			public const string PowfValue = "powf_value";
			public const string PowfWebformactivitydetailId = "powf_webformactivitydetailid";
			public const string PowfWebformactivityid = "powf_webformactivityid";
			public const string PowfWebformactivityidName = "powf_webformactivityidname";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PowfWebformactivitydetailId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "powf_formfieldid", IsLookup = true)]
        public virtual Guid? PowfFormfieldid
        {
            get { FillData(); return _powfFormfieldid; }
            set { SetLookup("powf_formfieldid", "powf_formfield", value); _powfFormfieldid = value; }
        }
        private Guid? _powfFormfieldid;

		[CrmProperty(LogicalName = "powf_formfieldidname")]
        public virtual string PowfFormfieldidName
        {
            get { FillData(); return _powfFormfieldidName; }
            set {  _powfFormfieldidName = value; }
        }
        private string _powfFormfieldidName;

		[CrmProperty(LogicalName = "powf_name")]
        public virtual string PowfName
        {
            get { FillData(); return _powfName; }
            set { SetValue<string>("powf_name", value); _powfName = value; }
        }
        private string _powfName;

		[CrmProperty(LogicalName = "powf_value")]
        public virtual string PowfValue
        {
            get { FillData(); return _powfValue; }
            set { SetValue<string>("powf_value", value); _powfValue = value; }
        }
        private string _powfValue;

		[CrmProperty(LogicalName = "powf_webformactivitydetailid")]
        public virtual Guid PowfWebformactivitydetailId
        {
            get { FillData(); return _powfWebformactivitydetailId; }
            set {  _powfWebformactivitydetailId = value; }
        }
        private Guid _powfWebformactivitydetailId;

		[CrmProperty(LogicalName = "powf_webformactivityid", IsLookup = true)]
        public virtual Guid? PowfWebformactivityid
        {
            get { FillData(); return _powfWebformactivityid; }
            set { SetLookup("powf_webformactivityid", "powf_webformactivity", value); _powfWebformactivityid = value; }
        }
        private Guid? _powfWebformactivityid;

		[CrmProperty(LogicalName = "powf_webformactivityidname")]
        public virtual string PowfWebformactivityidName
        {
            get { FillData(); return _powfWebformactivityidName; }
            set {  _powfWebformactivityidName = value; }
        }
        private string _powfWebformactivityidName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int Statecode
        {
            get { FillData(); return _statecode; }
            set {  _statecode = value; }
        }
        private int _statecode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StatecodeName
        {
            get { FillData(); return _statecodeName; }
            set {  _statecodeName = value; }
        }
        private string _statecodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int Statuscode
        {
            get { FillData(); return _statuscode; }
            set {  _statuscode = value; }
        }
        private int _statuscode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatuscodeName
        {
            get { FillData(); return _statuscodeName; }
            set {  _statuscodeName = value; }
        }
        private string _statuscodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "pricelevel", PrimaryKey = "pricelevelid")]
	public partial class PriceLevel : CrmEntity
	{
		public class Enums
		{
			public enum FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum PaymentMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 100001)]Active = 100001,
				[CrmPicklist(DisplayName = "Inactive", Value = 100002)]Inactive = 100002,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "pricelevel";
			
			public const string BeginDate = "begindate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string EndDate = "enddate";
			public const string ExchangeRate = "exchangerate";
			public const string FreightTermsCode = "freighttermscode";
			public const string FreightTermsCodeName = "freighttermscodename";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PaymentMethodCode = "paymentmethodcode";
			public const string PaymentMethodCodeName = "paymentmethodcodename";
			public const string PriceLevelId = "pricelevelid";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return PriceLevelId; }
		}

		[CrmProperty(LogicalName = "begindate")]
        public virtual DateTime? BeginDate
        {
            get { FillData(); return _beginDate; }
            set { SetValue<DateTime?>("begindate", value); _beginDate = value; }
        }
        private DateTime? _beginDate;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "enddate")]
        public virtual DateTime? EndDate
        {
            get { FillData(); return _endDate; }
            set { SetValue<DateTime?>("enddate", value); _endDate = value; }
        }
        private DateTime? _endDate;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "freighttermscode")]
        public virtual Enums.FreightTermsCode? FreightTermsCode
        {
            get { FillData(); return _freightTermsCode; }
            set { SetPicklist("freighttermscode", (int?)value); _freightTermsCode = value; }
        }
        private Enums.FreightTermsCode? _freightTermsCode;

		[CrmProperty(LogicalName = "freighttermscodename")]
        public virtual string FreightTermsCodeName
        {
            get { FillData(); return _freightTermsCodeName; }
            set {  _freightTermsCodeName = value; }
        }
        private string _freightTermsCodeName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "paymentmethodcode")]
        public virtual Enums.PaymentMethodCode? PaymentMethodCode
        {
            get { FillData(); return _paymentMethodCode; }
            set { SetPicklist("paymentmethodcode", (int?)value); _paymentMethodCode = value; }
        }
        private Enums.PaymentMethodCode? _paymentMethodCode;

		[CrmProperty(LogicalName = "paymentmethodcodename")]
        public virtual string PaymentMethodCodeName
        {
            get { FillData(); return _paymentMethodCodeName; }
            set {  _paymentMethodCodeName = value; }
        }
        private string _paymentMethodCodeName;

		[CrmProperty(LogicalName = "pricelevelid")]
        public virtual Guid PriceLevelId
        {
            get { FillData(); return _priceLevelId; }
            set {  _priceLevelId = value; }
        }
        private Guid _priceLevelId;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "product", PrimaryKey = "productid")]
	public partial class Product : CrmEntity
	{
		public class Enums
		{
			public enum ProductTypeCode 
			{
				[CrmPicklist(DisplayName = "Hosted", Value = 100000000)]Hosted = 100000000,
				[CrmPicklist(DisplayName = "Network", Value = 100000001)]Network = 100000001,
				[CrmPicklist(DisplayName = "Phone", Value = 100000005)]Phone = 100000005,
				[CrmPicklist(DisplayName = "Setup Fee", Value = 100000004)]SetupFee = 100000004,
				[CrmPicklist(DisplayName = "Hardware", Value = 100000002)]Hardware = 100000002,
				[CrmPicklist(DisplayName = "Software", Value = 100000003)]Software = 100000003,
				[CrmPicklist(DisplayName = "Freight", Value = 100000006)]Freight = 100000006,
				[CrmPicklist(DisplayName = "Sales Inventory", Value = 1)]SalesInventory = 1,
				[CrmPicklist(DisplayName = "Miscellaneous Charges", Value = 2)]MiscellaneousCharges = 2,
				[CrmPicklist(DisplayName = "Services", Value = 3)]Services = 3,
				[CrmPicklist(DisplayName = "Flat Fees", Value = 4)]FlatFees = 4,
				[CrmPicklist(DisplayName = "Labour", Value = 100000007)]Labour = 100000007,
				[CrmPicklist(DisplayName = "Storage", Value = 100000008)]Storage = 100000008,
				[CrmPicklist(DisplayName = "Bandwidth", Value = 100000009)]Bandwidth = 100000009,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "product";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CurrentCost = "currentcost";
			public const string DefaultUoMId = "defaultuomid";
			public const string DefaultUoMIdName = "defaultuomidname";
			public const string DefaultUoMScheduleId = "defaultuomscheduleid";
			public const string DefaultUoMScheduleIdName = "defaultuomscheduleidname";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsKit = "iskit";
			public const string IsKitName = "iskitname";
			public const string IsStockItem = "isstockitem";
			public const string IsStockItemName = "isstockitemname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string NewCPSMProduct = "new_cpsmproduct";
			public const string NewGLCode = "new_glcode";
			public const string NewProductsId = "new_productsid";
			public const string NewProductsIdName = "new_productsidname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Price = "price";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string ProductId = "productid";
			public const string ProductNumber = "productnumber";
			public const string ProductTypeCode = "producttypecode";
			public const string ProductTypeCodeName = "producttypecodename";
			public const string ProductUrl = "producturl";
			public const string QuantityDecimal = "quantitydecimal";
			public const string QuantityOnHand = "quantityonhand";
			public const string Size = "size";
			public const string StandardCost = "standardcost";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string StockVolume = "stockvolume";
			public const string StockWeight = "stockweight";
			public const string SubjectId = "subjectid";
			public const string SubjectIdName = "subjectidname";
			public const string SupplierName = "suppliername";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VendorName = "vendorname";
			public const string VendorPartNumber = "vendorpartnumber";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ProductId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "currentcost")]
        public virtual decimal? CurrentCost
        {
            get { FillData(); return _currentCost; }
            set { SetMoney("currentcost", value); _currentCost = value; }
        }
        private decimal? _currentCost;

		[CrmProperty(LogicalName = "defaultuomid", IsLookup = true)]
        public virtual Guid? DefaultUoMId
        {
            get { FillData(); return _defaultUoMId; }
            set { SetLookup("defaultuomid", "uom", value); _defaultUoMId = value; }
        }
        private Guid? _defaultUoMId;

		[CrmProperty(LogicalName = "defaultuomidname")]
        public virtual string DefaultUoMIdName
        {
            get { FillData(); return _defaultUoMIdName; }
            set {  _defaultUoMIdName = value; }
        }
        private string _defaultUoMIdName;

		[CrmProperty(LogicalName = "defaultuomscheduleid", IsLookup = true)]
        public virtual Guid? DefaultUoMScheduleId
        {
            get { FillData(); return _defaultUoMScheduleId; }
            set { SetLookup("defaultuomscheduleid", "uomschedule", value); _defaultUoMScheduleId = value; }
        }
        private Guid? _defaultUoMScheduleId;

		[CrmProperty(LogicalName = "defaultuomscheduleidname")]
        public virtual string DefaultUoMScheduleIdName
        {
            get { FillData(); return _defaultUoMScheduleIdName; }
            set {  _defaultUoMScheduleIdName = value; }
        }
        private string _defaultUoMScheduleIdName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "iskit")]
        public virtual bool? IsKit
        {
            get { FillData(); return _isKit; }
            set { SetValue<bool?>("iskit", value); _isKit = value; }
        }
        private bool? _isKit;

		[CrmProperty(LogicalName = "iskitname")]
        public virtual string IsKitName
        {
            get { FillData(); return _isKitName; }
            set {  _isKitName = value; }
        }
        private string _isKitName;

		[CrmProperty(LogicalName = "isstockitem")]
        public virtual bool? IsStockItem
        {
            get { FillData(); return _isStockItem; }
            set { SetValue<bool?>("isstockitem", value); _isStockItem = value; }
        }
        private bool? _isStockItem;

		[CrmProperty(LogicalName = "isstockitemname")]
        public virtual string IsStockItemName
        {
            get { FillData(); return _isStockItemName; }
            set {  _isStockItemName = value; }
        }
        private string _isStockItemName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "new_cpsmproduct")]
        public virtual string NewCPSMProduct
        {
            get { FillData(); return _newCPSMProduct; }
            set { SetValue<string>("new_cpsmproduct", value); _newCPSMProduct = value; }
        }
        private string _newCPSMProduct;

		[CrmProperty(LogicalName = "new_glcode")]
        public virtual string NewGLCode
        {
            get { FillData(); return _newGLCode; }
            set { SetValue<string>("new_glcode", value); _newGLCode = value; }
        }
        private string _newGLCode;

		[CrmProperty(LogicalName = "new_productsid", IsLookup = true)]
        public virtual Guid? NewProductsId
        {
            get { FillData(); return _newProductsId; }
            set { SetLookup("new_productsid", "new_hostedservice", value); _newProductsId = value; }
        }
        private Guid? _newProductsId;

		[CrmProperty(LogicalName = "new_productsidname")]
        public virtual string NewProductsIdName
        {
            get { FillData(); return _newProductsIdName; }
            set {  _newProductsIdName = value; }
        }
        private string _newProductsIdName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "price")]
        public virtual decimal? Price
        {
            get { FillData(); return _price; }
            set { SetMoney("price", value); _price = value; }
        }
        private decimal? _price;

		[CrmProperty(LogicalName = "pricelevelid", IsLookup = true)]
        public virtual Guid? PriceLevelId
        {
            get { FillData(); return _priceLevelId; }
            set { SetLookup("pricelevelid", "pricelevel", value); _priceLevelId = value; }
        }
        private Guid? _priceLevelId;

		[CrmProperty(LogicalName = "pricelevelidname")]
        public virtual string PriceLevelIdName
        {
            get { FillData(); return _priceLevelIdName; }
            set {  _priceLevelIdName = value; }
        }
        private string _priceLevelIdName;

		[CrmProperty(LogicalName = "productid")]
        public virtual Guid ProductId
        {
            get { FillData(); return _productId; }
            set {  _productId = value; }
        }
        private Guid _productId;

		[CrmProperty(LogicalName = "productnumber")]
        public virtual string ProductNumber
        {
            get { FillData(); return _productNumber; }
            set { SetValue<string>("productnumber", value); _productNumber = value; }
        }
        private string _productNumber;

		[CrmProperty(LogicalName = "producttypecode")]
        public virtual Enums.ProductTypeCode? ProductTypeCode
        {
            get { FillData(); return _productTypeCode; }
            set { SetPicklist("producttypecode", (int?)value); _productTypeCode = value; }
        }
        private Enums.ProductTypeCode? _productTypeCode;

		[CrmProperty(LogicalName = "producttypecodename")]
        public virtual string ProductTypeCodeName
        {
            get { FillData(); return _productTypeCodeName; }
            set {  _productTypeCodeName = value; }
        }
        private string _productTypeCodeName;

		[CrmProperty(LogicalName = "producturl")]
        public virtual string ProductUrl
        {
            get { FillData(); return _productUrl; }
            set { SetValue<string>("producturl", value); _productUrl = value; }
        }
        private string _productUrl;

		[CrmProperty(LogicalName = "quantitydecimal")]
        public virtual int? QuantityDecimal
        {
            get { FillData(); return _quantityDecimal; }
            set { SetValue<int?>("quantitydecimal", value); _quantityDecimal = value; }
        }
        private int? _quantityDecimal;

		[CrmProperty(LogicalName = "quantityonhand")]
        public virtual decimal? QuantityOnHand
        {
            get { FillData(); return _quantityOnHand; }
            set { SetValue<decimal?>("quantityonhand", value); _quantityOnHand = value; }
        }
        private decimal? _quantityOnHand;

		[CrmProperty(LogicalName = "size")]
        public virtual string Size
        {
            get { FillData(); return _size; }
            set { SetValue<string>("size", value); _size = value; }
        }
        private string _size;

		[CrmProperty(LogicalName = "standardcost")]
        public virtual decimal? StandardCost
        {
            get { FillData(); return _standardCost; }
            set { SetMoney("standardcost", value); _standardCost = value; }
        }
        private decimal? _standardCost;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "stockvolume")]
        public virtual decimal? StockVolume
        {
            get { FillData(); return _stockVolume; }
            set { SetValue<decimal?>("stockvolume", value); _stockVolume = value; }
        }
        private decimal? _stockVolume;

		[CrmProperty(LogicalName = "stockweight")]
        public virtual decimal? StockWeight
        {
            get { FillData(); return _stockWeight; }
            set { SetValue<decimal?>("stockweight", value); _stockWeight = value; }
        }
        private decimal? _stockWeight;

		[CrmProperty(LogicalName = "subjectid", IsLookup = true)]
        public virtual Guid? SubjectId
        {
            get { FillData(); return _subjectId; }
            set { SetLookup("subjectid", "subject", value); _subjectId = value; }
        }
        private Guid? _subjectId;

		[CrmProperty(LogicalName = "subjectidname")]
        public virtual string SubjectIdName
        {
            get { FillData(); return _subjectIdName; }
            set {  _subjectIdName = value; }
        }
        private string _subjectIdName;

		[CrmProperty(LogicalName = "suppliername")]
        public virtual string SupplierName
        {
            get { FillData(); return _supplierName; }
            set { SetValue<string>("suppliername", value); _supplierName = value; }
        }
        private string _supplierName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "vendorname")]
        public virtual string VendorName
        {
            get { FillData(); return _vendorName; }
            set { SetValue<string>("vendorname", value); _vendorName = value; }
        }
        private string _vendorName;

		[CrmProperty(LogicalName = "vendorpartnumber")]
        public virtual string VendorPartNumber
        {
            get { FillData(); return _vendorPartNumber; }
            set { SetValue<string>("vendorpartnumber", value); _vendorPartNumber = value; }
        }
        private string _vendorPartNumber;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "productpricelevel", PrimaryKey = "productpricelevelid")]
	public partial class ProductPriceLevel : CrmEntity
	{
		public class Enums
		{
			public enum PricingMethodCode 
			{
				[CrmPicklist(DisplayName = "Currency Amount", Value = 1)]CurrencyAmount = 1,
				[CrmPicklist(DisplayName = "Percent of List", Value = 2)]PercentOfList = 2,
				[CrmPicklist(DisplayName = "Percent Markup - Current Cost", Value = 3)]PercentMarkupCurrentCost = 3,
				[CrmPicklist(DisplayName = "Percent Margin - Current Cost", Value = 4)]PercentMarginCurrentCost = 4,
				[CrmPicklist(DisplayName = "Percent Markup - Standard Cost", Value = 5)]PercentMarkupStandardCost = 5,
				[CrmPicklist(DisplayName = "Percent Margin - Standard Cost", Value = 6)]PercentMarginStandardCost = 6,
			}		
			public enum QuantitySellingCode 
			{
				[CrmPicklist(DisplayName = "No Control", Value = 1)]NoControl = 1,
				[CrmPicklist(DisplayName = "Whole", Value = 2)]Whole = 2,
				[CrmPicklist(DisplayName = "Whole and Fractional", Value = 3)]WholeAndFractional = 3,
			}		
			public enum RoundingOptionCode 
			{
				[CrmPicklist(DisplayName = "Ends in", Value = 1)]EndsIn = 1,
				[CrmPicklist(DisplayName = "Multiple of", Value = 2)]MultipleOf = 2,
			}		
			public enum RoundingPolicyCode 
			{
				[CrmPicklist(DisplayName = "None", Value = 1)]None = 1,
				[CrmPicklist(DisplayName = "Up", Value = 2)]Up = 2,
				[CrmPicklist(DisplayName = "Down", Value = 3)]Down = 3,
				[CrmPicklist(DisplayName = "To Nearest", Value = 4)]ToNearest = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "productpricelevel";
			
			public const string Amount = "amount";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DiscountTypeId = "discounttypeid";
			public const string DiscountTypeIdName = "discounttypeidname";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Percentage = "percentage";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string PricingMethodCode = "pricingmethodcode";
			public const string PricingMethodCodeName = "pricingmethodcodename";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string ProductPriceLevelId = "productpricelevelid";
			public const string QuantitySellingCode = "quantitysellingcode";
			public const string QuantitySellingCodeName = "quantitysellingcodename";
			public const string RoundingOptionAmount = "roundingoptionamount";
			public const string RoundingOptionCode = "roundingoptioncode";
			public const string RoundingOptionCodeName = "roundingoptioncodename";
			public const string RoundingPolicyCode = "roundingpolicycode";
			public const string RoundingPolicyCodeName = "roundingpolicycodename";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UoMId = "uomid";
			public const string UoMIdName = "uomidname";
			public const string UoMScheduleId = "uomscheduleid";
			public const string UoMScheduleIdName = "uomscheduleidname";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ProductPriceLevelId; }
		}

		[CrmProperty(LogicalName = "amount")]
        public virtual decimal? Amount
        {
            get { FillData(); return _amount; }
            set { SetMoney("amount", value); _amount = value; }
        }
        private decimal? _amount;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "discounttypeid", IsLookup = true)]
        public virtual Guid? DiscountTypeId
        {
            get { FillData(); return _discountTypeId; }
            set { SetLookup("discounttypeid", "discounttype", value); _discountTypeId = value; }
        }
        private Guid? _discountTypeId;

		[CrmProperty(LogicalName = "discounttypeidname")]
        public virtual string DiscountTypeIdName
        {
            get { FillData(); return _discountTypeIdName; }
            set {  _discountTypeIdName = value; }
        }
        private string _discountTypeIdName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid")]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "percentage")]
        public virtual decimal? Percentage
        {
            get { FillData(); return _percentage; }
            set { SetValue<decimal?>("percentage", value); _percentage = value; }
        }
        private decimal? _percentage;

		[CrmProperty(LogicalName = "pricelevelid", IsLookup = true)]
        public virtual Guid? PriceLevelId
        {
            get { FillData(); return _priceLevelId; }
            set {  _priceLevelId = value; }
        }
        private Guid? _priceLevelId;

		[CrmProperty(LogicalName = "pricelevelidname")]
        public virtual string PriceLevelIdName
        {
            get { FillData(); return _priceLevelIdName; }
            set {  _priceLevelIdName = value; }
        }
        private string _priceLevelIdName;

		[CrmProperty(LogicalName = "pricingmethodcode")]
        public virtual Enums.PricingMethodCode? PricingMethodCode
        {
            get { FillData(); return _pricingMethodCode; }
            set { SetPicklist("pricingmethodcode", (int?)value); _pricingMethodCode = value; }
        }
        private Enums.PricingMethodCode? _pricingMethodCode;

		[CrmProperty(LogicalName = "pricingmethodcodename")]
        public virtual string PricingMethodCodeName
        {
            get { FillData(); return _pricingMethodCodeName; }
            set {  _pricingMethodCodeName = value; }
        }
        private string _pricingMethodCodeName;

		[CrmProperty(LogicalName = "productid", IsLookup = true)]
        public virtual Guid? ProductId
        {
            get { FillData(); return _productId; }
            set { SetLookup("productid", "product", value); _productId = value; }
        }
        private Guid? _productId;

		[CrmProperty(LogicalName = "productidname")]
        public virtual string ProductIdName
        {
            get { FillData(); return _productIdName; }
            set {  _productIdName = value; }
        }
        private string _productIdName;

		[CrmProperty(LogicalName = "productpricelevelid")]
        public virtual Guid ProductPriceLevelId
        {
            get { FillData(); return _productPriceLevelId; }
            set {  _productPriceLevelId = value; }
        }
        private Guid _productPriceLevelId;

		[CrmProperty(LogicalName = "quantitysellingcode")]
        public virtual Enums.QuantitySellingCode? QuantitySellingCode
        {
            get { FillData(); return _quantitySellingCode; }
            set { SetPicklist("quantitysellingcode", (int?)value); _quantitySellingCode = value; }
        }
        private Enums.QuantitySellingCode? _quantitySellingCode;

		[CrmProperty(LogicalName = "quantitysellingcodename")]
        public virtual string QuantitySellingCodeName
        {
            get { FillData(); return _quantitySellingCodeName; }
            set {  _quantitySellingCodeName = value; }
        }
        private string _quantitySellingCodeName;

		[CrmProperty(LogicalName = "roundingoptionamount")]
        public virtual decimal? RoundingOptionAmount
        {
            get { FillData(); return _roundingOptionAmount; }
            set { SetMoney("roundingoptionamount", value); _roundingOptionAmount = value; }
        }
        private decimal? _roundingOptionAmount;

		[CrmProperty(LogicalName = "roundingoptioncode")]
        public virtual Enums.RoundingOptionCode? RoundingOptionCode
        {
            get { FillData(); return _roundingOptionCode; }
            set { SetPicklist("roundingoptioncode", (int?)value); _roundingOptionCode = value; }
        }
        private Enums.RoundingOptionCode? _roundingOptionCode;

		[CrmProperty(LogicalName = "roundingoptioncodename")]
        public virtual string RoundingOptionCodeName
        {
            get { FillData(); return _roundingOptionCodeName; }
            set {  _roundingOptionCodeName = value; }
        }
        private string _roundingOptionCodeName;

		[CrmProperty(LogicalName = "roundingpolicycode")]
        public virtual Enums.RoundingPolicyCode? RoundingPolicyCode
        {
            get { FillData(); return _roundingPolicyCode; }
            set { SetPicklist("roundingpolicycode", (int?)value); _roundingPolicyCode = value; }
        }
        private Enums.RoundingPolicyCode? _roundingPolicyCode;

		[CrmProperty(LogicalName = "roundingpolicycodename")]
        public virtual string RoundingPolicyCodeName
        {
            get { FillData(); return _roundingPolicyCodeName; }
            set {  _roundingPolicyCodeName = value; }
        }
        private string _roundingPolicyCodeName;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "uomid", IsLookup = true)]
        public virtual Guid? UoMId
        {
            get { FillData(); return _uoMId; }
            set { SetLookup("uomid", "uom", value); _uoMId = value; }
        }
        private Guid? _uoMId;

		[CrmProperty(LogicalName = "uomidname")]
        public virtual string UoMIdName
        {
            get { FillData(); return _uoMIdName; }
            set {  _uoMIdName = value; }
        }
        private string _uoMIdName;

		[CrmProperty(LogicalName = "uomscheduleid", IsLookup = true)]
        public virtual Guid? UoMScheduleId
        {
            get { FillData(); return _uoMScheduleId; }
            set { SetLookup("uomscheduleid", "uomschedule", value); _uoMScheduleId = value; }
        }
        private Guid? _uoMScheduleId;

		[CrmProperty(LogicalName = "uomscheduleidname")]
        public virtual string UoMScheduleIdName
        {
            get { FillData(); return _uoMScheduleIdName; }
            set {  _uoMScheduleIdName = value; }
        }
        private string _uoMScheduleIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "quote", PrimaryKey = "quoteid")]
	public partial class Quote : CrmEntity
	{
		public class Enums
		{
			public enum FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
			public enum PaymentTermsCode 
			{
				[CrmPicklist(DisplayName = "Net 30", Value = 1)]Net30 = 1,
				[CrmPicklist(DisplayName = "2% 10, Net 30", Value = 2)]_210Net30 = 2,
				[CrmPicklist(DisplayName = "Net 45", Value = 3)]Net45 = 3,
				[CrmPicklist(DisplayName = "Net 60", Value = 4)]Net60 = 4,
			}		
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
			public enum ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Airborne", Value = 1)]Airborne = 1,
				[CrmPicklist(DisplayName = "DHL", Value = 2)]DHL = 2,
				[CrmPicklist(DisplayName = "FedEx", Value = 3)]FedEx = 3,
				[CrmPicklist(DisplayName = "UPS", Value = 4)]UPS = 4,
				[CrmPicklist(DisplayName = "Postal Mail", Value = 5)]PostalMail = 5,
				[CrmPicklist(DisplayName = "Full Load", Value = 6)]FullLoad = 6,
				[CrmPicklist(DisplayName = "Will Call", Value = 7)]WillCall = 7,
			}		
			public enum ShipToFreightTermsCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Draft")]Draft = 0,
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Won", Value = 2)]Won = 2,
				[CrmPicklist(DisplayName = "Closed", Value = 3)]Closed = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "In Progress", Value = 2)]InProgress = 2,
				[CrmPicklist(DisplayName = "Open", Value = 3)]Open = 3,
				[CrmPicklist(DisplayName = "Won", Value = 4)]Won = 4,
				[CrmPicklist(DisplayName = "Lost", Value = 5)]Lost = 5,
				[CrmPicklist(DisplayName = "Canceled", Value = 6)]Canceled = 6,
				[CrmPicklist(DisplayName = "Revised", Value = 7)]Revised = 7,
				[CrmPicklist(DisplayName = "In Progress", Value = 1)]InProgress_2 = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "quote";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string BillToAddressId = "billto_addressid";
			public const string BillToCity = "billto_city";
			public const string BillToContactName = "billto_contactname";
			public const string BillToCountry = "billto_country";
			public const string BillToFax = "billto_fax";
			public const string BillToLine1 = "billto_line1";
			public const string BillToLine2 = "billto_line2";
			public const string BillToLine3 = "billto_line3";
			public const string BillToName = "billto_name";
			public const string BillToPostalCode = "billto_postalcode";
			public const string BillToStateOrProvince = "billto_stateorprovince";
			public const string BillToTelephone = "billto_telephone";
			public const string CampaignId = "campaignid";
			public const string CampaignIdName = "campaignidname";
			public const string ClosedOn = "closedon";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string Description = "description";
			public const string DiscountAmount = "discountamount";
			public const string DiscountPercentage = "discountpercentage";
			public const string EffectiveFrom = "effectivefrom";
			public const string EffectiveTo = "effectiveto";
			public const string ExchangeRate = "exchangerate";
			public const string ExpiresOn = "expireson";
			public const string FreightAmount = "freightamount";
			public const string FreightTermsCode = "freighttermscode";
			public const string FreightTermsCodeName = "freighttermscodename";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityIdName = "opportunityidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodeName = "paymenttermscodename";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string QuoteId = "quoteid";
			public const string QuoteNumber = "quotenumber";
			public const string RequestDeliveryBy = "requestdeliveryby";
			public const string RevisionNumber = "revisionnumber";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string ShipToAddressId = "shipto_addressid";
			public const string ShipToCity = "shipto_city";
			public const string ShipToContactName = "shipto_contactname";
			public const string ShipToCountry = "shipto_country";
			public const string ShipToFax = "shipto_fax";
			public const string ShipToFreightTermsCode = "shipto_freighttermscode";
			public const string ShipToFreightTermsCodeName = "shipto_freighttermscodename";
			public const string ShipToLine1 = "shipto_line1";
			public const string ShipToLine2 = "shipto_line2";
			public const string ShipToLine3 = "shipto_line3";
			public const string ShipToName = "shipto_name";
			public const string ShipToPostalCode = "shipto_postalcode";
			public const string ShipToStateOrProvince = "shipto_stateorprovince";
			public const string ShipToTelephone = "shipto_telephone";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalAmount = "totalamount";
			public const string TotalAmountLessFreight = "totalamountlessfreight";
			public const string TotalDiscountAmount = "totaldiscountamount";
			public const string TotalLineItemAmount = "totallineitemamount";
			public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
			public const string TotalTax = "totaltax";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UniqueDscId = "uniquedscid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WillCall = "willcall";
			public const string WillCallName = "willcallname";
		}

		public override Guid PrimaryKey
		{
			get { return QuoteId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "billto_addressid")]
        public virtual Guid? BillToAddressId
        {
            get { FillData(); return _billToAddressId; }
            set { SetValue<Guid?>("billto_addressid", value); _billToAddressId = value; }
        }
        private Guid? _billToAddressId;

		[CrmProperty(LogicalName = "billto_city")]
        public virtual string BillToCity
        {
            get { FillData(); return _billToCity; }
            set { SetValue<string>("billto_city", value); _billToCity = value; }
        }
        private string _billToCity;

		[CrmProperty(LogicalName = "billto_contactname")]
        public virtual string BillToContactName
        {
            get { FillData(); return _billToContactName; }
            set { SetValue<string>("billto_contactname", value); _billToContactName = value; }
        }
        private string _billToContactName;

		[CrmProperty(LogicalName = "billto_country")]
        public virtual string BillToCountry
        {
            get { FillData(); return _billToCountry; }
            set { SetValue<string>("billto_country", value); _billToCountry = value; }
        }
        private string _billToCountry;

		[CrmProperty(LogicalName = "billto_fax")]
        public virtual string BillToFax
        {
            get { FillData(); return _billToFax; }
            set { SetValue<string>("billto_fax", value); _billToFax = value; }
        }
        private string _billToFax;

		[CrmProperty(LogicalName = "billto_line1")]
        public virtual string BillToLine1
        {
            get { FillData(); return _billToLine1; }
            set { SetValue<string>("billto_line1", value); _billToLine1 = value; }
        }
        private string _billToLine1;

		[CrmProperty(LogicalName = "billto_line2")]
        public virtual string BillToLine2
        {
            get { FillData(); return _billToLine2; }
            set { SetValue<string>("billto_line2", value); _billToLine2 = value; }
        }
        private string _billToLine2;

		[CrmProperty(LogicalName = "billto_line3")]
        public virtual string BillToLine3
        {
            get { FillData(); return _billToLine3; }
            set { SetValue<string>("billto_line3", value); _billToLine3 = value; }
        }
        private string _billToLine3;

		[CrmProperty(LogicalName = "billto_name")]
        public virtual string BillToName
        {
            get { FillData(); return _billToName; }
            set { SetValue<string>("billto_name", value); _billToName = value; }
        }
        private string _billToName;

		[CrmProperty(LogicalName = "billto_postalcode")]
        public virtual string BillToPostalCode
        {
            get { FillData(); return _billToPostalCode; }
            set { SetValue<string>("billto_postalcode", value); _billToPostalCode = value; }
        }
        private string _billToPostalCode;

		[CrmProperty(LogicalName = "billto_stateorprovince")]
        public virtual string BillToStateOrProvince
        {
            get { FillData(); return _billToStateOrProvince; }
            set { SetValue<string>("billto_stateorprovince", value); _billToStateOrProvince = value; }
        }
        private string _billToStateOrProvince;

		[CrmProperty(LogicalName = "billto_telephone")]
        public virtual string BillToTelephone
        {
            get { FillData(); return _billToTelephone; }
            set { SetValue<string>("billto_telephone", value); _billToTelephone = value; }
        }
        private string _billToTelephone;

		[CrmProperty(LogicalName = "campaignid", IsLookup = true)]
        public virtual Guid? CampaignId
        {
            get { FillData(); return _campaignId; }
            set { SetLookup("campaignid", "campaign", value); _campaignId = value; }
        }
        private Guid? _campaignId;

		[CrmProperty(LogicalName = "campaignidname")]
        public virtual string CampaignIdName
        {
            get { FillData(); return _campaignIdName; }
            set {  _campaignIdName = value; }
        }
        private string _campaignIdName;

		[CrmProperty(LogicalName = "closedon")]
        public virtual DateTime? ClosedOn
        {
            get { FillData(); return _closedOn; }
            set { SetValue<DateTime?>("closedon", value); _closedOn = value; }
        }
        private DateTime? _closedOn;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidname")]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contactidyominame")]
        public virtual string ContactIdYomiName
        {
            get { FillData(); return _contactIdYomiName; }
            set {  _contactIdYomiName = value; }
        }
        private string _contactIdYomiName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "discountamount")]
        public virtual decimal? DiscountAmount
        {
            get { FillData(); return _discountAmount; }
            set { SetMoney("discountamount", value); _discountAmount = value; }
        }
        private decimal? _discountAmount;

		[CrmProperty(LogicalName = "discountpercentage")]
        public virtual decimal? DiscountPercentage
        {
            get { FillData(); return _discountPercentage; }
            set { SetValue<decimal?>("discountpercentage", value); _discountPercentage = value; }
        }
        private decimal? _discountPercentage;

		[CrmProperty(LogicalName = "effectivefrom")]
        public virtual DateTime? EffectiveFrom
        {
            get { FillData(); return _effectiveFrom; }
            set { SetValue<DateTime?>("effectivefrom", value); _effectiveFrom = value; }
        }
        private DateTime? _effectiveFrom;

		[CrmProperty(LogicalName = "effectiveto")]
        public virtual DateTime? EffectiveTo
        {
            get { FillData(); return _effectiveTo; }
            set { SetValue<DateTime?>("effectiveto", value); _effectiveTo = value; }
        }
        private DateTime? _effectiveTo;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "expireson")]
        public virtual DateTime? ExpiresOn
        {
            get { FillData(); return _expiresOn; }
            set { SetValue<DateTime?>("expireson", value); _expiresOn = value; }
        }
        private DateTime? _expiresOn;

		[CrmProperty(LogicalName = "freightamount")]
        public virtual decimal? FreightAmount
        {
            get { FillData(); return _freightAmount; }
            set { SetMoney("freightamount", value); _freightAmount = value; }
        }
        private decimal? _freightAmount;

		[CrmProperty(LogicalName = "freighttermscode")]
        public virtual Enums.FreightTermsCode? FreightTermsCode
        {
            get { FillData(); return _freightTermsCode; }
            set { SetPicklist("freighttermscode", (int?)value); _freightTermsCode = value; }
        }
        private Enums.FreightTermsCode? _freightTermsCode;

		[CrmProperty(LogicalName = "freighttermscodename")]
        public virtual string FreightTermsCodeName
        {
            get { FillData(); return _freightTermsCodeName; }
            set {  _freightTermsCodeName = value; }
        }
        private string _freightTermsCodeName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "opportunityid", IsLookup = true)]
        public virtual Guid? OpportunityId
        {
            get { FillData(); return _opportunityId; }
            set { SetLookup("opportunityid", "opportunity", value); _opportunityId = value; }
        }
        private Guid? _opportunityId;

		[CrmProperty(LogicalName = "opportunityidname")]
        public virtual string OpportunityIdName
        {
            get { FillData(); return _opportunityIdName; }
            set {  _opportunityIdName = value; }
        }
        private string _opportunityIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "paymenttermscode")]
        public virtual Enums.PaymentTermsCode? PaymentTermsCode
        {
            get { FillData(); return _paymentTermsCode; }
            set { SetPicklist("paymenttermscode", (int?)value); _paymentTermsCode = value; }
        }
        private Enums.PaymentTermsCode? _paymentTermsCode;

		[CrmProperty(LogicalName = "paymenttermscodename")]
        public virtual string PaymentTermsCodeName
        {
            get { FillData(); return _paymentTermsCodeName; }
            set {  _paymentTermsCodeName = value; }
        }
        private string _paymentTermsCodeName;

		[CrmProperty(LogicalName = "pricelevelid", IsLookup = true)]
        public virtual Guid? PriceLevelId
        {
            get { FillData(); return _priceLevelId; }
            set { SetLookup("pricelevelid", "pricelevel", value); _priceLevelId = value; }
        }
        private Guid? _priceLevelId;

		[CrmProperty(LogicalName = "pricelevelidname")]
        public virtual string PriceLevelIdName
        {
            get { FillData(); return _priceLevelIdName; }
            set {  _priceLevelIdName = value; }
        }
        private string _priceLevelIdName;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "quoteid")]
        public virtual Guid QuoteId
        {
            get { FillData(); return _quoteId; }
            set {  _quoteId = value; }
        }
        private Guid _quoteId;

		[CrmProperty(LogicalName = "quotenumber")]
        public virtual string QuoteNumber
        {
            get { FillData(); return _quoteNumber; }
            set {  _quoteNumber = value; }
        }
        private string _quoteNumber;

		[CrmProperty(LogicalName = "requestdeliveryby")]
        public virtual DateTime? RequestDeliveryBy
        {
            get { FillData(); return _requestDeliveryBy; }
            set { SetValue<DateTime?>("requestdeliveryby", value); _requestDeliveryBy = value; }
        }
        private DateTime? _requestDeliveryBy;

		[CrmProperty(LogicalName = "revisionnumber")]
        public virtual int? RevisionNumber
        {
            get { FillData(); return _revisionNumber; }
            set {  _revisionNumber = value; }
        }
        private int? _revisionNumber;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "shipto_addressid")]
        public virtual Guid? ShipToAddressId
        {
            get { FillData(); return _shipToAddressId; }
            set { SetValue<Guid?>("shipto_addressid", value); _shipToAddressId = value; }
        }
        private Guid? _shipToAddressId;

		[CrmProperty(LogicalName = "shipto_city")]
        public virtual string ShipToCity
        {
            get { FillData(); return _shipToCity; }
            set { SetValue<string>("shipto_city", value); _shipToCity = value; }
        }
        private string _shipToCity;

		[CrmProperty(LogicalName = "shipto_contactname")]
        public virtual string ShipToContactName
        {
            get { FillData(); return _shipToContactName; }
            set { SetValue<string>("shipto_contactname", value); _shipToContactName = value; }
        }
        private string _shipToContactName;

		[CrmProperty(LogicalName = "shipto_country")]
        public virtual string ShipToCountry
        {
            get { FillData(); return _shipToCountry; }
            set { SetValue<string>("shipto_country", value); _shipToCountry = value; }
        }
        private string _shipToCountry;

		[CrmProperty(LogicalName = "shipto_fax")]
        public virtual string ShipToFax
        {
            get { FillData(); return _shipToFax; }
            set { SetValue<string>("shipto_fax", value); _shipToFax = value; }
        }
        private string _shipToFax;

		[CrmProperty(LogicalName = "shipto_freighttermscode")]
        public virtual Enums.ShipToFreightTermsCode? ShipToFreightTermsCode
        {
            get { FillData(); return _shipToFreightTermsCode; }
            set { SetPicklist("shipto_freighttermscode", (int?)value); _shipToFreightTermsCode = value; }
        }
        private Enums.ShipToFreightTermsCode? _shipToFreightTermsCode;

		[CrmProperty(LogicalName = "shipto_freighttermscodename")]
        public virtual string ShipToFreightTermsCodeName
        {
            get { FillData(); return _shipToFreightTermsCodeName; }
            set {  _shipToFreightTermsCodeName = value; }
        }
        private string _shipToFreightTermsCodeName;

		[CrmProperty(LogicalName = "shipto_line1")]
        public virtual string ShipToLine1
        {
            get { FillData(); return _shipToLine1; }
            set { SetValue<string>("shipto_line1", value); _shipToLine1 = value; }
        }
        private string _shipToLine1;

		[CrmProperty(LogicalName = "shipto_line2")]
        public virtual string ShipToLine2
        {
            get { FillData(); return _shipToLine2; }
            set { SetValue<string>("shipto_line2", value); _shipToLine2 = value; }
        }
        private string _shipToLine2;

		[CrmProperty(LogicalName = "shipto_line3")]
        public virtual string ShipToLine3
        {
            get { FillData(); return _shipToLine3; }
            set { SetValue<string>("shipto_line3", value); _shipToLine3 = value; }
        }
        private string _shipToLine3;

		[CrmProperty(LogicalName = "shipto_name")]
        public virtual string ShipToName
        {
            get { FillData(); return _shipToName; }
            set { SetValue<string>("shipto_name", value); _shipToName = value; }
        }
        private string _shipToName;

		[CrmProperty(LogicalName = "shipto_postalcode")]
        public virtual string ShipToPostalCode
        {
            get { FillData(); return _shipToPostalCode; }
            set { SetValue<string>("shipto_postalcode", value); _shipToPostalCode = value; }
        }
        private string _shipToPostalCode;

		[CrmProperty(LogicalName = "shipto_stateorprovince")]
        public virtual string ShipToStateOrProvince
        {
            get { FillData(); return _shipToStateOrProvince; }
            set { SetValue<string>("shipto_stateorprovince", value); _shipToStateOrProvince = value; }
        }
        private string _shipToStateOrProvince;

		[CrmProperty(LogicalName = "shipto_telephone")]
        public virtual string ShipToTelephone
        {
            get { FillData(); return _shipToTelephone; }
            set { SetValue<string>("shipto_telephone", value); _shipToTelephone = value; }
        }
        private string _shipToTelephone;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "totalamount")]
        public virtual decimal? TotalAmount
        {
            get { FillData(); return _totalAmount; }
            set {  _totalAmount = value; }
        }
        private decimal? _totalAmount;

		[CrmProperty(LogicalName = "totalamountlessfreight")]
        public virtual decimal? TotalAmountLessFreight
        {
            get { FillData(); return _totalAmountLessFreight; }
            set {  _totalAmountLessFreight = value; }
        }
        private decimal? _totalAmountLessFreight;

		[CrmProperty(LogicalName = "totaldiscountamount")]
        public virtual decimal? TotalDiscountAmount
        {
            get { FillData(); return _totalDiscountAmount; }
            set {  _totalDiscountAmount = value; }
        }
        private decimal? _totalDiscountAmount;

		[CrmProperty(LogicalName = "totallineitemamount")]
        public virtual decimal? TotalLineItemAmount
        {
            get { FillData(); return _totalLineItemAmount; }
            set {  _totalLineItemAmount = value; }
        }
        private decimal? _totalLineItemAmount;

		[CrmProperty(LogicalName = "totallineitemdiscountamount")]
        public virtual decimal? TotalLineItemDiscountAmount
        {
            get { FillData(); return _totalLineItemDiscountAmount; }
            set {  _totalLineItemDiscountAmount = value; }
        }
        private decimal? _totalLineItemDiscountAmount;

		[CrmProperty(LogicalName = "totaltax")]
        public virtual decimal? TotalTax
        {
            get { FillData(); return _totalTax; }
            set {  _totalTax = value; }
        }
        private decimal? _totalTax;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "uniquedscid")]
        public virtual Guid? UniqueDscId
        {
            get { FillData(); return _uniqueDscId; }
            set {  _uniqueDscId = value; }
        }
        private Guid? _uniqueDscId;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "willcall")]
        public virtual bool? WillCall
        {
            get { FillData(); return _willCall; }
            set { SetValue<bool?>("willcall", value); _willCall = value; }
        }
        private bool? _willCall;

		[CrmProperty(LogicalName = "willcallname")]
        public virtual string WillCallName
        {
            get { FillData(); return _willCallName; }
            set {  _willCallName = value; }
        }
        private string _willCallName;

	}
	[CrmEntity(LogicalName = "quoteclose", PrimaryKey = "activityid")]
	public partial class QuoteClose : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Open", Value = 1)]Open = 1,
				[CrmPicklist(DisplayName = "Completed", Value = 2)]Completed = 2,
				[CrmPicklist(DisplayName = "Canceled", Value = 3)]Canceled = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "quoteclose";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string QuoteId = "quoteid";
			public const string QuoteIdName = "quoteidname";
			public const string QuoteNumber = "quotenumber";
			public const string Revision = "revision";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "quoteid", IsLookup = true)]
        public virtual Guid? QuoteId
        {
            get { FillData(); return _quoteId; }
            set { SetLookup("quoteid", "quote", value); _quoteId = value; }
        }
        private Guid? _quoteId;

		[CrmProperty(LogicalName = "quoteidname")]
        public virtual string QuoteIdName
        {
            get { FillData(); return _quoteIdName; }
            set {  _quoteIdName = value; }
        }
        private string _quoteIdName;

		[CrmProperty(LogicalName = "quotenumber")]
        public virtual string QuoteNumber
        {
            get { FillData(); return _quoteNumber; }
            set { SetValue<string>("quotenumber", value); _quoteNumber = value; }
        }
        private string _quoteNumber;

		[CrmProperty(LogicalName = "revision")]
        public virtual int? Revision
        {
            get { FillData(); return _revision; }
            set { SetValue<int?>("revision", value); _revision = value; }
        }
        private int? _revision;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "quotedetail", PrimaryKey = "quotedetailid")]
	public partial class QuoteDetail : CrmEntity
	{
		public class Enums
		{
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
			public enum QuoteStateCode 
			{
			}		
			public enum ShipToFreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "quotedetail";
			
			public const string BaseAmount = "baseamount";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExtendedAmount = "extendedamount";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsPriceOverridden = "ispriceoverridden";
			public const string IsPriceOverriddenName = "ispriceoverriddenname";
			public const string IsProductOverridden = "isproductoverridden";
			public const string IsProductOverriddenName = "isproductoverriddenname";
			public const string LineItemNumber = "lineitemnumber";
			public const string ManualDiscountAmount = "manualdiscountamount";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string PricePerUnit = "priceperunit";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string ProductDescription = "productdescription";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string Quantity = "quantity";
			public const string QuoteDetailId = "quotedetailid";
			public const string QuoteId = "quoteid";
			public const string QuoteIdName = "quoteidName";
			public const string QuoteStateCode = "quotestatecode";
			public const string QuoteStateCodeName = "quotestatecodename";
			public const string RequestDeliveryBy = "requestdeliveryby";
			public const string SalesRepId = "salesrepid";
			public const string SalesRepIdName = "salesrepidname";
			public const string SalesRepIdYomiName = "salesrepidyominame";
			public const string ShipToAddressId = "shipto_addressid";
			public const string ShipToCity = "shipto_city";
			public const string ShipToContactName = "shipto_contactname";
			public const string ShipToCountry = "shipto_country";
			public const string ShipToFax = "shipto_fax";
			public const string ShipToFreightTermsCode = "shipto_freighttermscode";
			public const string ShipToFreightTermsCodeName = "shipto_freighttermscodename";
			public const string ShipToLine1 = "shipto_line1";
			public const string ShipToLine2 = "shipto_line2";
			public const string ShipToLine3 = "shipto_line3";
			public const string ShipToName = "shipto_name";
			public const string ShipToPostalCode = "shipto_postalcode";
			public const string ShipToStateOrProvince = "shipto_stateorprovince";
			public const string ShipToTelephone = "shipto_telephone";
			public const string Tax = "tax";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UoMId = "uomid";
			public const string UoMIdName = "uomidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string VolumeDiscountAmount = "volumediscountamount";
			public const string WillCall = "willcall";
			public const string WillCallName = "willcallname";
		}

		public override Guid PrimaryKey
		{
			get { return QuoteDetailId; }
		}

		[CrmProperty(LogicalName = "baseamount")]
        public virtual decimal? BaseAmount
        {
            get { FillData(); return _baseAmount; }
            set {  _baseAmount = value; }
        }
        private decimal? _baseAmount;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "extendedamount")]
        public virtual decimal? ExtendedAmount
        {
            get { FillData(); return _extendedAmount; }
            set {  _extendedAmount = value; }
        }
        private decimal? _extendedAmount;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "ispriceoverridden")]
        public virtual bool? IsPriceOverridden
        {
            get { FillData(); return _isPriceOverridden; }
            set { SetValue<bool?>("ispriceoverridden", value); _isPriceOverridden = value; }
        }
        private bool? _isPriceOverridden;

		[CrmProperty(LogicalName = "ispriceoverriddenname")]
        public virtual string IsPriceOverriddenName
        {
            get { FillData(); return _isPriceOverriddenName; }
            set {  _isPriceOverriddenName = value; }
        }
        private string _isPriceOverriddenName;

		[CrmProperty(LogicalName = "isproductoverridden")]
        public virtual bool? IsProductOverridden
        {
            get { FillData(); return _isProductOverridden; }
            set { SetValue<bool?>("isproductoverridden", value); _isProductOverridden = value; }
        }
        private bool? _isProductOverridden;

		[CrmProperty(LogicalName = "isproductoverriddenname")]
        public virtual string IsProductOverriddenName
        {
            get { FillData(); return _isProductOverriddenName; }
            set {  _isProductOverriddenName = value; }
        }
        private string _isProductOverriddenName;

		[CrmProperty(LogicalName = "lineitemnumber")]
        public virtual int? LineItemNumber
        {
            get { FillData(); return _lineItemNumber; }
            set { SetValue<int?>("lineitemnumber", value); _lineItemNumber = value; }
        }
        private int? _lineItemNumber;

		[CrmProperty(LogicalName = "manualdiscountamount")]
        public virtual decimal? ManualDiscountAmount
        {
            get { FillData(); return _manualDiscountAmount; }
            set { SetMoney("manualdiscountamount", value); _manualDiscountAmount = value; }
        }
        private decimal? _manualDiscountAmount;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owningbusinessunit")]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owninguser")]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "priceperunit")]
        public virtual decimal? PricePerUnit
        {
            get { FillData(); return _pricePerUnit; }
            set { SetMoney("priceperunit", value); _pricePerUnit = value; }
        }
        private decimal? _pricePerUnit;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "productdescription")]
        public virtual string ProductDescription
        {
            get { FillData(); return _productDescription; }
            set { SetValue<string>("productdescription", value); _productDescription = value; }
        }
        private string _productDescription;

		[CrmProperty(LogicalName = "productid", IsLookup = true)]
        public virtual Guid? ProductId
        {
            get { FillData(); return _productId; }
            set { SetLookup("productid", "product", value); _productId = value; }
        }
        private Guid? _productId;

		[CrmProperty(LogicalName = "productidname")]
        public virtual string ProductIdName
        {
            get { FillData(); return _productIdName; }
            set {  _productIdName = value; }
        }
        private string _productIdName;

		[CrmProperty(LogicalName = "quantity")]
        public virtual decimal? Quantity
        {
            get { FillData(); return _quantity; }
            set { SetValue<decimal?>("quantity", value); _quantity = value; }
        }
        private decimal? _quantity;

		[CrmProperty(LogicalName = "quotedetailid")]
        public virtual Guid QuoteDetailId
        {
            get { FillData(); return _quoteDetailId; }
            set {  _quoteDetailId = value; }
        }
        private Guid _quoteDetailId;

		[CrmProperty(LogicalName = "quoteid", IsLookup = true)]
        public virtual Guid? QuoteId
        {
            get { FillData(); return _quoteId; }
            set { SetLookup("quoteid", "quote", value); _quoteId = value; }
        }
        private Guid? _quoteId;

		[CrmProperty(LogicalName = "quoteidName", IsEntityReferenceHelper = true)]
        public virtual string QuoteIdName
        {
            get { FillData(); return _quoteIdName; }
            set {  _quoteIdName = value; }
        }
        private string _quoteIdName;

		[CrmProperty(LogicalName = "quotestatecode")]
        public virtual Enums.QuoteStateCode? QuoteStateCode
        {
            get { FillData(); return _quoteStateCode; }
            set {  _quoteStateCode = value; }
        }
        private Enums.QuoteStateCode? _quoteStateCode;

		[CrmProperty(LogicalName = "quotestatecodename")]
        public virtual string QuoteStateCodeName
        {
            get { FillData(); return _quoteStateCodeName; }
            set {  _quoteStateCodeName = value; }
        }
        private string _quoteStateCodeName;

		[CrmProperty(LogicalName = "requestdeliveryby")]
        public virtual DateTime? RequestDeliveryBy
        {
            get { FillData(); return _requestDeliveryBy; }
            set { SetValue<DateTime?>("requestdeliveryby", value); _requestDeliveryBy = value; }
        }
        private DateTime? _requestDeliveryBy;

		[CrmProperty(LogicalName = "salesrepid", IsLookup = true)]
        public virtual Guid? SalesRepId
        {
            get { FillData(); return _salesRepId; }
            set { SetLookup("salesrepid", "systemuser", value); _salesRepId = value; }
        }
        private Guid? _salesRepId;

		[CrmProperty(LogicalName = "salesrepidname")]
        public virtual string SalesRepIdName
        {
            get { FillData(); return _salesRepIdName; }
            set {  _salesRepIdName = value; }
        }
        private string _salesRepIdName;

		[CrmProperty(LogicalName = "salesrepidyominame")]
        public virtual string SalesRepIdYomiName
        {
            get { FillData(); return _salesRepIdYomiName; }
            set {  _salesRepIdYomiName = value; }
        }
        private string _salesRepIdYomiName;

		[CrmProperty(LogicalName = "shipto_addressid")]
        public virtual Guid? ShipToAddressId
        {
            get { FillData(); return _shipToAddressId; }
            set { SetValue<Guid?>("shipto_addressid", value); _shipToAddressId = value; }
        }
        private Guid? _shipToAddressId;

		[CrmProperty(LogicalName = "shipto_city")]
        public virtual string ShipToCity
        {
            get { FillData(); return _shipToCity; }
            set { SetValue<string>("shipto_city", value); _shipToCity = value; }
        }
        private string _shipToCity;

		[CrmProperty(LogicalName = "shipto_contactname")]
        public virtual string ShipToContactName
        {
            get { FillData(); return _shipToContactName; }
            set { SetValue<string>("shipto_contactname", value); _shipToContactName = value; }
        }
        private string _shipToContactName;

		[CrmProperty(LogicalName = "shipto_country")]
        public virtual string ShipToCountry
        {
            get { FillData(); return _shipToCountry; }
            set { SetValue<string>("shipto_country", value); _shipToCountry = value; }
        }
        private string _shipToCountry;

		[CrmProperty(LogicalName = "shipto_fax")]
        public virtual string ShipToFax
        {
            get { FillData(); return _shipToFax; }
            set { SetValue<string>("shipto_fax", value); _shipToFax = value; }
        }
        private string _shipToFax;

		[CrmProperty(LogicalName = "shipto_freighttermscode")]
        public virtual Enums.ShipToFreightTermsCode? ShipToFreightTermsCode
        {
            get { FillData(); return _shipToFreightTermsCode; }
            set { SetPicklist("shipto_freighttermscode", (int?)value); _shipToFreightTermsCode = value; }
        }
        private Enums.ShipToFreightTermsCode? _shipToFreightTermsCode;

		[CrmProperty(LogicalName = "shipto_freighttermscodename")]
        public virtual string ShipToFreightTermsCodeName
        {
            get { FillData(); return _shipToFreightTermsCodeName; }
            set {  _shipToFreightTermsCodeName = value; }
        }
        private string _shipToFreightTermsCodeName;

		[CrmProperty(LogicalName = "shipto_line1")]
        public virtual string ShipToLine1
        {
            get { FillData(); return _shipToLine1; }
            set { SetValue<string>("shipto_line1", value); _shipToLine1 = value; }
        }
        private string _shipToLine1;

		[CrmProperty(LogicalName = "shipto_line2")]
        public virtual string ShipToLine2
        {
            get { FillData(); return _shipToLine2; }
            set { SetValue<string>("shipto_line2", value); _shipToLine2 = value; }
        }
        private string _shipToLine2;

		[CrmProperty(LogicalName = "shipto_line3")]
        public virtual string ShipToLine3
        {
            get { FillData(); return _shipToLine3; }
            set { SetValue<string>("shipto_line3", value); _shipToLine3 = value; }
        }
        private string _shipToLine3;

		[CrmProperty(LogicalName = "shipto_name")]
        public virtual string ShipToName
        {
            get { FillData(); return _shipToName; }
            set { SetValue<string>("shipto_name", value); _shipToName = value; }
        }
        private string _shipToName;

		[CrmProperty(LogicalName = "shipto_postalcode")]
        public virtual string ShipToPostalCode
        {
            get { FillData(); return _shipToPostalCode; }
            set { SetValue<string>("shipto_postalcode", value); _shipToPostalCode = value; }
        }
        private string _shipToPostalCode;

		[CrmProperty(LogicalName = "shipto_stateorprovince")]
        public virtual string ShipToStateOrProvince
        {
            get { FillData(); return _shipToStateOrProvince; }
            set { SetValue<string>("shipto_stateorprovince", value); _shipToStateOrProvince = value; }
        }
        private string _shipToStateOrProvince;

		[CrmProperty(LogicalName = "shipto_telephone")]
        public virtual string ShipToTelephone
        {
            get { FillData(); return _shipToTelephone; }
            set { SetValue<string>("shipto_telephone", value); _shipToTelephone = value; }
        }
        private string _shipToTelephone;

		[CrmProperty(LogicalName = "tax")]
        public virtual decimal? Tax
        {
            get { FillData(); return _tax; }
            set { SetMoney("tax", value); _tax = value; }
        }
        private decimal? _tax;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "uomid", IsLookup = true)]
        public virtual Guid? UoMId
        {
            get { FillData(); return _uoMId; }
            set { SetLookup("uomid", "uom", value); _uoMId = value; }
        }
        private Guid? _uoMId;

		[CrmProperty(LogicalName = "uomidname")]
        public virtual string UoMIdName
        {
            get { FillData(); return _uoMIdName; }
            set {  _uoMIdName = value; }
        }
        private string _uoMIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "volumediscountamount")]
        public virtual decimal? VolumeDiscountAmount
        {
            get { FillData(); return _volumeDiscountAmount; }
            set {  _volumeDiscountAmount = value; }
        }
        private decimal? _volumeDiscountAmount;

		[CrmProperty(LogicalName = "willcall")]
        public virtual bool? WillCall
        {
            get { FillData(); return _willCall; }
            set { SetValue<bool?>("willcall", value); _willCall = value; }
        }
        private bool? _willCall;

		[CrmProperty(LogicalName = "willcallname")]
        public virtual string WillCallName
        {
            get { FillData(); return _willCallName; }
            set {  _willCallName = value; }
        }
        private string _willCallName;

	}
	[CrmEntity(LogicalName = "recurringappointmentmaster", PrimaryKey = "activityid")]
	public partial class RecurringAppointmentMaster : CrmEntity
	{
		public class Enums
		{
			public enum ExpansionStateCode 
			{
				[CrmPicklist(DisplayName = "Unexpanded")]Unexpanded = 0,
				[CrmPicklist(DisplayName = "Partial", Value = 1)]__Partial = 1,
				[CrmPicklist(DisplayName = "Full", Value = 2)]Full = 2,
			}		
			public enum Instance 
			{
				[CrmPicklist(DisplayName = "First", Value = 1)]First = 1,
				[CrmPicklist(DisplayName = "Second", Value = 2)]Second = 2,
				[CrmPicklist(DisplayName = "Third", Value = 3)]Third = 3,
				[CrmPicklist(DisplayName = "Fourth", Value = 4)]Fourth = 4,
				[CrmPicklist(DisplayName = "Last", Value = 5)]Last = 5,
			}		
			public enum InstanceTypeCode 
			{
				[CrmPicklist(DisplayName = "Not Recurring")]NotRecurring = 0,
				[CrmPicklist(DisplayName = "Recurring Master", Value = 1)]RecurringMaster = 1,
				[CrmPicklist(DisplayName = "Recurring Instance", Value = 2)]RecurringInstance = 2,
				[CrmPicklist(DisplayName = "Recurring Exception", Value = 3)]RecurringException = 3,
				[CrmPicklist(DisplayName = "Recurring Future Exception", Value = 4)]RecurringFutureException = 4,
			}		
			public enum MonthOfYear 
			{
				[CrmPicklist(DisplayName = "Invalid Month Of Year")]InvalidMonthOfYear = 0,
				[CrmPicklist(DisplayName = "January", Value = 1)]January = 1,
				[CrmPicklist(DisplayName = "February", Value = 2)]February = 2,
				[CrmPicklist(DisplayName = "March", Value = 3)]March = 3,
				[CrmPicklist(DisplayName = "April", Value = 4)]April = 4,
				[CrmPicklist(DisplayName = "May", Value = 5)]May = 5,
				[CrmPicklist(DisplayName = "June", Value = 6)]June = 6,
				[CrmPicklist(DisplayName = "July", Value = 7)]July = 7,
				[CrmPicklist(DisplayName = "August", Value = 8)]August = 8,
				[CrmPicklist(DisplayName = "September", Value = 9)]September = 9,
				[CrmPicklist(DisplayName = "October", Value = 10)]October = 10,
				[CrmPicklist(DisplayName = "November", Value = 11)]November = 11,
				[CrmPicklist(DisplayName = "December", Value = 12)]December = 12,
			}		
			public enum PatternEndType 
			{
				[CrmPicklist(DisplayName = "No End Date", Value = 1)]NoEndDate = 1,
				[CrmPicklist(DisplayName = "Occurrences", Value = 2)]Occurrences = 2,
				[CrmPicklist(DisplayName = "Pattern End Date", Value = 3)]PatternEndDate = 3,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum RecurrencePatternType 
			{
				[CrmPicklist(DisplayName = "Daily")]Daily = 0,
				[CrmPicklist(DisplayName = "Weekly", Value = 1)]Weekly = 1,
				[CrmPicklist(DisplayName = "Monthly", Value = 2)]Monthly = 2,
				[CrmPicklist(DisplayName = "Yearly", Value = 3)]Yearly = 3,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Free", Value = 1)]Free = 1,
				[CrmPicklist(DisplayName = "Tentative", Value = 2)]Tentative = 2,
				[CrmPicklist(DisplayName = "Completed", Value = 3)]Completed = 3,
				[CrmPicklist(DisplayName = "Canceled", Value = 4)]Canceled = 4,
				[CrmPicklist(DisplayName = "Busy", Value = 5)]Busy = 5,
				[CrmPicklist(DisplayName = "Out of Office", Value = 6)]OutOfOffice = 6,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "recurringappointmentmaster";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DayOfMonth = "dayofmonth";
			public const string DaysOfWeekMask = "daysofweekmask";
			public const string DeletedExceptionsList = "deletedexceptionslist";
			public const string Description = "description";
			public const string Duration = "duration";
			public const string EffectiveEndDate = "effectiveenddate";
			public const string EffectiveStartDate = "effectivestartdate";
			public const string EndTime = "endtime";
			public const string ExchangeRate = "exchangerate";
			public const string ExpansionStateCode = "expansionstatecode";
			public const string ExpansionStateCodeName = "expansionstatecodename";
			public const string FirstDayOfWeek = "firstdayofweek";
			public const string GlobalObjectId = "globalobjectid";
			public const string GroupId = "groupid";
			public const string GroupIdName = "groupidName";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Instance = "instance";
			public const string InstanceName = "instancename";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string Interval = "interval";
			public const string IsAllDayEvent = "isalldayevent";
			public const string IsAllDayEventName = "isalldayeventname";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsNthMonthly = "isnthmonthly";
			public const string IsNthMonthlyName = "isnthmonthlyname";
			public const string IsNthYearly = "isnthyearly";
			public const string IsNthYearlyName = "isnthyearlyname";
			public const string IsRegenerate = "isregenerate";
			public const string IsRegenerateName = "isregeneratename";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWeekDayPattern = "isweekdaypattern";
			public const string IsWeekDayPatternName = "isweekdaypatternname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LastExpandedInstanceDate = "lastexpandedinstancedate";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MonthOfYear = "monthofyear";
			public const string MonthOfYearName = "monthofyearname";
			public const string NextExpansionInstanceDate = "nextexpansioninstancedate";
			public const string Occurrences = "occurrences";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OutlookOwnerApptId = "outlookownerapptid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PatternEndDate = "patternenddate";
			public const string PatternEndType = "patternendtype";
			public const string PatternEndTypeName = "patternendtypename";
			public const string PatternStartDate = "patternstartdate";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RecurrencePatternType = "recurrencepatterntype";
			public const string RecurrencePatternTypeName = "recurrencepatterntypename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string RuleId = "ruleid";
			public const string RuleIdName = "ruleidName";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesStatus = "seriesstatus";
			public const string SeriesStatusName = "seriesstatusname";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StartTime = "starttime";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "dayofmonth")]
        public virtual int? DayOfMonth
        {
            get { FillData(); return _dayOfMonth; }
            set { SetValue<int?>("dayofmonth", value); _dayOfMonth = value; }
        }
        private int? _dayOfMonth;

		[CrmProperty(LogicalName = "daysofweekmask")]
        public virtual int? DaysOfWeekMask
        {
            get { FillData(); return _daysOfWeekMask; }
            set { SetValue<int?>("daysofweekmask", value); _daysOfWeekMask = value; }
        }
        private int? _daysOfWeekMask;

		[CrmProperty(LogicalName = "deletedexceptionslist")]
        public virtual string DeletedExceptionsList
        {
            get { FillData(); return _deletedExceptionsList; }
            set {  _deletedExceptionsList = value; }
        }
        private string _deletedExceptionsList;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "duration")]
        public virtual int? Duration
        {
            get { FillData(); return _duration; }
            set { SetValue<int?>("duration", value); _duration = value; }
        }
        private int? _duration;

		[CrmProperty(LogicalName = "effectiveenddate")]
        public virtual DateTime? EffectiveEndDate
        {
            get { FillData(); return _effectiveEndDate; }
            set { SetValue<DateTime?>("effectiveenddate", value); _effectiveEndDate = value; }
        }
        private DateTime? _effectiveEndDate;

		[CrmProperty(LogicalName = "effectivestartdate")]
        public virtual DateTime? EffectiveStartDate
        {
            get { FillData(); return _effectiveStartDate; }
            set { SetValue<DateTime?>("effectivestartdate", value); _effectiveStartDate = value; }
        }
        private DateTime? _effectiveStartDate;

		[CrmProperty(LogicalName = "endtime")]
        public virtual DateTime? EndTime
        {
            get { FillData(); return _endTime; }
            set { SetValue<DateTime?>("endtime", value); _endTime = value; }
        }
        private DateTime? _endTime;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "expansionstatecode")]
        public virtual Enums.ExpansionStateCode? ExpansionStateCode
        {
            get { FillData(); return _expansionStateCode; }
            set {  _expansionStateCode = value; }
        }
        private Enums.ExpansionStateCode? _expansionStateCode;

		[CrmProperty(LogicalName = "expansionstatecodename")]
        public virtual string ExpansionStateCodeName
        {
            get { FillData(); return _expansionStateCodeName; }
            set {  _expansionStateCodeName = value; }
        }
        private string _expansionStateCodeName;

		[CrmProperty(LogicalName = "firstdayofweek")]
        public virtual int? FirstDayOfWeek
        {
            get { FillData(); return _firstDayOfWeek; }
            set {  _firstDayOfWeek = value; }
        }
        private int? _firstDayOfWeek;

		[CrmProperty(LogicalName = "globalobjectid")]
        public virtual string GlobalObjectId
        {
            get { FillData(); return _globalObjectId; }
            set { SetValue<string>("globalobjectid", value); _globalObjectId = value; }
        }
        private string _globalObjectId;

		[CrmProperty(LogicalName = "groupid", IsLookup = true)]
        public virtual Guid? GroupId
        {
            get { FillData(); return _groupId; }
            set {  _groupId = value; }
        }
        private Guid? _groupId;

		[CrmProperty(LogicalName = "groupidName", IsEntityReferenceHelper = true)]
        public virtual string GroupIdName
        {
            get { FillData(); return _groupIdName; }
            set {  _groupIdName = value; }
        }
        private string _groupIdName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "instance")]
        public virtual Enums.Instance? Instance
        {
            get { FillData(); return _instance; }
            set { SetPicklist("instance", (int?)value); _instance = value; }
        }
        private Enums.Instance? _instance;

		[CrmProperty(LogicalName = "instancename")]
        public virtual string InstanceName
        {
            get { FillData(); return _instanceName; }
            set {  _instanceName = value; }
        }
        private string _instanceName;

		[CrmProperty(LogicalName = "instancetypecode")]
        public virtual Enums.InstanceTypeCode? InstanceTypeCode
        {
            get { FillData(); return _instanceTypeCode; }
            set {  _instanceTypeCode = value; }
        }
        private Enums.InstanceTypeCode? _instanceTypeCode;

		[CrmProperty(LogicalName = "instancetypecodename")]
        public virtual string InstanceTypeCodeName
        {
            get { FillData(); return _instanceTypeCodeName; }
            set {  _instanceTypeCodeName = value; }
        }
        private string _instanceTypeCodeName;

		[CrmProperty(LogicalName = "interval")]
        public virtual int? Interval
        {
            get { FillData(); return _interval; }
            set { SetValue<int?>("interval", value); _interval = value; }
        }
        private int? _interval;

		[CrmProperty(LogicalName = "isalldayevent")]
        public virtual bool? IsAllDayEvent
        {
            get { FillData(); return _isAllDayEvent; }
            set { SetValue<bool?>("isalldayevent", value); _isAllDayEvent = value; }
        }
        private bool? _isAllDayEvent;

		[CrmProperty(LogicalName = "isalldayeventname")]
        public virtual string IsAllDayEventName
        {
            get { FillData(); return _isAllDayEventName; }
            set {  _isAllDayEventName = value; }
        }
        private string _isAllDayEventName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "ismapiprivate")]
        public virtual bool? IsMapiPrivate
        {
            get { FillData(); return _isMapiPrivate; }
            set { SetValue<bool?>("ismapiprivate", value); _isMapiPrivate = value; }
        }
        private bool? _isMapiPrivate;

		[CrmProperty(LogicalName = "ismapiprivatename")]
        public virtual string IsMapiPrivateName
        {
            get { FillData(); return _isMapiPrivateName; }
            set {  _isMapiPrivateName = value; }
        }
        private string _isMapiPrivateName;

		[CrmProperty(LogicalName = "isnthmonthly")]
        public virtual bool? IsNthMonthly
        {
            get { FillData(); return _isNthMonthly; }
            set { SetValue<bool?>("isnthmonthly", value); _isNthMonthly = value; }
        }
        private bool? _isNthMonthly;

		[CrmProperty(LogicalName = "isnthmonthlyname")]
        public virtual string IsNthMonthlyName
        {
            get { FillData(); return _isNthMonthlyName; }
            set {  _isNthMonthlyName = value; }
        }
        private string _isNthMonthlyName;

		[CrmProperty(LogicalName = "isnthyearly")]
        public virtual bool? IsNthYearly
        {
            get { FillData(); return _isNthYearly; }
            set { SetValue<bool?>("isnthyearly", value); _isNthYearly = value; }
        }
        private bool? _isNthYearly;

		[CrmProperty(LogicalName = "isnthyearlyname")]
        public virtual string IsNthYearlyName
        {
            get { FillData(); return _isNthYearlyName; }
            set {  _isNthYearlyName = value; }
        }
        private string _isNthYearlyName;

		[CrmProperty(LogicalName = "isregenerate")]
        public virtual bool? IsRegenerate
        {
            get { FillData(); return _isRegenerate; }
            set { SetValue<bool?>("isregenerate", value); _isRegenerate = value; }
        }
        private bool? _isRegenerate;

		[CrmProperty(LogicalName = "isregeneratename")]
        public virtual string IsRegenerateName
        {
            get { FillData(); return _isRegenerateName; }
            set {  _isRegenerateName = value; }
        }
        private string _isRegenerateName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isweekdaypattern")]
        public virtual bool? IsWeekDayPattern
        {
            get { FillData(); return _isWeekDayPattern; }
            set { SetValue<bool?>("isweekdaypattern", value); _isWeekDayPattern = value; }
        }
        private bool? _isWeekDayPattern;

		[CrmProperty(LogicalName = "isweekdaypatternname")]
        public virtual string IsWeekDayPatternName
        {
            get { FillData(); return _isWeekDayPatternName; }
            set {  _isWeekDayPatternName = value; }
        }
        private string _isWeekDayPatternName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "lastexpandedinstancedate")]
        public virtual DateTime? LastExpandedInstanceDate
        {
            get { FillData(); return _lastExpandedInstanceDate; }
            set {  _lastExpandedInstanceDate = value; }
        }
        private DateTime? _lastExpandedInstanceDate;

		[CrmProperty(LogicalName = "location")]
        public virtual string Location
        {
            get { FillData(); return _location; }
            set { SetValue<string>("location", value); _location = value; }
        }
        private string _location;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "monthofyear")]
        public virtual Enums.MonthOfYear? MonthOfYear
        {
            get { FillData(); return _monthOfYear; }
            set { SetPicklist("monthofyear", (int?)value); _monthOfYear = value; }
        }
        private Enums.MonthOfYear? _monthOfYear;

		[CrmProperty(LogicalName = "monthofyearname")]
        public virtual string MonthOfYearName
        {
            get { FillData(); return _monthOfYearName; }
            set {  _monthOfYearName = value; }
        }
        private string _monthOfYearName;

		[CrmProperty(LogicalName = "nextexpansioninstancedate")]
        public virtual DateTime? NextExpansionInstanceDate
        {
            get { FillData(); return _nextExpansionInstanceDate; }
            set {  _nextExpansionInstanceDate = value; }
        }
        private DateTime? _nextExpansionInstanceDate;

		[CrmProperty(LogicalName = "occurrences")]
        public virtual int? Occurrences
        {
            get { FillData(); return _occurrences; }
            set { SetValue<int?>("occurrences", value); _occurrences = value; }
        }
        private int? _occurrences;

		[CrmProperty(LogicalName = "optionalattendees")]
        public virtual object OptionalAttendees
        {
            get { FillData(); return _optionalAttendees; }
            set {  _optionalAttendees = value; }
        }
        private object _optionalAttendees;

		[CrmProperty(LogicalName = "organizer")]
        public virtual object Organizer
        {
            get { FillData(); return _organizer; }
            set {  _organizer = value; }
        }
        private object _organizer;

		[CrmProperty(LogicalName = "outlookownerapptid")]
        public virtual int? OutlookOwnerApptId
        {
            get { FillData(); return _outlookOwnerApptId; }
            set { SetValue<int?>("outlookownerapptid", value); _outlookOwnerApptId = value; }
        }
        private int? _outlookOwnerApptId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "patternenddate")]
        public virtual DateTime? PatternEndDate
        {
            get { FillData(); return _patternEndDate; }
            set { SetValue<DateTime?>("patternenddate", value); _patternEndDate = value; }
        }
        private DateTime? _patternEndDate;

		[CrmProperty(LogicalName = "patternendtype")]
        public virtual Enums.PatternEndType? PatternEndType
        {
            get { FillData(); return _patternEndType; }
            set { SetPicklist("patternendtype", (int?)value); _patternEndType = value; }
        }
        private Enums.PatternEndType? _patternEndType;

		[CrmProperty(LogicalName = "patternendtypename")]
        public virtual string PatternEndTypeName
        {
            get { FillData(); return _patternEndTypeName; }
            set {  _patternEndTypeName = value; }
        }
        private string _patternEndTypeName;

		[CrmProperty(LogicalName = "patternstartdate")]
        public virtual DateTime? PatternStartDate
        {
            get { FillData(); return _patternStartDate; }
            set { SetValue<DateTime?>("patternstartdate", value); _patternStartDate = value; }
        }
        private DateTime? _patternStartDate;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "recurrencepatterntype")]
        public virtual Enums.RecurrencePatternType? RecurrencePatternType
        {
            get { FillData(); return _recurrencePatternType; }
            set { SetPicklist("recurrencepatterntype", (int?)value); _recurrencePatternType = value; }
        }
        private Enums.RecurrencePatternType? _recurrencePatternType;

		[CrmProperty(LogicalName = "recurrencepatterntypename")]
        public virtual string RecurrencePatternTypeName
        {
            get { FillData(); return _recurrencePatternTypeName; }
            set {  _recurrencePatternTypeName = value; }
        }
        private string _recurrencePatternTypeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "requiredattendees")]
        public virtual object RequiredAttendees
        {
            get { FillData(); return _requiredAttendees; }
            set {  _requiredAttendees = value; }
        }
        private object _requiredAttendees;

		[CrmProperty(LogicalName = "ruleid", IsLookup = true)]
        public virtual Guid? RuleId
        {
            get { FillData(); return _ruleId; }
            set {  _ruleId = value; }
        }
        private Guid? _ruleId;

		[CrmProperty(LogicalName = "ruleidName", IsEntityReferenceHelper = true)]
        public virtual string RuleIdName
        {
            get { FillData(); return _ruleIdName; }
            set {  _ruleIdName = value; }
        }
        private string _ruleIdName;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set {  _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set {  _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "seriesstatus")]
        public virtual bool? SeriesStatus
        {
            get { FillData(); return _seriesStatus; }
            set { SetValue<bool?>("seriesstatus", value); _seriesStatus = value; }
        }
        private bool? _seriesStatus;

		[CrmProperty(LogicalName = "seriesstatusname")]
        public virtual string SeriesStatusName
        {
            get { FillData(); return _seriesStatusName; }
            set {  _seriesStatusName = value; }
        }
        private string _seriesStatusName;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "starttime")]
        public virtual DateTime? StartTime
        {
            get { FillData(); return _startTime; }
            set { SetValue<DateTime?>("starttime", value); _startTime = value; }
        }
        private DateTime? _startTime;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "resource", PrimaryKey = "resourceid")]
	public partial class Resource : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "resource";
			
			public const string BusinessUnitId = "businessunitid";
			public const string BusinessUnitIdName = "businessunitidname";
			public const string CalendarId = "calendarid";
			public const string DisplayInServiceViews = "displayinserviceviews";
			public const string DisplayInServiceViewsName = "displayinserviceviewsname";
			public const string IsDisabled = "isdisabled";
			public const string IsDisabledName = "isdisabledname";
			public const string Name = "name";
			public const string ObjectTypeCodeName = "objecttypecodename";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string ResourceId = "resourceid";
			public const string SiteId = "siteid";
			public const string SiteIdName = "siteidname";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ResourceId; }
		}

		[CrmProperty(LogicalName = "businessunitid", IsLookup = true)]
        public virtual Guid? BusinessUnitId
        {
            get { FillData(); return _businessUnitId; }
            set { SetLookup("businessunitid", "businessunit", value); _businessUnitId = value; }
        }
        private Guid? _businessUnitId;

		[CrmProperty(LogicalName = "businessunitidname")]
        public virtual string BusinessUnitIdName
        {
            get { FillData(); return _businessUnitIdName; }
            set {  _businessUnitIdName = value; }
        }
        private string _businessUnitIdName;

		[CrmProperty(LogicalName = "calendarid")]
        public virtual Guid? CalendarId
        {
            get { FillData(); return _calendarId; }
            set { SetValue<Guid?>("calendarid", value); _calendarId = value; }
        }
        private Guid? _calendarId;

		[CrmProperty(LogicalName = "displayinserviceviews")]
        public virtual bool? DisplayInServiceViews
        {
            get { FillData(); return _displayInServiceViews; }
            set { SetValue<bool?>("displayinserviceviews", value); _displayInServiceViews = value; }
        }
        private bool? _displayInServiceViews;

		[CrmProperty(LogicalName = "displayinserviceviewsname")]
        public virtual string DisplayInServiceViewsName
        {
            get { FillData(); return _displayInServiceViewsName; }
            set {  _displayInServiceViewsName = value; }
        }
        private string _displayInServiceViewsName;

		[CrmProperty(LogicalName = "isdisabled")]
        public virtual bool? IsDisabled
        {
            get { FillData(); return _isDisabled; }
            set { SetValue<bool?>("isdisabled", value); _isDisabled = value; }
        }
        private bool? _isDisabled;

		[CrmProperty(LogicalName = "isdisabledname")]
        public virtual string IsDisabledName
        {
            get { FillData(); return _isDisabledName; }
            set {  _isDisabledName = value; }
        }
        private string _isDisabledName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "objecttypecodename")]
        public virtual string ObjectTypeCodeName
        {
            get { FillData(); return _objectTypeCodeName; }
            set {  _objectTypeCodeName = value; }
        }
        private string _objectTypeCodeName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "resourceid")]
        public virtual Guid ResourceId
        {
            get { FillData(); return _resourceId; }
            set {  _resourceId = value; }
        }
        private Guid _resourceId;

		[CrmProperty(LogicalName = "siteid", IsLookup = true)]
        public virtual Guid? SiteId
        {
            get { FillData(); return _siteId; }
            set { SetLookup("siteid", "site", value); _siteId = value; }
        }
        private Guid? _siteId;

		[CrmProperty(LogicalName = "siteidname")]
        public virtual string SiteIdName
        {
            get { FillData(); return _siteIdName; }
            set {  _siteIdName = value; }
        }
        private string _siteIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "resourcegroup", PrimaryKey = "resourcegroupid")]
	public partial class ResourceGroup : CrmEntity
	{
		public class Enums
		{
			public enum GroupTypeCode 
			{
			}		
		}

		public class Fields
		{
			public const string SchemaName = "resourcegroup";
			
			public const string BusinessUnitId = "businessunitid";
			public const string BusinessUnitIdName = "businessunitidname";
			public const string GroupTypeCode = "grouptypecode";
			public const string GroupTypeCodeName = "grouptypecodename";
			public const string Name = "name";
			public const string ObjectTypeCodeName = "objecttypecodename";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string ResourceGroupId = "resourcegroupid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ResourceGroupId; }
		}

		[CrmProperty(LogicalName = "businessunitid", IsLookup = true)]
        public virtual Guid? BusinessUnitId
        {
            get { FillData(); return _businessUnitId; }
            set { SetLookup("businessunitid", "businessunit", value); _businessUnitId = value; }
        }
        private Guid? _businessUnitId;

		[CrmProperty(LogicalName = "businessunitidname")]
        public virtual string BusinessUnitIdName
        {
            get { FillData(); return _businessUnitIdName; }
            set {  _businessUnitIdName = value; }
        }
        private string _businessUnitIdName;

		[CrmProperty(LogicalName = "grouptypecode")]
        public virtual Enums.GroupTypeCode? GroupTypeCode
        {
            get { FillData(); return _groupTypeCode; }
            set {  _groupTypeCode = value; }
        }
        private Enums.GroupTypeCode? _groupTypeCode;

		[CrmProperty(LogicalName = "grouptypecodename")]
        public virtual string GroupTypeCodeName
        {
            get { FillData(); return _groupTypeCodeName; }
            set {  _groupTypeCodeName = value; }
        }
        private string _groupTypeCodeName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "objecttypecodename")]
        public virtual string ObjectTypeCodeName
        {
            get { FillData(); return _objectTypeCodeName; }
            set {  _objectTypeCodeName = value; }
        }
        private string _objectTypeCodeName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "resourcegroupid")]
        public virtual Guid ResourceGroupId
        {
            get { FillData(); return _resourceGroupId; }
            set {  _resourceGroupId = value; }
        }
        private Guid _resourceGroupId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "resourcegroupexpansion", PrimaryKey = "resourcegroupexpansionid")]
	public partial class ResourceGroupExpansion : CrmEntity
	{
		public class Enums
		{
			public enum MethodCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Participating Resources", Value = 1)]ParticipatingResources = 1,
				[CrmPicklist(DisplayName = "Schedulable Resources", Value = 2)]SchedulableResources = 2,
				[CrmPicklist(DisplayName = "Supported Services", Value = 3)]SupportedServices = 3,
				[CrmPicklist(DisplayName = "Resources", Value = 4)]Resources = 4,
				[CrmPicklist(DisplayName = "All Resources", Value = 5)]AllResources = 5,
				[CrmPicklist(DisplayName = "Subgroups", Value = 6)]Subgroups = 6,
				[CrmPicklist(DisplayName = "Parent Groups", Value = 7)]ParentGroups = 7,
				[CrmPicklist(DisplayName = "All Subgroups", Value = 8)]AllSubgroups = 8,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "resourcegroupexpansion";
			
			public const string ItemId = "itemid";
			public const string MethodCode = "methodcode";
			public const string ModifiedOn = "modifiedon";
			public const string ObjectId = "objectid";
			public const string ResourceGroupExpansionId = "resourcegroupexpansionid";
		}

		public override Guid PrimaryKey
		{
			get { return ResourceGroupExpansionId; }
		}

		[CrmProperty(LogicalName = "itemid")]
        public virtual Guid? ItemId
        {
            get { FillData(); return _itemId; }
            set {  _itemId = value; }
        }
        private Guid? _itemId;

		[CrmProperty(LogicalName = "methodcode")]
        public virtual Enums.MethodCode? MethodCode
        {
            get { FillData(); return _methodCode; }
            set {  _methodCode = value; }
        }
        private Enums.MethodCode? _methodCode;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "objectid")]
        public virtual Guid? ObjectId
        {
            get { FillData(); return _objectId; }
            set {  _objectId = value; }
        }
        private Guid? _objectId;

		[CrmProperty(LogicalName = "resourcegroupexpansionid")]
        public virtual Guid ResourceGroupExpansionId
        {
            get { FillData(); return _resourceGroupExpansionId; }
            set {  _resourceGroupExpansionId = value; }
        }
        private Guid _resourceGroupExpansionId;

	}
	[CrmEntity(LogicalName = "salesliterature", PrimaryKey = "salesliteratureid")]
	public partial class SalesLiterature : CrmEntity
	{
		public class Enums
		{
			public enum LiteratureTypeCode 
			{
				[CrmPicklist(DisplayName = "Presentation")]Presentation = 0,
				[CrmPicklist(DisplayName = "Product Sheet", Value = 1)]ProductSheet = 1,
				[CrmPicklist(DisplayName = "Policies And Procedures", Value = 2)]PoliciesAndProcedures = 2,
				[CrmPicklist(DisplayName = "Sales Literature", Value = 3)]SalesLiterature = 3,
				[CrmPicklist(DisplayName = "Spreadsheets", Value = 4)]Spreadsheets = 4,
				[CrmPicklist(DisplayName = "News", Value = 5)]News = 5,
				[CrmPicklist(DisplayName = "Bulletins", Value = 6)]Bulletins = 6,
				[CrmPicklist(DisplayName = "Price Sheets", Value = 7)]PriceSheets = 7,
				[CrmPicklist(DisplayName = "Manuals", Value = 8)]Manuals = 8,
				[CrmPicklist(DisplayName = "Company Background", Value = 9)]CompanyBackground = 9,
				[CrmPicklist(DisplayName = "Marketing Collateral", Value = 100001)]MarketingCollateral = 100001,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "salesliterature";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string EmployeeContactId = "employeecontactid";
			public const string EmployeeContactIdName = "employeecontactidname";
			public const string EmployeeContactIdYomiName = "employeecontactidyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ExpirationDate = "expirationdate";
			public const string HasAttachments = "hasattachments";
			public const string HasAttachmentsName = "hasattachmentsname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomerViewable = "iscustomerviewable";
			public const string IsCustomerViewableName = "iscustomerviewablename";
			public const string KeyWords = "keywords";
			public const string LiteratureTypeCode = "literaturetypecode";
			public const string LiteratureTypeCodeName = "literaturetypecodename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string SalesLiteratureId = "salesliteratureid";
			public const string SubjectId = "subjectid";
			public const string SubjectIdName = "subjectidname";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return SalesLiteratureId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "employeecontactid", IsLookup = true)]
        public virtual Guid? EmployeeContactId
        {
            get { FillData(); return _employeeContactId; }
            set { SetLookup("employeecontactid", "systemuser", value); _employeeContactId = value; }
        }
        private Guid? _employeeContactId;

		[CrmProperty(LogicalName = "employeecontactidname")]
        public virtual string EmployeeContactIdName
        {
            get { FillData(); return _employeeContactIdName; }
            set {  _employeeContactIdName = value; }
        }
        private string _employeeContactIdName;

		[CrmProperty(LogicalName = "employeecontactidyominame")]
        public virtual string EmployeeContactIdYomiName
        {
            get { FillData(); return _employeeContactIdYomiName; }
            set {  _employeeContactIdYomiName = value; }
        }
        private string _employeeContactIdYomiName;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "expirationdate")]
        public virtual DateTime? ExpirationDate
        {
            get { FillData(); return _expirationDate; }
            set { SetValue<DateTime?>("expirationdate", value); _expirationDate = value; }
        }
        private DateTime? _expirationDate;

		[CrmProperty(LogicalName = "hasattachments")]
        public virtual bool? HasAttachments
        {
            get { FillData(); return _hasAttachments; }
            set { SetValue<bool?>("hasattachments", value); _hasAttachments = value; }
        }
        private bool? _hasAttachments;

		[CrmProperty(LogicalName = "hasattachmentsname")]
        public virtual string HasAttachmentsName
        {
            get { FillData(); return _hasAttachmentsName; }
            set {  _hasAttachmentsName = value; }
        }
        private string _hasAttachmentsName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "iscustomerviewable")]
        public virtual bool? IsCustomerViewable
        {
            get { FillData(); return _isCustomerViewable; }
            set { SetValue<bool?>("iscustomerviewable", value); _isCustomerViewable = value; }
        }
        private bool? _isCustomerViewable;

		[CrmProperty(LogicalName = "iscustomerviewablename")]
        public virtual string IsCustomerViewableName
        {
            get { FillData(); return _isCustomerViewableName; }
            set {  _isCustomerViewableName = value; }
        }
        private string _isCustomerViewableName;

		[CrmProperty(LogicalName = "keywords")]
        public virtual string KeyWords
        {
            get { FillData(); return _keyWords; }
            set { SetValue<string>("keywords", value); _keyWords = value; }
        }
        private string _keyWords;

		[CrmProperty(LogicalName = "literaturetypecode")]
        public virtual Enums.LiteratureTypeCode? LiteratureTypeCode
        {
            get { FillData(); return _literatureTypeCode; }
            set { SetPicklist("literaturetypecode", (int?)value); _literatureTypeCode = value; }
        }
        private Enums.LiteratureTypeCode? _literatureTypeCode;

		[CrmProperty(LogicalName = "literaturetypecodename")]
        public virtual string LiteratureTypeCodeName
        {
            get { FillData(); return _literatureTypeCodeName; }
            set {  _literatureTypeCodeName = value; }
        }
        private string _literatureTypeCodeName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "salesliteratureid")]
        public virtual Guid SalesLiteratureId
        {
            get { FillData(); return _salesLiteratureId; }
            set {  _salesLiteratureId = value; }
        }
        private Guid _salesLiteratureId;

		[CrmProperty(LogicalName = "subjectid", IsLookup = true)]
        public virtual Guid? SubjectId
        {
            get { FillData(); return _subjectId; }
            set { SetLookup("subjectid", "subject", value); _subjectId = value; }
        }
        private Guid? _subjectId;

		[CrmProperty(LogicalName = "subjectidname")]
        public virtual string SubjectIdName
        {
            get { FillData(); return _subjectIdName; }
            set {  _subjectIdName = value; }
        }
        private string _subjectIdName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "salesorder", PrimaryKey = "salesorderid")]
	public partial class SalesOrder : CrmEntity
	{
		public class Enums
		{
			public enum FreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
			public enum PaymentTermsCode 
			{
				[CrmPicklist(DisplayName = "Net 30", Value = 1)]Net30 = 1,
				[CrmPicklist(DisplayName = "2% 10, Net 30", Value = 2)]_210Net30 = 2,
				[CrmPicklist(DisplayName = "Net 45", Value = 3)]Net45 = 3,
				[CrmPicklist(DisplayName = "Net 60", Value = 4)]Net60 = 4,
			}		
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Airborne", Value = 1)]Airborne = 1,
				[CrmPicklist(DisplayName = "DHL", Value = 2)]DHL = 2,
				[CrmPicklist(DisplayName = "FedEx", Value = 3)]FedEx = 3,
				[CrmPicklist(DisplayName = "UPS", Value = 4)]UPS = 4,
				[CrmPicklist(DisplayName = "Postal Mail", Value = 5)]PostalMail = 5,
				[CrmPicklist(DisplayName = "Full Load", Value = 6)]FullLoad = 6,
				[CrmPicklist(DisplayName = "Will Call", Value = 7)]WillCall = 7,
			}		
			public enum ShipToFreightTermsCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Submitted", Value = 1)]Submitted = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Fulfilled", Value = 3)]Fulfilled = 3,
				[CrmPicklist(DisplayName = "Invoiced", Value = 4)]Invoiced = 4,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "In Progress", Value = 3)]InProgress = 3,
				[CrmPicklist(DisplayName = "No Money", Value = 4)]NoMoney = 4,
				[CrmPicklist(DisplayName = "New", Value = 1)]__New = 1,
				[CrmPicklist(DisplayName = "Pending", Value = 2)]Pending = 2,
				[CrmPicklist(DisplayName = "Complete", Value = 100001)]Complete = 100001,
				[CrmPicklist(DisplayName = "Partial", Value = 100002)]__Partial = 100002,
				[CrmPicklist(DisplayName = "Invoiced", Value = 100003)]Invoiced = 100003,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "salesorder";
			
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string BillToAddressId = "billto_addressid";
			public const string BillToCity = "billto_city";
			public const string BillToContactName = "billto_contactname";
			public const string BillToCountry = "billto_country";
			public const string BillToFax = "billto_fax";
			public const string BillToLine1 = "billto_line1";
			public const string BillToLine2 = "billto_line2";
			public const string BillToLine3 = "billto_line3";
			public const string BillToName = "billto_name";
			public const string BillToPostalCode = "billto_postalcode";
			public const string BillToStateOrProvince = "billto_stateorprovince";
			public const string BillToTelephone = "billto_telephone";
			public const string CampaignId = "campaignid";
			public const string CampaignIdName = "campaignidname";
			public const string ContactId = "contactid";
			public const string ContactIdName = "contactidname";
			public const string ContactIdYomiName = "contactidyominame";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdType = "customeridType";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string DateFulfilled = "datefulfilled";
			public const string Description = "description";
			public const string DiscountAmount = "discountamount";
			public const string DiscountPercentage = "discountpercentage";
			public const string ExchangeRate = "exchangerate";
			public const string FreightAmount = "freightamount";
			public const string FreightTermsCode = "freighttermscode";
			public const string FreightTermsCodeName = "freighttermscodename";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsPriceLocked = "ispricelocked";
			public const string IsPriceLockedName = "ispricelockedname";
			public const string LastBackofficeSubmit = "lastbackofficesubmit";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string NewEndUserCustomerId = "new_endusercustomerid";
			public const string NewEndUserCustomerIdName = "new_endusercustomeridname";
			public const string NewEndUserCustomerIdYomiName = "new_endusercustomeridyominame";
			public const string NewOrderDate = "new_orderdate";
			public const string NewResellerId = "new_resellerid";
			public const string NewResellerIdName = "new_reselleridname";
			public const string OpportunityId = "opportunityid";
			public const string OpportunityIdName = "opportunityidname";
			public const string OrderNumber = "ordernumber";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodeName = "paymenttermscodename";
			public const string PriceLevelId = "pricelevelid";
			public const string PriceLevelIdName = "pricelevelidname";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string QuoteId = "quoteid";
			public const string QuoteIdName = "quoteidname";
			public const string RequestDeliveryBy = "requestdeliveryby";
			public const string SalesOrderId = "salesorderid";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string ShipToAddressId = "shipto_addressid";
			public const string ShipToCity = "shipto_city";
			public const string ShipToContactName = "shipto_contactname";
			public const string ShipToCountry = "shipto_country";
			public const string ShipToFax = "shipto_fax";
			public const string ShipToFreightTermsCode = "shipto_freighttermscode";
			public const string ShipToFreightTermsCodeName = "shipto_freighttermscodename";
			public const string ShipToLine1 = "shipto_line1";
			public const string ShipToLine2 = "shipto_line2";
			public const string ShipToLine3 = "shipto_line3";
			public const string ShipToName = "shipto_name";
			public const string ShipToPostalCode = "shipto_postalcode";
			public const string ShipToStateOrProvince = "shipto_stateorprovince";
			public const string ShipToTelephone = "shipto_telephone";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SubmitDate = "submitdate";
			public const string SubmitStatus = "submitstatus";
			public const string SubmitStatusDescription = "submitstatusdescription";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalAmount = "totalamount";
			public const string TotalAmountLessFreight = "totalamountlessfreight";
			public const string TotalDiscountAmount = "totaldiscountamount";
			public const string TotalLineItemAmount = "totallineitemamount";
			public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";
			public const string TotalTax = "totaltax";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WillCall = "willcall";
			public const string WillCallName = "willcallname";
		}

		public override Guid PrimaryKey
		{
			get { return SalesOrderId; }
		}

		[CrmProperty(LogicalName = "accountid", IsLookup = true)]
        public virtual Guid? AccountId
        {
            get { FillData(); return _accountId; }
            set {  _accountId = value; }
        }
        private Guid? _accountId;

		[CrmProperty(LogicalName = "accountidname")]
        public virtual string AccountIdName
        {
            get { FillData(); return _accountIdName; }
            set {  _accountIdName = value; }
        }
        private string _accountIdName;

		[CrmProperty(LogicalName = "accountidyominame")]
        public virtual string AccountIdYomiName
        {
            get { FillData(); return _accountIdYomiName; }
            set {  _accountIdYomiName = value; }
        }
        private string _accountIdYomiName;

		[CrmProperty(LogicalName = "billto_addressid")]
        public virtual Guid? BillToAddressId
        {
            get { FillData(); return _billToAddressId; }
            set { SetValue<Guid?>("billto_addressid", value); _billToAddressId = value; }
        }
        private Guid? _billToAddressId;

		[CrmProperty(LogicalName = "billto_city")]
        public virtual string BillToCity
        {
            get { FillData(); return _billToCity; }
            set { SetValue<string>("billto_city", value); _billToCity = value; }
        }
        private string _billToCity;

		[CrmProperty(LogicalName = "billto_contactname")]
        public virtual string BillToContactName
        {
            get { FillData(); return _billToContactName; }
            set { SetValue<string>("billto_contactname", value); _billToContactName = value; }
        }
        private string _billToContactName;

		[CrmProperty(LogicalName = "billto_country")]
        public virtual string BillToCountry
        {
            get { FillData(); return _billToCountry; }
            set { SetValue<string>("billto_country", value); _billToCountry = value; }
        }
        private string _billToCountry;

		[CrmProperty(LogicalName = "billto_fax")]
        public virtual string BillToFax
        {
            get { FillData(); return _billToFax; }
            set { SetValue<string>("billto_fax", value); _billToFax = value; }
        }
        private string _billToFax;

		[CrmProperty(LogicalName = "billto_line1")]
        public virtual string BillToLine1
        {
            get { FillData(); return _billToLine1; }
            set { SetValue<string>("billto_line1", value); _billToLine1 = value; }
        }
        private string _billToLine1;

		[CrmProperty(LogicalName = "billto_line2")]
        public virtual string BillToLine2
        {
            get { FillData(); return _billToLine2; }
            set { SetValue<string>("billto_line2", value); _billToLine2 = value; }
        }
        private string _billToLine2;

		[CrmProperty(LogicalName = "billto_line3")]
        public virtual string BillToLine3
        {
            get { FillData(); return _billToLine3; }
            set { SetValue<string>("billto_line3", value); _billToLine3 = value; }
        }
        private string _billToLine3;

		[CrmProperty(LogicalName = "billto_name")]
        public virtual string BillToName
        {
            get { FillData(); return _billToName; }
            set { SetValue<string>("billto_name", value); _billToName = value; }
        }
        private string _billToName;

		[CrmProperty(LogicalName = "billto_postalcode")]
        public virtual string BillToPostalCode
        {
            get { FillData(); return _billToPostalCode; }
            set { SetValue<string>("billto_postalcode", value); _billToPostalCode = value; }
        }
        private string _billToPostalCode;

		[CrmProperty(LogicalName = "billto_stateorprovince")]
        public virtual string BillToStateOrProvince
        {
            get { FillData(); return _billToStateOrProvince; }
            set { SetValue<string>("billto_stateorprovince", value); _billToStateOrProvince = value; }
        }
        private string _billToStateOrProvince;

		[CrmProperty(LogicalName = "billto_telephone")]
        public virtual string BillToTelephone
        {
            get { FillData(); return _billToTelephone; }
            set { SetValue<string>("billto_telephone", value); _billToTelephone = value; }
        }
        private string _billToTelephone;

		[CrmProperty(LogicalName = "campaignid", IsLookup = true)]
        public virtual Guid? CampaignId
        {
            get { FillData(); return _campaignId; }
            set { SetLookup("campaignid", "campaign", value); _campaignId = value; }
        }
        private Guid? _campaignId;

		[CrmProperty(LogicalName = "campaignidname")]
        public virtual string CampaignIdName
        {
            get { FillData(); return _campaignIdName; }
            set {  _campaignIdName = value; }
        }
        private string _campaignIdName;

		[CrmProperty(LogicalName = "contactid", IsLookup = true)]
        public virtual Guid? ContactId
        {
            get { FillData(); return _contactId; }
            set {  _contactId = value; }
        }
        private Guid? _contactId;

		[CrmProperty(LogicalName = "contactidname")]
        public virtual string ContactIdName
        {
            get { FillData(); return _contactIdName; }
            set {  _contactIdName = value; }
        }
        private string _contactIdName;

		[CrmProperty(LogicalName = "contactidyominame")]
        public virtual string ContactIdYomiName
        {
            get { FillData(); return _contactIdYomiName; }
            set {  _contactIdYomiName = value; }
        }
        private string _contactIdYomiName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customerid", IsLookup = true)]
        public virtual Guid? CustomerId
        {
            get { FillData(); return _customerId; }
            set { SetCustomer("customerid", CustomerIdType, value); _customerId = value; }
        }
        private Guid? _customerId;

		[CrmProperty(LogicalName = "customeridname")]
        public virtual string CustomerIdName
        {
            get { FillData(); return _customerIdName; }
            set {  _customerIdName = value; }
        }
        private string _customerIdName;

		[CrmProperty(LogicalName = "customeridType", IsEntityReferenceHelper = true)]
        public virtual string CustomerIdType
        {
            get { FillData(); return _customerIdType; }
            set {  _customerIdType = value; }
        }
        private string _customerIdType;

		[CrmProperty(LogicalName = "customeridyominame")]
        public virtual string CustomerIdYomiName
        {
            get { FillData(); return _customerIdYomiName; }
            set {  _customerIdYomiName = value; }
        }
        private string _customerIdYomiName;

		[CrmProperty(LogicalName = "datefulfilled")]
        public virtual DateTime? DateFulfilled
        {
            get { FillData(); return _dateFulfilled; }
            set { SetValue<DateTime?>("datefulfilled", value); _dateFulfilled = value; }
        }
        private DateTime? _dateFulfilled;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "discountamount")]
        public virtual decimal? DiscountAmount
        {
            get { FillData(); return _discountAmount; }
            set { SetMoney("discountamount", value); _discountAmount = value; }
        }
        private decimal? _discountAmount;

		[CrmProperty(LogicalName = "discountpercentage")]
        public virtual decimal? DiscountPercentage
        {
            get { FillData(); return _discountPercentage; }
            set { SetValue<decimal?>("discountpercentage", value); _discountPercentage = value; }
        }
        private decimal? _discountPercentage;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "freightamount")]
        public virtual decimal? FreightAmount
        {
            get { FillData(); return _freightAmount; }
            set { SetMoney("freightamount", value); _freightAmount = value; }
        }
        private decimal? _freightAmount;

		[CrmProperty(LogicalName = "freighttermscode")]
        public virtual Enums.FreightTermsCode? FreightTermsCode
        {
            get { FillData(); return _freightTermsCode; }
            set { SetPicklist("freighttermscode", (int?)value); _freightTermsCode = value; }
        }
        private Enums.FreightTermsCode? _freightTermsCode;

		[CrmProperty(LogicalName = "freighttermscodename")]
        public virtual string FreightTermsCodeName
        {
            get { FillData(); return _freightTermsCodeName; }
            set {  _freightTermsCodeName = value; }
        }
        private string _freightTermsCodeName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "ispricelocked")]
        public virtual bool? IsPriceLocked
        {
            get { FillData(); return _isPriceLocked; }
            set {  _isPriceLocked = value; }
        }
        private bool? _isPriceLocked;

		[CrmProperty(LogicalName = "ispricelockedname")]
        public virtual string IsPriceLockedName
        {
            get { FillData(); return _isPriceLockedName; }
            set {  _isPriceLockedName = value; }
        }
        private string _isPriceLockedName;

		[CrmProperty(LogicalName = "lastbackofficesubmit")]
        public virtual DateTime? LastBackofficeSubmit
        {
            get { FillData(); return _lastBackofficeSubmit; }
            set { SetValue<DateTime?>("lastbackofficesubmit", value); _lastBackofficeSubmit = value; }
        }
        private DateTime? _lastBackofficeSubmit;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "new_endusercustomerid", IsLookup = true)]
        public virtual Guid? NewEndUserCustomerId
        {
            get { FillData(); return _newEndUserCustomerId; }
            set { SetLookup("new_endusercustomerid", "account", value); _newEndUserCustomerId = value; }
        }
        private Guid? _newEndUserCustomerId;

		[CrmProperty(LogicalName = "new_endusercustomeridname")]
        public virtual string NewEndUserCustomerIdName
        {
            get { FillData(); return _newEndUserCustomerIdName; }
            set {  _newEndUserCustomerIdName = value; }
        }
        private string _newEndUserCustomerIdName;

		[CrmProperty(LogicalName = "new_endusercustomeridyominame")]
        public virtual string NewEndUserCustomerIdYomiName
        {
            get { FillData(); return _newEndUserCustomerIdYomiName; }
            set {  _newEndUserCustomerIdYomiName = value; }
        }
        private string _newEndUserCustomerIdYomiName;

		[CrmProperty(LogicalName = "new_orderdate")]
        public virtual DateTime? NewOrderDate
        {
            get { FillData(); return _newOrderDate; }
            set { SetValue<DateTime?>("new_orderdate", value); _newOrderDate = value; }
        }
        private DateTime? _newOrderDate;

		[CrmProperty(LogicalName = "new_resellerid", IsLookup = true)]
        public virtual Guid? NewResellerId
        {
            get { FillData(); return _newResellerId; }
            set { SetLookup("new_resellerid", "new_resellers", value); _newResellerId = value; }
        }
        private Guid? _newResellerId;

		[CrmProperty(LogicalName = "new_reselleridname")]
        public virtual string NewResellerIdName
        {
            get { FillData(); return _newResellerIdName; }
            set {  _newResellerIdName = value; }
        }
        private string _newResellerIdName;

		[CrmProperty(LogicalName = "opportunityid", IsLookup = true)]
        public virtual Guid? OpportunityId
        {
            get { FillData(); return _opportunityId; }
            set { SetLookup("opportunityid", "opportunity", value); _opportunityId = value; }
        }
        private Guid? _opportunityId;

		[CrmProperty(LogicalName = "opportunityidname")]
        public virtual string OpportunityIdName
        {
            get { FillData(); return _opportunityIdName; }
            set {  _opportunityIdName = value; }
        }
        private string _opportunityIdName;

		[CrmProperty(LogicalName = "ordernumber")]
        public virtual string OrderNumber
        {
            get { FillData(); return _orderNumber; }
            set {  _orderNumber = value; }
        }
        private string _orderNumber;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "paymenttermscode")]
        public virtual Enums.PaymentTermsCode? PaymentTermsCode
        {
            get { FillData(); return _paymentTermsCode; }
            set { SetPicklist("paymenttermscode", (int?)value); _paymentTermsCode = value; }
        }
        private Enums.PaymentTermsCode? _paymentTermsCode;

		[CrmProperty(LogicalName = "paymenttermscodename")]
        public virtual string PaymentTermsCodeName
        {
            get { FillData(); return _paymentTermsCodeName; }
            set {  _paymentTermsCodeName = value; }
        }
        private string _paymentTermsCodeName;

		[CrmProperty(LogicalName = "pricelevelid", IsLookup = true)]
        public virtual Guid? PriceLevelId
        {
            get { FillData(); return _priceLevelId; }
            set { SetLookup("pricelevelid", "pricelevel", value); _priceLevelId = value; }
        }
        private Guid? _priceLevelId;

		[CrmProperty(LogicalName = "pricelevelidname")]
        public virtual string PriceLevelIdName
        {
            get { FillData(); return _priceLevelIdName; }
            set {  _priceLevelIdName = value; }
        }
        private string _priceLevelIdName;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "quoteid", IsLookup = true)]
        public virtual Guid? QuoteId
        {
            get { FillData(); return _quoteId; }
            set { SetLookup("quoteid", "quote", value); _quoteId = value; }
        }
        private Guid? _quoteId;

		[CrmProperty(LogicalName = "quoteidname")]
        public virtual string QuoteIdName
        {
            get { FillData(); return _quoteIdName; }
            set {  _quoteIdName = value; }
        }
        private string _quoteIdName;

		[CrmProperty(LogicalName = "requestdeliveryby")]
        public virtual DateTime? RequestDeliveryBy
        {
            get { FillData(); return _requestDeliveryBy; }
            set { SetValue<DateTime?>("requestdeliveryby", value); _requestDeliveryBy = value; }
        }
        private DateTime? _requestDeliveryBy;

		[CrmProperty(LogicalName = "salesorderid")]
        public virtual Guid SalesOrderId
        {
            get { FillData(); return _salesOrderId; }
            set {  _salesOrderId = value; }
        }
        private Guid _salesOrderId;

		[CrmProperty(LogicalName = "shippingmethodcode")]
        public virtual Enums.ShippingMethodCode? ShippingMethodCode
        {
            get { FillData(); return _shippingMethodCode; }
            set { SetPicklist("shippingmethodcode", (int?)value); _shippingMethodCode = value; }
        }
        private Enums.ShippingMethodCode? _shippingMethodCode;

		[CrmProperty(LogicalName = "shippingmethodcodename")]
        public virtual string ShippingMethodCodeName
        {
            get { FillData(); return _shippingMethodCodeName; }
            set {  _shippingMethodCodeName = value; }
        }
        private string _shippingMethodCodeName;

		[CrmProperty(LogicalName = "shipto_addressid")]
        public virtual Guid? ShipToAddressId
        {
            get { FillData(); return _shipToAddressId; }
            set { SetValue<Guid?>("shipto_addressid", value); _shipToAddressId = value; }
        }
        private Guid? _shipToAddressId;

		[CrmProperty(LogicalName = "shipto_city")]
        public virtual string ShipToCity
        {
            get { FillData(); return _shipToCity; }
            set { SetValue<string>("shipto_city", value); _shipToCity = value; }
        }
        private string _shipToCity;

		[CrmProperty(LogicalName = "shipto_contactname")]
        public virtual string ShipToContactName
        {
            get { FillData(); return _shipToContactName; }
            set { SetValue<string>("shipto_contactname", value); _shipToContactName = value; }
        }
        private string _shipToContactName;

		[CrmProperty(LogicalName = "shipto_country")]
        public virtual string ShipToCountry
        {
            get { FillData(); return _shipToCountry; }
            set { SetValue<string>("shipto_country", value); _shipToCountry = value; }
        }
        private string _shipToCountry;

		[CrmProperty(LogicalName = "shipto_fax")]
        public virtual string ShipToFax
        {
            get { FillData(); return _shipToFax; }
            set { SetValue<string>("shipto_fax", value); _shipToFax = value; }
        }
        private string _shipToFax;

		[CrmProperty(LogicalName = "shipto_freighttermscode")]
        public virtual Enums.ShipToFreightTermsCode? ShipToFreightTermsCode
        {
            get { FillData(); return _shipToFreightTermsCode; }
            set { SetPicklist("shipto_freighttermscode", (int?)value); _shipToFreightTermsCode = value; }
        }
        private Enums.ShipToFreightTermsCode? _shipToFreightTermsCode;

		[CrmProperty(LogicalName = "shipto_freighttermscodename")]
        public virtual string ShipToFreightTermsCodeName
        {
            get { FillData(); return _shipToFreightTermsCodeName; }
            set {  _shipToFreightTermsCodeName = value; }
        }
        private string _shipToFreightTermsCodeName;

		[CrmProperty(LogicalName = "shipto_line1")]
        public virtual string ShipToLine1
        {
            get { FillData(); return _shipToLine1; }
            set { SetValue<string>("shipto_line1", value); _shipToLine1 = value; }
        }
        private string _shipToLine1;

		[CrmProperty(LogicalName = "shipto_line2")]
        public virtual string ShipToLine2
        {
            get { FillData(); return _shipToLine2; }
            set { SetValue<string>("shipto_line2", value); _shipToLine2 = value; }
        }
        private string _shipToLine2;

		[CrmProperty(LogicalName = "shipto_line3")]
        public virtual string ShipToLine3
        {
            get { FillData(); return _shipToLine3; }
            set { SetValue<string>("shipto_line3", value); _shipToLine3 = value; }
        }
        private string _shipToLine3;

		[CrmProperty(LogicalName = "shipto_name")]
        public virtual string ShipToName
        {
            get { FillData(); return _shipToName; }
            set { SetValue<string>("shipto_name", value); _shipToName = value; }
        }
        private string _shipToName;

		[CrmProperty(LogicalName = "shipto_postalcode")]
        public virtual string ShipToPostalCode
        {
            get { FillData(); return _shipToPostalCode; }
            set { SetValue<string>("shipto_postalcode", value); _shipToPostalCode = value; }
        }
        private string _shipToPostalCode;

		[CrmProperty(LogicalName = "shipto_stateorprovince")]
        public virtual string ShipToStateOrProvince
        {
            get { FillData(); return _shipToStateOrProvince; }
            set { SetValue<string>("shipto_stateorprovince", value); _shipToStateOrProvince = value; }
        }
        private string _shipToStateOrProvince;

		[CrmProperty(LogicalName = "shipto_telephone")]
        public virtual string ShipToTelephone
        {
            get { FillData(); return _shipToTelephone; }
            set { SetValue<string>("shipto_telephone", value); _shipToTelephone = value; }
        }
        private string _shipToTelephone;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "submitdate")]
        public virtual DateTime? SubmitDate
        {
            get { FillData(); return _submitDate; }
            set { SetValue<DateTime?>("submitdate", value); _submitDate = value; }
        }
        private DateTime? _submitDate;

		[CrmProperty(LogicalName = "submitstatus")]
        public virtual int? SubmitStatus
        {
            get { FillData(); return _submitStatus; }
            set { SetValue<int?>("submitstatus", value); _submitStatus = value; }
        }
        private int? _submitStatus;

		[CrmProperty(LogicalName = "submitstatusdescription")]
        public virtual string SubmitStatusDescription
        {
            get { FillData(); return _submitStatusDescription; }
            set { SetValue<string>("submitstatusdescription", value); _submitStatusDescription = value; }
        }
        private string _submitStatusDescription;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "totalamount")]
        public virtual decimal? TotalAmount
        {
            get { FillData(); return _totalAmount; }
            set {  _totalAmount = value; }
        }
        private decimal? _totalAmount;

		[CrmProperty(LogicalName = "totalamountlessfreight")]
        public virtual decimal? TotalAmountLessFreight
        {
            get { FillData(); return _totalAmountLessFreight; }
            set {  _totalAmountLessFreight = value; }
        }
        private decimal? _totalAmountLessFreight;

		[CrmProperty(LogicalName = "totaldiscountamount")]
        public virtual decimal? TotalDiscountAmount
        {
            get { FillData(); return _totalDiscountAmount; }
            set {  _totalDiscountAmount = value; }
        }
        private decimal? _totalDiscountAmount;

		[CrmProperty(LogicalName = "totallineitemamount")]
        public virtual decimal? TotalLineItemAmount
        {
            get { FillData(); return _totalLineItemAmount; }
            set {  _totalLineItemAmount = value; }
        }
        private decimal? _totalLineItemAmount;

		[CrmProperty(LogicalName = "totallineitemdiscountamount")]
        public virtual decimal? TotalLineItemDiscountAmount
        {
            get { FillData(); return _totalLineItemDiscountAmount; }
            set {  _totalLineItemDiscountAmount = value; }
        }
        private decimal? _totalLineItemDiscountAmount;

		[CrmProperty(LogicalName = "totaltax")]
        public virtual decimal? TotalTax
        {
            get { FillData(); return _totalTax; }
            set {  _totalTax = value; }
        }
        private decimal? _totalTax;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "willcall")]
        public virtual bool? WillCall
        {
            get { FillData(); return _willCall; }
            set { SetValue<bool?>("willcall", value); _willCall = value; }
        }
        private bool? _willCall;

		[CrmProperty(LogicalName = "willcallname")]
        public virtual string WillCallName
        {
            get { FillData(); return _willCallName; }
            set {  _willCallName = value; }
        }
        private string _willCallName;

	}
	[CrmEntity(LogicalName = "salesorderdetail", PrimaryKey = "salesorderdetailid")]
	public partial class SalesOrderDetail : CrmEntity
	{
		public class Enums
		{
			public enum PricingErrorCode 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Detail Error", Value = 1)]DetailError = 1,
				[CrmPicklist(DisplayName = "Missing Price Level", Value = 2)]MissingPriceLevel = 2,
				[CrmPicklist(DisplayName = "Inactive Price Level", Value = 3)]InactivePriceLevel = 3,
				[CrmPicklist(DisplayName = "Missing Quantity", Value = 4)]MissingQuantity = 4,
				[CrmPicklist(DisplayName = "Missing Unit Price", Value = 5)]MissingUnitPrice = 5,
				[CrmPicklist(DisplayName = "Missing Product", Value = 6)]MissingProduct = 6,
				[CrmPicklist(DisplayName = "Invalid Product", Value = 7)]InvalidProduct = 7,
				[CrmPicklist(DisplayName = "Missing Pricing Code", Value = 8)]MissingPricingCode = 8,
				[CrmPicklist(DisplayName = "Invalid Pricing Code", Value = 9)]InvalidPricingCode = 9,
				[CrmPicklist(DisplayName = "Missing UOM", Value = 10)]MissingUOM = 10,
				[CrmPicklist(DisplayName = "Product Not In Price Level", Value = 11)]ProductNotInPriceLevel = 11,
				[CrmPicklist(DisplayName = "Missing Price Level Amount", Value = 12)]MissingPriceLevelAmount = 12,
				[CrmPicklist(DisplayName = "Missing Price Level Percentage", Value = 13)]MissingPriceLevelPercentage = 13,
				[CrmPicklist(DisplayName = "Missing Price", Value = 14)]MissingPrice = 14,
				[CrmPicklist(DisplayName = "Missing Current Cost", Value = 15)]MissingCurrentCost = 15,
				[CrmPicklist(DisplayName = "Missing Standard Cost", Value = 16)]MissingStandardCost = 16,
				[CrmPicklist(DisplayName = "Invalid Price Level Amount", Value = 17)]InvalidPriceLevelAmount = 17,
				[CrmPicklist(DisplayName = "Invalid Price Level Percentage", Value = 18)]InvalidPriceLevelPercentage = 18,
				[CrmPicklist(DisplayName = "Invalid Price", Value = 19)]InvalidPrice = 19,
				[CrmPicklist(DisplayName = "Invalid Current Cost", Value = 20)]InvalidCurrentCost = 20,
				[CrmPicklist(DisplayName = "Invalid Standard Cost", Value = 21)]InvalidStandardCost = 21,
				[CrmPicklist(DisplayName = "Invalid Rounding Policy", Value = 22)]InvalidRoundingPolicy = 22,
				[CrmPicklist(DisplayName = "Invalid Rounding Option", Value = 23)]InvalidRoundingOption = 23,
				[CrmPicklist(DisplayName = "Invalid Rounding Amount", Value = 24)]InvalidRoundingAmount = 24,
				[CrmPicklist(DisplayName = "Price Calculation Error", Value = 25)]PriceCalculationError = 25,
				[CrmPicklist(DisplayName = "Invalid Discount Type", Value = 26)]InvalidDiscountType = 26,
				[CrmPicklist(DisplayName = "Discount Type Invalid State", Value = 27)]DiscountTypeInvalidState = 27,
				[CrmPicklist(DisplayName = "Invalid Discount", Value = 28)]InvalidDiscount = 28,
				[CrmPicklist(DisplayName = "Invalid Quantity", Value = 29)]InvalidQuantity = 29,
				[CrmPicklist(DisplayName = "Invalid Pricing Precision", Value = 30)]InvalidPricingPrecision = 30,
				[CrmPicklist(DisplayName = "Missing Product Default UOM", Value = 31)]MissingProductDefaultUOM = 31,
				[CrmPicklist(DisplayName = "Missing Product UOM Schedule ", Value = 32)]MissingProductUOMSchedule = 32,
				[CrmPicklist(DisplayName = "Inactive Discount Type", Value = 33)]InactiveDiscountType = 33,
				[CrmPicklist(DisplayName = "Invalid Price Level Currency", Value = 34)]InvalidPriceLevelCurrency = 34,
				[CrmPicklist(DisplayName = "Price Attribute Out Of Range", Value = 35)]PriceAttributeOutOfRange = 35,
				[CrmPicklist(DisplayName = "Base Currency Attribute Overflow", Value = 36)]BaseCurrencyAttributeOverflow = 36,
				[CrmPicklist(DisplayName = "Base Currency Attribute Underflow", Value = 37)]BaseCurrencyAttributeUnderflow = 37,
			}		
			public enum SalesOrderStateCode 
			{
			}		
			public enum ShipToFreightTermsCode 
			{
				[CrmPicklist(DisplayName = "FOB", Value = 1)]FOB = 1,
				[CrmPicklist(DisplayName = "No Charge", Value = 2)]NoCharge = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "salesorderdetail";
			
			public const string BaseAmount = "baseamount";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExtendedAmount = "extendedamount";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCopied = "iscopied";
			public const string IsCopiedName = "iscopiedname";
			public const string IsPriceOverridden = "ispriceoverridden";
			public const string IsPriceOverriddenName = "ispriceoverriddenname";
			public const string IsProductOverridden = "isproductoverridden";
			public const string IsProductOverriddenName = "isproductoverriddenname";
			public const string LineItemNumber = "lineitemnumber";
			public const string ManualDiscountAmount = "manualdiscountamount";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillingRecordId = "new_billingrecordid";
			public const string NewBillingRecordIdName = "new_billingrecordidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string PricePerUnit = "priceperunit";
			public const string PricingErrorCode = "pricingerrorcode";
			public const string PricingErrorCodeName = "pricingerrorcodename";
			public const string ProductDescription = "productdescription";
			public const string ProductId = "productid";
			public const string ProductIdName = "productidname";
			public const string Quantity = "quantity";
			public const string QuantityBackordered = "quantitybackordered";
			public const string QuantityCancelled = "quantitycancelled";
			public const string QuantityShipped = "quantityshipped";
			public const string RequestDeliveryBy = "requestdeliveryby";
			public const string SalesOrderDetailId = "salesorderdetailid";
			public const string SalesOrderId = "salesorderid";
			public const string SalesOrderIdName = "salesorderidName";
			public const string SalesOrderIsPriceLocked = "salesorderispricelocked";
			public const string SalesOrderIsPriceLockedName = "salesorderispricelockedname";
			public const string SalesOrderStateCode = "salesorderstatecode";
			public const string SalesOrderStateCodeName = "salesorderstatecodename";
			public const string SalesRepId = "salesrepid";
			public const string SalesRepIdName = "salesrepidname";
			public const string SalesRepIdYomiName = "salesrepidyominame";
			public const string ShipToAddressId = "shipto_addressid";
			public const string ShipToCity = "shipto_city";
			public const string ShipToContactName = "shipto_contactname";
			public const string ShipToCountry = "shipto_country";
			public const string ShipToFax = "shipto_fax";
			public const string ShipToFreightTermsCode = "shipto_freighttermscode";
			public const string ShipToFreightTermsCodeName = "shipto_freighttermscodename";
			public const string ShipToLine1 = "shipto_line1";
			public const string ShipToLine2 = "shipto_line2";
			public const string ShipToLine3 = "shipto_line3";
			public const string ShipToName = "shipto_name";
			public const string ShipToPostalCode = "shipto_postalcode";
			public const string ShipToStateOrProvince = "shipto_stateorprovince";
			public const string ShipToTelephone = "shipto_telephone";
			public const string Tax = "tax";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UoMId = "uomid";
			public const string UoMIdName = "uomidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string VolumeDiscountAmount = "volumediscountamount";
			public const string WillCall = "willcall";
			public const string WillCallName = "willcallname";
		}

		public override Guid PrimaryKey
		{
			get { return SalesOrderDetailId; }
		}

		[CrmProperty(LogicalName = "baseamount")]
        public virtual decimal? BaseAmount
        {
            get { FillData(); return _baseAmount; }
            set {  _baseAmount = value; }
        }
        private decimal? _baseAmount;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "extendedamount")]
        public virtual decimal? ExtendedAmount
        {
            get { FillData(); return _extendedAmount; }
            set {  _extendedAmount = value; }
        }
        private decimal? _extendedAmount;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "iscopied")]
        public virtual bool? IsCopied
        {
            get { FillData(); return _isCopied; }
            set { SetValue<bool?>("iscopied", value); _isCopied = value; }
        }
        private bool? _isCopied;

		[CrmProperty(LogicalName = "iscopiedname")]
        public virtual string IsCopiedName
        {
            get { FillData(); return _isCopiedName; }
            set {  _isCopiedName = value; }
        }
        private string _isCopiedName;

		[CrmProperty(LogicalName = "ispriceoverridden")]
        public virtual bool? IsPriceOverridden
        {
            get { FillData(); return _isPriceOverridden; }
            set { SetValue<bool?>("ispriceoverridden", value); _isPriceOverridden = value; }
        }
        private bool? _isPriceOverridden;

		[CrmProperty(LogicalName = "ispriceoverriddenname")]
        public virtual string IsPriceOverriddenName
        {
            get { FillData(); return _isPriceOverriddenName; }
            set {  _isPriceOverriddenName = value; }
        }
        private string _isPriceOverriddenName;

		[CrmProperty(LogicalName = "isproductoverridden")]
        public virtual bool? IsProductOverridden
        {
            get { FillData(); return _isProductOverridden; }
            set { SetValue<bool?>("isproductoverridden", value); _isProductOverridden = value; }
        }
        private bool? _isProductOverridden;

		[CrmProperty(LogicalName = "isproductoverriddenname")]
        public virtual string IsProductOverriddenName
        {
            get { FillData(); return _isProductOverriddenName; }
            set {  _isProductOverriddenName = value; }
        }
        private string _isProductOverriddenName;

		[CrmProperty(LogicalName = "lineitemnumber")]
        public virtual int? LineItemNumber
        {
            get { FillData(); return _lineItemNumber; }
            set { SetValue<int?>("lineitemnumber", value); _lineItemNumber = value; }
        }
        private int? _lineItemNumber;

		[CrmProperty(LogicalName = "manualdiscountamount")]
        public virtual decimal? ManualDiscountAmount
        {
            get { FillData(); return _manualDiscountAmount; }
            set { SetMoney("manualdiscountamount", value); _manualDiscountAmount = value; }
        }
        private decimal? _manualDiscountAmount;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billingrecordid", IsLookup = true)]
        public virtual Guid? NewBillingRecordId
        {
            get { FillData(); return _newBillingRecordId; }
            set { SetLookup("new_billingrecordid", "new_billingrecord", value); _newBillingRecordId = value; }
        }
        private Guid? _newBillingRecordId;

		[CrmProperty(LogicalName = "new_billingrecordidname")]
        public virtual string NewBillingRecordIdName
        {
            get { FillData(); return _newBillingRecordIdName; }
            set {  _newBillingRecordIdName = value; }
        }
        private string _newBillingRecordIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owningbusinessunit")]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owninguser")]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "priceperunit")]
        public virtual decimal? PricePerUnit
        {
            get { FillData(); return _pricePerUnit; }
            set { SetMoney("priceperunit", value); _pricePerUnit = value; }
        }
        private decimal? _pricePerUnit;

		[CrmProperty(LogicalName = "pricingerrorcode")]
        public virtual Enums.PricingErrorCode? PricingErrorCode
        {
            get { FillData(); return _pricingErrorCode; }
            set { SetPicklist("pricingerrorcode", (int?)value); _pricingErrorCode = value; }
        }
        private Enums.PricingErrorCode? _pricingErrorCode;

		[CrmProperty(LogicalName = "pricingerrorcodename")]
        public virtual string PricingErrorCodeName
        {
            get { FillData(); return _pricingErrorCodeName; }
            set {  _pricingErrorCodeName = value; }
        }
        private string _pricingErrorCodeName;

		[CrmProperty(LogicalName = "productdescription")]
        public virtual string ProductDescription
        {
            get { FillData(); return _productDescription; }
            set { SetValue<string>("productdescription", value); _productDescription = value; }
        }
        private string _productDescription;

		[CrmProperty(LogicalName = "productid", IsLookup = true)]
        public virtual Guid? ProductId
        {
            get { FillData(); return _productId; }
            set { SetLookup("productid", "product", value); _productId = value; }
        }
        private Guid? _productId;

		[CrmProperty(LogicalName = "productidname")]
        public virtual string ProductIdName
        {
            get { FillData(); return _productIdName; }
            set {  _productIdName = value; }
        }
        private string _productIdName;

		[CrmProperty(LogicalName = "quantity")]
        public virtual decimal? Quantity
        {
            get { FillData(); return _quantity; }
            set { SetValue<decimal?>("quantity", value); _quantity = value; }
        }
        private decimal? _quantity;

		[CrmProperty(LogicalName = "quantitybackordered")]
        public virtual decimal? QuantityBackordered
        {
            get { FillData(); return _quantityBackordered; }
            set { SetValue<decimal?>("quantitybackordered", value); _quantityBackordered = value; }
        }
        private decimal? _quantityBackordered;

		[CrmProperty(LogicalName = "quantitycancelled")]
        public virtual decimal? QuantityCancelled
        {
            get { FillData(); return _quantityCancelled; }
            set { SetValue<decimal?>("quantitycancelled", value); _quantityCancelled = value; }
        }
        private decimal? _quantityCancelled;

		[CrmProperty(LogicalName = "quantityshipped")]
        public virtual decimal? QuantityShipped
        {
            get { FillData(); return _quantityShipped; }
            set { SetValue<decimal?>("quantityshipped", value); _quantityShipped = value; }
        }
        private decimal? _quantityShipped;

		[CrmProperty(LogicalName = "requestdeliveryby")]
        public virtual DateTime? RequestDeliveryBy
        {
            get { FillData(); return _requestDeliveryBy; }
            set { SetValue<DateTime?>("requestdeliveryby", value); _requestDeliveryBy = value; }
        }
        private DateTime? _requestDeliveryBy;

		[CrmProperty(LogicalName = "salesorderdetailid")]
        public virtual Guid SalesOrderDetailId
        {
            get { FillData(); return _salesOrderDetailId; }
            set {  _salesOrderDetailId = value; }
        }
        private Guid _salesOrderDetailId;

		[CrmProperty(LogicalName = "salesorderid", IsLookup = true)]
        public virtual Guid? SalesOrderId
        {
            get { FillData(); return _salesOrderId; }
            set { SetLookup("salesorderid", "salesorder", value); _salesOrderId = value; }
        }
        private Guid? _salesOrderId;

		[CrmProperty(LogicalName = "salesorderidName", IsEntityReferenceHelper = true)]
        public virtual string SalesOrderIdName
        {
            get { FillData(); return _salesOrderIdName; }
            set {  _salesOrderIdName = value; }
        }
        private string _salesOrderIdName;

		[CrmProperty(LogicalName = "salesorderispricelocked")]
        public virtual bool? SalesOrderIsPriceLocked
        {
            get { FillData(); return _salesOrderIsPriceLocked; }
            set {  _salesOrderIsPriceLocked = value; }
        }
        private bool? _salesOrderIsPriceLocked;

		[CrmProperty(LogicalName = "salesorderispricelockedname")]
        public virtual string SalesOrderIsPriceLockedName
        {
            get { FillData(); return _salesOrderIsPriceLockedName; }
            set {  _salesOrderIsPriceLockedName = value; }
        }
        private string _salesOrderIsPriceLockedName;

		[CrmProperty(LogicalName = "salesorderstatecode")]
        public virtual Enums.SalesOrderStateCode? SalesOrderStateCode
        {
            get { FillData(); return _salesOrderStateCode; }
            set {  _salesOrderStateCode = value; }
        }
        private Enums.SalesOrderStateCode? _salesOrderStateCode;

		[CrmProperty(LogicalName = "salesorderstatecodename")]
        public virtual string SalesOrderStateCodeName
        {
            get { FillData(); return _salesOrderStateCodeName; }
            set {  _salesOrderStateCodeName = value; }
        }
        private string _salesOrderStateCodeName;

		[CrmProperty(LogicalName = "salesrepid", IsLookup = true)]
        public virtual Guid? SalesRepId
        {
            get { FillData(); return _salesRepId; }
            set { SetLookup("salesrepid", "systemuser", value); _salesRepId = value; }
        }
        private Guid? _salesRepId;

		[CrmProperty(LogicalName = "salesrepidname")]
        public virtual string SalesRepIdName
        {
            get { FillData(); return _salesRepIdName; }
            set {  _salesRepIdName = value; }
        }
        private string _salesRepIdName;

		[CrmProperty(LogicalName = "salesrepidyominame")]
        public virtual string SalesRepIdYomiName
        {
            get { FillData(); return _salesRepIdYomiName; }
            set {  _salesRepIdYomiName = value; }
        }
        private string _salesRepIdYomiName;

		[CrmProperty(LogicalName = "shipto_addressid")]
        public virtual Guid? ShipToAddressId
        {
            get { FillData(); return _shipToAddressId; }
            set { SetValue<Guid?>("shipto_addressid", value); _shipToAddressId = value; }
        }
        private Guid? _shipToAddressId;

		[CrmProperty(LogicalName = "shipto_city")]
        public virtual string ShipToCity
        {
            get { FillData(); return _shipToCity; }
            set { SetValue<string>("shipto_city", value); _shipToCity = value; }
        }
        private string _shipToCity;

		[CrmProperty(LogicalName = "shipto_contactname")]
        public virtual string ShipToContactName
        {
            get { FillData(); return _shipToContactName; }
            set { SetValue<string>("shipto_contactname", value); _shipToContactName = value; }
        }
        private string _shipToContactName;

		[CrmProperty(LogicalName = "shipto_country")]
        public virtual string ShipToCountry
        {
            get { FillData(); return _shipToCountry; }
            set { SetValue<string>("shipto_country", value); _shipToCountry = value; }
        }
        private string _shipToCountry;

		[CrmProperty(LogicalName = "shipto_fax")]
        public virtual string ShipToFax
        {
            get { FillData(); return _shipToFax; }
            set { SetValue<string>("shipto_fax", value); _shipToFax = value; }
        }
        private string _shipToFax;

		[CrmProperty(LogicalName = "shipto_freighttermscode")]
        public virtual Enums.ShipToFreightTermsCode? ShipToFreightTermsCode
        {
            get { FillData(); return _shipToFreightTermsCode; }
            set { SetPicklist("shipto_freighttermscode", (int?)value); _shipToFreightTermsCode = value; }
        }
        private Enums.ShipToFreightTermsCode? _shipToFreightTermsCode;

		[CrmProperty(LogicalName = "shipto_freighttermscodename")]
        public virtual string ShipToFreightTermsCodeName
        {
            get { FillData(); return _shipToFreightTermsCodeName; }
            set {  _shipToFreightTermsCodeName = value; }
        }
        private string _shipToFreightTermsCodeName;

		[CrmProperty(LogicalName = "shipto_line1")]
        public virtual string ShipToLine1
        {
            get { FillData(); return _shipToLine1; }
            set { SetValue<string>("shipto_line1", value); _shipToLine1 = value; }
        }
        private string _shipToLine1;

		[CrmProperty(LogicalName = "shipto_line2")]
        public virtual string ShipToLine2
        {
            get { FillData(); return _shipToLine2; }
            set { SetValue<string>("shipto_line2", value); _shipToLine2 = value; }
        }
        private string _shipToLine2;

		[CrmProperty(LogicalName = "shipto_line3")]
        public virtual string ShipToLine3
        {
            get { FillData(); return _shipToLine3; }
            set { SetValue<string>("shipto_line3", value); _shipToLine3 = value; }
        }
        private string _shipToLine3;

		[CrmProperty(LogicalName = "shipto_name")]
        public virtual string ShipToName
        {
            get { FillData(); return _shipToName; }
            set { SetValue<string>("shipto_name", value); _shipToName = value; }
        }
        private string _shipToName;

		[CrmProperty(LogicalName = "shipto_postalcode")]
        public virtual string ShipToPostalCode
        {
            get { FillData(); return _shipToPostalCode; }
            set { SetValue<string>("shipto_postalcode", value); _shipToPostalCode = value; }
        }
        private string _shipToPostalCode;

		[CrmProperty(LogicalName = "shipto_stateorprovince")]
        public virtual string ShipToStateOrProvince
        {
            get { FillData(); return _shipToStateOrProvince; }
            set { SetValue<string>("shipto_stateorprovince", value); _shipToStateOrProvince = value; }
        }
        private string _shipToStateOrProvince;

		[CrmProperty(LogicalName = "shipto_telephone")]
        public virtual string ShipToTelephone
        {
            get { FillData(); return _shipToTelephone; }
            set { SetValue<string>("shipto_telephone", value); _shipToTelephone = value; }
        }
        private string _shipToTelephone;

		[CrmProperty(LogicalName = "tax")]
        public virtual decimal? Tax
        {
            get { FillData(); return _tax; }
            set { SetMoney("tax", value); _tax = value; }
        }
        private decimal? _tax;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "uomid", IsLookup = true)]
        public virtual Guid? UoMId
        {
            get { FillData(); return _uoMId; }
            set { SetLookup("uomid", "uom", value); _uoMId = value; }
        }
        private Guid? _uoMId;

		[CrmProperty(LogicalName = "uomidname")]
        public virtual string UoMIdName
        {
            get { FillData(); return _uoMIdName; }
            set {  _uoMIdName = value; }
        }
        private string _uoMIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "volumediscountamount")]
        public virtual decimal? VolumeDiscountAmount
        {
            get { FillData(); return _volumeDiscountAmount; }
            set {  _volumeDiscountAmount = value; }
        }
        private decimal? _volumeDiscountAmount;

		[CrmProperty(LogicalName = "willcall")]
        public virtual bool? WillCall
        {
            get { FillData(); return _willCall; }
            set { SetValue<bool?>("willcall", value); _willCall = value; }
        }
        private bool? _willCall;

		[CrmProperty(LogicalName = "willcallname")]
        public virtual string WillCallName
        {
            get { FillData(); return _willCallName; }
            set {  _willCallName = value; }
        }
        private string _willCallName;

	}
	[CrmEntity(LogicalName = "savedqueryvisualization", PrimaryKey = "savedqueryvisualizationid")]
	public partial class SavedQueryVisualization : CrmEntity
	{
		public class Enums
		{
			public enum ComponentState 
			{
				[CrmPicklist(DisplayName = "Published")]Published = 0,
				[CrmPicklist(DisplayName = "Unpublished", Value = 1)]Unpublished = 1,
				[CrmPicklist(DisplayName = "Deleted", Value = 2)]Deleted = 2,
				[CrmPicklist(DisplayName = "Deleted Unpublished", Value = 3)]DeletedUnpublished = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "savedqueryvisualization";
			
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DataDescription = "datadescription";
			public const string Description = "description";
			public const string IsCustomizable = "iscustomizable";
			public const string IsDefault = "isdefault";
			public const string IsDefaultName = "isdefaultname";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverwriteTime = "overwritetime";
			public const string PresentationDescription = "presentationdescription";
			public const string SavedQueryVisualizationId = "savedqueryvisualizationid";
			public const string SavedQueryVisualizationIdUnique = "savedqueryvisualizationidunique";
			public const string SolutionId = "solutionid";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string VersionNumber = "versionnumber";
			public const string WebResourceId = "webresourceid";
			public const string WebResourceIdName = "webresourceidName";
		}

		public override Guid PrimaryKey
		{
			get { return SavedQueryVisualizationId; }
		}

		[CrmProperty(LogicalName = "componentstate")]
        public virtual Enums.ComponentState? ComponentState
        {
            get { FillData(); return _componentState; }
            set {  _componentState = value; }
        }
        private Enums.ComponentState? _componentState;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "datadescription")]
        public virtual string DataDescription
        {
            get { FillData(); return _dataDescription; }
            set { SetValue<string>("datadescription", value); _dataDescription = value; }
        }
        private string _dataDescription;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "iscustomizable")]
        public virtual object IsCustomizable
        {
            get { FillData(); return _isCustomizable; }
            set {  _isCustomizable = value; }
        }
        private object _isCustomizable;

		[CrmProperty(LogicalName = "isdefault")]
        public virtual bool? IsDefault
        {
            get { FillData(); return _isDefault; }
            set { SetValue<bool?>("isdefault", value); _isDefault = value; }
        }
        private bool? _isDefault;

		[CrmProperty(LogicalName = "isdefaultname")]
        public virtual string IsDefaultName
        {
            get { FillData(); return _isDefaultName; }
            set {  _isDefaultName = value; }
        }
        private string _isDefaultName;

		[CrmProperty(LogicalName = "ismanaged")]
        public virtual bool? IsManaged
        {
            get { FillData(); return _isManaged; }
            set {  _isManaged = value; }
        }
        private bool? _isManaged;

		[CrmProperty(LogicalName = "ismanagedname")]
        public virtual string IsManagedName
        {
            get { FillData(); return _isManagedName; }
            set {  _isManagedName = value; }
        }
        private string _isManagedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overwritetime")]
        public virtual DateTime? OverwriteTime
        {
            get { FillData(); return _overwriteTime; }
            set {  _overwriteTime = value; }
        }
        private DateTime? _overwriteTime;

		[CrmProperty(LogicalName = "presentationdescription")]
        public virtual string PresentationDescription
        {
            get { FillData(); return _presentationDescription; }
            set { SetValue<string>("presentationdescription", value); _presentationDescription = value; }
        }
        private string _presentationDescription;

		[CrmProperty(LogicalName = "savedqueryvisualizationid")]
        public virtual Guid SavedQueryVisualizationId
        {
            get { FillData(); return _savedQueryVisualizationId; }
            set {  _savedQueryVisualizationId = value; }
        }
        private Guid _savedQueryVisualizationId;

		[CrmProperty(LogicalName = "savedqueryvisualizationidunique")]
        public virtual Guid? SavedQueryVisualizationIdUnique
        {
            get { FillData(); return _savedQueryVisualizationIdUnique; }
            set {  _savedQueryVisualizationIdUnique = value; }
        }
        private Guid? _savedQueryVisualizationIdUnique;

		[CrmProperty(LogicalName = "solutionid")]
        public virtual Guid? SolutionId
        {
            get { FillData(); return _solutionId; }
            set {  _solutionId = value; }
        }
        private Guid? _solutionId;

		[CrmProperty(LogicalName = "supportingsolutionid")]
        public virtual Guid? SupportingSolutionId
        {
            get { FillData(); return _supportingSolutionId; }
            set {  _supportingSolutionId = value; }
        }
        private Guid? _supportingSolutionId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "webresourceid", IsLookup = true)]
        public virtual Guid? WebResourceId
        {
            get { FillData(); return _webResourceId; }
            set {  _webResourceId = value; }
        }
        private Guid? _webResourceId;

		[CrmProperty(LogicalName = "webresourceidName", IsEntityReferenceHelper = true)]
        public virtual string WebResourceIdName
        {
            get { FillData(); return _webResourceIdName; }
            set {  _webResourceIdName = value; }
        }
        private string _webResourceIdName;

	}
	[CrmEntity(LogicalName = "service", PrimaryKey = "serviceid")]
	public partial class Service : CrmEntity
	{
		public class Enums
		{
			public enum InitialStatusCode 
			{
				[CrmPicklist(DisplayName = "Requested", Value = 1)]Requested = 1,
				[CrmPicklist(DisplayName = "Tentative", Value = 2)]Tentative = 2,
				[CrmPicklist(DisplayName = "Pending", Value = 3)]Pending = 3,
				[CrmPicklist(DisplayName = "Reserved", Value = 4)]Reserved = 4,
				[CrmPicklist(DisplayName = "In Progress", Value = 6)]InProgress = 6,
				[CrmPicklist(DisplayName = "Arrived", Value = 7)]Arrived = 7,
				[CrmPicklist(DisplayName = "Completed", Value = 8)]Completed = 8,
				[CrmPicklist(DisplayName = "Canceled", Value = 9)]Canceled = 9,
				[CrmPicklist(DisplayName = "No Show", Value = 10)]NoShow = 10,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "service";
			
			public const string AnchorOffset = "anchoroffset";
			public const string CalendarId = "calendarid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string Duration = "duration";
			public const string Granularity = "granularity";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InitialStatusCode = "initialstatuscode";
			public const string InitialStatusCodeName = "initialstatuscodename";
			public const string IsSchedulable = "isschedulable";
			public const string IsSchedulableName = "isschedulablename";
			public const string IsVisible = "isvisible";
			public const string IsVisibleName = "isvisiblename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string ResourceSpecId = "resourcespecid";
			public const string ResourceSpecIdName = "resourcespecidname";
			public const string ServiceId = "serviceid";
			public const string ShowResources = "showresources";
			public const string ShowResourcesName = "showresourcesname";
			public const string StrategyId = "strategyid";
			public const string StrategyIdName = "strategyidName";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ServiceId; }
		}

		[CrmProperty(LogicalName = "anchoroffset")]
        public virtual int? AnchorOffset
        {
            get { FillData(); return _anchorOffset; }
            set { SetValue<int?>("anchoroffset", value); _anchorOffset = value; }
        }
        private int? _anchorOffset;

		[CrmProperty(LogicalName = "calendarid")]
        public virtual Guid? CalendarId
        {
            get { FillData(); return _calendarId; }
            set { SetValue<Guid?>("calendarid", value); _calendarId = value; }
        }
        private Guid? _calendarId;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "duration")]
        public virtual int? Duration
        {
            get { FillData(); return _duration; }
            set { SetValue<int?>("duration", value); _duration = value; }
        }
        private int? _duration;

		[CrmProperty(LogicalName = "granularity")]
        public virtual string Granularity
        {
            get { FillData(); return _granularity; }
            set { SetValue<string>("granularity", value); _granularity = value; }
        }
        private string _granularity;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "initialstatuscode")]
        public virtual int InitialStatusCode
        {
            get { FillData(); return _initialStatusCode; }
            set {  _initialStatusCode = value; }
        }
        private int _initialStatusCode;

		[CrmProperty(LogicalName = "initialstatuscodename")]
        public virtual string InitialStatusCodeName
        {
            get { FillData(); return _initialStatusCodeName; }
            set {  _initialStatusCodeName = value; }
        }
        private string _initialStatusCodeName;

		[CrmProperty(LogicalName = "isschedulable")]
        public virtual bool? IsSchedulable
        {
            get { FillData(); return _isSchedulable; }
            set { SetValue<bool?>("isschedulable", value); _isSchedulable = value; }
        }
        private bool? _isSchedulable;

		[CrmProperty(LogicalName = "isschedulablename")]
        public virtual string IsSchedulableName
        {
            get { FillData(); return _isSchedulableName; }
            set {  _isSchedulableName = value; }
        }
        private string _isSchedulableName;

		[CrmProperty(LogicalName = "isvisible")]
        public virtual bool? IsVisible
        {
            get { FillData(); return _isVisible; }
            set { SetValue<bool?>("isvisible", value); _isVisible = value; }
        }
        private bool? _isVisible;

		[CrmProperty(LogicalName = "isvisiblename")]
        public virtual string IsVisibleName
        {
            get { FillData(); return _isVisibleName; }
            set {  _isVisibleName = value; }
        }
        private string _isVisibleName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "resourcespecid", IsLookup = true)]
        public virtual Guid? ResourceSpecId
        {
            get { FillData(); return _resourceSpecId; }
            set { SetLookup("resourcespecid", "resourcespec", value); _resourceSpecId = value; }
        }
        private Guid? _resourceSpecId;

		[CrmProperty(LogicalName = "resourcespecidname")]
        public virtual string ResourceSpecIdName
        {
            get { FillData(); return _resourceSpecIdName; }
            set {  _resourceSpecIdName = value; }
        }
        private string _resourceSpecIdName;

		[CrmProperty(LogicalName = "serviceid")]
        public virtual Guid ServiceId
        {
            get { FillData(); return _serviceId; }
            set {  _serviceId = value; }
        }
        private Guid _serviceId;

		[CrmProperty(LogicalName = "showresources")]
        public virtual bool? ShowResources
        {
            get { FillData(); return _showResources; }
            set { SetValue<bool?>("showresources", value); _showResources = value; }
        }
        private bool? _showResources;

		[CrmProperty(LogicalName = "showresourcesname")]
        public virtual string ShowResourcesName
        {
            get { FillData(); return _showResourcesName; }
            set {  _showResourcesName = value; }
        }
        private string _showResourcesName;

		[CrmProperty(LogicalName = "strategyid", IsLookup = true)]
        public virtual Guid? StrategyId
        {
            get { FillData(); return _strategyId; }
            set { SetLookup("strategyid", "plugintype", value); _strategyId = value; }
        }
        private Guid? _strategyId;

		[CrmProperty(LogicalName = "strategyidName", IsEntityReferenceHelper = true)]
        public virtual string StrategyIdName
        {
            get { FillData(); return _strategyIdName; }
            set {  _strategyIdName = value; }
        }
        private string _strategyIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "serviceappointment", PrimaryKey = "activityid")]
	public partial class ServiceAppointment : CrmEntity
	{
		public class Enums
		{
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Closed", Value = 1)]Closed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
				[CrmPicklist(DisplayName = "Scheduled", Value = 3)]Scheduled = 3,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Requested", Value = 1)]Requested = 1,
				[CrmPicklist(DisplayName = "Tentative", Value = 2)]Tentative = 2,
				[CrmPicklist(DisplayName = "Completed", Value = 8)]Completed = 8,
				[CrmPicklist(DisplayName = "Canceled", Value = 9)]Canceled = 9,
				[CrmPicklist(DisplayName = "No Show", Value = 10)]NoShow = 10,
				[CrmPicklist(DisplayName = "Pending", Value = 3)]Pending = 3,
				[CrmPicklist(DisplayName = "Reserved", Value = 4)]Reserved = 4,
				[CrmPicklist(DisplayName = "Reserved - Consulting", Value = 6)]ReservedConsulting = 6,
				[CrmPicklist(DisplayName = "Reserved - Provisioning", Value = 7)]ReservedProvisioning = 7,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "serviceappointment";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Customers = "customers";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsAllDayEvent = "isalldayevent";
			public const string IsAllDayEventName = "isalldayeventname";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string SiteId = "siteid";
			public const string SiteIdName = "siteidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "customers")]
        public virtual object Customers
        {
            get { FillData(); return _customers; }
            set {  _customers = value; }
        }
        private object _customers;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isalldayevent")]
        public virtual bool? IsAllDayEvent
        {
            get { FillData(); return _isAllDayEvent; }
            set { SetValue<bool?>("isalldayevent", value); _isAllDayEvent = value; }
        }
        private bool? _isAllDayEvent;

		[CrmProperty(LogicalName = "isalldayeventname")]
        public virtual string IsAllDayEventName
        {
            get { FillData(); return _isAllDayEventName; }
            set {  _isAllDayEventName = value; }
        }
        private string _isAllDayEventName;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "ismapiprivate")]
        public virtual bool? IsMapiPrivate
        {
            get { FillData(); return _isMapiPrivate; }
            set { SetValue<bool?>("ismapiprivate", value); _isMapiPrivate = value; }
        }
        private bool? _isMapiPrivate;

		[CrmProperty(LogicalName = "ismapiprivatename")]
        public virtual string IsMapiPrivateName
        {
            get { FillData(); return _isMapiPrivateName; }
            set {  _isMapiPrivateName = value; }
        }
        private string _isMapiPrivateName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "location")]
        public virtual string Location
        {
            get { FillData(); return _location; }
            set { SetValue<string>("location", value); _location = value; }
        }
        private string _location;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "resources")]
        public virtual object Resources
        {
            get { FillData(); return _resources; }
            set {  _resources = value; }
        }
        private object _resources;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set { SetValue<int?>("scheduleddurationminutes", value); _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidname")]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "siteid", IsLookup = true)]
        public virtual Guid? SiteId
        {
            get { FillData(); return _siteId; }
            set { SetLookup("siteid", "site", value); _siteId = value; }
        }
        private Guid? _siteId;

		[CrmProperty(LogicalName = "siteidname")]
        public virtual string SiteIdName
        {
            get { FillData(); return _siteIdName; }
            set {  _siteIdName = value; }
        }
        private string _siteIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "sharepointdocumentlocation", PrimaryKey = "sharepointdocumentlocationid")]
	public partial class SharePointDocumentLocation : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "sharepointdocumentlocation";
			
			public const string AbsoluteURL = "absoluteurl";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string ParentSiteOrLocation = "parentsiteorlocation";
			public const string ParentSiteOrLocationName = "parentsiteorlocationname";
			public const string ParentSiteOrLocationType = "parentsiteorlocationType";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RelativeUrl = "relativeurl";
			public const string SharePointDocumentLocationId = "sharepointdocumentlocationid";
			public const string SiteCollectionId = "sitecollectionid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return SharePointDocumentLocationId; }
		}

		[CrmProperty(LogicalName = "absoluteurl")]
        public virtual string AbsoluteURL
        {
            get { FillData(); return _absoluteURL; }
            set { SetValue<string>("absoluteurl", value); _absoluteURL = value; }
        }
        private string _absoluteURL;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "parentsiteorlocation", IsLookup = true)]
        public virtual Guid? ParentSiteOrLocation
        {
            get { FillData(); return _parentSiteOrLocation; }
            set { SetLookup("parentsiteorlocation", ParentSiteOrLocationType, value); _parentSiteOrLocation = value; }
        }
        private Guid? _parentSiteOrLocation;

		[CrmProperty(LogicalName = "parentsiteorlocationname")]
        public virtual string ParentSiteOrLocationName
        {
            get { FillData(); return _parentSiteOrLocationName; }
            set {  _parentSiteOrLocationName = value; }
        }
        private string _parentSiteOrLocationName;

		[CrmProperty(LogicalName = "parentsiteorlocationType", IsEntityReferenceHelper = true)]
        public virtual string ParentSiteOrLocationType
        {
            get { FillData(); return _parentSiteOrLocationType; }
            set {  _parentSiteOrLocationType = value; }
        }
        private string _parentSiteOrLocationType;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set { SetValue<string>("regardingobjectidname", value); _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set { SetValue<string>("regardingobjectidyominame", value); _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "relativeurl")]
        public virtual string RelativeUrl
        {
            get { FillData(); return _relativeUrl; }
            set { SetValue<string>("relativeurl", value); _relativeUrl = value; }
        }
        private string _relativeUrl;

		[CrmProperty(LogicalName = "sharepointdocumentlocationid")]
        public virtual Guid SharePointDocumentLocationId
        {
            get { FillData(); return _sharePointDocumentLocationId; }
            set {  _sharePointDocumentLocationId = value; }
        }
        private Guid _sharePointDocumentLocationId;

		[CrmProperty(LogicalName = "sitecollectionid")]
        public virtual Guid? SiteCollectionId
        {
            get { FillData(); return _siteCollectionId; }
            set {  _siteCollectionId = value; }
        }
        private Guid? _siteCollectionId;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "site", PrimaryKey = "siteid")]
	public partial class Site : CrmEntity
	{
		public class Enums
		{
			public enum Address1AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address1ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "site";
			
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string EMailAddress = "emailaddress";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string SiteId = "siteid";
			public const string TimeZoneCode = "timezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return SiteId; }
		}

		[CrmProperty(LogicalName = "address1_addressid")]
        public virtual Guid Address1AddressId
        {
            get { FillData(); return _address1AddressId; }
            set { SetValue<Guid?>("address1_addressid", value); _address1AddressId = value; }
        }
        private Guid _address1AddressId;

		[CrmProperty(LogicalName = "address1_addresstypecode")]
        public virtual Enums.Address1AddressTypeCode? Address1AddressTypeCode
        {
            get { FillData(); return _address1AddressTypeCode; }
            set { SetPicklist("address1_addresstypecode", (int?)value); _address1AddressTypeCode = value; }
        }
        private Enums.Address1AddressTypeCode? _address1AddressTypeCode;

		[CrmProperty(LogicalName = "address1_addresstypecodename")]
        public virtual string Address1AddressTypeCodeName
        {
            get { FillData(); return _address1AddressTypeCodeName; }
            set {  _address1AddressTypeCodeName = value; }
        }
        private string _address1AddressTypeCodeName;

		[CrmProperty(LogicalName = "address1_city")]
        public virtual string Address1City
        {
            get { FillData(); return _address1City; }
            set { SetValue<string>("address1_city", value); _address1City = value; }
        }
        private string _address1City;

		[CrmProperty(LogicalName = "address1_country")]
        public virtual string Address1Country
        {
            get { FillData(); return _address1Country; }
            set { SetValue<string>("address1_country", value); _address1Country = value; }
        }
        private string _address1Country;

		[CrmProperty(LogicalName = "address1_county")]
        public virtual string Address1County
        {
            get { FillData(); return _address1County; }
            set { SetValue<string>("address1_county", value); _address1County = value; }
        }
        private string _address1County;

		[CrmProperty(LogicalName = "address1_fax")]
        public virtual string Address1Fax
        {
            get { FillData(); return _address1Fax; }
            set { SetValue<string>("address1_fax", value); _address1Fax = value; }
        }
        private string _address1Fax;

		[CrmProperty(LogicalName = "address1_latitude")]
        public virtual double? Address1Latitude
        {
            get { FillData(); return _address1Latitude; }
            set { SetValue<double?>("address1_latitude", value); _address1Latitude = value; }
        }
        private double? _address1Latitude;

		[CrmProperty(LogicalName = "address1_line1")]
        public virtual string Address1Line1
        {
            get { FillData(); return _address1Line1; }
            set { SetValue<string>("address1_line1", value); _address1Line1 = value; }
        }
        private string _address1Line1;

		[CrmProperty(LogicalName = "address1_line2")]
        public virtual string Address1Line2
        {
            get { FillData(); return _address1Line2; }
            set { SetValue<string>("address1_line2", value); _address1Line2 = value; }
        }
        private string _address1Line2;

		[CrmProperty(LogicalName = "address1_line3")]
        public virtual string Address1Line3
        {
            get { FillData(); return _address1Line3; }
            set { SetValue<string>("address1_line3", value); _address1Line3 = value; }
        }
        private string _address1Line3;

		[CrmProperty(LogicalName = "address1_longitude")]
        public virtual double? Address1Longitude
        {
            get { FillData(); return _address1Longitude; }
            set { SetValue<double?>("address1_longitude", value); _address1Longitude = value; }
        }
        private double? _address1Longitude;

		[CrmProperty(LogicalName = "address1_name")]
        public virtual string Address1Name
        {
            get { FillData(); return _address1Name; }
            set { SetValue<string>("address1_name", value); _address1Name = value; }
        }
        private string _address1Name;

		[CrmProperty(LogicalName = "address1_postalcode")]
        public virtual string Address1PostalCode
        {
            get { FillData(); return _address1PostalCode; }
            set { SetValue<string>("address1_postalcode", value); _address1PostalCode = value; }
        }
        private string _address1PostalCode;

		[CrmProperty(LogicalName = "address1_postofficebox")]
        public virtual string Address1PostOfficeBox
        {
            get { FillData(); return _address1PostOfficeBox; }
            set { SetValue<string>("address1_postofficebox", value); _address1PostOfficeBox = value; }
        }
        private string _address1PostOfficeBox;

		[CrmProperty(LogicalName = "address1_shippingmethodcode")]
        public virtual Enums.Address1ShippingMethodCode? Address1ShippingMethodCode
        {
            get { FillData(); return _address1ShippingMethodCode; }
            set { SetPicklist("address1_shippingmethodcode", (int?)value); _address1ShippingMethodCode = value; }
        }
        private Enums.Address1ShippingMethodCode? _address1ShippingMethodCode;

		[CrmProperty(LogicalName = "address1_shippingmethodcodename")]
        public virtual string Address1ShippingMethodCodeName
        {
            get { FillData(); return _address1ShippingMethodCodeName; }
            set {  _address1ShippingMethodCodeName = value; }
        }
        private string _address1ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address1_stateorprovince")]
        public virtual string Address1StateOrProvince
        {
            get { FillData(); return _address1StateOrProvince; }
            set { SetValue<string>("address1_stateorprovince", value); _address1StateOrProvince = value; }
        }
        private string _address1StateOrProvince;

		[CrmProperty(LogicalName = "address1_telephone1")]
        public virtual string Address1Telephone1
        {
            get { FillData(); return _address1Telephone1; }
            set { SetValue<string>("address1_telephone1", value); _address1Telephone1 = value; }
        }
        private string _address1Telephone1;

		[CrmProperty(LogicalName = "address1_telephone2")]
        public virtual string Address1Telephone2
        {
            get { FillData(); return _address1Telephone2; }
            set { SetValue<string>("address1_telephone2", value); _address1Telephone2 = value; }
        }
        private string _address1Telephone2;

		[CrmProperty(LogicalName = "address1_telephone3")]
        public virtual string Address1Telephone3
        {
            get { FillData(); return _address1Telephone3; }
            set { SetValue<string>("address1_telephone3", value); _address1Telephone3 = value; }
        }
        private string _address1Telephone3;

		[CrmProperty(LogicalName = "address1_upszone")]
        public virtual string Address1UPSZone
        {
            get { FillData(); return _address1UPSZone; }
            set { SetValue<string>("address1_upszone", value); _address1UPSZone = value; }
        }
        private string _address1UPSZone;

		[CrmProperty(LogicalName = "address1_utcoffset")]
        public virtual int? Address1UTCOffset
        {
            get { FillData(); return _address1UTCOffset; }
            set { SetValue<int?>("address1_utcoffset", value); _address1UTCOffset = value; }
        }
        private int? _address1UTCOffset;

		[CrmProperty(LogicalName = "address2_addressid")]
        public virtual Guid Address2AddressId
        {
            get { FillData(); return _address2AddressId; }
            set { SetValue<Guid?>("address2_addressid", value); _address2AddressId = value; }
        }
        private Guid _address2AddressId;

		[CrmProperty(LogicalName = "address2_addresstypecode")]
        public virtual Enums.Address2AddressTypeCode? Address2AddressTypeCode
        {
            get { FillData(); return _address2AddressTypeCode; }
            set { SetPicklist("address2_addresstypecode", (int?)value); _address2AddressTypeCode = value; }
        }
        private Enums.Address2AddressTypeCode? _address2AddressTypeCode;

		[CrmProperty(LogicalName = "address2_addresstypecodename")]
        public virtual string Address2AddressTypeCodeName
        {
            get { FillData(); return _address2AddressTypeCodeName; }
            set {  _address2AddressTypeCodeName = value; }
        }
        private string _address2AddressTypeCodeName;

		[CrmProperty(LogicalName = "address2_city")]
        public virtual string Address2City
        {
            get { FillData(); return _address2City; }
            set { SetValue<string>("address2_city", value); _address2City = value; }
        }
        private string _address2City;

		[CrmProperty(LogicalName = "address2_country")]
        public virtual string Address2Country
        {
            get { FillData(); return _address2Country; }
            set { SetValue<string>("address2_country", value); _address2Country = value; }
        }
        private string _address2Country;

		[CrmProperty(LogicalName = "address2_county")]
        public virtual string Address2County
        {
            get { FillData(); return _address2County; }
            set { SetValue<string>("address2_county", value); _address2County = value; }
        }
        private string _address2County;

		[CrmProperty(LogicalName = "address2_fax")]
        public virtual string Address2Fax
        {
            get { FillData(); return _address2Fax; }
            set { SetValue<string>("address2_fax", value); _address2Fax = value; }
        }
        private string _address2Fax;

		[CrmProperty(LogicalName = "address2_latitude")]
        public virtual double? Address2Latitude
        {
            get { FillData(); return _address2Latitude; }
            set { SetValue<double?>("address2_latitude", value); _address2Latitude = value; }
        }
        private double? _address2Latitude;

		[CrmProperty(LogicalName = "address2_line1")]
        public virtual string Address2Line1
        {
            get { FillData(); return _address2Line1; }
            set { SetValue<string>("address2_line1", value); _address2Line1 = value; }
        }
        private string _address2Line1;

		[CrmProperty(LogicalName = "address2_line2")]
        public virtual string Address2Line2
        {
            get { FillData(); return _address2Line2; }
            set { SetValue<string>("address2_line2", value); _address2Line2 = value; }
        }
        private string _address2Line2;

		[CrmProperty(LogicalName = "address2_line3")]
        public virtual string Address2Line3
        {
            get { FillData(); return _address2Line3; }
            set { SetValue<string>("address2_line3", value); _address2Line3 = value; }
        }
        private string _address2Line3;

		[CrmProperty(LogicalName = "address2_longitude")]
        public virtual double? Address2Longitude
        {
            get { FillData(); return _address2Longitude; }
            set { SetValue<double?>("address2_longitude", value); _address2Longitude = value; }
        }
        private double? _address2Longitude;

		[CrmProperty(LogicalName = "address2_name")]
        public virtual string Address2Name
        {
            get { FillData(); return _address2Name; }
            set { SetValue<string>("address2_name", value); _address2Name = value; }
        }
        private string _address2Name;

		[CrmProperty(LogicalName = "address2_postalcode")]
        public virtual string Address2PostalCode
        {
            get { FillData(); return _address2PostalCode; }
            set { SetValue<string>("address2_postalcode", value); _address2PostalCode = value; }
        }
        private string _address2PostalCode;

		[CrmProperty(LogicalName = "address2_postofficebox")]
        public virtual string Address2PostOfficeBox
        {
            get { FillData(); return _address2PostOfficeBox; }
            set { SetValue<string>("address2_postofficebox", value); _address2PostOfficeBox = value; }
        }
        private string _address2PostOfficeBox;

		[CrmProperty(LogicalName = "address2_shippingmethodcode")]
        public virtual Enums.Address2ShippingMethodCode? Address2ShippingMethodCode
        {
            get { FillData(); return _address2ShippingMethodCode; }
            set { SetPicklist("address2_shippingmethodcode", (int?)value); _address2ShippingMethodCode = value; }
        }
        private Enums.Address2ShippingMethodCode? _address2ShippingMethodCode;

		[CrmProperty(LogicalName = "address2_shippingmethodcodename")]
        public virtual string Address2ShippingMethodCodeName
        {
            get { FillData(); return _address2ShippingMethodCodeName; }
            set {  _address2ShippingMethodCodeName = value; }
        }
        private string _address2ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address2_stateorprovince")]
        public virtual string Address2StateOrProvince
        {
            get { FillData(); return _address2StateOrProvince; }
            set { SetValue<string>("address2_stateorprovince", value); _address2StateOrProvince = value; }
        }
        private string _address2StateOrProvince;

		[CrmProperty(LogicalName = "address2_telephone1")]
        public virtual string Address2Telephone1
        {
            get { FillData(); return _address2Telephone1; }
            set { SetValue<string>("address2_telephone1", value); _address2Telephone1 = value; }
        }
        private string _address2Telephone1;

		[CrmProperty(LogicalName = "address2_telephone2")]
        public virtual string Address2Telephone2
        {
            get { FillData(); return _address2Telephone2; }
            set { SetValue<string>("address2_telephone2", value); _address2Telephone2 = value; }
        }
        private string _address2Telephone2;

		[CrmProperty(LogicalName = "address2_telephone3")]
        public virtual string Address2Telephone3
        {
            get { FillData(); return _address2Telephone3; }
            set { SetValue<string>("address2_telephone3", value); _address2Telephone3 = value; }
        }
        private string _address2Telephone3;

		[CrmProperty(LogicalName = "address2_upszone")]
        public virtual string Address2UPSZone
        {
            get { FillData(); return _address2UPSZone; }
            set { SetValue<string>("address2_upszone", value); _address2UPSZone = value; }
        }
        private string _address2UPSZone;

		[CrmProperty(LogicalName = "address2_utcoffset")]
        public virtual int? Address2UTCOffset
        {
            get { FillData(); return _address2UTCOffset; }
            set { SetValue<int?>("address2_utcoffset", value); _address2UTCOffset = value; }
        }
        private int? _address2UTCOffset;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "emailaddress")]
        public virtual string EMailAddress
        {
            get { FillData(); return _eMailAddress; }
            set { SetValue<string>("emailaddress", value); _eMailAddress = value; }
        }
        private string _eMailAddress;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid")]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "siteid")]
        public virtual Guid SiteId
        {
            get { FillData(); return _siteId; }
            set {  _siteId = value; }
        }
        private Guid _siteId;

		[CrmProperty(LogicalName = "timezonecode")]
        public virtual int? TimeZoneCode
        {
            get { FillData(); return _timeZoneCode; }
            set { SetValue<int?>("timezonecode", value); _timeZoneCode = value; }
        }
        private int? _timeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "subject", PrimaryKey = "subjectid")]
	public partial class Subject : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "subject";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string FeatureMask = "featuremask";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string ParentSubject = "parentsubject";
			public const string ParentSubjectName = "parentsubjectname";
			public const string SubjectId = "subjectid";
			public const string Title = "title";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return SubjectId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "featuremask")]
        public virtual int? FeatureMask
        {
            get { FillData(); return _featureMask; }
            set { SetValue<int?>("featuremask", value); _featureMask = value; }
        }
        private int? _featureMask;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "parentsubject", IsLookup = true)]
        public virtual Guid? ParentSubject
        {
            get { FillData(); return _parentSubject; }
            set { SetLookup("parentsubject", "subject", value); _parentSubject = value; }
        }
        private Guid? _parentSubject;

		[CrmProperty(LogicalName = "parentsubjectname")]
        public virtual string ParentSubjectName
        {
            get { FillData(); return _parentSubjectName; }
            set {  _parentSubjectName = value; }
        }
        private string _parentSubjectName;

		[CrmProperty(LogicalName = "subjectid")]
        public virtual Guid SubjectId
        {
            get { FillData(); return _subjectId; }
            set {  _subjectId = value; }
        }
        private Guid _subjectId;

		[CrmProperty(LogicalName = "title")]
        public virtual string Title
        {
            get { FillData(); return _title; }
            set { SetValue<string>("title", value); _title = value; }
        }
        private string _title;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "systemuser", PrimaryKey = "systemuserid")]
	public partial class SystemUser : CrmEntity
	{
		public class Enums
		{
			public enum AccessMode 
			{
				[CrmPicklist(DisplayName = "Read-Write")]ReadWrite = 0,
				[CrmPicklist(DisplayName = "Administrative", Value = 1)]Administrative = 1,
				[CrmPicklist(DisplayName = "Read", Value = 2)]Read = 2,
				[CrmPicklist(DisplayName = "Support User", Value = 3)]SupportUser = 3,
				[CrmPicklist(DisplayName = "Non-interactive", Value = 4)]Noninteractive = 4,
			}		
			public enum Address1AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address1ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2AddressTypeCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum Address2ShippingMethodCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum CALType 
			{
				[CrmPicklist(DisplayName = "Full")]Full = 0,
				[CrmPicklist(DisplayName = "Administrative", Value = 1)]Administrative = 1,
				[CrmPicklist(DisplayName = "Limited", Value = 2)]Limited = 2,
				[CrmPicklist(DisplayName = "Device Full", Value = 3)]DeviceFull = 3,
				[CrmPicklist(DisplayName = "Device Limited", Value = 4)]DeviceLimited = 4,
			}		
			public enum EmailRouterAccessApproval 
			{
				[CrmPicklist(DisplayName = "Empty")]Empty = 0,
				[CrmPicklist(DisplayName = "Approved", Value = 1)]Approved = 1,
				[CrmPicklist(DisplayName = "Pending Approval", Value = 2)]PendingApproval = 2,
				[CrmPicklist(DisplayName = "Rejected", Value = 3)]Rejected = 3,
			}		
			public enum IncomingEmailDeliveryMethod 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Microsoft Dynamics CRM for Outlook", Value = 1)]MicrosoftDynamicsCRMForOutlook = 1,
				[CrmPicklist(DisplayName = "E-mail Router", Value = 2)]EmailRouter = 2,
				[CrmPicklist(DisplayName = "Forward Mailbox", Value = 3)]ForwardMailbox = 3,
			}		
			public enum InviteStatusCode 
			{
				[CrmPicklist(DisplayName = "Invitation Not Sent")]InvitationNotSent = 0,
				[CrmPicklist(DisplayName = "Invited", Value = 1)]Invited = 1,
				[CrmPicklist(DisplayName = "Invitation Near Expired", Value = 2)]InvitationNearExpired = 2,
				[CrmPicklist(DisplayName = "Invitation Expired", Value = 3)]InvitationExpired = 3,
				[CrmPicklist(DisplayName = "Invitation Accepted", Value = 4)]InvitationAccepted = 4,
				[CrmPicklist(DisplayName = "Invitation Rejected", Value = 5)]InvitationRejected = 5,
				[CrmPicklist(DisplayName = "Invitation Revoked", Value = 6)]InvitationRevoked = 6,
			}		
			public enum OutgoingEmailDeliveryMethod 
			{
				[CrmPicklist(DisplayName = "None")]None = 0,
				[CrmPicklist(DisplayName = "Microsoft Dynamics CRM for Outlook", Value = 1)]MicrosoftDynamicsCRMForOutlook = 1,
				[CrmPicklist(DisplayName = "E-mail Router", Value = 2)]EmailRouter = 2,
			}		
			public enum PreferredAddressCode 
			{
				[CrmPicklist(DisplayName = "Mailing Address", Value = 1)]MailingAddress = 1,
				[CrmPicklist(DisplayName = "Other Address", Value = 2)]OtherAddress = 2,
			}		
			public enum PreferredEmailCode 
			{
				[CrmPicklist(DisplayName = "Default Value", Value = 1)]DefaultValue = 1,
			}		
			public enum PreferredPhoneCode 
			{
				[CrmPicklist(DisplayName = "Main Phone", Value = 1)]MainPhone = 1,
				[CrmPicklist(DisplayName = "Other Phone", Value = 2)]OtherPhone = 2,
				[CrmPicklist(DisplayName = "Home Phone", Value = 3)]HomePhone = 3,
				[CrmPicklist(DisplayName = "Mobile Phone", Value = 4)]MobilePhone = 4,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "systemuser";
			
			public const string AccessMode = "accessmode";
			public const string AccessModeName = "accessmodename";
			public const string ActiveDirectoryGuid = "activedirectoryguid";
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string BusinessUnitId = "businessunitid";
			public const string BusinessUnitIdName = "businessunitidname";
			public const string CalendarId = "calendarid";
			public const string CalendarIdName = "calendaridName";
			public const string CALType = "caltype";
			public const string CALTypeName = "caltypename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DefaultFiltersPopulated = "defaultfilterspopulated";
			public const string DisabledReason = "disabledreason";
			public const string DisplayInServiceViews = "displayinserviceviews";
			public const string DisplayInServiceViewsName = "displayinserviceviewsname";
			public const string DomainName = "domainname";
			public const string EmailRouterAccessApproval = "emailrouteraccessapproval";
			public const string EmailRouterAccessApprovalName = "emailrouteraccessapprovalname";
			public const string EmployeeId = "employeeid";
			public const string ExchangeRate = "exchangerate";
			public const string FirstName = "firstname";
			public const string FullName = "fullname";
			public const string GovernmentId = "governmentid";
			public const string HomePhone = "homephone";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IncomingEmailDeliveryMethod = "incomingemaildeliverymethod";
			public const string IncomingEmailDeliveryMethodName = "incomingemaildeliverymethodname";
			public const string InternalEMailAddress = "internalemailaddress";
			public const string InviteStatusCode = "invitestatuscode";
			public const string InviteStatusCodeName = "invitestatuscodename";
			public const string IsActiveDirectoryUser = "isactivedirectoryuser";
			public const string IsDisabled = "isdisabled";
			public const string IsDisabledName = "isdisabledname";
			public const string IsIntegrationUser = "isintegrationuser";
			public const string IsIntegrationUserName = "isintegrationusername";
			public const string IsLicensed = "islicensed";
			public const string IsSyncWithDirectory = "issyncwithdirectory";
			public const string JobTitle = "jobtitle";
			public const string LastName = "lastname";
			public const string MiddleName = "middlename";
			public const string MobileAlertEMail = "mobilealertemail";
			public const string MobilePhone = "mobilephone";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NickName = "nickname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OutgoingEmailDeliveryMethod = "outgoingemaildeliverymethod";
			public const string OutgoingEmailDeliveryMethodName = "outgoingemaildeliverymethodname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string ParentSystemUserId = "parentsystemuserid";
			public const string ParentSystemUserIdName = "parentsystemuseridname";
			public const string ParentSystemUserIdYomiName = "parentsystemuseridyominame";
			public const string PassportHi = "passporthi";
			public const string PassportLo = "passportlo";
			public const string PersonalEMailAddress = "personalemailaddress";
			public const string PhotoUrl = "photourl";
			public const string PreferredAddressCode = "preferredaddresscode";
			public const string PreferredAddressCodeName = "preferredaddresscodename";
			public const string PreferredEmailCode = "preferredemailcode";
			public const string PreferredEmailCodeName = "preferredemailcodename";
			public const string PreferredPhoneCode = "preferredphonecode";
			public const string PreferredPhoneCodeName = "preferredphonecodename";
			public const string QueueId = "queueid";
			public const string QueueIdName = "queueidname";
			public const string Salutation = "salutation";
			public const string SetupUser = "setupuser";
			public const string SetupUserName = "setupusername";
			public const string SiteId = "siteid";
			public const string SiteIdName = "siteidname";
			public const string Skills = "skills";
			public const string SystemUserId = "systemuserid";
			public const string TerritoryId = "territoryid";
			public const string TerritoryIdName = "territoryidname";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WindowsLiveID = "windowsliveid";
			public const string YammerEmailAddress = "yammeremailaddress";
			public const string YammerUserId = "yammeruserid";
			public const string YomiFirstName = "yomifirstname";
			public const string YomiFullName = "yomifullname";
			public const string YomiLastName = "yomilastname";
			public const string YomiMiddleName = "yomimiddlename";
		}

		public override Guid PrimaryKey
		{
			get { return SystemUserId; }
		}

		[CrmProperty(LogicalName = "accessmode")]
        public virtual Enums.AccessMode? AccessMode
        {
            get { FillData(); return _accessMode; }
            set { SetPicklist("accessmode", (int?)value); _accessMode = value; }
        }
        private Enums.AccessMode? _accessMode;

		[CrmProperty(LogicalName = "accessmodename")]
        public virtual string AccessModeName
        {
            get { FillData(); return _accessModeName; }
            set {  _accessModeName = value; }
        }
        private string _accessModeName;

		[CrmProperty(LogicalName = "activedirectoryguid")]
        public virtual Guid? ActiveDirectoryGuid
        {
            get { FillData(); return _activeDirectoryGuid; }
            set {  _activeDirectoryGuid = value; }
        }
        private Guid? _activeDirectoryGuid;

		[CrmProperty(LogicalName = "address1_addressid")]
        public virtual Guid Address1AddressId
        {
            get { FillData(); return _address1AddressId; }
            set { SetValue<Guid?>("address1_addressid", value); _address1AddressId = value; }
        }
        private Guid _address1AddressId;

		[CrmProperty(LogicalName = "address1_addresstypecode")]
        public virtual Enums.Address1AddressTypeCode? Address1AddressTypeCode
        {
            get { FillData(); return _address1AddressTypeCode; }
            set { SetPicklist("address1_addresstypecode", (int?)value); _address1AddressTypeCode = value; }
        }
        private Enums.Address1AddressTypeCode? _address1AddressTypeCode;

		[CrmProperty(LogicalName = "address1_addresstypecodename")]
        public virtual string Address1AddressTypeCodeName
        {
            get { FillData(); return _address1AddressTypeCodeName; }
            set {  _address1AddressTypeCodeName = value; }
        }
        private string _address1AddressTypeCodeName;

		[CrmProperty(LogicalName = "address1_city")]
        public virtual string Address1City
        {
            get { FillData(); return _address1City; }
            set { SetValue<string>("address1_city", value); _address1City = value; }
        }
        private string _address1City;

		[CrmProperty(LogicalName = "address1_country")]
        public virtual string Address1Country
        {
            get { FillData(); return _address1Country; }
            set { SetValue<string>("address1_country", value); _address1Country = value; }
        }
        private string _address1Country;

		[CrmProperty(LogicalName = "address1_county")]
        public virtual string Address1County
        {
            get { FillData(); return _address1County; }
            set { SetValue<string>("address1_county", value); _address1County = value; }
        }
        private string _address1County;

		[CrmProperty(LogicalName = "address1_fax")]
        public virtual string Address1Fax
        {
            get { FillData(); return _address1Fax; }
            set { SetValue<string>("address1_fax", value); _address1Fax = value; }
        }
        private string _address1Fax;

		[CrmProperty(LogicalName = "address1_latitude")]
        public virtual double? Address1Latitude
        {
            get { FillData(); return _address1Latitude; }
            set { SetValue<double?>("address1_latitude", value); _address1Latitude = value; }
        }
        private double? _address1Latitude;

		[CrmProperty(LogicalName = "address1_line1")]
        public virtual string Address1Line1
        {
            get { FillData(); return _address1Line1; }
            set { SetValue<string>("address1_line1", value); _address1Line1 = value; }
        }
        private string _address1Line1;

		[CrmProperty(LogicalName = "address1_line2")]
        public virtual string Address1Line2
        {
            get { FillData(); return _address1Line2; }
            set { SetValue<string>("address1_line2", value); _address1Line2 = value; }
        }
        private string _address1Line2;

		[CrmProperty(LogicalName = "address1_line3")]
        public virtual string Address1Line3
        {
            get { FillData(); return _address1Line3; }
            set { SetValue<string>("address1_line3", value); _address1Line3 = value; }
        }
        private string _address1Line3;

		[CrmProperty(LogicalName = "address1_longitude")]
        public virtual double? Address1Longitude
        {
            get { FillData(); return _address1Longitude; }
            set { SetValue<double?>("address1_longitude", value); _address1Longitude = value; }
        }
        private double? _address1Longitude;

		[CrmProperty(LogicalName = "address1_name")]
        public virtual string Address1Name
        {
            get { FillData(); return _address1Name; }
            set { SetValue<string>("address1_name", value); _address1Name = value; }
        }
        private string _address1Name;

		[CrmProperty(LogicalName = "address1_postalcode")]
        public virtual string Address1PostalCode
        {
            get { FillData(); return _address1PostalCode; }
            set { SetValue<string>("address1_postalcode", value); _address1PostalCode = value; }
        }
        private string _address1PostalCode;

		[CrmProperty(LogicalName = "address1_postofficebox")]
        public virtual string Address1PostOfficeBox
        {
            get { FillData(); return _address1PostOfficeBox; }
            set { SetValue<string>("address1_postofficebox", value); _address1PostOfficeBox = value; }
        }
        private string _address1PostOfficeBox;

		[CrmProperty(LogicalName = "address1_shippingmethodcode")]
        public virtual Enums.Address1ShippingMethodCode? Address1ShippingMethodCode
        {
            get { FillData(); return _address1ShippingMethodCode; }
            set { SetPicklist("address1_shippingmethodcode", (int?)value); _address1ShippingMethodCode = value; }
        }
        private Enums.Address1ShippingMethodCode? _address1ShippingMethodCode;

		[CrmProperty(LogicalName = "address1_shippingmethodcodename")]
        public virtual string Address1ShippingMethodCodeName
        {
            get { FillData(); return _address1ShippingMethodCodeName; }
            set {  _address1ShippingMethodCodeName = value; }
        }
        private string _address1ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address1_stateorprovince")]
        public virtual string Address1StateOrProvince
        {
            get { FillData(); return _address1StateOrProvince; }
            set { SetValue<string>("address1_stateorprovince", value); _address1StateOrProvince = value; }
        }
        private string _address1StateOrProvince;

		[CrmProperty(LogicalName = "address1_telephone1")]
        public virtual string Address1Telephone1
        {
            get { FillData(); return _address1Telephone1; }
            set { SetValue<string>("address1_telephone1", value); _address1Telephone1 = value; }
        }
        private string _address1Telephone1;

		[CrmProperty(LogicalName = "address1_telephone2")]
        public virtual string Address1Telephone2
        {
            get { FillData(); return _address1Telephone2; }
            set { SetValue<string>("address1_telephone2", value); _address1Telephone2 = value; }
        }
        private string _address1Telephone2;

		[CrmProperty(LogicalName = "address1_telephone3")]
        public virtual string Address1Telephone3
        {
            get { FillData(); return _address1Telephone3; }
            set { SetValue<string>("address1_telephone3", value); _address1Telephone3 = value; }
        }
        private string _address1Telephone3;

		[CrmProperty(LogicalName = "address1_upszone")]
        public virtual string Address1UPSZone
        {
            get { FillData(); return _address1UPSZone; }
            set { SetValue<string>("address1_upszone", value); _address1UPSZone = value; }
        }
        private string _address1UPSZone;

		[CrmProperty(LogicalName = "address1_utcoffset")]
        public virtual int? Address1UTCOffset
        {
            get { FillData(); return _address1UTCOffset; }
            set { SetValue<int?>("address1_utcoffset", value); _address1UTCOffset = value; }
        }
        private int? _address1UTCOffset;

		[CrmProperty(LogicalName = "address2_addressid")]
        public virtual Guid Address2AddressId
        {
            get { FillData(); return _address2AddressId; }
            set { SetValue<Guid?>("address2_addressid", value); _address2AddressId = value; }
        }
        private Guid _address2AddressId;

		[CrmProperty(LogicalName = "address2_addresstypecode")]
        public virtual Enums.Address2AddressTypeCode? Address2AddressTypeCode
        {
            get { FillData(); return _address2AddressTypeCode; }
            set { SetPicklist("address2_addresstypecode", (int?)value); _address2AddressTypeCode = value; }
        }
        private Enums.Address2AddressTypeCode? _address2AddressTypeCode;

		[CrmProperty(LogicalName = "address2_addresstypecodename")]
        public virtual string Address2AddressTypeCodeName
        {
            get { FillData(); return _address2AddressTypeCodeName; }
            set {  _address2AddressTypeCodeName = value; }
        }
        private string _address2AddressTypeCodeName;

		[CrmProperty(LogicalName = "address2_city")]
        public virtual string Address2City
        {
            get { FillData(); return _address2City; }
            set { SetValue<string>("address2_city", value); _address2City = value; }
        }
        private string _address2City;

		[CrmProperty(LogicalName = "address2_country")]
        public virtual string Address2Country
        {
            get { FillData(); return _address2Country; }
            set { SetValue<string>("address2_country", value); _address2Country = value; }
        }
        private string _address2Country;

		[CrmProperty(LogicalName = "address2_county")]
        public virtual string Address2County
        {
            get { FillData(); return _address2County; }
            set { SetValue<string>("address2_county", value); _address2County = value; }
        }
        private string _address2County;

		[CrmProperty(LogicalName = "address2_fax")]
        public virtual string Address2Fax
        {
            get { FillData(); return _address2Fax; }
            set { SetValue<string>("address2_fax", value); _address2Fax = value; }
        }
        private string _address2Fax;

		[CrmProperty(LogicalName = "address2_latitude")]
        public virtual double? Address2Latitude
        {
            get { FillData(); return _address2Latitude; }
            set { SetValue<double?>("address2_latitude", value); _address2Latitude = value; }
        }
        private double? _address2Latitude;

		[CrmProperty(LogicalName = "address2_line1")]
        public virtual string Address2Line1
        {
            get { FillData(); return _address2Line1; }
            set { SetValue<string>("address2_line1", value); _address2Line1 = value; }
        }
        private string _address2Line1;

		[CrmProperty(LogicalName = "address2_line2")]
        public virtual string Address2Line2
        {
            get { FillData(); return _address2Line2; }
            set { SetValue<string>("address2_line2", value); _address2Line2 = value; }
        }
        private string _address2Line2;

		[CrmProperty(LogicalName = "address2_line3")]
        public virtual string Address2Line3
        {
            get { FillData(); return _address2Line3; }
            set { SetValue<string>("address2_line3", value); _address2Line3 = value; }
        }
        private string _address2Line3;

		[CrmProperty(LogicalName = "address2_longitude")]
        public virtual double? Address2Longitude
        {
            get { FillData(); return _address2Longitude; }
            set { SetValue<double?>("address2_longitude", value); _address2Longitude = value; }
        }
        private double? _address2Longitude;

		[CrmProperty(LogicalName = "address2_name")]
        public virtual string Address2Name
        {
            get { FillData(); return _address2Name; }
            set { SetValue<string>("address2_name", value); _address2Name = value; }
        }
        private string _address2Name;

		[CrmProperty(LogicalName = "address2_postalcode")]
        public virtual string Address2PostalCode
        {
            get { FillData(); return _address2PostalCode; }
            set { SetValue<string>("address2_postalcode", value); _address2PostalCode = value; }
        }
        private string _address2PostalCode;

		[CrmProperty(LogicalName = "address2_postofficebox")]
        public virtual string Address2PostOfficeBox
        {
            get { FillData(); return _address2PostOfficeBox; }
            set { SetValue<string>("address2_postofficebox", value); _address2PostOfficeBox = value; }
        }
        private string _address2PostOfficeBox;

		[CrmProperty(LogicalName = "address2_shippingmethodcode")]
        public virtual Enums.Address2ShippingMethodCode? Address2ShippingMethodCode
        {
            get { FillData(); return _address2ShippingMethodCode; }
            set { SetPicklist("address2_shippingmethodcode", (int?)value); _address2ShippingMethodCode = value; }
        }
        private Enums.Address2ShippingMethodCode? _address2ShippingMethodCode;

		[CrmProperty(LogicalName = "address2_shippingmethodcodename")]
        public virtual string Address2ShippingMethodCodeName
        {
            get { FillData(); return _address2ShippingMethodCodeName; }
            set {  _address2ShippingMethodCodeName = value; }
        }
        private string _address2ShippingMethodCodeName;

		[CrmProperty(LogicalName = "address2_stateorprovince")]
        public virtual string Address2StateOrProvince
        {
            get { FillData(); return _address2StateOrProvince; }
            set { SetValue<string>("address2_stateorprovince", value); _address2StateOrProvince = value; }
        }
        private string _address2StateOrProvince;

		[CrmProperty(LogicalName = "address2_telephone1")]
        public virtual string Address2Telephone1
        {
            get { FillData(); return _address2Telephone1; }
            set { SetValue<string>("address2_telephone1", value); _address2Telephone1 = value; }
        }
        private string _address2Telephone1;

		[CrmProperty(LogicalName = "address2_telephone2")]
        public virtual string Address2Telephone2
        {
            get { FillData(); return _address2Telephone2; }
            set { SetValue<string>("address2_telephone2", value); _address2Telephone2 = value; }
        }
        private string _address2Telephone2;

		[CrmProperty(LogicalName = "address2_telephone3")]
        public virtual string Address2Telephone3
        {
            get { FillData(); return _address2Telephone3; }
            set { SetValue<string>("address2_telephone3", value); _address2Telephone3 = value; }
        }
        private string _address2Telephone3;

		[CrmProperty(LogicalName = "address2_upszone")]
        public virtual string Address2UPSZone
        {
            get { FillData(); return _address2UPSZone; }
            set { SetValue<string>("address2_upszone", value); _address2UPSZone = value; }
        }
        private string _address2UPSZone;

		[CrmProperty(LogicalName = "address2_utcoffset")]
        public virtual int? Address2UTCOffset
        {
            get { FillData(); return _address2UTCOffset; }
            set { SetValue<int?>("address2_utcoffset", value); _address2UTCOffset = value; }
        }
        private int? _address2UTCOffset;

		[CrmProperty(LogicalName = "businessunitid", IsLookup = true)]
        public virtual Guid? BusinessUnitId
        {
            get { FillData(); return _businessUnitId; }
            set {  _businessUnitId = value; }
        }
        private Guid? _businessUnitId;

		[CrmProperty(LogicalName = "businessunitidname")]
        public virtual string BusinessUnitIdName
        {
            get { FillData(); return _businessUnitIdName; }
            set {  _businessUnitIdName = value; }
        }
        private string _businessUnitIdName;

		[CrmProperty(LogicalName = "calendarid", IsLookup = true)]
        public virtual Guid? CalendarId
        {
            get { FillData(); return _calendarId; }
            set { SetLookup("calendarid", "calendar", value); _calendarId = value; }
        }
        private Guid? _calendarId;

		[CrmProperty(LogicalName = "calendaridName", IsEntityReferenceHelper = true)]
        public virtual string CalendarIdName
        {
            get { FillData(); return _calendarIdName; }
            set {  _calendarIdName = value; }
        }
        private string _calendarIdName;

		[CrmProperty(LogicalName = "caltype")]
        public virtual Enums.CALType? CALType
        {
            get { FillData(); return _cALType; }
            set { SetPicklist("caltype", (int?)value); _cALType = value; }
        }
        private Enums.CALType? _cALType;

		[CrmProperty(LogicalName = "caltypename")]
        public virtual string CALTypeName
        {
            get { FillData(); return _cALTypeName; }
            set {  _cALTypeName = value; }
        }
        private string _cALTypeName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "defaultfilterspopulated")]
        public virtual bool? DefaultFiltersPopulated
        {
            get { FillData(); return _defaultFiltersPopulated; }
            set {  _defaultFiltersPopulated = value; }
        }
        private bool? _defaultFiltersPopulated;

		[CrmProperty(LogicalName = "disabledreason")]
        public virtual string DisabledReason
        {
            get { FillData(); return _disabledReason; }
            set {  _disabledReason = value; }
        }
        private string _disabledReason;

		[CrmProperty(LogicalName = "displayinserviceviews")]
        public virtual bool? DisplayInServiceViews
        {
            get { FillData(); return _displayInServiceViews; }
            set { SetValue<bool?>("displayinserviceviews", value); _displayInServiceViews = value; }
        }
        private bool? _displayInServiceViews;

		[CrmProperty(LogicalName = "displayinserviceviewsname")]
        public virtual string DisplayInServiceViewsName
        {
            get { FillData(); return _displayInServiceViewsName; }
            set {  _displayInServiceViewsName = value; }
        }
        private string _displayInServiceViewsName;

		[CrmProperty(LogicalName = "domainname")]
        public virtual string DomainName
        {
            get { FillData(); return _domainName; }
            set { SetValue<string>("domainname", value); _domainName = value; }
        }
        private string _domainName;

		[CrmProperty(LogicalName = "emailrouteraccessapproval")]
        public virtual Enums.EmailRouterAccessApproval? EmailRouterAccessApproval
        {
            get { FillData(); return _emailRouterAccessApproval; }
            set { SetPicklist("emailrouteraccessapproval", (int?)value); _emailRouterAccessApproval = value; }
        }
        private Enums.EmailRouterAccessApproval? _emailRouterAccessApproval;

		[CrmProperty(LogicalName = "emailrouteraccessapprovalname")]
        public virtual string EmailRouterAccessApprovalName
        {
            get { FillData(); return _emailRouterAccessApprovalName; }
            set {  _emailRouterAccessApprovalName = value; }
        }
        private string _emailRouterAccessApprovalName;

		[CrmProperty(LogicalName = "employeeid")]
        public virtual string EmployeeId
        {
            get { FillData(); return _employeeId; }
            set { SetValue<string>("employeeid", value); _employeeId = value; }
        }
        private string _employeeId;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "firstname")]
        public virtual string FirstName
        {
            get { FillData(); return _firstName; }
            set { SetValue<string>("firstname", value); _firstName = value; }
        }
        private string _firstName;

		[CrmProperty(LogicalName = "fullname")]
        public virtual string FullName
        {
            get { FillData(); return _fullName; }
            set {  _fullName = value; }
        }
        private string _fullName;

		[CrmProperty(LogicalName = "governmentid")]
        public virtual string GovernmentId
        {
            get { FillData(); return _governmentId; }
            set { SetValue<string>("governmentid", value); _governmentId = value; }
        }
        private string _governmentId;

		[CrmProperty(LogicalName = "homephone")]
        public virtual string HomePhone
        {
            get { FillData(); return _homePhone; }
            set { SetValue<string>("homephone", value); _homePhone = value; }
        }
        private string _homePhone;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "incomingemaildeliverymethod")]
        public virtual Enums.IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod
        {
            get { FillData(); return _incomingEmailDeliveryMethod; }
            set { SetPicklist("incomingemaildeliverymethod", (int?)value); _incomingEmailDeliveryMethod = value; }
        }
        private Enums.IncomingEmailDeliveryMethod? _incomingEmailDeliveryMethod;

		[CrmProperty(LogicalName = "incomingemaildeliverymethodname")]
        public virtual string IncomingEmailDeliveryMethodName
        {
            get { FillData(); return _incomingEmailDeliveryMethodName; }
            set {  _incomingEmailDeliveryMethodName = value; }
        }
        private string _incomingEmailDeliveryMethodName;

		[CrmProperty(LogicalName = "internalemailaddress")]
        public virtual string InternalEMailAddress
        {
            get { FillData(); return _internalEMailAddress; }
            set { SetValue<string>("internalemailaddress", value); _internalEMailAddress = value; }
        }
        private string _internalEMailAddress;

		[CrmProperty(LogicalName = "invitestatuscode")]
        public virtual Enums.InviteStatusCode? InviteStatusCode
        {
            get { FillData(); return _inviteStatusCode; }
            set { SetPicklist("invitestatuscode", (int?)value); _inviteStatusCode = value; }
        }
        private Enums.InviteStatusCode? _inviteStatusCode;

		[CrmProperty(LogicalName = "invitestatuscodename")]
        public virtual string InviteStatusCodeName
        {
            get { FillData(); return _inviteStatusCodeName; }
            set {  _inviteStatusCodeName = value; }
        }
        private string _inviteStatusCodeName;

		[CrmProperty(LogicalName = "isactivedirectoryuser")]
        public virtual bool? IsActiveDirectoryUser
        {
            get { FillData(); return _isActiveDirectoryUser; }
            set {  _isActiveDirectoryUser = value; }
        }
        private bool? _isActiveDirectoryUser;

		[CrmProperty(LogicalName = "isdisabled")]
        public virtual bool? IsDisabled
        {
            get { FillData(); return _isDisabled; }
            set {  _isDisabled = value; }
        }
        private bool? _isDisabled;

		[CrmProperty(LogicalName = "isdisabledname")]
        public virtual string IsDisabledName
        {
            get { FillData(); return _isDisabledName; }
            set {  _isDisabledName = value; }
        }
        private string _isDisabledName;

		[CrmProperty(LogicalName = "isintegrationuser")]
        public virtual bool? IsIntegrationUser
        {
            get { FillData(); return _isIntegrationUser; }
            set { SetValue<bool?>("isintegrationuser", value); _isIntegrationUser = value; }
        }
        private bool? _isIntegrationUser;

		[CrmProperty(LogicalName = "isintegrationusername")]
        public virtual string IsIntegrationUserName
        {
            get { FillData(); return _isIntegrationUserName; }
            set {  _isIntegrationUserName = value; }
        }
        private string _isIntegrationUserName;

		[CrmProperty(LogicalName = "islicensed")]
        public virtual bool? IsLicensed
        {
            get { FillData(); return _isLicensed; }
            set { SetValue<bool?>("islicensed", value); _isLicensed = value; }
        }
        private bool? _isLicensed;

		[CrmProperty(LogicalName = "issyncwithdirectory")]
        public virtual bool? IsSyncWithDirectory
        {
            get { FillData(); return _isSyncWithDirectory; }
            set { SetValue<bool?>("issyncwithdirectory", value); _isSyncWithDirectory = value; }
        }
        private bool? _isSyncWithDirectory;

		[CrmProperty(LogicalName = "jobtitle")]
        public virtual string JobTitle
        {
            get { FillData(); return _jobTitle; }
            set { SetValue<string>("jobtitle", value); _jobTitle = value; }
        }
        private string _jobTitle;

		[CrmProperty(LogicalName = "lastname")]
        public virtual string LastName
        {
            get { FillData(); return _lastName; }
            set { SetValue<string>("lastname", value); _lastName = value; }
        }
        private string _lastName;

		[CrmProperty(LogicalName = "middlename")]
        public virtual string MiddleName
        {
            get { FillData(); return _middleName; }
            set { SetValue<string>("middlename", value); _middleName = value; }
        }
        private string _middleName;

		[CrmProperty(LogicalName = "mobilealertemail")]
        public virtual string MobileAlertEMail
        {
            get { FillData(); return _mobileAlertEMail; }
            set { SetValue<string>("mobilealertemail", value); _mobileAlertEMail = value; }
        }
        private string _mobileAlertEMail;

		[CrmProperty(LogicalName = "mobilephone")]
        public virtual string MobilePhone
        {
            get { FillData(); return _mobilePhone; }
            set { SetValue<string>("mobilephone", value); _mobilePhone = value; }
        }
        private string _mobilePhone;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "nickname")]
        public virtual string NickName
        {
            get { FillData(); return _nickName; }
            set { SetValue<string>("nickname", value); _nickName = value; }
        }
        private string _nickName;

		[CrmProperty(LogicalName = "organizationid")]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "outgoingemaildeliverymethod")]
        public virtual Enums.OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod
        {
            get { FillData(); return _outgoingEmailDeliveryMethod; }
            set { SetPicklist("outgoingemaildeliverymethod", (int?)value); _outgoingEmailDeliveryMethod = value; }
        }
        private Enums.OutgoingEmailDeliveryMethod? _outgoingEmailDeliveryMethod;

		[CrmProperty(LogicalName = "outgoingemaildeliverymethodname")]
        public virtual string OutgoingEmailDeliveryMethodName
        {
            get { FillData(); return _outgoingEmailDeliveryMethodName; }
            set {  _outgoingEmailDeliveryMethodName = value; }
        }
        private string _outgoingEmailDeliveryMethodName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "parentsystemuserid", IsLookup = true)]
        public virtual Guid? ParentSystemUserId
        {
            get { FillData(); return _parentSystemUserId; }
            set {  _parentSystemUserId = value; }
        }
        private Guid? _parentSystemUserId;

		[CrmProperty(LogicalName = "parentsystemuseridname")]
        public virtual string ParentSystemUserIdName
        {
            get { FillData(); return _parentSystemUserIdName; }
            set {  _parentSystemUserIdName = value; }
        }
        private string _parentSystemUserIdName;

		[CrmProperty(LogicalName = "parentsystemuseridyominame")]
        public virtual string ParentSystemUserIdYomiName
        {
            get { FillData(); return _parentSystemUserIdYomiName; }
            set {  _parentSystemUserIdYomiName = value; }
        }
        private string _parentSystemUserIdYomiName;

		[CrmProperty(LogicalName = "passporthi")]
        public virtual int? PassportHi
        {
            get { FillData(); return _passportHi; }
            set { SetValue<int?>("passporthi", value); _passportHi = value; }
        }
        private int? _passportHi;

		[CrmProperty(LogicalName = "passportlo")]
        public virtual int? PassportLo
        {
            get { FillData(); return _passportLo; }
            set { SetValue<int?>("passportlo", value); _passportLo = value; }
        }
        private int? _passportLo;

		[CrmProperty(LogicalName = "personalemailaddress")]
        public virtual string PersonalEMailAddress
        {
            get { FillData(); return _personalEMailAddress; }
            set { SetValue<string>("personalemailaddress", value); _personalEMailAddress = value; }
        }
        private string _personalEMailAddress;

		[CrmProperty(LogicalName = "photourl")]
        public virtual string PhotoUrl
        {
            get { FillData(); return _photoUrl; }
            set { SetValue<string>("photourl", value); _photoUrl = value; }
        }
        private string _photoUrl;

		[CrmProperty(LogicalName = "preferredaddresscode")]
        public virtual Enums.PreferredAddressCode? PreferredAddressCode
        {
            get { FillData(); return _preferredAddressCode; }
            set { SetPicklist("preferredaddresscode", (int?)value); _preferredAddressCode = value; }
        }
        private Enums.PreferredAddressCode? _preferredAddressCode;

		[CrmProperty(LogicalName = "preferredaddresscodename")]
        public virtual string PreferredAddressCodeName
        {
            get { FillData(); return _preferredAddressCodeName; }
            set {  _preferredAddressCodeName = value; }
        }
        private string _preferredAddressCodeName;

		[CrmProperty(LogicalName = "preferredemailcode")]
        public virtual Enums.PreferredEmailCode? PreferredEmailCode
        {
            get { FillData(); return _preferredEmailCode; }
            set { SetPicklist("preferredemailcode", (int?)value); _preferredEmailCode = value; }
        }
        private Enums.PreferredEmailCode? _preferredEmailCode;

		[CrmProperty(LogicalName = "preferredemailcodename")]
        public virtual string PreferredEmailCodeName
        {
            get { FillData(); return _preferredEmailCodeName; }
            set {  _preferredEmailCodeName = value; }
        }
        private string _preferredEmailCodeName;

		[CrmProperty(LogicalName = "preferredphonecode")]
        public virtual Enums.PreferredPhoneCode? PreferredPhoneCode
        {
            get { FillData(); return _preferredPhoneCode; }
            set { SetPicklist("preferredphonecode", (int?)value); _preferredPhoneCode = value; }
        }
        private Enums.PreferredPhoneCode? _preferredPhoneCode;

		[CrmProperty(LogicalName = "preferredphonecodename")]
        public virtual string PreferredPhoneCodeName
        {
            get { FillData(); return _preferredPhoneCodeName; }
            set {  _preferredPhoneCodeName = value; }
        }
        private string _preferredPhoneCodeName;

		[CrmProperty(LogicalName = "queueid", IsLookup = true)]
        public virtual Guid? QueueId
        {
            get { FillData(); return _queueId; }
            set { SetLookup("queueid", "queue", value); _queueId = value; }
        }
        private Guid? _queueId;

		[CrmProperty(LogicalName = "queueidname")]
        public virtual string QueueIdName
        {
            get { FillData(); return _queueIdName; }
            set {  _queueIdName = value; }
        }
        private string _queueIdName;

		[CrmProperty(LogicalName = "salutation")]
        public virtual string Salutation
        {
            get { FillData(); return _salutation; }
            set { SetValue<string>("salutation", value); _salutation = value; }
        }
        private string _salutation;

		[CrmProperty(LogicalName = "setupuser")]
        public virtual bool? SetupUser
        {
            get { FillData(); return _setupUser; }
            set { SetValue<bool?>("setupuser", value); _setupUser = value; }
        }
        private bool? _setupUser;

		[CrmProperty(LogicalName = "setupusername")]
        public virtual string SetupUserName
        {
            get { FillData(); return _setupUserName; }
            set {  _setupUserName = value; }
        }
        private string _setupUserName;

		[CrmProperty(LogicalName = "siteid", IsLookup = true)]
        public virtual Guid? SiteId
        {
            get { FillData(); return _siteId; }
            set { SetLookup("siteid", "site", value); _siteId = value; }
        }
        private Guid? _siteId;

		[CrmProperty(LogicalName = "siteidname")]
        public virtual string SiteIdName
        {
            get { FillData(); return _siteIdName; }
            set {  _siteIdName = value; }
        }
        private string _siteIdName;

		[CrmProperty(LogicalName = "skills")]
        public virtual string Skills
        {
            get { FillData(); return _skills; }
            set { SetValue<string>("skills", value); _skills = value; }
        }
        private string _skills;

		[CrmProperty(LogicalName = "systemuserid")]
        public virtual Guid SystemUserId
        {
            get { FillData(); return _systemUserId; }
            set {  _systemUserId = value; }
        }
        private Guid _systemUserId;

		[CrmProperty(LogicalName = "territoryid", IsLookup = true)]
        public virtual Guid? TerritoryId
        {
            get { FillData(); return _territoryId; }
            set { SetLookup("territoryid", "territory", value); _territoryId = value; }
        }
        private Guid? _territoryId;

		[CrmProperty(LogicalName = "territoryidname")]
        public virtual string TerritoryIdName
        {
            get { FillData(); return _territoryIdName; }
            set {  _territoryIdName = value; }
        }
        private string _territoryIdName;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "title")]
        public virtual string Title
        {
            get { FillData(); return _title; }
            set { SetValue<string>("title", value); _title = value; }
        }
        private string _title;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "windowsliveid")]
        public virtual string WindowsLiveID
        {
            get { FillData(); return _windowsLiveID; }
            set { SetValue<string>("windowsliveid", value); _windowsLiveID = value; }
        }
        private string _windowsLiveID;

		[CrmProperty(LogicalName = "yammeremailaddress")]
        public virtual string YammerEmailAddress
        {
            get { FillData(); return _yammerEmailAddress; }
            set { SetValue<string>("yammeremailaddress", value); _yammerEmailAddress = value; }
        }
        private string _yammerEmailAddress;

		[CrmProperty(LogicalName = "yammeruserid")]
        public virtual string YammerUserId
        {
            get { FillData(); return _yammerUserId; }
            set { SetValue<string>("yammeruserid", value); _yammerUserId = value; }
        }
        private string _yammerUserId;

		[CrmProperty(LogicalName = "yomifirstname")]
        public virtual string YomiFirstName
        {
            get { FillData(); return _yomiFirstName; }
            set { SetValue<string>("yomifirstname", value); _yomiFirstName = value; }
        }
        private string _yomiFirstName;

		[CrmProperty(LogicalName = "yomifullname")]
        public virtual string YomiFullName
        {
            get { FillData(); return _yomiFullName; }
            set {  _yomiFullName = value; }
        }
        private string _yomiFullName;

		[CrmProperty(LogicalName = "yomilastname")]
        public virtual string YomiLastName
        {
            get { FillData(); return _yomiLastName; }
            set { SetValue<string>("yomilastname", value); _yomiLastName = value; }
        }
        private string _yomiLastName;

		[CrmProperty(LogicalName = "yomimiddlename")]
        public virtual string YomiMiddleName
        {
            get { FillData(); return _yomiMiddleName; }
            set { SetValue<string>("yomimiddlename", value); _yomiMiddleName = value; }
        }
        private string _yomiMiddleName;

	}
	[CrmEntity(LogicalName = "task", PrimaryKey = "activityid")]
	public partial class Task : CrmEntity
	{
		public class Enums
		{
			public enum PriorityCode 
			{
				[CrmPicklist(DisplayName = "Low")]Low = 0,
				[CrmPicklist(DisplayName = "Normal", Value = 1)]Normal = 1,
				[CrmPicklist(DisplayName = "High", Value = 2)]High = 2,
			}		
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Open")]Open = 0,
				[CrmPicklist(DisplayName = "Completed", Value = 1)]Completed = 1,
				[CrmPicklist(DisplayName = "Canceled", Value = 2)]Canceled = 2,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Not Started", Value = 2)]NotStarted = 2,
				[CrmPicklist(DisplayName = "In Progress", Value = 3)]InProgress = 3,
				[CrmPicklist(DisplayName = "Waiting on someone else", Value = 4)]WaitingOnSomeoneElse = 4,
				[CrmPicklist(DisplayName = "Completed", Value = 5)]Completed = 5,
				[CrmPicklist(DisplayName = "Canceled", Value = 6)]Canceled = 6,
				[CrmPicklist(DisplayName = "Deferred", Value = 7)]Deferred = 7,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "task";
			
			public const string ActivityId = "activityid";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NewBillableTime = "new_billabletime";
			public const string NewLinktoCustomerPortal = "new_linktocustomerportal";
			public const string NewLinktocustomerportalName = "new_linktocustomerportalname";
			public const string NewShowescalationinCustomerPortal = "new_showescalationincustomerportal";
			public const string NewShowescalationincustomerportalName = "new_showescalationincustomerportalname";
			public const string NewTechnicalDetails = "new_technicaldetails";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PercentComplete = "percentcomplete";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdType = "regardingobjectidType";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidName";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return ActivityId; }
		}

		[CrmProperty(LogicalName = "activityid")]
        public virtual Guid ActivityId
        {
            get { FillData(); return _activityId; }
            set {  _activityId = value; }
        }
        private Guid _activityId;

		[CrmProperty(LogicalName = "activitytypecodename")]
        public virtual string ActivityTypeCodeName
        {
            get { FillData(); return _activityTypeCodeName; }
            set {  _activityTypeCodeName = value; }
        }
        private string _activityTypeCodeName;

		[CrmProperty(LogicalName = "actualdurationminutes")]
        public virtual int? ActualDurationMinutes
        {
            get { FillData(); return _actualDurationMinutes; }
            set { SetValue<int?>("actualdurationminutes", value); _actualDurationMinutes = value; }
        }
        private int? _actualDurationMinutes;

		[CrmProperty(LogicalName = "actualend")]
        public virtual DateTime? ActualEnd
        {
            get { FillData(); return _actualEnd; }
            set { SetValue<DateTime?>("actualend", value); _actualEnd = value; }
        }
        private DateTime? _actualEnd;

		[CrmProperty(LogicalName = "actualstart")]
        public virtual DateTime? ActualStart
        {
            get { FillData(); return _actualStart; }
            set { SetValue<DateTime?>("actualstart", value); _actualStart = value; }
        }
        private DateTime? _actualStart;

		[CrmProperty(LogicalName = "category")]
        public virtual string Category
        {
            get { FillData(); return _category; }
            set { SetValue<string>("category", value); _category = value; }
        }
        private string _category;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isbilled")]
        public virtual bool? IsBilled
        {
            get { FillData(); return _isBilled; }
            set { SetValue<bool?>("isbilled", value); _isBilled = value; }
        }
        private bool? _isBilled;

		[CrmProperty(LogicalName = "isbilledname")]
        public virtual string IsBilledName
        {
            get { FillData(); return _isBilledName; }
            set {  _isBilledName = value; }
        }
        private string _isBilledName;

		[CrmProperty(LogicalName = "isregularactivity")]
        public virtual bool? IsRegularActivity
        {
            get { FillData(); return _isRegularActivity; }
            set {  _isRegularActivity = value; }
        }
        private bool? _isRegularActivity;

		[CrmProperty(LogicalName = "isregularactivityname")]
        public virtual string IsRegularActivityName
        {
            get { FillData(); return _isRegularActivityName; }
            set {  _isRegularActivityName = value; }
        }
        private string _isRegularActivityName;

		[CrmProperty(LogicalName = "isworkflowcreated")]
        public virtual bool? IsWorkflowCreated
        {
            get { FillData(); return _isWorkflowCreated; }
            set { SetValue<bool?>("isworkflowcreated", value); _isWorkflowCreated = value; }
        }
        private bool? _isWorkflowCreated;

		[CrmProperty(LogicalName = "isworkflowcreatedname")]
        public virtual string IsWorkflowCreatedName
        {
            get { FillData(); return _isWorkflowCreatedName; }
            set {  _isWorkflowCreatedName = value; }
        }
        private string _isWorkflowCreatedName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "new_billabletime")]
        public virtual int? NewBillableTime
        {
            get { FillData(); return _newBillableTime; }
            set { SetValue<int?>("new_billabletime", value); _newBillableTime = value; }
        }
        private int? _newBillableTime;

		[CrmProperty(LogicalName = "new_linktocustomerportal")]
        public virtual bool? NewLinktoCustomerPortal
        {
            get { FillData(); return _newLinktoCustomerPortal; }
            set { SetValue<bool?>("new_linktocustomerportal", value); _newLinktoCustomerPortal = value; }
        }
        private bool? _newLinktoCustomerPortal;

		[CrmProperty(LogicalName = "new_linktocustomerportalname")]
        public virtual string NewLinktocustomerportalName
        {
            get { FillData(); return _newLinktocustomerportalName; }
            set {  _newLinktocustomerportalName = value; }
        }
        private string _newLinktocustomerportalName;

		[CrmProperty(LogicalName = "new_showescalationincustomerportal")]
        public virtual bool? NewShowescalationinCustomerPortal
        {
            get { FillData(); return _newShowescalationinCustomerPortal; }
            set { SetValue<bool?>("new_showescalationincustomerportal", value); _newShowescalationinCustomerPortal = value; }
        }
        private bool? _newShowescalationinCustomerPortal;

		[CrmProperty(LogicalName = "new_showescalationincustomerportalname")]
        public virtual string NewShowescalationincustomerportalName
        {
            get { FillData(); return _newShowescalationincustomerportalName; }
            set {  _newShowescalationincustomerportalName = value; }
        }
        private string _newShowescalationincustomerportalName;

		[CrmProperty(LogicalName = "new_technicaldetails")]
        public virtual string NewTechnicalDetails
        {
            get { FillData(); return _newTechnicalDetails; }
            set { SetValue<string>("new_technicaldetails", value); _newTechnicalDetails = value; }
        }
        private string _newTechnicalDetails;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "percentcomplete")]
        public virtual int? PercentComplete
        {
            get { FillData(); return _percentComplete; }
            set { SetValue<int?>("percentcomplete", value); _percentComplete = value; }
        }
        private int? _percentComplete;

		[CrmProperty(LogicalName = "prioritycode")]
        public virtual Enums.PriorityCode? PriorityCode
        {
            get { FillData(); return _priorityCode; }
            set { SetPicklist("prioritycode", (int?)value); _priorityCode = value; }
        }
        private Enums.PriorityCode? _priorityCode;

		[CrmProperty(LogicalName = "prioritycodename")]
        public virtual string PriorityCodeName
        {
            get { FillData(); return _priorityCodeName; }
            set {  _priorityCodeName = value; }
        }
        private string _priorityCodeName;

		[CrmProperty(LogicalName = "regardingobjectid", IsLookup = true)]
        public virtual Guid? RegardingObjectId
        {
            get { FillData(); return _regardingObjectId; }
            set { SetLookup("regardingobjectid", RegardingObjectIdType, value); _regardingObjectId = value; }
        }
        private Guid? _regardingObjectId;

		[CrmProperty(LogicalName = "regardingobjectidname")]
        public virtual string RegardingObjectIdName
        {
            get { FillData(); return _regardingObjectIdName; }
            set {  _regardingObjectIdName = value; }
        }
        private string _regardingObjectIdName;

		[CrmProperty(LogicalName = "regardingobjectidType", IsEntityReferenceHelper = true)]
        public virtual string RegardingObjectIdType
        {
            get { FillData(); return _regardingObjectIdType; }
            set {  _regardingObjectIdType = value; }
        }
        private string _regardingObjectIdType;

		[CrmProperty(LogicalName = "regardingobjectidyominame")]
        public virtual string RegardingObjectIdYomiName
        {
            get { FillData(); return _regardingObjectIdYomiName; }
            set {  _regardingObjectIdYomiName = value; }
        }
        private string _regardingObjectIdYomiName;

		[CrmProperty(LogicalName = "scheduleddurationminutes")]
        public virtual int? ScheduledDurationMinutes
        {
            get { FillData(); return _scheduledDurationMinutes; }
            set {  _scheduledDurationMinutes = value; }
        }
        private int? _scheduledDurationMinutes;

		[CrmProperty(LogicalName = "scheduledend")]
        public virtual DateTime? ScheduledEnd
        {
            get { FillData(); return _scheduledEnd; }
            set { SetValue<DateTime?>("scheduledend", value); _scheduledEnd = value; }
        }
        private DateTime? _scheduledEnd;

		[CrmProperty(LogicalName = "scheduledstart")]
        public virtual DateTime? ScheduledStart
        {
            get { FillData(); return _scheduledStart; }
            set { SetValue<DateTime?>("scheduledstart", value); _scheduledStart = value; }
        }
        private DateTime? _scheduledStart;

		[CrmProperty(LogicalName = "serviceid", IsLookup = true)]
        public virtual Guid? ServiceId
        {
            get { FillData(); return _serviceId; }
            set { SetLookup("serviceid", "service", value); _serviceId = value; }
        }
        private Guid? _serviceId;

		[CrmProperty(LogicalName = "serviceidName", IsEntityReferenceHelper = true)]
        public virtual string ServiceIdName
        {
            get { FillData(); return _serviceIdName; }
            set {  _serviceIdName = value; }
        }
        private string _serviceIdName;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "subcategory")]
        public virtual string Subcategory
        {
            get { FillData(); return _subcategory; }
            set { SetValue<string>("subcategory", value); _subcategory = value; }
        }
        private string _subcategory;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subscriptionid")]
        public virtual Guid? SubscriptionId
        {
            get { FillData(); return _subscriptionId; }
            set {  _subscriptionId = value; }
        }
        private Guid? _subscriptionId;

		[CrmProperty(LogicalName = "timezoneruleversionnumber")]
        public virtual int? TimeZoneRuleVersionNumber
        {
            get { FillData(); return _timeZoneRuleVersionNumber; }
            set { SetValue<int?>("timezoneruleversionnumber", value); _timeZoneRuleVersionNumber = value; }
        }
        private int? _timeZoneRuleVersionNumber;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "utcconversiontimezonecode")]
        public virtual int? UTCConversionTimeZoneCode
        {
            get { FillData(); return _uTCConversionTimeZoneCode; }
            set { SetValue<int?>("utcconversiontimezonecode", value); _uTCConversionTimeZoneCode = value; }
        }
        private int? _uTCConversionTimeZoneCode;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "team", PrimaryKey = "teamid")]
	public partial class Team : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "team";
			
			public const string AdministratorId = "administratorid";
			public const string AdministratorIdName = "administratoridname";
			public const string AdministratorIdYomiName = "administratoridyominame";
			public const string BusinessUnitId = "businessunitid";
			public const string BusinessUnitIdName = "businessunitidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string EMailAddress = "emailaddress";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsDefault = "isdefault";
			public const string IsDefaultName = "isdefaultname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string QueueId = "queueid";
			public const string QueueIdName = "queueidname";
			public const string TeamId = "teamid";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
			public const string YomiName = "yominame";
		}

		public override Guid PrimaryKey
		{
			get { return TeamId; }
		}

		[CrmProperty(LogicalName = "administratorid", IsLookup = true)]
        public virtual Guid? AdministratorId
        {
            get { FillData(); return _administratorId; }
            set { SetLookup("administratorid", "systemuser", value); _administratorId = value; }
        }
        private Guid? _administratorId;

		[CrmProperty(LogicalName = "administratoridname")]
        public virtual string AdministratorIdName
        {
            get { FillData(); return _administratorIdName; }
            set {  _administratorIdName = value; }
        }
        private string _administratorIdName;

		[CrmProperty(LogicalName = "administratoridyominame")]
        public virtual string AdministratorIdYomiName
        {
            get { FillData(); return _administratorIdYomiName; }
            set {  _administratorIdYomiName = value; }
        }
        private string _administratorIdYomiName;

		[CrmProperty(LogicalName = "businessunitid", IsLookup = true)]
        public virtual Guid? BusinessUnitId
        {
            get { FillData(); return _businessUnitId; }
            set {  _businessUnitId = value; }
        }
        private Guid? _businessUnitId;

		[CrmProperty(LogicalName = "businessunitidname")]
        public virtual string BusinessUnitIdName
        {
            get { FillData(); return _businessUnitIdName; }
            set {  _businessUnitIdName = value; }
        }
        private string _businessUnitIdName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "emailaddress")]
        public virtual string EMailAddress
        {
            get { FillData(); return _eMailAddress; }
            set { SetValue<string>("emailaddress", value); _eMailAddress = value; }
        }
        private string _eMailAddress;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isdefault")]
        public virtual bool? IsDefault
        {
            get { FillData(); return _isDefault; }
            set {  _isDefault = value; }
        }
        private bool? _isDefault;

		[CrmProperty(LogicalName = "isdefaultname")]
        public virtual string IsDefaultName
        {
            get { FillData(); return _isDefaultName; }
            set {  _isDefaultName = value; }
        }
        private string _isDefaultName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid")]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "queueid", IsLookup = true)]
        public virtual Guid? QueueId
        {
            get { FillData(); return _queueId; }
            set { SetLookup("queueid", "queue", value); _queueId = value; }
        }
        private Guid? _queueId;

		[CrmProperty(LogicalName = "queueidname")]
        public virtual string QueueIdName
        {
            get { FillData(); return _queueIdName; }
            set {  _queueIdName = value; }
        }
        private string _queueIdName;

		[CrmProperty(LogicalName = "teamid")]
        public virtual Guid TeamId
        {
            get { FillData(); return _teamId; }
            set {  _teamId = value; }
        }
        private Guid _teamId;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

		[CrmProperty(LogicalName = "yominame")]
        public virtual string YomiName
        {
            get { FillData(); return _yomiName; }
            set { SetValue<string>("yominame", value); _yomiName = value; }
        }
        private string _yomiName;

	}
	[CrmEntity(LogicalName = "template", PrimaryKey = "templateid")]
	public partial class Template : CrmEntity
	{
		public class Enums
		{
			public enum ComponentState 
			{
				[CrmPicklist(DisplayName = "Published")]Published = 0,
				[CrmPicklist(DisplayName = "Unpublished", Value = 1)]Unpublished = 1,
				[CrmPicklist(DisplayName = "Deleted", Value = 2)]Deleted = 2,
				[CrmPicklist(DisplayName = "Deleted Unpublished", Value = 3)]DeletedUnpublished = 3,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "template";
			
			public const string Body = "body";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string GenerationTypeCode = "generationtypecode";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string IsPersonal = "ispersonal";
			public const string IsPersonalName = "ispersonalname";
			public const string LanguageCode = "languagecode";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitName";
			public const string OwningTeam = "owningteam";
			public const string OwningTeamName = "owningteamName";
			public const string OwningUser = "owninguser";
			public const string OwningUserName = "owninguserName";
			public const string PresentationXml = "presentationxml";
			public const string SolutionId = "solutionid";
			public const string Subject = "subject";
			public const string SubjectPresentationXml = "subjectpresentationxml";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string TemplateId = "templateid";
			public const string TemplateIdUnique = "templateidunique";
			public const string TemplateTypeCodeName = "templatetypecodename";
			public const string Title = "title";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return TemplateId; }
		}

		[CrmProperty(LogicalName = "body")]
        public virtual string Body
        {
            get { FillData(); return _body; }
            set { SetValue<string>("body", value); _body = value; }
        }
        private string _body;

		[CrmProperty(LogicalName = "componentstate")]
        public virtual Enums.ComponentState? ComponentState
        {
            get { FillData(); return _componentState; }
            set {  _componentState = value; }
        }
        private Enums.ComponentState? _componentState;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "generationtypecode")]
        public virtual int? GenerationTypeCode
        {
            get { FillData(); return _generationTypeCode; }
            set {  _generationTypeCode = value; }
        }
        private int? _generationTypeCode;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "iscustomizable")]
        public virtual object IsCustomizable
        {
            get { FillData(); return _isCustomizable; }
            set {  _isCustomizable = value; }
        }
        private object _isCustomizable;

		[CrmProperty(LogicalName = "ismanaged")]
        public virtual bool? IsManaged
        {
            get { FillData(); return _isManaged; }
            set {  _isManaged = value; }
        }
        private bool? _isManaged;

		[CrmProperty(LogicalName = "ismanagedname")]
        public virtual string IsManagedName
        {
            get { FillData(); return _isManagedName; }
            set {  _isManagedName = value; }
        }
        private string _isManagedName;

		[CrmProperty(LogicalName = "ispersonal")]
        public virtual bool? IsPersonal
        {
            get { FillData(); return _isPersonal; }
            set { SetValue<bool?>("ispersonal", value); _isPersonal = value; }
        }
        private bool? _isPersonal;

		[CrmProperty(LogicalName = "ispersonalname")]
        public virtual string IsPersonalName
        {
            get { FillData(); return _isPersonalName; }
            set {  _isPersonalName = value; }
        }
        private string _isPersonalName;

		[CrmProperty(LogicalName = "languagecode")]
        public virtual int? LanguageCode
        {
            get { FillData(); return _languageCode; }
            set { SetValue<int?>("languagecode", value); _languageCode = value; }
        }
        private int? _languageCode;

		[CrmProperty(LogicalName = "mimetype")]
        public virtual string MimeType
        {
            get { FillData(); return _mimeType; }
            set { SetValue<string>("mimetype", value); _mimeType = value; }
        }
        private string _mimeType;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "overwritetime")]
        public virtual DateTime? OverwriteTime
        {
            get { FillData(); return _overwriteTime; }
            set {  _overwriteTime = value; }
        }
        private DateTime? _overwriteTime;

		[CrmProperty(LogicalName = "ownerid")]
        public virtual Guid? OwnerId
        {
            get { FillData(); return _ownerId; }
            set {  _ownerId = value; }
        }
        private Guid? _ownerId;

		[CrmProperty(LogicalName = "owneridname")]
        public virtual string OwnerIdName
        {
            get { FillData(); return _ownerIdName; }
            set {  _ownerIdName = value; }
        }
        private string _ownerIdName;

		[CrmProperty(LogicalName = "owneridyominame")]
        public virtual string OwnerIdYomiName
        {
            get { FillData(); return _ownerIdYomiName; }
            set {  _ownerIdYomiName = value; }
        }
        private string _ownerIdYomiName;

		[CrmProperty(LogicalName = "owningbusinessunit", IsLookup = true)]
        public virtual Guid? OwningBusinessUnit
        {
            get { FillData(); return _owningBusinessUnit; }
            set {  _owningBusinessUnit = value; }
        }
        private Guid? _owningBusinessUnit;

		[CrmProperty(LogicalName = "owningbusinessunitName", IsEntityReferenceHelper = true)]
        public virtual string OwningBusinessUnitName
        {
            get { FillData(); return _owningBusinessUnitName; }
            set {  _owningBusinessUnitName = value; }
        }
        private string _owningBusinessUnitName;

		[CrmProperty(LogicalName = "owningteam", IsLookup = true)]
        public virtual Guid? OwningTeam
        {
            get { FillData(); return _owningTeam; }
            set {  _owningTeam = value; }
        }
        private Guid? _owningTeam;

		[CrmProperty(LogicalName = "owningteamName", IsEntityReferenceHelper = true)]
        public virtual string OwningTeamName
        {
            get { FillData(); return _owningTeamName; }
            set {  _owningTeamName = value; }
        }
        private string _owningTeamName;

		[CrmProperty(LogicalName = "owninguser", IsLookup = true)]
        public virtual Guid? OwningUser
        {
            get { FillData(); return _owningUser; }
            set {  _owningUser = value; }
        }
        private Guid? _owningUser;

		[CrmProperty(LogicalName = "owninguserName", IsEntityReferenceHelper = true)]
        public virtual string OwningUserName
        {
            get { FillData(); return _owningUserName; }
            set {  _owningUserName = value; }
        }
        private string _owningUserName;

		[CrmProperty(LogicalName = "presentationxml")]
        public virtual string PresentationXml
        {
            get { FillData(); return _presentationXml; }
            set { SetValue<string>("presentationxml", value); _presentationXml = value; }
        }
        private string _presentationXml;

		[CrmProperty(LogicalName = "solutionid")]
        public virtual Guid? SolutionId
        {
            get { FillData(); return _solutionId; }
            set {  _solutionId = value; }
        }
        private Guid? _solutionId;

		[CrmProperty(LogicalName = "subject")]
        public virtual string Subject
        {
            get { FillData(); return _subject; }
            set { SetValue<string>("subject", value); _subject = value; }
        }
        private string _subject;

		[CrmProperty(LogicalName = "subjectpresentationxml")]
        public virtual string SubjectPresentationXml
        {
            get { FillData(); return _subjectPresentationXml; }
            set { SetValue<string>("subjectpresentationxml", value); _subjectPresentationXml = value; }
        }
        private string _subjectPresentationXml;

		[CrmProperty(LogicalName = "supportingsolutionid")]
        public virtual Guid? SupportingSolutionId
        {
            get { FillData(); return _supportingSolutionId; }
            set {  _supportingSolutionId = value; }
        }
        private Guid? _supportingSolutionId;

		[CrmProperty(LogicalName = "templateid")]
        public virtual Guid TemplateId
        {
            get { FillData(); return _templateId; }
            set {  _templateId = value; }
        }
        private Guid _templateId;

		[CrmProperty(LogicalName = "templateidunique")]
        public virtual Guid? TemplateIdUnique
        {
            get { FillData(); return _templateIdUnique; }
            set {  _templateIdUnique = value; }
        }
        private Guid? _templateIdUnique;

		[CrmProperty(LogicalName = "templatetypecodename")]
        public virtual string TemplateTypeCodeName
        {
            get { FillData(); return _templateTypeCodeName; }
            set {  _templateTypeCodeName = value; }
        }
        private string _templateTypeCodeName;

		[CrmProperty(LogicalName = "title")]
        public virtual string Title
        {
            get { FillData(); return _title; }
            set { SetValue<string>("title", value); _title = value; }
        }
        private string _title;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "territory", PrimaryKey = "territoryid")]
	public partial class Territory : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "territory";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ManagerId = "managerid";
			public const string ManagerIdName = "manageridname";
			public const string ManagerIdYomiName = "manageridyominame";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string TerritoryId = "territoryid";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return TerritoryId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set {  _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "managerid", IsLookup = true)]
        public virtual Guid? ManagerId
        {
            get { FillData(); return _managerId; }
            set { SetLookup("managerid", "systemuser", value); _managerId = value; }
        }
        private Guid? _managerId;

		[CrmProperty(LogicalName = "manageridname")]
        public virtual string ManagerIdName
        {
            get { FillData(); return _managerIdName; }
            set {  _managerIdName = value; }
        }
        private string _managerIdName;

		[CrmProperty(LogicalName = "manageridyominame")]
        public virtual string ManagerIdYomiName
        {
            get { FillData(); return _managerIdYomiName; }
            set {  _managerIdYomiName = value; }
        }
        private string _managerIdYomiName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "territoryid")]
        public virtual Guid TerritoryId
        {
            get { FillData(); return _territoryId; }
            set {  _territoryId = value; }
        }
        private Guid _territoryId;

		[CrmProperty(LogicalName = "transactioncurrencyid", IsLookup = true)]
        public virtual Guid? TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set { SetLookup("transactioncurrencyid", "transactioncurrency", value); _transactionCurrencyId = value; }
        }
        private Guid? _transactionCurrencyId;

		[CrmProperty(LogicalName = "transactioncurrencyidname")]
        public virtual string TransactionCurrencyIdName
        {
            get { FillData(); return _transactionCurrencyIdName; }
            set {  _transactionCurrencyIdName = value; }
        }
        private string _transactionCurrencyIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "transactioncurrency", PrimaryKey = "transactioncurrencyid")]
	public partial class TransactionCurrency : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "transactioncurrency";
			
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CurrencyName = "currencyname";
			public const string CurrencyPrecision = "currencyprecision";
			public const string CurrencySymbol = "currencysymbol";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ISOCurrencyCode = "isocurrencycode";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidName";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string UniqueDscId = "uniquedscid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return TransactionCurrencyId; }
		}

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "currencyname")]
        public virtual string CurrencyName
        {
            get { FillData(); return _currencyName; }
            set { SetValue<string>("currencyname", value); _currencyName = value; }
        }
        private string _currencyName;

		[CrmProperty(LogicalName = "currencyprecision")]
        public virtual int? CurrencyPrecision
        {
            get { FillData(); return _currencyPrecision; }
            set { SetValue<int?>("currencyprecision", value); _currencyPrecision = value; }
        }
        private int? _currencyPrecision;

		[CrmProperty(LogicalName = "currencysymbol")]
        public virtual string CurrencySymbol
        {
            get { FillData(); return _currencySymbol; }
            set { SetValue<string>("currencysymbol", value); _currencySymbol = value; }
        }
        private string _currencySymbol;

		[CrmProperty(LogicalName = "exchangerate")]
        public virtual decimal? ExchangeRate
        {
            get { FillData(); return _exchangeRate; }
            set { SetValue<decimal?>("exchangerate", value); _exchangeRate = value; }
        }
        private decimal? _exchangeRate;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isocurrencycode")]
        public virtual string ISOCurrencyCode
        {
            get { FillData(); return _iSOCurrencyCode; }
            set {  _iSOCurrencyCode = value; }
        }
        private string _iSOCurrencyCode;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidName", IsEntityReferenceHelper = true)]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "transactioncurrencyid")]
        public virtual Guid TransactionCurrencyId
        {
            get { FillData(); return _transactionCurrencyId; }
            set {  _transactionCurrencyId = value; }
        }
        private Guid _transactionCurrencyId;

		[CrmProperty(LogicalName = "uniquedscid")]
        public virtual Guid? UniqueDscId
        {
            get { FillData(); return _uniqueDscId; }
            set {  _uniqueDscId = value; }
        }
        private Guid? _uniqueDscId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "uom", PrimaryKey = "uomid")]
	public partial class UoM : CrmEntity
	{
		public class Enums
		{
		}

		public class Fields
		{
			public const string SchemaName = "uom";
			
			public const string BaseUoM = "baseuom";
			public const string BaseUoMName = "baseuomname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsScheduleBaseUoM = "isschedulebaseuom";
			public const string IsScheduleBaseUoMName = "isschedulebaseuomname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Quantity = "quantity";
			public const string UoMId = "uomid";
			public const string UoMScheduleId = "uomscheduleid";
			public const string UoMScheduleIdName = "uomscheduleidName";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return UoMId; }
		}

		[CrmProperty(LogicalName = "baseuom", IsLookup = true)]
        public virtual Guid? BaseUoM
        {
            get { FillData(); return _baseUoM; }
            set { SetLookup("baseuom", "uom", value); _baseUoM = value; }
        }
        private Guid? _baseUoM;

		[CrmProperty(LogicalName = "baseuomname")]
        public virtual string BaseUoMName
        {
            get { FillData(); return _baseUoMName; }
            set {  _baseUoMName = value; }
        }
        private string _baseUoMName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "isschedulebaseuom")]
        public virtual bool? IsScheduleBaseUoM
        {
            get { FillData(); return _isScheduleBaseUoM; }
            set {  _isScheduleBaseUoM = value; }
        }
        private bool? _isScheduleBaseUoM;

		[CrmProperty(LogicalName = "isschedulebaseuomname")]
        public virtual string IsScheduleBaseUoMName
        {
            get { FillData(); return _isScheduleBaseUoMName; }
            set {  _isScheduleBaseUoMName = value; }
        }
        private string _isScheduleBaseUoMName;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid")]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "quantity")]
        public virtual decimal? Quantity
        {
            get { FillData(); return _quantity; }
            set { SetValue<decimal?>("quantity", value); _quantity = value; }
        }
        private decimal? _quantity;

		[CrmProperty(LogicalName = "uomid")]
        public virtual Guid UoMId
        {
            get { FillData(); return _uoMId; }
            set {  _uoMId = value; }
        }
        private Guid _uoMId;

		[CrmProperty(LogicalName = "uomscheduleid", IsLookup = true)]
        public virtual Guid? UoMScheduleId
        {
            get { FillData(); return _uoMScheduleId; }
            set {  _uoMScheduleId = value; }
        }
        private Guid? _uoMScheduleId;

		[CrmProperty(LogicalName = "uomscheduleidName", IsEntityReferenceHelper = true)]
        public virtual string UoMScheduleIdName
        {
            get { FillData(); return _uoMScheduleIdName; }
            set {  _uoMScheduleIdName = value; }
        }
        private string _uoMScheduleIdName;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
	[CrmEntity(LogicalName = "uomschedule", PrimaryKey = "uomscheduleid")]
	public partial class UoMSchedule : CrmEntity
	{
		public class Enums
		{
			public enum StateCode 
			{
				[CrmPicklist(DisplayName = "Active")]Active = 0,
				[CrmPicklist(DisplayName = "Inactive", Value = 1)]Inactive = 1,
			}		
			public enum StatusCode 
			{
				[CrmPicklist(DisplayName = "Active", Value = 1)]Active = 1,
				[CrmPicklist(DisplayName = "Inactive", Value = 2)]Inactive = 2,
			}		
		}

		public class Fields
		{
			public const string SchemaName = "uomschedule";
			
			public const string BaseUoMName = "baseuomname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string UoMScheduleId = "uomscheduleid";
			public const string VersionNumber = "versionnumber";
		}

		public override Guid PrimaryKey
		{
			get { return UoMScheduleId; }
		}

		[CrmProperty(LogicalName = "baseuomname")]
        public virtual string BaseUoMName
        {
            get { FillData(); return _baseUoMName; }
            set {  _baseUoMName = value; }
        }
        private string _baseUoMName;

		[CrmProperty(LogicalName = "createdby", IsLookup = true)]
        public virtual Guid? CreatedBy
        {
            get { FillData(); return _createdBy; }
            set {  _createdBy = value; }
        }
        private Guid? _createdBy;

		[CrmProperty(LogicalName = "createdbyname")]
        public virtual string CreatedByName
        {
            get { FillData(); return _createdByName; }
            set {  _createdByName = value; }
        }
        private string _createdByName;

		[CrmProperty(LogicalName = "createdbyyominame")]
        public virtual string CreatedByYomiName
        {
            get { FillData(); return _createdByYomiName; }
            set {  _createdByYomiName = value; }
        }
        private string _createdByYomiName;

		[CrmProperty(LogicalName = "createdon")]
        public virtual DateTime? CreatedOn
        {
            get { FillData(); return _createdOn; }
            set {  _createdOn = value; }
        }
        private DateTime? _createdOn;

		[CrmProperty(LogicalName = "createdonbehalfby", IsLookup = true)]
        public virtual Guid? CreatedOnBehalfBy
        {
            get { FillData(); return _createdOnBehalfBy; }
            set {  _createdOnBehalfBy = value; }
        }
        private Guid? _createdOnBehalfBy;

		[CrmProperty(LogicalName = "createdonbehalfbyname")]
        public virtual string CreatedOnBehalfByName
        {
            get { FillData(); return _createdOnBehalfByName; }
            set {  _createdOnBehalfByName = value; }
        }
        private string _createdOnBehalfByName;

		[CrmProperty(LogicalName = "createdonbehalfbyyominame")]
        public virtual string CreatedOnBehalfByYomiName
        {
            get { FillData(); return _createdOnBehalfByYomiName; }
            set {  _createdOnBehalfByYomiName = value; }
        }
        private string _createdOnBehalfByYomiName;

		[CrmProperty(LogicalName = "description")]
        public virtual string Description
        {
            get { FillData(); return _description; }
            set { SetValue<string>("description", value); _description = value; }
        }
        private string _description;

		[CrmProperty(LogicalName = "importsequencenumber")]
        public virtual int? ImportSequenceNumber
        {
            get { FillData(); return _importSequenceNumber; }
            set {  _importSequenceNumber = value; }
        }
        private int? _importSequenceNumber;

		[CrmProperty(LogicalName = "modifiedby", IsLookup = true)]
        public virtual Guid? ModifiedBy
        {
            get { FillData(); return _modifiedBy; }
            set {  _modifiedBy = value; }
        }
        private Guid? _modifiedBy;

		[CrmProperty(LogicalName = "modifiedbyname")]
        public virtual string ModifiedByName
        {
            get { FillData(); return _modifiedByName; }
            set {  _modifiedByName = value; }
        }
        private string _modifiedByName;

		[CrmProperty(LogicalName = "modifiedbyyominame")]
        public virtual string ModifiedByYomiName
        {
            get { FillData(); return _modifiedByYomiName; }
            set {  _modifiedByYomiName = value; }
        }
        private string _modifiedByYomiName;

		[CrmProperty(LogicalName = "modifiedon")]
        public virtual DateTime? ModifiedOn
        {
            get { FillData(); return _modifiedOn; }
            set {  _modifiedOn = value; }
        }
        private DateTime? _modifiedOn;

		[CrmProperty(LogicalName = "modifiedonbehalfby", IsLookup = true)]
        public virtual Guid? ModifiedOnBehalfBy
        {
            get { FillData(); return _modifiedOnBehalfBy; }
            set {  _modifiedOnBehalfBy = value; }
        }
        private Guid? _modifiedOnBehalfBy;

		[CrmProperty(LogicalName = "modifiedonbehalfbyname")]
        public virtual string ModifiedOnBehalfByName
        {
            get { FillData(); return _modifiedOnBehalfByName; }
            set {  _modifiedOnBehalfByName = value; }
        }
        private string _modifiedOnBehalfByName;

		[CrmProperty(LogicalName = "modifiedonbehalfbyyominame")]
        public virtual string ModifiedOnBehalfByYomiName
        {
            get { FillData(); return _modifiedOnBehalfByYomiName; }
            set {  _modifiedOnBehalfByYomiName = value; }
        }
        private string _modifiedOnBehalfByYomiName;

		[CrmProperty(LogicalName = "name")]
        public virtual string Name
        {
            get { FillData(); return _name; }
            set { SetValue<string>("name", value); _name = value; }
        }
        private string _name;

		[CrmProperty(LogicalName = "organizationid", IsLookup = true)]
        public virtual Guid? OrganizationId
        {
            get { FillData(); return _organizationId; }
            set {  _organizationId = value; }
        }
        private Guid? _organizationId;

		[CrmProperty(LogicalName = "organizationidname")]
        public virtual string OrganizationIdName
        {
            get { FillData(); return _organizationIdName; }
            set {  _organizationIdName = value; }
        }
        private string _organizationIdName;

		[CrmProperty(LogicalName = "overriddencreatedon")]
        public virtual DateTime? OverriddenCreatedOn
        {
            get { FillData(); return _overriddenCreatedOn; }
            set {  _overriddenCreatedOn = value; }
        }
        private DateTime? _overriddenCreatedOn;

		[CrmProperty(LogicalName = "statecode")]
        public virtual int StateCode
        {
            get { FillData(); return _stateCode; }
            set {  _stateCode = value; }
        }
        private int _stateCode;

		[CrmProperty(LogicalName = "statecodename")]
        public virtual string StateCodeName
        {
            get { FillData(); return _stateCodeName; }
            set {  _stateCodeName = value; }
        }
        private string _stateCodeName;

		[CrmProperty(LogicalName = "statuscode")]
        public virtual int StatusCode
        {
            get { FillData(); return _statusCode; }
            set {  _statusCode = value; }
        }
        private int _statusCode;

		[CrmProperty(LogicalName = "statuscodename")]
        public virtual string StatusCodeName
        {
            get { FillData(); return _statusCodeName; }
            set {  _statusCodeName = value; }
        }
        private string _statusCodeName;

		[CrmProperty(LogicalName = "uomscheduleid")]
        public virtual Guid UoMScheduleId
        {
            get { FillData(); return _uoMScheduleId; }
            set {  _uoMScheduleId = value; }
        }
        private Guid _uoMScheduleId;

		[CrmProperty(LogicalName = "versionnumber")]
        public virtual int? VersionNumber
        {
            get { FillData(); return _versionNumber; }
            set {  _versionNumber = value; }
        }
        private int? _versionNumber;

	}
}